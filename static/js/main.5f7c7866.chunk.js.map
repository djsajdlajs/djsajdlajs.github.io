{"version":3,"sources":["state/lists/actions.ts","components/swap/styled.tsx","state/transactions/hooks.tsx","shared/components/Card/Card.tsx","state/wallet/hooks.ts","components/Card/index.tsx","state/transactions/actions.ts","constants/lists.ts","components/Popover/styled.ts","components/Popover/index.tsx","components/Tooltip/styled.ts","components/Tooltip/index.tsx","state/multicall/actions.ts","components/Modal/styled.tsx","components/Modal/index.tsx","lib/src/utils/encodeRouteToPath.ts","lib/src/utils/nearestUsableTick.ts","lib/src/utils/fullMath.ts","utils/listSort.ts","state/lists/hooks.ts","state/multicall/utils.ts","lib/src/constants.ts","hooks/useV3SwapPools.ts","hooks/useAllCurrencyCombinations.ts","hooks/useAllV3Routes.ts","hooks/useBestV3Trade.ts","constants/addresses.ts","hooks/useParsedQueryString.ts","hooks/useDebounce.ts","constants/routing.ts","components/NumericalInput/styled.ts","components/NumericalInput/index.tsx","utils/isZero.ts","lib/src/utils/swapMath.ts","lib/src/entities/pool.ts","utils/unwrappedToken.ts","apollo/client.ts","hooks/subgraph/useClients.ts","utils/calculateGasMargin.ts","hooks/useTransactionDeadline.ts","state/lists/wrappedTokenInfo.ts","hooks/useOnClickOutside.tsx","algebra.config.ts","lib/src/utils/encodeSqrtRatioX96.ts","utils/prices.ts","hooks/useActiveLocale.ts","components/QuestionHelper/styled.ts","components/QuestionHelper/index.tsx","components/Toggle/index.tsx","hooks/useENS.ts","components/Badge/index.tsx","constants/locales.ts","hooks/web3.ts","hooks/useIsNetworkFailed.ts","state/mint/v3/actions.ts","hooks/useENSName.ts","assets/svg/metamask-logo.svg","lib/src/utils/tickList.ts","utils/api.ts","components/TransactionSettings/index.tsx","components/TransactionSettings/styled.ts","components/Settings/styled.ts","components/Settings/index.tsx","lib/src/entities/tick.ts","lib/src/utils/priceTickConversions.ts","utils/queries.ts","utils/anonymizeLink.ts","theme/components.tsx","theme/index.tsx","constants/chains.ts","utils/getLibrary.ts","components/SearchModal/filtering.ts","hooks/useCurrentBlockTimestamp.ts","components/CurrencyInputPanel/FiatValue.tsx","components/DoubleLogo/index.tsx","hooks/useSortedRecentTransactions.ts","state/hooks.ts","lib/src/nonfungiblePositionManager.ts","components/Row/index.tsx","lib/src/utils/computePoolAddress.ts","lib/src/utils/liquidityMath.ts","lib/src/utils/mostSignificantBit.ts","lib/src/entities/tickDataProvider.ts","lib/src/entities/tickListDataProvider.ts","lib/src/utils/isSorted.ts","lib/src/utils/maxLiquidityForAmounts.ts","lib/src/entities/position.ts","utils/currencyId.ts","utils/maxAmountSpend.ts","hooks/useInterval.ts","lib/src/selfPermit.ts","state/swap/actions.ts","hooks/computePoolAddress.ts","hooks/useInternet.ts","hooks/useENSAddress.ts","utils/stringToColour.ts","components/SearchModal/ImportToken.tsx","utils/supportedChainId.ts","pages/styled.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","hooks/useToggle.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/sorting.ts","utils/uriToHttp.ts","hooks/useColor.ts","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","utils/parseENSAddress.ts","utils/contenthashToUri.ts","hooks/useHttpLocations.ts","hooks/useENSContentHash.ts","components/Logo/index.tsx","components/ListLogo/styled.ts","components/ListLogo/index.tsx","components/Toggle/styled.ts","components/Toggle/ListToggle.tsx","components/SearchModal/ManageLists.tsx","utils/listVersionLabel.ts","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/CurrencySearchModal.tsx","components/SearchModal/ImportList.tsx","hooks/useLast.ts","assets/images/blue-loader.svg","components/TransactionConfirmationModal/styled.ts","components/TransactionConfirmationModal/index.tsx","hooks/useAddTokenToMetamask.ts","lib/src/entities/route.ts","lib/src/entities/trade.ts","lib/src/swapRouter.ts","lib/src/internalConstants.ts","assets/images/dropdown.svg","components/CurrencyInputPanel/styled.ts","components/CurrencyInputPanel/index.tsx","components/Column/index.tsx","components/Badge/RangeBadge.tsx","components/SwitchLocaleLink/index.tsx","hooks/useLocationLinkProps.ts","hooks/useV3Positions.ts","hooks/useFarmingSubgraph.ts","components/NavigationTabs/styled.ts","components/NavigationTabs/SwapPoolTabs.tsx","components/NavigationTabs/AddRemoveTabs.tsx","lib/src/entities/wnative.ts","lib/src/entities/matic.ts","constants/tokens.ts","components/SearchModal/styled.ts","lib/src/utils/tickMath.ts","hooks/useUSDCPrice.ts","hooks/useEthPrices.ts","hooks/blocks/index.ts","hooks/useV3PositionFees.ts","components/HoverInlineText/styled.ts","components/HoverInlineText/index.tsx","utils/getTickToPrice.ts","state/mint/v3/utils.ts","state/mint/v3/hooks.ts","state/multicall/hooks.ts","utils/index.ts","components/CurrencyLogo/SpecialTokens.ts","components/CurrencyLogo/styled.ts","components/CurrencyLogo/index.tsx","hooks/useContract.ts","lib/src/utils/calldata.ts","utils/computePairAddress.ts","state/user/hooks.tsx","constants/misc.ts","state/user/actions.ts","hooks/Tokens.ts","state/application/actions.ts","state/mint/actions.ts","state/application/hooks.ts","components/Loader/styled.ts","components/Loader/index.tsx","../ /^/.*/.po$/ groupOptions: {} namespace object","components/Button/index.tsx","connectors/index.ts","connectors/NetworkConnector.ts","hooks/useApproveCallback.ts","hooks/useTokenAllowance.ts","hooks/usePrevious.ts","utils/getExplorerLink.ts","hooks/useSwapSlippageTolerance.ts","state/swap/hooks.ts","hooks/usePools.ts","utils/userAgent.ts","components/analytics/index.ts","components/Blocklist/index.tsx","i18n.tsx","hooks/useApeModeQueryParamReader.ts","components/ErrorBoundary/styled.ts","components/ErrorBoundary/index.tsx","assets/images/litx-logo.png","assets/images/arrow-right.svg","assets/images/walletConnectionIcon.svg","constants/wallet.ts","components/AccountDetails/Copy.tsx","hooks/useCopyClipboard.ts","assets/images/x.svg","components/AccountDetails/Transaction.tsx","components/Identicon/styled.ts","components/Identicon/index.tsx","components/AccountDetails/styled.ts","components/ThemeSwitcher/index.tsx","components/AccountDetails/index.tsx","components/WalletModal/styled.ts","components/WalletModal/Option.tsx","components/WalletModal/PendingView.tsx","components/Web3Status/styled.ts","components/Web3Status/StatusIcon.tsx","components/Web3Status/Web3StatusInner.tsx","components/WalletModal/index.tsx","components/Web3Status/index.tsx","components/Header/NetworkCard.tsx","components/Header/styled.ts","components/HeaderMenu/index.tsx","components/Header/index.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/styled.ts","components/Popups/index.tsx","components/Web3ReactManager/styled.ts","components/Web3ReactManager/index.tsx","theme/DarkModeQueryParamReader.tsx","state/mint/v3/reducer.ts","pages/NewAddLiquidity/components/PriceFomatToggler/index.tsx","pages/NewAddLiquidity/components/Stepper/index.tsx","pages/NewAddLiquidity/components/TokenAmountCard/index.tsx","pages/NewAddLiquidity/components/TokenRatio/index.tsx","pages/NewAddLiquidity/components/StepTitle/index.tsx","pages/NewAddLiquidity/containers/EnterAmounts/index.tsx","pages/NewAddLiquidity/components/PoolStats/index.tsx","pages/NewAddLiquidity/components/PopularPairs/index.tsx","pages/NewAddLiquidity/components/TokenCard/index.tsx","pages/NewAddLiquidity/containers/SelectPair/index.tsx","hooks/subgraph/useInfoLiquidity.ts","pages/NewAddLiquidity/components/PresetRanges/index.tsx","pages/NewAddLiquidity/components/RangeSelector/index.tsx","components/LiquidityChartRangeInput/styled.ts","components/LiquidityChartRangeInput/Area.tsx","components/LiquidityChartRangeInput/AxisBottom.tsx","components/LiquidityChartRangeInput/Brush.tsx","components/LiquidityChartRangeInput/Line.tsx","components/LiquidityChartRangeInput/Zoom.tsx","components/LiquidityChartRangeInput/Chart.tsx","utils/computeSurroundingTicks.ts","state/data/generated.ts","state/data/slice.ts","state/data/enhanced.ts","hooks/usePoolTickData.ts","components/LiquidityChartRangeInput/index.tsx","components/LiquidityChartRangeInput/hooks.ts","pages/NewAddLiquidity/components/USDPrices/index.tsx","pages/NewAddLiquidity/containers/SelectRange/index.tsx","pages/NewAddLiquidity/containers/AddLiquidityButton/index.tsx","pages/NewAddLiquidity/routing/router-guards.tsx","pages/NewAddLiquidity/components/StartingPrice/index.tsx","pages/NewAddLiquidity/containers/InitialPrice/index.tsx","pages/NewAddLiquidity/containers/Aftermath/index.tsx","pages/NewAddLiquidity/index.tsx","pages/AddLiquidity/redirects.tsx","state/burn/v3/actions.ts","state/burn/v3/hooks.ts","components/Slider/styled.ts","components/Slider/index.tsx","components/FormattedCurrencyAmount/index.tsx","pages/RemoveLiquidity/V3.tsx","hooks/useDebouncedChangeHandler.tsx","components/swap/FormattedPriceImpact.tsx","components/swap/SwapRoute.tsx","components/swap/AdvancedSwapDetails.tsx","components/AddressInputPanel/styled.ts","components/AddressInputPanel/index.tsx","components/swap/SwapModalFooter.tsx","utils/computeFiatValuePriceImpact.tsx","components/swap/TradePrice.tsx","components/swap/SwapModalHeader.tsx","components/swap/ConfirmSwapModal.tsx","components/swap/SwapHeader.tsx","components/TokenWarningModal/index.tsx","hooks/useERC20Permit.ts","hooks/useToggledVersion.ts","utils/getTradeVersion.ts","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","pages/Swap/index.tsx","components/swap/confirmPriceImpactWithoutFee.ts","pages/Swap/redirects.tsx","components/CautionModal/styled.ts","components/CautionModal/index.tsx","components/analytics/GoogleAnalyticsReporter.tsx","components/Header/Polling.tsx","components/Header/PoweredByAlgebra.tsx","components/Footer/index.tsx","components/ParticlesBackground/styled.ts","components/ParticlesBackground/index.tsx","pages/App.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/burn/actions.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/burn/v3/reducer.ts","state/logs/utils.ts","state/logs/slice.ts","state/multicall/reducer.ts","state/farming/actions.ts","state/farming/reducer.ts","state/routing/slice.ts","state/index.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","utils/chunkArray.ts","utils/retry.ts","state/multicall/updater.tsx","state/logs/updater.ts","state/transactions/updater.tsx","state/user/updater.tsx","state/application/gasUpdater.ts","hooks/useGasPrice.ts","index.tsx","utils/graphql-queries.ts","lib/src/utils/sqrtPriceMath.ts","hooks/useTheme.ts"],"names":["fetchTokenList","pending","createAction","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","ArrowWrapper","styled","div","button","theme","mediaWidth","upToExtraSmall","clickable","css","SectionBreak","ErrorText","Text","severity","TruncatedText","Dots","span","SwapCallbackErrorInner","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","error","size","style","wordBreak","SwapShowAcceptChanges","AutoColumn","SwapModalHeaderArrowWrapper","ButtonPrimary","upToSmall","StyledPriceContainer","show","TYPE","blue","useTransactionAdder","useActiveWeb3React","chainId","account","dispatch","useAppDispatch","useCallback","response","summary","approval","claim","hash","Error","addTransaction","from","useAllTransactions","state","useAppSelector","transactions","useIsTransactionPending","transactionHash","receipt","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","Object","keys","some","tx","Date","getTime","addedTime","isTransactionRecent","Card","classes","children","isDark","undefined","className","useETHBalances","uncheckedAddresses","multicallContract","useMulticall2Contract","addresses","map","isAddress","filter","a","sort","results","useSingleContractMultipleData","address","balances","reduce","memo","i","value","result","CurrencyAmount","fromRawAmount","Ether","onChain","JSBI","BigInt","toString","prevBalances","usePreviousNonEmptyObject","length","useTokenBalances","tokens","validatedTokens","t","validatedTokenAddresses","vt","ERC20Interface","Interface","ERC20ABI","useMultipleContractSingleData","gasRequired","_balances","token","amount","anyLoading","callState","loading","useTokenBalancesWithLoadingIndicator","useCurrencyBalances","currencies","currency","isToken","tokenBalances","ethBalance","isNative","useCurrencyBalance","useAllTokenBalances","allTokens","useAllTokens","values","Box","width","padding","$borderRadius","border","LightGreyCard","GreyCard","YellowCard","TransactionType","clearAllTransactions","clearOneTransaction","finalizeTransaction","checkedTransaction","UNSUPPORTED_LIST_URLS","IS_ON_APP_URL","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","PopoverContainer","props","shadow1","ReferenceElement","Arrow","Popover","content","placement","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","name","options","offset","element","styles","update","attributes","updateCallback","useInterval","ref","popper","arrow","TooltipContainer","Tooltip","text","rest","TooltipContent","MouseoverTooltip","setShow","open","close","onMouseEnter","onMouseLeave","MouseoverTooltipContent","display","lineHeight","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","attrs","upToMedium","Modal","onDismiss","initialFocusRef","dangerouslyBypassFocusLock","fitContent","onHide","fadeTransition","useTransition","config","duration","opacity","enter","leave","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","down","movement","velocity","direction","item","key","unstable_lockFocusAcrossFrames","onClick","isMobile","transform","tabIndex","encodeRouteToPath","route","exactOutput","firstInputToken","input","wrapped","pools","pool","index","inputToken","path","types","outputToken","token0","equals","token1","pack","reverse","nearestUsableTick","tick","tickSpacing","invariant","Number","isInteger","TickMath","MIN_TICK","MAX_TICK","rounded","Math","round","FullMath","b","denominator","product","multiply","divide","notEqual","remainder","ZERO","add","ONE","DEFAULT_LIST_PRIORITIES","listUrl","sortByListPriority","urlA","urlB","listCache","WeakMap","listToTokenMap","list","get","tokenMap","tokenInfo","WrappedTokenInfo","console","DEFAULT_TOKEN_LIST","useAllLists","lists","byUrl","useCombinedTokenMapFromUrls","urls","slice","currentUrl","map1","map2","current","concat","id","parseInt","useActiveListUrls","activeListUrls","useInactiveListUrls","allActiveListUrls","url","includes","useCombinedActiveList","useIsListActive","Boolean","toCallKey","call","callData","isSafeInteger","parseCallKey","callKey","pcs","split","FeeAmount","ADDRESS_ZERO","POOL_INIT_CODE_HASH","AlgebraConfig","V3_CONTRACTS","ChainId","BNB","LOW","MEDIUM","HIGH","useV3SwapPools","currencyIn","currencyOut","allCurrencyCombinations","currencyA","currencyB","tokenA","tokenB","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","t0","t1","otherPairs","findIndex","t0Other","t1Other","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","useAllCurrencyCombinations","usePools","tuple","PoolState","EXISTS","LOADING","poolEquals","poolA","poolB","fee","computeAllRoutes","currentPath","allPaths","startCurrencyIn","maxHops","tokenIn","tokenOut","involvesToken","pathPool","push","Route","useAllV3Routes","poolsLoading","useUserSingleHopOnly","singleHopOnly","routes","V3TradeState","DEFAULT_GAS_QUOTE","useBestV3TradeExactIn","amountIn","quoter","useV3Quoter","routesLoading","quoteExactInInputs","quotient","quotesResults","trade","INVALID","currentBest","amountOut","lt","bestRoute","syncing","SYNCING","VALID","Trade","createUncheckedTrade","tradeType","TradeType","EXACT_INPUT","inputAmount","outputAmount","NO_ROUTE_FOUND","prevTrade","usePrevious","useBestV3TradeExactOut","quoteExactOutInputs","valid","gt","EXACT_OUTPUT","PULSE","POOL_DEPLOYER_ADDRESS","FACTORY_ADDRESS","QUOTER_ADDRESSES","QUOTER_ADDRESS","SWAP_ROUTER_ADDRESSES","SWAP_ROUTER_ADDRESS","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESS","MULTICALL_ADDRESS","V3_MIGRATOR_ADDRESSES","MIGRATOR_ADDRESS","FINITE_FARMING","LIMIT_FARMING_ADDRESS","FARMING_CENTER","ETERNAL_FARMING_ADDRESS","FARMING_CENTER_ADDRESS","V2_FACTORY_ADDRESSES","ENS_REGISTRAR_ADDRESSES","useParsedQueryString","search","useLocation","parse","parseArrays","ignoreQueryPrefix","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","WETH_ONLY","fromEntries","entries","WMATIC_EXTENDED","TOKENS_FOR_MULTIHOP_BNB","TOKENS_FOR_MULTIHOP_PULSE","COMMON_BASES","ExtendedEther","DEFAULT_TOKENS_BNB","DEFAULT_TOKENS_PULSE","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","StyledInput","fontSize","align","inputRegex","RegExp","Input","React","onUserInput","placeholder","prependSymbol","enforcer","nextUserInput","test","escapeRegExp","trim","onChange","event","target","formattedValue","replace","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","isZero","hexNumberString","MAX_FEE","exponentiate","SwapMath","sqrtRatioCurrentX96","sqrtRatioTargetX96","liquidity","amountRemaining","feePips","returnValues","zeroForOne","greaterThanOrEqual","exactIn","amountRemainingLessFee","subtract","SqrtPriceMath","getAmount0Delta","getAmount1Delta","sqrtRatioNextX96","getNextSqrtPriceFromInput","NEGATIVE_ONE","getNextSqrtPriceFromOutput","max","equal","greaterThan","feeAmount","mulDivRoundingUp","NO_TICK_DATA_PROVIDER_DEFAULT","NoTickDataProvider","Pool","sqrtRatioX96","tickCurrent","ticks","tickDataProvider","_token0Price","_token1Price","tickCurrentSqrtRatioX96","getSqrtRatioAtTick","nextTickSqrtRatioX96","lessThanOrEqual","sortsBefore","this","Array","isArray","TickListDataProvider","Price","Q192","token0Price","token1Price","sqrtPriceLimitX96","swap","amountCalculated","amountSpecified","MIN_SQRT_RATIO","MAX_SQRT_RATIO","lessThan","exactInput","amountSpecifiedRemaining","sqrtPriceX96","step","sqrtPriceStartX96","nextInitializedTickWithinOneWord","tickNext","initialized","sqrtPriceNextX96","computeSwapStep","getTick","liquidityNet","LiquidityMath","addDelta","getTickAtSqrtRatio","initCodeHashManualOverride","computePoolAddress","factoryAddress","unwrappedToken","formattedChainId","supportedChainId","blockClientBNB","ApolloClient","uri","cache","InMemoryCache","SUBGRAPH","blocklyticsURL","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","query","errorPolicy","clientBNB","infoURL","farmingClientBNB","farmingURL","blockClientPulse","clientPulse","farmingClientPulse","useClients","dataClient","useDataClient","farmingClient","useFarmingClient","blockClient","useBlockClient","calculateGasMargin","mul","BigNumber","useTransactionDeadline","ttl","user","userDeadline","blockTimestamp","useCurrentBlockTimestamp","_checksummedAddress","_tags","checksummedAddress","decimals","symbol","logoURI","tags","listTags","tagId","other","toLowerCase","useOnClickOutside","node","handlerRef","useRef","handleClickOutside","e","contains","document","addEventListener","removeEventListener","CHAIN_PARAMS","chainIdHex","chainName","nativeCurrency","logo","wrappedNativeCurrency","rpcURL","blockExplorerURL","defaultTokens","tokensForMultihop","tokensLogos","stableTokens","stableTokenForUSDPrice","filterForScamTokens","tokensForCheck","possibleFakeNames","names","realAddress","realAddresses","API","eternalFarmsAPR","limitFarmsAPR","eternalFarmsTVL","limitFarmsTVL","poolsAPR","MISC","title","description","appURL","encodeSqrtRatioX96","amount1","amount0","numerator","leftShift","ratioX192","sqrt","THIRTY_BIPS_FEE","Percent","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","computeRealizedLPFeePercent","percent","V2Trade","pairs","currentFee","Fraction","IMPACT_TIERS","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","warningSeverity","priceImpact","impact","parseLocale","maybeSupportedLocale","lowerMaybeSupportedLocale","SUPPORTED_LOCALES","locale","navigatorLocale","navigator","language","region","toUpperCase","useSetLocaleFromUrl","parsed","useUserLocaleManager","userLocale","setUserLocale","urlLocale","lng","useActiveLocale","useUserLocale","DEFAULT_LOCALE","QuestionWrapper","QuestionMark","QuestionHelper","marginLeft","alignItems","Toggle","isActive","toggle","checked","unchecked","useENS","nameOrAddress","validated","reverseLookup","useENSName","lookup","useENSAddress","ENSName","BadgeVariant","Badge","variant","NEGATIVE","POSITIVE","PRIMARY","WARNING","WARNING_OUTLINE","pickBackgroundColor","pickBorder","pickFontColor","context","useWeb3React","contextNetwork","NetworkContextName","active","useEagerConnect","activate","tried","setTried","window","parent","triedSafe","setTriedSafe","triedOnto","setTriedOnto","gnosisSafe","isSafeApp","then","loadedInSafe","catch","timeout","Promise","res","rej","isAuthorized","ontoconnector","race","ethereum","injected","location","reload","useInactiveListener","suppress","ontoWrongChain","connector","localStorage","getItem","UnsupportedChainIdError","_window","onto","selectedAddress","setItem","on","handleChainChanged","handleAccountsChanged","accounts","removeListener","useMachineTimeMs","updateInterval","now","setNow","useIsNetworkFailed","machineTime","blockTime","toNumber","useIsNetworkFailedImmediate","Field","Bound","typeInput","typeStartPriceInput","typeLeftRangeInput","typeRightRangeInput","resetMintState","setFullRange","updateDynamicFee","updateSelectedPreset","setAddLiquidityTxHash","setShowNewestPosition","setInitialUSDPrices","setInitialTokenPrice","updateCurrentStep","debouncedAddress","ensNodeArgument","namehash","substr","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","changed","tickComparator","TickList","every","accumulator","isSorted","binarySearch","lte","isBelowSmallest","isAtOrAboveLargest","compressed","floor","minimum","nextInitializedTick","maximum","min","l","r","fetchEternalFarmAPR","apiURL","fetch","v","json","fetchLimitFarmAPR","fetchLimitFarmTVL","fetchEternalFarmTVL","fetchPoolsAPR","SlippageError","DeadlineError","FancyButton","Option","color","OptionCustom","warning","SlippageEmojiContainer","TransactionSettings","placeholderSlippage","userSlippageTolerance","useUserSlippageTolerance","setUserSlippageTolerance","useSetUserSlippageTolerance","useUserTransactionTTL","deadline","setDeadline","slippageInput","setSlippageInput","slippageError","setSlippageError","deadlineInput","setDeadlineInput","deadlineError","setDeadlineError","parseSlippageInput","parseFloat","InvalidInput","tooLow","tooHigh","showCustomDeadlineRow","gap","Row","black","fontWeight","role","toFixed","onBlur","paddingTop","DEFAULT_DEADLINE_FROM_NOW","parseCustomDeadline","body","paddingLeft","StyledMenuIcon","Settings","StyledCloseIcon","X","StyledMenuButton","EmojiWrapper","StyledMenu","MenuFlyout","Break","SettingsTab","useModalOpen","ApplicationModal","SETTINGS","useToggleSettingsMenu","useExpertModeManager","expertMode","toggleExpertMode","setSingleHopOnly","showConfirmation","setShowConfirmation","Button","confirmWord","prompt","Tick","liquidityGross","tickToPrice","baseToken","quoteToken","priceToClosestTick","price","sorted","baseCurrency","quoteCurrency","nextTickPrice","splitQuery","client","vars","skipCount","fetchedData","allFound","skip","end","sliced","data","log","useDeltaTimestamps","utcCurrentTime","dayjs","startOf","unix","EXPLORER_HOSTNAMES","ButtonText","CloseIcon","IconWrapper","marginRight","stroke","LinkStyledButton","disabled","StyledInternalLink","Link","LinkIconWrapper","LinkIcon","LinkIconFeather","TrashIcon","Trash","rotateImg","keyframes","img","handleClickExternalLink","currentTarget","href","URL","hostname","anonymizedPath","pathname","pc","join","protocol","anonymizeLink","ctrlKey","metaKey","preventDefault","ExternalLink","rel","ExternalLinkIcon","rotate","Spinner","CustomLightSpinner","HideMedium","MediumOnly","MEDIA_WIDTHS","upToLarge","mediaWidthTemplates","c","ThemeProvider","darkMode","useIsDarkMode","themeObject","white","text1","text2","text3","text4","text5","bg0","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","red1","red2","red3","green1","yellow1","yellow2","yellow3","blue1","blue2","success","blue4","winterBackground","winterMainButton","winterDisabledButton","colors","grids","sm","md","lg","flexColumnNoWrap","flexRowNoWrap","TextWrapper","main","link","label","largeHeader","mediumHeader","subHeader","small","yellow","darkGray","gray","italic","fontStyle","ThemedGlobalStyle","createGlobalStyle","ALL_SUPPORTED_CHAIN_IDS","CHAIN_INFO","NETWORK_POLLING_INTERVALS","getLibrary","provider","library","Web3Provider","pollingInterval","detectNetwork","network","networkPollingInterval","debug","alwaysTrue","createTokenFilterFunction","searchingAddress","lower","lowerSearchParts","s","matchesSearch","sParts","p","sp","startsWith","endsWith","filterTokens","useSortedTokensByQuery","searchQuery","symbolMatch","exactMatches","symbolSubtrings","multicall","FiatValue","fiatValue","priceImpactColor","useTheme","toSignificant","groupSeparator","Wrapper","sizeraw","margin","HigherLogo","CurrencyLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","useSortedRecentTransactions","useDispatch","useSelector","MaxUint128","toHex","isMint","k","NonfungiblePositionManager","calldata","encodeCreate","position","calldatas","mintAmounts","amount0Desired","amount1Desired","minimumAmounts","mintAmountsWithSlippage","slippageTolerance","amount0Min","amount1Min","createPool","token0Permit","encodePermit","token1Permit","recipient","validateAndParseAddress","INTERFACE","encodeFunctionData","tickLower","tickUpper","tokenId","useNative","wrappedValue","encodeCollect","partialPosition","Position","liquidityPercentage","burnAmountsWithSlippage","permit","collectOptions","expectedCurrencyOwed0","expectedCurrencyOwed1","equalTo","burnToken","involvesETH","amount0Max","amount1Max","ethAmount","tokenAmount","SelfPermit","abi","justify","borderRadius","RowBetween","AutoRow","RowFixed","getCreate2Address","keccak256","defaultAbiCoder","encode","x","TWO","POWERS_OF_2","pow","mostSignificantBit","MaxUint256","msb","power","signedRightShift","_tick","ERROR_MESSAGE","_lte","_tickSpacing","ticksMapped","validateList","comparator","maxLiquidityForAmount0Imprecise","sqrtRatioAX96","sqrtRatioBX96","intermediate","Q96","maxLiquidityForAmount0Precise","maxLiquidityForAmount1","maxLiquidityForAmounts","useFullPrecision","maxLiquidityForAmount0","liquidity0","liquidity1","_token0Amount","_token1Amount","_mintAmounts","ratiosAfterSlippage","sqrtRatioX96Upper","sqrtRatioX96Lower","poolLower","poolUpper","positionThatWillBeCreated","fromAmounts","priceLower","asFraction","priceUpper","currencyId","chainSymbol","MIN_NATIVE_CURRENCY_FOR_GAS","maxAmountSpend","currencyAmount","callback","leading","savedCallback","setInterval","clearInterval","nonce","expiry","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","poolDeployer","useInternet","onLine","ensName","debouncedName","addr","stringToColour","str","charCodeAt","colour","H","g","cmin","cmax","delta","h","abs","background","hexToHSL","ImportToken","onBack","handleCurrencySelect","addToken","useAddUserToken","flex","cursor","backgroundColor","ml","mr","getExplorerLink","ExplorerDataType","ADDRESS","altDisabledStyle","Marginer","NetworkFailedCard","GlobalStyle","BodyWrapper","maxWidth","CommonBases","onSelect","selectedCurrency","isSelected","ImportRow","dim","showImportView","setImportToken","isAdded","useIsUserAddedToken","useIsTokenActive","minWidth","currencyKey","TokenTags","tag","CurrencyRow","otherSelected","selectedTokenList","isOnSelectedList","isTokenOnList","customAdded","BREAK_LINE","isBreakLine","BreakLineComponent","CurrencyList","height","otherListTokens","onCurrencySelect","otherCurrency","fixedListRef","showCurrencyAmount","itemData","row","itemKey","overflow","itemCount","itemSize","useToggle","initialState","setState","CurrencySearch","otherSelectedCurrency","showCommonBases","disableNonToken","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","isAddressSearch","searchToken","useToken","searchTokenIsAdded","ReactGA","category","action","tokenComparator","inverted","balanceA","balanceB","balanceComp","getTokenComparator","useTokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","ether","filteredSortedTokensWithETH","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","useSearchInactiveTokenLists","onKeyDown","Column","textAlign","mb","uriToHttp","match","formattedPath","Vibrant","getPalette","palette","hex","useListColor","listImageUri","setColor","useLayoutEffect","stale","getColorFromUriPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","isLast","credentials","ok","validationErrors","errors","dataPath","message","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","Contract","resolveENSContentHash","ensRegistrarContract","resolver","contenthash","useFetchListCallback","ensResolver","networkLibrary","getNetworkLibrary","getNetwork","sendDispatch","requestId","nanoid","tokenList","errorMessage","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","UTF_8_DECODER","TextDecoder","contenthashToUri","buff","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","useHttpLocations","ens","resolvedContentHash","useENSContentHash","BAD_SRCS","StyledListLogo","srcs","alt","refresh","src","onError","ListLogo","isOnSwitch","darken","String","cssVar","ListToggleElement","bgColor","StatusText","ListToggle","listUrlRowHTMLId","ListRow","listsByUrl","pendingUpdate","activeTokensOnThisChain","acc","cur","listColor","version","handleAcceptListUpdate","handleRemoveList","handleEnableList","handleDisableList","hasActiveTokens","mt","major","minor","patch","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","tokenCountByListName","count","fetchList","validUrl","sortedLists","listUrlA","listUrlB","listA","listB","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","CurrencyModalView","importList","textOverflow","ManageTokens","userAddedTokens","useUserAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","importToken","marginBottom","Manage","showLists","setShowLists","paddingBottom","ImportList","listURL","confirmed","setConfirmed","adding","loadingRequestId","handleAddList","manage","CurrencySearchModal","modalView","lastOpen","filterFn","last","setLast","useLast","prevView","showManageView","Section","inline","BottomSection","ConfirmedIcon","ColumnCenter","StyledLogo","ConfirmationPendingContent","pendingText","Circle","TransactionSubmittedContent","currencyToAdd","useContext","ThemeContext","setSuccess","isMetaMask","request","method","params","image","getTokenLogoURL","useAddTokenToMetamask","strokeWidth","TRANSACTION","MetaMaskLogo","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","marginTop","TransactionConfirmationModal","attemptingTxn","output","tokenPath","_midPrice","allOnSameChain","wrappedInput","currentInputToken","nextToken","nextInput","tradeComparator","swaps","total","_inputAmount","_outputAmount","_executionPrice","_priceImpact","inputCurrency","outputCurrency","numPools","poolAddressSet","Set","getAddress","totalInputFromRoutes","totalOutputFromRoutes","spotOutputAmount","midPrice","quote","slippageAdjustedAmountOut","invert","slippageAdjustedAmountIn","maximumAmountIn","minimumAmountOut","fromRoute","amounts","getOutputAmount","fromFractionalAmount","getInputAmount","populatedRoutes","constructorArguments","currencyAmountIn","maxNumResults","currentPools","nextAmountIn","bestTrades","isInsufficientInputAmountError","sortedInsert","poolsExcludingThisPool","bestTradeExactIn","currencyAmountOut","nextAmountOut","isInsufficientReservesError","bestTradeExactOut","SwapRouter","trades","sampleTrade","ZERO_IN","ZERO_OUT","totalAmountOut","sum","mustRefund","inputIsNative","outputIsNative","routerMustCustody","totalValue","inputTokenPermit","exactInputSingleParams","amountOutMinimum","feeOnTransfer","exactOutputSingleParams","amountInMaximum","exactInputParams","exactOutputParams","feeRecipient","_path","_excluded","_extends","assign","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDropdown","_ref","svgRef","titleId","viewBox","fill","xmlns","d","ForwardRef","InputPanel","hideInput","FixedContainer","Container","CurrencySelect","ButtonGray","shallow","InputRow","hideCurrency","AutoColumnStyled","page","LabelRow","FiatRow","Aligner","centered","NumericalInputStyled","NumericalInput","StyledTokenName","DropDown","selected","MaxButton","CurrencyInputPanel","onMax","showMaxButton","hideBalance","pair","locked","showBalance","modalOpen","setModalOpen","balance","currentPrice","useUSDCPrice","handleDismissSearch","balanceString","_balance","bottom","right","toExact","Loader","val","BadgeWrapper","BadgeText","ActiveDot","RangeBadge","removed","inRange","DEFAULT","SwitchLocaleLink","targetLocale","activeLocale","browserLocale","useTargetLocale","qs","to","stringify","useLocationLinkProps","useV3PositionsFromTokenIds","tokenIds","positionManager","useV3NFTPositionManagerContract","prevAccount","positions","feeGrowthInside0LastX128","feeGrowthInside1LastX128","operator","tokensOwed0","tokensOwed1","prevPositions","usePreviousNonEmptyArray","useV3PositionFromTokenId","useV3Positions","balanceLoading","balanceResult","useFarmingSubgraph","fetchPositionsOnFarmer","positionsOnFarmer","fetchPositionsOnFarmerFn","positionsOnFarmerLoading","accountBalance","tokenIdsArgs","tokenRequests","tokenIdResults","someTokenIdsLoading","positionsLoading","transferredPositionsIds","_positionsOnFarmer","_positionsOnFarmerLoading","oldTransferredPositionsIds","_positionsOnOldFarmer","onFarming","oldFarming","positionsForPool","setPositionsForPool","positionsForPoolLoading","setPositionsForPoolLoading","transferredPositions","setTransferredPositions","transferredPositionsLoading","setTransferredPositionsLoading","hasTransferredPositions","setHasTransferredPositions","hasTransferredPositionsLoading","setHasTransferredPositionsLoading","rewardsResult","setRewardsResult","rewardsLoading","setRewardsLoading","futureEvents","setFutureEvents","futureEventsLoading","setFutureEventsLoading","allEvents","setAllEvents","allEventsLoading","setAllEventsLoading","setPositionsOnFarmer","setPositionsOnFarmerLoading","eternalFarms","setEternalFarms","eternalFarmsLoading","setEternalFarmsLoading","positionsEternal","setPositionsEternal","positionsEternalLoading","setPositionsEternalLoading","providers","getEvents","events","farming","_events","fetchPool","fetchToken","rewardToken","bonusRewardToken","multiplierToken","_event","reward","formatUnits","bonusReward","FETCH_TOKEN","variables","poolId","FETCH_POOL","fetchLimit","limitFarmingId","FETCH_LIMIT","limitFarmings","fetchEternalFarming","farmId","FETCH_ETERNAL_FARM","eternalFarmings","FETCH_REWARDS","rewards","newRewards","rewardContract","rewardAddress","ERC20_ABI","newReward","trueAmount","FUTURE_EVENTS","timestamp","CURRENT_EVENTS","startTime","endTime","currentEvents","_error","eventTVL","aprs","EVENT_LOCK","el","apr","HAS_TRANSFERED_POSITIONS","positionsTransferred","deposits","code","TRANSFERED_POSITIONS","_positions","nftContract","NON_FUN_POS_MAN","getSigner","_position","limitFarming","eternalFarming","_pool","finiteFarmingContract","FINITE_FARMING_ABI","createdAtTimestamp","tokenAmountForTier1","tokenAmountForTier2","tokenAmountForTier3","tier1Multiplier","tier2Multiplier","tier3Multiplier","callStatic","getRewardInfo","rewardInfo","_rewardToken","_bonusRewardToken","_multiplierToken","limitRewardToken","limitBonusRewardToken","limitStartTime","limitEndTime","started","ended","limitEarned","limitBonusEarned","limitMultiplierToken","limitTokenAmountForTier1","limitTokenAmountForTier2","limitTokenAmountForTier3","limitTier1Multiplier","limitTier2Multiplier","limitTier3Multiplier","FETCH_FINITE_FARM_FROM_POOL","farm","limitAvailable","farmingCenterContract","FARMING_CENTER_ABI","collectRewards","eternalRewardToken","eternalBonusRewardToken","eternalStartTime","eternalEndTime","eternalMultiplierToken","eternalTier1Multiplier","eternalTier2Multiplier","eternalTier3Multiplier","eternalTokenAmountForTier1","eternalTokenAmountForTier2","eternalTokenAmountForTier3","eternalEarned","eternalBonusEarned","FETCH_ETERNAL_FARM_FROM_POOL","rewardRate","bonusRewardRate","isDetached","eternalAvailable","POSITIONS_ON_ETERNAL_FARMING","eternalPositions","minRangeLength","TRANSFERED_POSITIONS_FOR_POOL","errorTransferred","onFarmingCenter","INFINITE_EVENTS","_eternalFarmings","_rewardRate","_bonusRewardRate","dailyRewardRate","dailyBonusRewardRate","tvl","ethPricesFecthed","useEthPrices","fetchRewards","fetchRewardsFn","fetchFutureEvents","fetchFutureEventsFn","fetchAllEvents","fetchAllEventsFn","fetchPositionsForPool","fetchPositionsForPoolFn","fetchTransferredPositions","fetchTransferredPositionsFn","fetchHasTransferredPositions","fetchHasTransferredPositionsFn","fetchEternalFarms","fetchEternalFarmsFn","fetchPositionsOnEternalFarmings","fetchPositionsOnEternalFarmingFn","activeClassName","Tabs","StyledNavLink","NavLink","HistoryLink","ArrowLeft","SwapPoolTabs","AddRemoveTabs","creating","defaultSlippage","positionID","poolLink","resetMintV3State","WNATIVE","Token","Matic","weth9","_etherCache","NativeCurrency","STABLE_TOKENS_BNB","STABLE_TOKENS_PULSE","STABLE_TOKEN_FOR_USD_PRICE_BNB","STABLE_TOKEN_FOR_USD_PRICE_PULSE","_cachedEther","PaddedColumn","SearchInput","Separator","Tag","disable","FixedContentRow","TagContainer","CheckIcon","CheckCircle","TextDot","Checkbox","AddressText","ToggleWrapper","ToggleOption","ManageWrapper","UnpaddedLinkStyledButton","StyledTitleText","StyledListUrlText","RowWrapper","ListContainer","SeparatorDark","ManageTokensWrapper","Footer","mulShift","mulBy","Q32","absTick","ratio","sqrtRatioX128","log_2","f","bitwiseOr","log_sqrt10001","tickLow","tickHigh","STABLECOIN_AMOUNT_OUT_ALL","STABLECOIN_AMOUNT_OUT_FILTERED","allLiquidity","stablecoin","v3USDCTrade","useUSDCValue","ETH_PRICES","gql","fetchEthPrices","blocks","block24","block48","blockWeek","maticPriceUSD","oneDay","twoDay","oneWeek","prices","setPrices","setError","t24","t48","tWeek","useBlocksFromTimestamps","blockError","indexedPrices","formattedBlocks","number","timestamps","blockClientOverride","setBlocks","activeBlockClient","networkBlocks","GET_BLOCKS","fetchData","formatted","MAX_UINT128","sub","useV3PositionFees","asWETH","owner","tokenIdHexString","toHexString","latestBlockNumber","useBlockNumber","setAmounts","collect","adjustSize","HoverInlineText","maxCharacters","showHover","setShowHover","getTickToPrice","tryParseTick","whole","fraction","withoutDecimals","tryParsePrice","useV3MintState","mintV3","useV3MintActionHandlers","noLiquidity","onFieldAInput","typedValue","field","CURRENCY_A","onFieldBInput","CURRENCY_B","onLeftRangeInput","onRightRangeInput","onStartPriceInput","useV3DerivedMintInfo","existingPosition","errorCode","independentField","leftRangeTypedValue","rightRangeTypedValue","startPriceTypedValue","dependentField","currencyBalances","usePool","poolState","NOT_EXISTS","dynamicFee","invertPrice","priceOf","parsedQuoteAmount","tryParseAmount","baseAmount","invalidPrice","mockPool","currentTick","currentSqrt","poolForPosition","tickSpaceLimits","LOWER","UPPER","ticksAtLimit","invalidRange","pricesAtTicks","lowerPrice","upperPrice","outOfRange","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","fromAmount0","fromAmount1","dependentTokenAmount","parsedAmounts","deposit0Disabled","deposit1Disabled","depositADisabled","depositBDisabled","BIG_INT_ZERO","currencyAAmount","currencyBAmount","invalidPool","useRangeHopCallbacks","getDecrementLower","rate","newPrice","Rounding","ROUND_UP","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetRange","numTicks","newPriceLower","newPriceUpper","getSetFullRange","useActivePreset","preset","useAddLiquidityTxHash","txHash","useShowNewestPosition","newestPosition","showNewestPosition","useInitialUSDPrices","initialUSDPrices","useInitialTokenPrice","initialTokenPrice","useCurrentStep","currentStep","isMethodArg","isBigNumber","isValidMethodArgs","xi","INVALID_RESULT","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","serializedCallKeys","JSON","callKeys","INVALID_CALL_STATE","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","decodeFunctionResult","contract","methodName","callInputs","interface","getFunction","shortenAddress","chars","substring","getContract","ABI","AddressZero","connectUnchecked","getProviderOrSigner","string","tokenAddressMap","feeTierPercent","specialTokensBNB","specialTokensPulse","StyledImgLogo","useContract","addressOrAddressMap","withSignerIfPossible","useTokenContract","useWETHContract","WETH_ABI","ENS_ABI","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","useEIP2612Contract","EIP_2612","MULTICALL_ABI","NFTPosMan","NewQuoterABI","bigintIsh","serializeToken","deserializeToken","serializedToken","matchesDarkMode","userDarkMode","shallowEqual","useDarkModeManager","toggleSetDarkMode","updateUserDarkMode","newLocale","updateUserLocale","useIsExpertMode","userExpertMode","toggleSetExpertMode","updateUserExpertMode","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","useUserHideClosedPositions","userHideClosedPositions","newHideClosedPositions","updateHideClosedPositions","useUserHideFarmingPositions","userHideFarmingPositions","newHideFarmingPositions","updateHideFarmingPositions","useUserSlippageToleranceWithDefault","defaultSlippageTolerance","allowedSlippage","updateUserDeadline","addSerializedToken","removeSerializedToken","serializedTokensMap","useURLWarningVisible","URLWarningVisible","BIPS_BASE","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","ZERO_PERCENT","updateMatchesDarkMode","updateArbitrumAlphaAcknowledged","addSerializedPair","removeSerializedPair","toggleOntoWrongChainModal","includeUserAdded","mapWithoutUrls","newMap","useTokensFromMap","minResults","inactiveUrls","activeTokens","tokenFilter","addressSet","BYTES32_REGEX","parseStringOrBytes32","bytes32","defaultValue","arrayify","parseBytes32String","_lowkeyAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","isETH","extendedEther","weth","updateChainId","updateBlockNumber","updateGasPrice","setOpenModal","addPopup","removePopup","application","modal","openModal","useToggleModal","useWalletModalToggle","WALLET","useAddPopup","useRemovePopup","useActivePopups","popupList","StyledSVG","svg","loadingAnimation","strokeLinecap","strokeLinejoin","webpackAsyncContext","req","__webpack_require__","o","resolve","ids","module","exports","Base","RebassButton","ButtonLight","ButtonSecondary","ButtonOutlined","ButtonEmpty","ButtonConfirmedStyle","ButtonErrorStyle","ButtonConfirmed","ButtonError","Check","RequestError","MiniRpcProvider","batchWaitTimeMs","host","nextId","batchTimeoutId","batch","clearBatch","headers","accept","forEach","reject","status","statusText","byKey","sendAsync","jsonrpc","promise","NetworkConnector","defaultChainId","supportedChainIds","currentChainId","AbstractConnector","NETWORK_URLS","InjectedConnector","SafeAppConnector","walletconnector","WalletConnectConnector","rpc","qrcode","OntoWalletConnector","ethAgent","getAgent","isAvalible","chain","isONTO","deactivate","sendReturn","send","parseSendReturn","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","allowance","prevAllowance","_allowance","useTokenAllowance","pendingApproval","approvalState","gasPrice","fetched","override","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","approve","useExact","estimateGas","estimatedGas","gasLimit","useApproveCallbackFromTrade","v3SwapRouterAddress","V3Trade","usePreviousNonErroredArray","prefix","TOKEN","BLOCK","V3_SWAP_DEFAULT_SLIPPAGE","ONE_TENTHS_PERCENT","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onChangeRecipient","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","useDerivedSwapInfo","inputError","inputCurrencyId","INPUT","outputCurrencyId","OUTPUT","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestV3TradeExactIn","bestV3TradeExactOut","v3Trade","formattedTo","toggledTrade","useSwapSlippageTolerance","balanceIn","v2Trade","v3TradeState","parseCurrencyFromURLParameter","urlParam","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","setResult","POOL_STATE_INTERFACE","poolKeys","transformed","poolAddresses","poolDeployerAddress","globalState0s","prevGlobalState0s","_globalState0s","liquidities","prevLiquidities","_liquidities","_key","globalState","globalStateLoading","globalStateValid","liquidityLoading","liquidityValid","eq","parser","UAParser","userAgent","getDevice","getResult","GOOGLE_ANALYTICS_ID","initialize","gaOptions","storage","storeGac","anonymizeIp","customBrowserType","TagManager","gtmId","BLOCKED_ADDRESSES","Blocklist","plurals","en","messages","i18n","loadLocaleData","load","LanguageProvider","loaded","setLoaded","dynamicActivate","forceRenderOnLocaleChange","ApeModeQueryParamReader","ape","useApeModeQueryParamReader","FallbackWrapper","CodeBlockWrapper","SomethingWentWrongWrapper","ErrorBoundary","errorInfo","exception","fatal","stack","Component","SUPPORTED_WALLETS","INJECTED","iconURL","INJECTED_ICON_URL","primary","METAMASK","METAMASK_ICON_URL","WALLET_CONNECT","WALLET_CONNECT_URL","CopyHelper","isCopied","setIsCopied","staticCopy","didCopy","copy","hide","useCopyClipboard","setCopied","toCopy","_line","_line2","Transaction","SvgX","x1","y1","x2","y2","StyledIdenticonContainer","Identicon","innerHTML","appendChild","Jazzicon","Close","WalletAction","ThemeSwitcher","isDarkMode","isEnabled","setIsEnabled","html","documentElement","classList","remove","htmlFor","prevState","renderTransactions","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","getStatusIcon","clearAllTransactionsCallback","disconnectHandler","formatConnectorName","OptionGrid","InfoCard","OptionCard","GreenCircle","CircleWrapper","PendingSection","StyledLoader","LoadingMessage","ErrorGroup","ErrorButton","LoadingWrapper","header","subheader","icon","PendingView","setPendingError","tryActivation","isMetamask","option","Web3StatusGeneric","Web3StatusError","Web3StatusConnect","Web3StatusConnected","NetworkIcon","Activity","StatusIcon","WalletConnectImg","addPolygonNetwork","blockExplorerUrls","rpcUrls","Web3StatusInner","sortedRecentTransactions","ontoWrongChainWarning","hasPendingTransactions","faded","WALLET_VIEWS","WalletModal","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setErrorMessage","isOnto","setIsOnto","walletModalOpen","previousAccount","activePrevious","connectorPrevious","walletConnectProvider","getAccount","UserRejectedRequestError","finally","getOptions","web3","isChrome","chromeOnly","MetamaskIcon","mobileOnly","openOptions","Web3Status","NetworkCard","ARBITRUM_OPTIONS","info","whiteSpace","BalanceText","showBackground","BaseWrapper","StyledPolling","StyledPollingNumber","breathe","hovering","StyledPollingDot","rotate360","HeaderMenu","handleSelect","Header","chainValue","userEthBalance","prevEthBalance","_userEthBalance","networkFailed","handleBlur","control","Logo","flexShrink","pl","TransactionPopup","PopupItem","popupContent","removeAfterMs","popKey","removeThisPopup","txn","MobilePopupWrapper","MobilePopupInner","StopOverflowQuery","FixedPopupColumn","extraPadding","xlPadding","Popups","activePopups","urlWarningActive","isNotOnMainnet","MessageWrapper","Message","h2","Web3ReactManager","networkActive","networkError","activateNetwork","triedEager","DarkModeQueryParamReader","Presets","PriceFormats","createReducer","builder","addCase","payload","Stepper","completedSteps","stepLinks","mintInfo","handleNavigation","priceFormat","baseTokenUSD","rangeTokenUSD","stableToken","isUSD","USD","isUSDCB","isUSDCA","leftPrice","rightPrice","steps","_steps","rangeUSD","FULL","parsedA","parsedB","tokenAUSD","tokenBUSD","justifyContent","isMobileOnly","TokenAmountCard","handleMax","showApproval","handleApprove","isApproving","isMax","isBase","balanceUSD","localUSDValue","setLocalUSDValue","localTokenValue","setLocalTokenValue","valueUSD","tokenValue","currencyPrice","otherCurrencyPrice","handleOnBlur","initialUSDPrice","pointerEvents","TokenRatio","token0Ratio","token1Ratio","decrementLeft","decrementRight","incrementLeft","incrementRight","onUserLeftInput","onUserRightInput","decrementDisabled","incrementDisabled","isEmpty","disableRightDecButton","setRDecButton","disableLeftIncButton","setLIncButton","handleDecrementLeft","handleDecrementRight","handleIncrementLeft","handleIncrementRight","toPrecision","StepTitle","isCompleted","Helmet","EnterAmounts","additionalStep","backStep","formattedAmounts","usdcValues","maxAmounts","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","showApprovalA","showApprovalB","left","leftRange","rightRange","totalSum","leftRate","rightRate","currencyAError","erroredToken","currencyBError","history","useHistory","PoolStats","PopularPairs","handlePopularPairSelection","PopularPair","WMATIC","TokenCard","handleTokenSelection","selectModal","toggleSelectModal","SelectPair","handleCurrencySwap","handleCurrencyASelect","handleCurrencyBSelect","setAprs","popularPools","setPopularPools","popularPoolsLoading","setPopularPoolsLoading","FETCH_POPULAR_POOLS","fetchPopularPools","fetchPopularPoolsFn","useInfoLiquidity","feeString","aprString","poolAddress","PresetProfits","PresetRanges","isStablecoinPair","activePreset","handlePresetRangeSelection","isInvalid","ranges","STABLE","risk","VERY_LOW","profit","SAFE","NORMAL","RISK","upperPercent","lowerPercent","rangePercent","_risk","range","_","RangeSelector","initial","isBeforePrice","isAfterPrice","currentPriceInUSD","currentPriceInUSDB","_price","isInitialInUSD","order","RangePart","decrement","increment","initialPrice","usdPriceA","usdPriceB","handleDecrement","handleIncrement","ChartWrapper","Path","StyledGroup","LabelGroup","visible","TooltipBackground","rect","StyledLine","line","Area","series","xScale","yScale","xValue","yValue","area","curve","curveStepAfter","y0","innerWidth","Axis","axisGenerator","axis","select","AxisBottom","innerHeight","axisBottom","tickSizeOuter","compare","aNorm","bNorm","Brush","interactive","brushLabelValue","brushExtent","setBrushExtent","brushRef","brushBehavior","localBrushExtent","setLocalBrushExtent","showLabels","setShowLabels","setHovering","previousBrushExtent","brushed","selection","mode","scaled","brushX","extent","handleSize","move","selectAll","attr","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","stopColor","userSelect","rx","dominantBaseline","clipPath","Line","Zoom","setZoom","zoomLevels","showClear","zoomBehavior","transition","scaleBy","scaleTo","zoom","scaleExtent","xAccessor","price0","yAccessor","activeLiquidity","Chart","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","top","scales","scaleLinear","domain","initialMin","initialMax","newXscale","rescaleX","mask","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","tickIdx","currentTickProcessed","liquidityActive","AlgebraDayData_OrderBy","Block_OrderBy","Bundle_OrderBy","Burn_OrderBy","Collect_OrderBy","Deposit_OrderBy","EternalFarming_OrderBy","Factory_OrderBy","FeeHourData_OrderBy","Flash_OrderBy","LimitFarming_OrderBy","Mint_OrderBy","OrderDirection","PoolDayData_OrderBy","PoolFeeData_OrderBy","PoolHourData_OrderBy","PoolPosition_OrderBy","Pool_OrderBy","PositionSnapshot_OrderBy","Position_OrderBy","Reward_OrderBy","Swap_OrderBy","TickDayData_OrderBy","TickHourData_OrderBy","Tick_OrderBy","TokenDayData_OrderBy","TokenHourData_OrderBy","Token_OrderBy","Transaction_OrderBy","_SubgraphErrorPolicy_","CHAIN_SUBGRAPH_URL","api","createApi","reducerPath","baseQuery","getState","subgraphUrl","GraphQLClient","meta","ClientError","endpoints","allV3Ticks","feeTierDistribution","injectedRtkApi","injectEndpoints","build","limitFarm","eternalFarm","fetchEternalFarm","feeHourData","lastFeeHourData","lastNotEmptyHourData","lastNotEmptyPoolHourData","lastPoolHourData","poolHourData","lastEvent","transferedPositions","hasTransferedPositions","positionsOnEternalFarming","transferedPositionsForPool","positionsOnFarming","infiniteFarms","topPools","topTokens","surroundingTicks","CHAIN_TAG","usePricesQuery","useLazyPricesQuery","useAllV3TicksQuery","useLazyAllV3TicksQuery","useFeeTierDistributionQuery","useLazyFeeTierDistributionQuery","useLimitFarmQuery","useLazyLimitFarmQuery","useEternalFarmQuery","useLazyEternalFarmQuery","useFetchRewardsQuery","useLazyFetchRewardsQuery","useFetchTokenQuery","useLazyFetchTokenQuery","useFetchLimitQuery","useLazyFetchLimitQuery","useFetchEternalFarmQuery","useLazyFetchEternalFarmQuery","useFetchPoolQuery","useLazyFetchPoolQuery","useFeeHourDataQuery","useLazyFeeHourDataQuery","useLastFeeHourDataQuery","useLazyLastFeeHourDataQuery","useLastNotEmptyHourDataQuery","useLazyLastNotEmptyHourDataQuery","useLastNotEmptyPoolHourDataQuery","useLazyLastNotEmptyPoolHourDataQuery","useLastPoolHourDataQuery","useLazyLastPoolHourDataQuery","usePoolHourDataQuery","useLazyPoolHourDataQuery","useLastEventQuery","useLazyLastEventQuery","useFutureEventsQuery","useLazyFutureEventsQuery","useCurrentEventsQuery","useLazyCurrentEventsQuery","useTransferedPositionsQuery","useLazyTransferedPositionsQuery","useHasTransferedPositionsQuery","useLazyHasTransferedPositionsQuery","usePositionsOnEternalFarmingQuery","useLazyPositionsOnEternalFarmingQuery","useTransferedPositionsForPoolQuery","useLazyTransferedPositionsForPoolQuery","usePositionsOnFarmingQuery","useLazyPositionsOnFarmingQuery","useInfiniteFarmsQuery","useLazyInfiniteFarmsQuery","useTopPoolsQuery","useLazyTopPoolsQuery","useTopTokensQuery","useLazyTopTokensQuery","useSurroundingTicksQuery","useLazySurroundingTicksQuery","usePopularPoolsQuery","useLazyPopularPoolsQuery","generatedApi","enhanceEndpoints","addTagTypes","providesTags","usePoolActiveLiquidity","activeTick","getActiveTick","skipToken","isLoading","isError","isUninitialized","useAllV3Ticks","subsequentTicks","ticksProcessed","ZOOM_LEVEL","InfoBox","LiquidityChartRangeInput","currencyBUSD","formatData","newData","formattedPrice","chartEntry","formattedData","useDensityChartData","mockData","mockPrice","onBrushDomainChangeEnded","leftRangeValue","leftPriceUSD","rightPriceUSD","format","USDPrices","currencyAUSDC","currencyBUSDC","userUSDPrices","loadingTimedout","setLoadingTimedout","hasUSDPrices","usdA","usdB","SelectRange","stablecoins","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","AddLiquidityButton","handleAddLiquidity","setRejected","isNetworkFailed","isReady","NonFunPosMan","addCallParameters","estimate","newTxn","sendTransaction","RouterGuard","redirect","render","TokenPrice","basePrice","quotePrice","isLocked","userQuoteCurrencyToken","changeQuotePriceHandler","baseSymbol","quoteSymbol","tokenRatio","USDPriceField","userUSD","changeHandler","USDPrice","userQuoteCurrencyUSD","userBaseCurrencyUSD","changeBaseCurrencyUSDHandler","changeQuoteCurrencyUSDHandler","StartingPrice","startPriceHandler","basePriceUSD","quotePriceUSD","setUserBaseCurrencyUSD","setUserQuoteCurrencyUSD","setUserQuoteCurrencyToken","handleUSDChange","_typedValue","priceB","newPriceA","priceA","newPriceB","handleTokenChange","newUSDA","fixedA","newUSDB","fixedB","InitialPrice","Aftermath","done","isConfirmed","toggleIsConfirmed","toggleIsError","failed","NewAddLiquidityPage","currencyIdA","currencyIdB","isRejected","setEnd","setPriceFormat","derivedMintInfo","prevDerivedMintInfo","currencyNew","currencyIdOther","currencyIdNew","resetState","isETHOrWETHNew","isETHOrWETHOther","currencyANew","idA","idB","currencyBNew","handleStepChange","_step","handlePriceFormat","_stepLinks","stepPair","stepRange","stepAmounts","stepInitialPrice","hidePriceFormatter","RedirectDuplicateTokenIdsNew","isETHOrWETHA","isETHOrWETHB","selectPercent","useBurnV3State","burnV3","StyledRangeInput","Slider","changeCallback","CURRENCY_AMOUNT_MIN","FormattedCurrencyAmount","significantDigits","DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE","RemoveLiquidityV3","parsedTokenId","Remove","prevPosition","receiveWETH","setReceiveWETH","derivedInfo","positionSDK","discountedAmount0","discountedAmount1","liquidityValue0","liquidityValue1","feeValue0","feeValue1","useDerivedV3BurnInfo","prevDerivedInfo","onPercentSelect","useBurnV3ActionHandlers","debouncedMs","inner","setInner","timer","onChangeInner","newValue","useDebouncedChangeHandler","percentForSlider","onPercentSelectForSlider","setShowConfirm","setAttemptingTxn","txnHash","setTxnHash","burn","removeCallParameters","showCollectAsWeth","FormattedPriceImpact","LabeledArrow","flexWrap","isLastItem","AdvancedSwapDetails","realizedLPFee","realizedLpFeePercent","ContainerRow","InputContainer","AddressInputPanel","withoutSpaces","autoCapitalize","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","computeFiatValuePriceImpact","fiatValueInput","fiatValueOutput","pct","TradePrice","showInverted","setShowInverted","labelInverted","flipPrice","SwapModalHeader","showAcceptChanges","onAcceptChanges","executionPrice","tradeMeaningfullyDiffers","args","tradeA","tradeB","ConfirmSwapModal","originalTrade","modalHeader","modalBottom","confirmationContent","SwapHeader","TokenWarningModal","PermitType","UseERC20PermitState","PERMITTABLE_TOKENS","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","overridePermitInfo","transactionDeadline","eip2612Contract","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","NOT_APPLICABLE","gatherPermitSignature","nonceNumber","isSignatureDataValid","SIGNED","NOT_SIGNED","allowed","ALLOWED","signatureDeadline","holder","verifyingContract","EIP712Domain","Permit","primaryType","splitSignature","signature","permitType","Version","AMOUNT","DEFAULT_VERSION","v3","getTradeVersion","v2","SwapCallbackState","WrapType","swapErrorToUserReadableMessage","reason","originalError","useSwapCallback","recipientAddressOrName","swapCalls","recipientAddress","swapRouterAddress","swapMethods","swapCallParameters","useSwapCallArguments","all","gasEstimate","gasError","callError","estimatedCalls","bestCallOption","ix","errorCalls","firstNoErrorCall","inputSymbol","outputSymbol","withRecipient","tradeVersion","withVersion","wrapType","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","handleConfirmTokenWarning","importTokensNotInDefault","isExpertMode","toggledVersion","use","useToggledVersion","swapInputError","wethContract","hasInputAmount","sufficientBalance","WRAP","execute","deposit","txReceipt","UNWRAP","withdraw","useWrapCallback","onWrap","wrapInputError","showWrap","isValid","handleTypeInput","handleTypeOutput","handleDismissTokenWarning","showConfirm","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","routeNotFound","isLoadingRoute","approveCallback","useERC20PermitFromTrade","signatureState","approvalSubmitted","setApprovalSubmitted","maxInputAmount","swapCallback","swapCallbackError","handleSwap","priceImpactWithoutFee","confirm","priceImpactSeverity","executionPriceImpact","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","handleMaxInput","handleOutputSelect","priceImpactTooHigh","onOpen","RedirectPathToSwapOnly","RedirectToSwap","CautionModalInner","CautionList","ul","CautionListItem","li","AgreeButton","agreementItems","CautionModal","cautionModal","toggleCautionModal","handleAgreement","reportWebVitals","timing","variable","GoogleAnalyticsReporter","getFCP","getFID","getLCP","getCLS","cd1","pageview","Polling","isMounting","setIsMounting","isHover","setIsHover","mountingTimer","PoweredByAlgebra","fillRule","clipRule","moveReversed","Particles","ParticlesInner","Particle","reversed","ParticlesBackground","AddLiquidity","lazy","FarmingPage","PoolPage","PositionPage","InfoPage","App","defineProperty","dataLayer","user_id","component","zIndex","Suspense","fallback","strict","exact","popup","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","arbitrumAlphaAcknowledged","userSlippageToleranceHasBeenMigratedToAuto","serializedPair","tokenAAddress","tokenBAddress","toggled","txs","lastCheckedBlockNumber","confirmedTime","otherField","otherTypedValue","NEW_LIST_STATE","lastInitializedDefaultListOfLists","getVersionUpgrade","VersionUpgrade","NONE","u","lastInitializedSet","newListOfListsSet","has","LIQUIDITY_PERCENT","filterToKey","topics","topic","createSlice","reducers","addListener","listeners","fetchingLogs","filters","fetchingBlockNumber","fetchedLogs","fetchState","fetchedLogsError","actions","callListeners","isFarming","hasTransferred","routingApi","fetchBaseQuery","baseUrl","getQuote","PERSISTED_KEYS","useGetQuoteQuery","store","configureStore","reducer","mint","logs","dataApi","middleware","getDefaultMiddleware","thunk","save","states","debounce","preloadedState","disableWarnings","process","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","Updater","windowVisible","focused","setFocused","listener","useIsWindowVisible","util","invalidateTags","useQueryCacheInvalidator","blockNumberCallback","getBlockNumber","debouncedState","DEFAULT_GAS_REQUIRED","waitRandom","ms","random","CancelledError","isCancelledError","RetryableError","isRetryableError","retry","fn","rejectCancelled","n","minWait","maxWait","completed","cancel","chunk","obj","blockTag","returnData","debouncedListeners","multicall2Contract","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","CONSERVATIVE_BLOCK_GAS_LIMIT","chunks","currentChunk","currentChunkCumulativeGas","chunkArray","fetchChunk","firstCallKeyIndex","curr","lastCallKeyIndex","erroredCalls","filtersNeedFetch","parts","keyToFilter","getLogs","fromBlock","toBlock","DEFAULT_RETRY_OPTIONS","lastBlockNumber","getReceipt","getTransactionReceipt","cancels","blocksSinceCheck","minutesPending","shouldCheck","blockHash","contractAddress","transactionIndex","darkHandler","matches","matchMedia","GasUpdater","block","setGasPrice","gasPriceLoading","setGasPriceLoading","err","fetchGasPrice","useGasPrice","Web3ProviderNetwork","createWeb3ReactRoot","autoRefreshOnNetworkChange","Updaters","ReactDOM","ApolloProvider","getElementById","poolString","queryString","CHART_FEE_POOL_DATA","CHART_FEE_LAST_ENTRY","CHART_FEE_LAST_NOT_EMPTY","CHART_POOL_LAST_NOT_EMPTY","CHART_POOL_LAST_ENTRY","CHART_POOL_DATA","TOTAL_STATS","qString","tierFarming","TOP_POOLS","POOLS_FROM_ADDRESSES","TOP_TOKENS","TOKENS_FROM_ADDRESSES","tokenString","FETCH_TICKS","MaxUint160","multiplyIn256","bitwiseAnd","roundUp","numerator1","numerator2","sqrtPX96","getNextSqrtPriceFromAmount0RoundingUp","getNextSqrtPriceFromAmount1RoundingDown","addIn256"],"mappings":"8HAAA,wNAGaA,EAIR,CACDC,QAASC,YAAa,gCACtBC,UAAWD,YAAa,kCACxBE,SAAUF,YAAa,kCAGdG,EAAUH,YAAqB,iBAC/BI,EAAaJ,YAAqB,oBAGlCK,EAAaL,YAAqB,oBAClCM,EAAcN,YAAqB,qBAGnCO,EAAmBP,YAAqB,2B,saCNxCQ,GALUC,UAAOC,IAAV,wCAAGD,CAAH,oDAKQA,UAAOE,OAAV,wCAAGF,CAAH,4QAiBnB,qBAAGG,MAAkBC,WAAWC,eAA/B,IAAD,wEAKA,qBAAGC,UAEKC,cADG,wKAOH,SAGDC,EAAeR,UAAOC,IAAV,wCAAGD,CAAH,iDAGD,cAAGG,MAAH,MAAe,gBAG1BM,EAAYT,kBAAOU,KAAV,wCAAGV,CAAH,gBACT,cAAGG,MAAH,IAAUQ,EAAV,EAAUA,SAAV,OAAuC,IAAbA,GAA+B,IAAbA,EAAiB,cAA6B,IAAbA,EAAiB,iBAAoC,kBAGlIC,EAAgBZ,kBAAOU,KAAV,wCAAGV,CAAH,8EAQba,EAAOb,UAAOc,KAAV,wCAAGd,CAAH,uLAsBXe,EAAyBf,UAAOC,IAAV,wCAAGD,CAAH,uLACJ,cAAGG,MAAH,OAAea,YAAe,GAAK,kBAO9C,cAAGb,MAAH,MAAe,iBAUtBc,EAAsCjB,UAAOC,IAAV,wCAAGD,CAAH,kJACjB,cAAGG,MAAH,OAAea,YAAe,GAAK,kBAUpD,SAASE,EAAT,GAA6D,IAAhCC,EAA+B,EAA/BA,MAChC,OACI,eAACJ,EAAD,WACI,cAACE,EAAD,UACI,cAAC,IAAD,CAAeG,KAAM,OAEzB,mBAAGC,MAAO,CAAEC,UAAW,cAAvB,SAAwCH,OAK7C,IAAMI,EAAwBvB,kBAAOwB,KAAV,wCAAGxB,CAAH,sFACV,cAAGG,MAAH,OAAea,YAAe,IAAM,sBAC/C,cAAGb,MAAH,MAAe,0BA2BfsB,GApBmBzB,kBAAO0B,KAAV,wCAAG1B,CAAH,sGAMvB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,yEAO0B3B,UAAOC,IAAV,yCAAGD,CAAH,uDAGhB,cAAGG,MAAH,MAAe,kBAIeH,UAAOC,IAAV,yCAAGD,CAAH,iQAYhB,cAAGG,MAAH,MAAe,gBAEnB,cAAGA,MAAH,MAAe,iBAKtByB,EAAuB5B,UAAOE,OAAV,yCAAGF,CAAH,8KAcJA,UAAOC,IAAV,yCAAGD,CAAH,oRAQb,cAAGG,MAAH,MAAe,kBACJ,cAAGA,MAAH,MAAe,wBAGtB,qBAAG0B,KAAmB,iBAAmB,uBAI/B7B,kBAAO8B,IAAKC,MAAf,yCAAG/B,CAAH,wBAGlB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,kD,iCChNN,4KAQO,SAASK,IAIZ,MAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAWC,cAEjB,OAAOC,uBACH,SACIC,GAME,IAAD,yDAD8G,GAH3GC,EAIH,EAJGA,QACAC,EAGH,EAHGA,SACAC,EAEH,EAFGA,MAGJ,GAAKP,GACAD,EAAL,CAEA,IAAQS,EAASJ,EAATI,KACR,IAAKA,EACD,MAAMC,MAAM,8BAEhBR,EAASS,YAAe,CAAEF,OAAMG,KAAMX,EAASD,UAASO,WAAUD,UAASE,cAE/E,CAACN,EAAUF,EAASC,IAKrB,SAASY,IAAgE,IAAD,EACnEb,EAAYD,cAAZC,QAEFc,EAAQC,aAAe,SAACD,GAAD,OAAWA,EAAME,gBAE9C,OAAOhB,GAAO,UAAGc,EAAMd,UAAT,QAA0B,GAGrC,SAASiB,EAAwBC,GACpC,IAAMF,EAAeH,IAErB,SAAKK,IAAoBF,EAAaE,MAE9BF,EAAaE,GAAiBC,QAYnC,SAASC,EAAsBC,EAAkCC,GACpE,IAAMC,EAAkBV,IACxB,OAAOW,mBACH,iBAC4B,kBAAjBH,GACY,kBAAZC,GACPG,OAAOC,KAAKH,GAAiBI,MAAK,SAAClB,GAC/B,IAAMmB,EAAKL,EAAgBd,GAC3B,IAAKmB,EAAI,OAAO,EAChB,GAAIA,EAAGT,QACH,OAAO,EAEP,IAAMZ,EAAWqB,EAAGrB,SACpB,QAAKA,IACEA,EAASe,UAAYA,GAAWf,EAASc,eAAiBA,GAnB9E,SAA6BO,GAChC,OAAO,IAAIC,MAAOC,UAAYF,EAAGG,UAAY,MAkBoDC,CAAoBJ,SAGjH,CAACL,EAAiBD,EAASD,M,iCCjFnC,2BAkBeY,IATF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OACzBnE,EAAQuD,mBAAQ,kBAAMY,EAAS,YAAoBC,IAAXD,EAAuB,GAAK,UAAS,CAACA,IACpF,OACI,qBAAKE,UAAS,uBAAkBrE,EAAlB,YAA2BiE,GAAzC,SACKC,M,iCCbb,6OAgBO,SAASI,EAAeC,GAG3B,IAAQxC,EAAYD,cAAZC,QACFyC,EAAoBC,cAEpBC,EAAsBnB,mBACxB,kBACIgB,EACMA,EACGI,IAAIC,KACJC,QAAO,SAACC,GAAD,OAA0B,IAANA,KAC3BC,OACH,KACV,CAACR,IAGCS,EAAUC,YACZT,EACA,gBACAE,EAAUC,KAAI,SAACO,GAAD,MAAa,CAACA,OAG1BC,EAAW5B,mBACb,kBACImB,EAAUU,QAAwD,SAACC,EAAMH,EAASI,GAAO,IAAD,IAC9EC,EAAK,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAUM,UAAb,iBAAG,EAAcE,cAAjB,aAAG,EAAuB,GAGrC,OAFID,GAASxD,IACTsD,EAAKH,GAAWO,IAAeC,cAAcC,IAAMC,QAAQ7D,GAAU8D,IAAKC,OAAOP,EAAMQ,cACpFV,IACR,MACP,CAACX,EAAW3C,EAASiD,IAGnBgB,EAAeC,YAA0Bd,GAE/C,OAAO5B,mBAAQ,WAEX,OAAKyC,EAEgC,IAAjCxC,OAAOC,KAAK0B,GAAUe,QAAqD,IAArC1C,OAAOC,KAAKuC,GAAcE,OAAqBF,EAElFb,EAJmB,KAM3B,CAACA,IAoDD,SAASgB,EACZjB,EACAkB,GAEA,OAjDG,SACHlB,EACAkB,GAEA,IAAMC,EAA2B9C,mBAC7B,yCAAM6C,QAAN,IAAMA,OAAN,EAAMA,EAAQvB,QAAO,SAACyB,GAAD,OAAqD,IAA1B1B,YAAS,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAGpB,mBAA7D,QAAoF,KACpF,CAACkB,IAGCG,EAA0BhD,mBAAQ,kBAAM8C,EAAgB1B,KAAI,SAAC6B,GAAD,OAAQA,EAAGtB,aAAU,CAACmB,IAClFI,EAAiB,IAAIC,IAAUC,GAC/BxB,EAAWyB,YAA8BL,EAAyBE,EAAgB,YAAa,CAACvB,GAAU,CAC5G2B,YAAa,MAGXC,EAAYvD,mBACd,kBACI2B,GAAWmB,EAAgBH,OAAS,EAC9BG,EAAgBjB,QAAsE,SAACC,EAAM0B,EAAOzB,GAAO,IAAD,IAClGC,EAAK,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAWG,UAAd,iBAAG,EAAeE,cAAlB,aAAG,EAAwB,GAChCwB,EAASzB,EAAQM,IAAKC,OAAOP,EAAMQ,iBAAc3B,EAIvD,OAHI4C,IACA3B,EAAK0B,EAAM7B,SAAWO,IAAeC,cAAcqB,EAAOC,IAEvD3B,IACR,IACD,KACV,CAACH,EAASmB,EAAiBlB,IAEzBa,EAAeC,YAA0Ba,GAEzCG,EAAsB1D,mBAAQ,kBAAM4B,EAASzB,MAAK,SAACwD,GAAD,OAAeA,EAAUC,aAAU,CAACL,IAE5F,OAAOvD,mBAAQ,WAEX,OAAKyC,GAEiC,IAAlCxC,OAAOC,KAAKqD,GAAWZ,QAAkD,IAAlC1C,OAAOC,KAAKqD,GAAWZ,OAAqB,CAACF,EAAciB,GAF5E,CAACH,EAAWG,KAMvC,CAACA,EAAYH,IAQTM,CAAqClC,EAASkB,GAAQ,GAU1D,SAASiB,EACZrF,EACAsF,GAEA,IAAMlB,EAAS7C,mBACX,yCAAM+D,QAAN,IAAMA,OAAN,EAAMA,EAAYzC,QAAO,SAAC0C,GAAD,8BAAiCA,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAUC,eAA3C,mBAAzB,QAAyF,KACzF,CAACF,IAGCG,EAAgBtB,EAAiBnE,EAASoE,GAE1CsB,EAAapD,EADUf,mBAAQ,yCAAM+D,QAAN,IAAMA,OAAN,EAAMA,EAAY5D,MAAK,SAAC6D,GAAD,cAAcA,QAAd,IAAcA,OAAd,EAAcA,EAAUI,mBAA/C,WAAmE,CAACL,IACzD,CAACtF,GAAW,IAE5D,OAAOuB,mBACH,yCACI+D,QADJ,IACIA,OADJ,EACIA,EAAY3C,KAAI,SAAC4C,GACb,GAAKvF,GAAYuF,EACjB,OAAIA,EAASC,QAAgBC,EAAcF,EAASrC,SAChDqC,EAASI,SAAiBD,EAAW1F,QAAzC,YAJR,QAMU,KACV,CAACA,EAASsF,EAAYI,EAAYD,IAInC,SAASG,EAAmB5F,EAAkBuF,GACjD,OAAOF,EAAoBrF,EAAS,CAACuF,IAAW,GAI7C,SAASM,IACZ,IAAQ7F,EAAYF,cAAZE,QACF8F,EAAYC,cAEZ5C,EAAWgB,EAAgB,OAACnE,QAAD,IAACA,SAAWoC,EADtBb,mBAAQ,kBAAMC,OAAOwE,OAAP,OAAcF,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAO3C,QAAP,IAAOA,IAAY,K,oKC9JjBnB,EAAOnE,kBAAOoI,OAAV,uCAAGpI,CAAH,yDACG,gBAAGqI,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UACtB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,UACtB,gBAAGC,EAAH,EAAGA,cAAH,cAAuBA,QAAvB,IAAuBA,IAAiB,UAC/C,qBAAGC,UAEFrE,MAEUnE,kBAAOmE,GAAV,uCAAGnE,CAAH,uCACE,kCAAQ,aADzB,IAKMyI,EAAgBzI,kBAAOmE,GAAV,uCAAGnE,CAAH,2BACF,kCAAQ,4BAGnB0I,EAAW1I,kBAAOmE,GAAV,uCAAGnE,CAAH,2BACG,kCAAQ,4BAgBnB2I,GAbe3I,kBAAOmE,GAAV,uCAAGnE,CAAH,2BACD,kCAAQ,4BAGRA,kBAAOmE,GAAV,uCAAGnE,CAAH,2BACG,kCAAQ,4BAGLA,kBAAOmE,GAAV,uCAAGnE,CAAH,2BAEA,kCAAQ,4BAGNA,kBAAOmE,GAAV,uCAAGnE,CAAH,uEAEV,cAAGG,MAAH,MAAe,qBAIJH,kBAAOmE,GAAV,uCAAGnE,CAAH,wDACG,cAAGG,MAAH,MAAe,qBAC1B,cAAGA,MAAH,MAAe,kBAIHH,kBAAOmE,GAAV,uCAAGnE,CAAH,mGAGJ,cAAGG,MAAH,MAAe,gBACpB,cAAGA,MAAH,MAAe,mB,iCCrD5B,8KAkBYyI,EAlBZ,S,SAkBYA,O,uBAAAA,I,eAAAA,I,yDAAAA,I,2DAAAA,I,iBAAAA,I,eAAAA,I,uBAAAA,I,eAAAA,I,mCAAAA,I,iDAAAA,I,kDAAAA,I,gDAAAA,I,gCAAAA,I,8CAAAA,I,uCAAAA,M,KAgJL,IAAM/F,EAAiBtD,YAA+H,+BAChJsJ,EAAuBtJ,YAAkC,qCACzDuJ,EAAsBvJ,YAAgD,oCACtEwJ,EAAsBxJ,YAAyF,oCAC/GyJ,EAAqBzJ,YAAqE,oC,iCCtKvG,0GAgBa0J,EAhBb,MAgB+CC,EAAgB,CAb/C,wGAa2D,GAG9DC,EAA+B,UAYrCF,GAIMG,EAAqC,I,mNChCrCC,EAAmBrJ,UAAOC,IAAV,uCAAGD,CAAH,oOAEb,SAACsJ,GAAD,OAAYA,EAAMzH,KAAO,UAAY,YACxC,SAACyH,GAAD,OAAYA,EAAMzH,KAAO,EAAI,KAId,gBAAG1B,EAAH,EAAGA,MAAH,OAAea,YAAe,GAAKb,EAAMoJ,YAIxDC,EAAmBxJ,UAAOC,IAAV,uCAAGD,CAAH,2BAGhByJ,EAAQzJ,UAAOC,IAAV,uCAAGD,CAAH,+d,OCHH,SAAS0J,EAAT,GAAiF,IAAD,IAA7DC,EAA6D,EAA7DA,QAAS9H,EAAoD,EAApDA,KAAMwC,EAA8C,EAA9CA,SAA8C,IAApCuF,iBAAoC,MAAxB,OAAwB,EAC3F,EAAgDC,mBAAgC,MAAhF,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0CF,mBAAgC,MAA1E,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAwCJ,mBAAgC,MAAxE,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAuCC,YAAUN,EAAkBE,EAAe,CAC9EJ,YACAS,SAAU,QACVC,UAAW,CACP,CAAEC,KAAM,SAAUC,QAAS,CAAEC,OAAQ,CAAC,EAAG,KACzC,CAAEF,KAAM,QAASC,QAAS,CAAEE,QAASR,OALrCS,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,WAQlBC,EAAiBxI,uBAAY,WAC/BsI,GAAUA,MACX,CAACA,IAGJ,OAFAG,YAAYD,EAAgBjJ,EAAO,IAAM,MAGrC,qCACI,cAAC2H,EAAD,CAAkBwB,IAAKjB,EAAvB,SAAoD1F,IACpD,cAAC,IAAD,UACI,eAACgF,EAAD,yBAAkBxH,KAAMA,EAAMmJ,IAAKf,EACjB5I,MAAOsJ,EAAOM,QAAYJ,EAAWI,QADvD,cAEKtB,EACD,cAACF,EAAD,aACIjF,UAAS,oCAAWqG,EAAWI,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpED,IAAKb,EACL9I,MAAOsJ,EAAOO,OACVL,EAAWK,iBCxChC,IAAMC,EAAmBnL,UAAOC,IAAV,uCAAGD,CAAH,+F,iECUd,SAASoL,EAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,KAASC,EAAsB,iBAC7D,OAAO,cAAC5B,EAAD,aAASC,QAAS,cAACwB,EAAD,UAAmBE,KAA8BC,IAG9E,SAASC,EAAT,GAAoE,IAA1C5B,EAAyC,EAAzCA,QAAY2B,EAA6B,iBAC/D,OAAO,cAAC5B,EAAD,aAASC,QAAS,cAACwB,EAAD,UAAmBxB,KAAiC2B,IAG1E,SAASE,EAAT,GAA8E,IAAlDnH,EAAiD,EAAjDA,SAAaiH,EAAoC,iBAChF,EAAwBzB,oBAAS,GAAjC,mBAAOhI,EAAP,KAAa4J,EAAb,KACMC,EAAOpJ,uBAAY,kBAAMmJ,GAAQ,KAAO,CAACA,IACzCE,EAAQrJ,uBAAY,kBAAMmJ,GAAQ,KAAQ,CAACA,IACjD,OACI,cAACL,EAAD,2BAAaE,GAAb,IAAmBzJ,KAAMA,EAAzB,SACI,qBAAK+J,aAAcF,EAAMG,aAAcF,EAAvC,SACKtH,OAMV,SAASyH,EAAT,GAIgC,IAHnCnC,EAGkC,EAHlCA,QACAtF,EAEkC,EAFlCA,SACGiH,EAC+B,iBAClC,EAAwBzB,oBAAS,GAAjC,mBAAOhI,EAAP,KAAa4J,EAAb,KACMC,EAAOpJ,uBAAY,kBAAMmJ,GAAQ,KAAO,CAACA,IACzCE,EAAQrJ,uBAAY,kBAAMmJ,GAAQ,KAAQ,CAACA,IACjD,OACI,cAACF,EAAD,2BAAoBD,GAApB,IAA0BzJ,KAAMA,EAAM8H,QAASA,EAA/C,SACI,qBACItI,MAAO,CAAE0K,QAAS,eAAgBC,WAAY,EAAG1D,QAAS,WAC1DsD,aAAcF,EACdG,aAAcF,EAHlB,SAKKtH,S,iCChDjB,sLAQa4H,EAAwB1M,YACjC,mCAES2M,EAA2B3M,YACpC,sCAES4M,EAA2B5M,YACpC,sCAES6M,EAAgC7M,YAI1C,2CACU8M,EAAyB9M,YAMnC,qC,8NCtBG+M,EAAwBC,YAASC,KAE1BC,EAAsBzM,kBAAOsM,GAAV,wCAAGtM,CAAH,wKAUJ,cAAGG,MAAH,MAAe,qBAIrCuM,EAAwBH,YAASI,KAG1BC,EAAsB5M,mBAAO,cAAG6M,UAAH,EAAcC,UAAd,EAAyBC,OAAzB,EAAiCC,OAAjC,IAA4C1B,EAA5C,wBAAuD,cAACoB,EAAD,eAA2BpB,OAAU2B,MAAM,CACxI,aAAc,WADc,wCAAGjN,CAAH,2RAWE,gBAAGG,EAAH,EAAGA,MAAH,OAAea,YAAe,IAAMb,EAAMoJ,YAMtD,qBAAGwD,OAAuB,WAAa,YAGnD,gBAAGD,EAAH,EAAGA,UAAH,OACEA,GACAvM,cADS,2EAESuM,MAEpB,gBAAGD,EAAH,EAAGA,UAAH,OACEA,GACAtM,cADS,2EAESsM,MAIpB,qBAAG1M,MAAkBC,WAAW8M,WAA/B,IAAD,qEAIA,gBAAG/M,EAAH,EAAGA,MAAO4M,EAAV,EAAUA,OAAV,OAAuB5M,EAAMC,WAAWuB,UAAvC,IAAD,2DAGAoL,GACAxM,cADM,4NC9CD,SAAS4M,EAAT,GAAiK,IAAhJH,EAA+I,EAA/IA,OAAQI,EAAuI,EAAvIA,UAAuI,IAA5HP,iBAA4H,aAAzGC,iBAAyG,MAA7F,GAA6F,EAAzFO,EAAyF,EAAzFA,gBAAiBC,EAAwE,EAAxEA,2BAA4BjJ,EAA4C,EAA5CA,SAAUkJ,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,OAC/IC,EAAiBC,YAAcV,EAAQ,KAAM,CAC/CW,OAAQ,CAAEC,SAAU,KACpB9K,KAAM,CAAE+K,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGtB,EAAqBG,aAAU,iBAAO,CAClCC,EAAG,EACHN,OAAQ,CAAEO,KAAM,EAAGC,QAAS,IAAKC,SAAU,QAF/C,mBAAcC,GAAd,KAASJ,EAAT,MAIMK,EAAOC,YAAW,CACpBC,OAAQ,SAACxL,GACLqL,EAAI,CACAJ,EAAGjL,EAAMyL,KAAOzL,EAAM0L,SAAS,GAAK,KAEpC1L,EAAM0L,SAAS,GAAK,KAAQ1L,EAAM2L,SAAW,GAAK3L,EAAM4L,UAAU,GAAK,IACvExB,OAKZ,OACI,mCACKK,EAAe3I,KACZ,gBAAG+J,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKxF,EAAd,EAAcA,MAAd,OACIuF,GACI,cAACpC,EAAD,CAEIpL,MAAOiI,EACP8D,UAAWA,EACXC,gBAAiBA,EACjBC,2BAA4BA,EAC5ByB,gCAAgC,EAChCC,QAASxB,EAPb,SASI,eAACZ,EAAD,2BACSqC,WAAQ,2BAEAX,KAFA,IAGHjN,MAAO,CAAE6N,UAAU,uBAEvB,CACI7N,MAAO,CAAEgH,MAAOkF,EAAa,QAAU,WAPrD,IASI,aAAW,iBACXV,UAAWA,EACXC,UAAWA,EACXC,OAAQkC,WAZZ,WAeM5B,GAAmB4B,WAAW,qBAAKE,SAAU,IAAQ,KACtD9K,OAxBAyK,U,+TCrC1B,SAASM,EAAkBC,EAAkCC,GAChE,IAAMC,EAAyBF,EAAMG,MAAMC,QAE3C,EAAwBJ,EAAMK,MAAMnK,QAChC,WAMIoK,EACAC,GACqE,IANjEC,EAMgE,EANhEA,WACAC,EAKgE,EALhEA,KACAC,EAIgE,EAJhEA,MAKEC,EAAqBL,EAAKM,OAAOC,OAAOL,GAAcF,EAAKQ,OAASR,EAAKM,OAC/E,OAAc,IAAVL,EACO,CACHC,WAAYG,EACZD,MAAO,CAAC,UAAW,WACnBD,KAAM,CAACD,EAAWxK,QAAS2K,EAAY3K,UAGpC,CACHwK,WAAYG,EACZD,MAAM,GAAD,mBAAMA,GAAN,CAAa,YAClBD,KAAK,GAAD,mBAAMA,GAAN,CAAYE,EAAY3K,aAIxC,CAAEwK,WAAYN,EAAiBO,KAAM,GAAIC,MAAO,KAzB5CD,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MA4Bd,OAAOT,EAAcc,eAAKL,EAAMM,UAAWP,EAAKO,WAAaD,eAAKL,EAAOD,G,kECjCtE,SAASQ,EAAkBC,EAAcC,GAC5CC,YAAUC,OAAOC,UAAUJ,IAASG,OAAOC,UAAUH,GAAc,YACnEC,YAAUD,EAAc,EAAG,gBAC3BC,YAAUF,GAAQK,IAASC,UAAYN,GAAQK,IAASE,SAAU,cAClE,IAAMC,EAAUC,KAAKC,MAAMV,EAAOC,GAAeA,EACjD,OAAIO,EAAUH,IAASC,SAAiBE,EAAUP,EACzCO,EAAUH,IAASE,SAAiBC,EAAUP,EAC3CO,E,0ICZMG,EAAtB,qGAKI,SAA+BjM,EAASkM,EAASC,GAC7C,IAAMC,EAAUrL,IAAKsL,SAASrM,EAAGkM,GAC7BxL,EAASK,IAAKuL,OAAOF,EAASD,GAElC,OADIpL,IAAKwL,SAASxL,IAAKyL,UAAUJ,EAASD,GAAcM,OAAO/L,EAASK,IAAK2L,IAAIhM,EAAQiM,MAClFjM,MATf,M,8OCDMkM,E,OAA0B1I,EAAsB5D,QAAsC,SAACC,EAAMsM,EAASlC,GAExG,OADApK,EAAKsM,GAAWlC,EAAQ,EACjBpK,IACR,IAGY,SAASuM,EAAmBC,EAAcC,GACrD,OAAIJ,EAAwBG,IAASH,EAAwBI,GAClDJ,EAAwBG,GAAQH,EAAwBI,GAE5D,E,aCILC,EACiB,qBAAZC,QAA0B,IAAIA,QAAwC,KAEjF,SAASC,EAAeC,GACpB,IAAM1M,EAAM,OAAGuM,QAAH,IAAGA,OAAH,EAAGA,EAAWI,IAAID,GAC9B,GAAI1M,EAAQ,OAAOA,EAEnB,IAAMb,EAAMuN,EAAK9L,OAAOhB,QAAiC,SAACgN,EAAUC,GAAe,IAAD,EACxEtL,EAAQ,IAAIuL,IAAiBD,EAAWH,GAC9C,YAAiD9N,KAA7C,UAAAgO,EAASrL,EAAMhF,gBAAf,eAA0BgF,EAAM7B,WAChCqN,QAAQvR,MAAR,2BAAkC+F,EAAM7B,UACjCkN,IAENA,EAASrL,EAAMhF,WAAUqQ,EAASrL,EAAMhF,SAAW,IACxDqQ,EAASrL,EAAMhF,SAASgF,EAAM7B,SAAW,CACrC6B,QACAmL,QAEGE,KACR,IAEH,OADS,OAATL,QAAS,IAATA,KAAW7D,IAAIgE,EAAMvN,GACdA,EAG4BsN,EAAeO,GAE/C,SAASC,IACZ,OAAO3P,aAAe,SAACD,GAAD,OAAWA,EAAM6P,MAAMC,SA6BjD,SAASC,EAA4BC,GACjC,IAAMH,EAAQD,IACd,OAAOlP,mBAAQ,WACX,OAAKsP,EAEDA,EACKC,QAEA/N,KAAK6M,GACLxM,QAAO,SAAC0C,EAAWiL,GAAgB,IAAD,EA9BvBC,EAAuBC,EA+BzBC,EAAO,UAAGR,EAAMK,UAAT,aAAG,EAAmBG,QACnC,IAAKA,EAAS,OAAOpL,EACrB,IACI,OAlCIkL,EAkCelL,EAlCQmL,EAkCGhB,EAAeiB,GAjChD1P,OAAOC,KACpBD,OAAOC,KAAKuP,GACPG,OAAO3P,OAAOC,KAAKwP,IACnB7N,QAAoC,SAACC,EAAME,GAExC,OADAF,EAAKE,IAAS,EACPF,IACR,KACTV,KAAI,SAACyO,GAAD,OAAQC,SAASD,MAEPhO,QAAiC,SAACC,EAAMtD,GAMpD,OALAsD,EAAKtD,GAAL,2BACOkR,EAAKlR,IAELiR,EAAKjR,IAELsD,IACR,IAkBe,MAAOrE,GAEL,OADAuR,QAAQvR,MAAM,yCAA0CA,GACjD8G,KAEZ,IAfO,KAiBnB,CAAC4K,EAAOG,IAIR,SAASS,IACZ,OAAOxQ,aAAe,SAACD,GAAD,OAAWA,EAAM6P,MAAMa,kBAG1C,SAASC,IACZ,IAAMd,EAAQD,IACRgB,EAAoBH,IAC1B,OAAO9P,OAAOC,KAAKiP,GAAO7N,QAAO,SAAC6O,GAAD,QAAS,OAACD,QAAD,IAACA,KAAmBE,SAASD,OAIpE,SAASE,IAEZ,OAAOhB,EADgBU,KAOpB,SAASO,EAAgBH,GAC5B,IAAMH,EAAiBD,IACvB,OAAOQ,QAAO,OAACP,QAAD,IAACA,OAAD,EAACA,EAAgBI,SAASD,M,gHC/GrC,SAASK,EAAUC,GACtB,IAAIrF,EAAG,UAAMqF,EAAK9O,QAAX,YAAsB8O,EAAKC,UAClC,GAAID,EAAKnN,YAAa,CAClB,IAAK0J,OAAO2D,cAAcF,EAAKnN,aAC3B,MAAM,IAAIpE,MAAJ,0BAA6BuR,EAAKnN,cAE5C8H,GAAG,WAAQqF,EAAKnN,aAEpB,OAAO8H,EAGJ,SAASwF,EAAaC,GACzB,IAAMC,EAAMD,EAAQE,MAAM,KAC1B,IAAK,CAAC,EAAG,GAAGX,SAASU,EAAInO,QACrB,MAAM,IAAIzD,MAAJ,4BAA+B2R,IAEzC,OAAO,aACHlP,QAASmP,EAAI,GACbJ,SAAUI,EAAI,IACVA,EAAI,GAAK,CAAExN,YAAa0J,OAAO8C,SAASgB,EAAI,KAAQ,M,2GCfpDE,E,wBAPCC,EAAe,6CAEfC,EAAsBC,IAAcC,aAAaC,IAAQC,KAAKJ,qB,SAK/DF,O,eAAAA,I,qBAAAA,I,kBAAAA,M,KASiD,mBACxDA,EAAUO,IAAM,IADwC,cAExDP,EAAUQ,OAAS,IAFqC,cAGxDR,EAAUS,KAAO,K,sOCXf,SAASC,EACZC,EACAC,GAMA,IAAMC,ECdH,SAAoCC,EAAsBC,GAC7D,IAAQvT,EAAYD,cAAZC,QAER,EAAyBA,EAAU,QAACsT,QAAD,IAACA,OAAD,EAACA,EAAW/F,QAAZ,OAAqBgG,QAArB,IAAqBA,OAArB,EAAqBA,EAAWhG,SAAW,MAAClL,OAAWA,GAA1F,mBAAOmR,EAAP,KAAeC,EAAf,KAEMC,EAAiBlS,mBAAQ,WAAO,IAAD,UACjC,IAAKxB,EAAS,MAAO,GAErB,IAAM2T,EAAM,UAAGC,IAA8B5T,UAAjC,QAA6C,GACnD6T,EAAcL,GAAM,oBAAGM,IAAiB9T,UAApB,aAAG,EAA4BwT,EAAOrQ,gBAAtC,QAAuD,GAC3E4Q,EAAcN,GAAM,oBAAGK,IAAiB9T,UAApB,aAAG,EAA4ByT,EAAOtQ,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAWwQ,GAAX,YAAsBE,GAAtB,YAAsCE,MACvC,CAAC/T,EAASwT,EAAQC,IAEfO,EAA8BxS,mBAChC,kBACIkS,EACKO,SAAQ,SAACC,GAAD,OAA4BR,EAAM9Q,KAAI,SAACuR,GAAD,MAAe,CAACD,EAAMC,SACpErR,QAAO,mCAAEsR,EAAF,KAAMC,EAAN,YAAeD,EAAGpG,OAAOqG,QACzC,CAACX,IAGL,OAAOlS,mBACH,kBACIgS,GAAUC,EACJ,CAEE,CAACD,EAAQC,IAFX,mBAIKC,EAAM9Q,KAAI,SAACsR,GAAD,MAA0B,CAACV,EAAQU,OAJlD,YAMKR,EAAM9Q,KAAI,SAACsR,GAAD,MAA0B,CAACT,EAAQS,OANlD,YAQKF,IAGFlR,QAAO,mCAAEsR,EAAF,KAAMC,EAAN,YAAeD,EAAGpG,OAAOqG,MAEhCvR,QAAO,WAAWS,EAAG+Q,GAAgB,IAAD,mBAA3BF,EAA2B,KAAvBC,EAAuB,KAMjC,OAJ+BC,EAAWC,WAAU,YAAyB,IAAD,mBAAtBC,EAAsB,KAAbC,EAAa,KACxE,OAAQL,EAAGpG,OAAOwG,IAAYH,EAAGrG,OAAOyG,IAAcL,EAAGpG,OAAOyG,IAAYJ,EAAGrG,OAAOwG,QAGxDjR,KAGrCT,QAAO,YAAuB,IAAD,mBAApB0Q,EAAoB,KAAZC,EAAY,KAC1B,IAAKzT,EAAS,OAAO,EACrB,IAAM0U,EAAcC,IAAa3U,GAE3B4U,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAclB,EAAOrQ,SACzD0R,EAAiC,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAcjB,EAAOtQ,SAE/D,OAAKyR,IAAiBC,KAElBD,IAAiBA,EAAaE,MAAK,SAACZ,GAAD,OAAUT,EAAOzF,OAAOkG,UAC3DW,IAAiBA,EAAaC,MAAK,SAACZ,GAAD,OAAUV,EAAOxF,OAAOkG,UAIrE,KACV,CAACV,EAAQC,EAAQC,EAAOM,EAAWhU,IDjDP+U,CAA2B5B,EAAYC,GASjE5F,EAAQwH,YAAS3B,GAEvB,OAAO7R,mBAAQ,WACX,MAAO,CACHgM,MAAOA,EACF1K,QAAO,SAACmS,GACL,OAAOA,EAAM,KAAOC,IAAUC,QAAuB,OAAbF,EAAM,MAEjDrS,KAAI,0CACTwC,QAASoI,EAAM7L,MAAK,yCAAuBuT,IAAUE,cAE1D,CAAC5H,IE3BR,SAAS6H,EAAWC,EAAaC,GAC7B,OACID,IAAUC,GACTD,EAAMvH,OAAOC,OAAOuH,EAAMxH,SAAWuH,EAAMrH,OAAOD,OAAOuH,EAAMtH,SAAWqH,EAAME,MAAQD,EAAMC,IAIvG,SAASC,EACLtC,EACAC,EACA5F,EACAxN,GAK4B,IAJ5B0V,EAI2B,uDAJL,GACtBC,EAG2B,uDAHa,GACxCC,EAE2B,uDAFCzC,EAC5B0C,EAC2B,uDADjB,EAEJC,EAAO,OAAG3C,QAAH,IAAGA,OAAH,EAAGA,EAAY5F,QACtBwI,EAAQ,OAAG3C,QAAH,IAAGA,OAAH,EAAGA,EAAa7F,QAE9B,IAAKuI,IAAYC,EAAU,MAAM,IAAIrV,MAAM,4BAJhB,oBAMR8M,GANQ,yBAMhBC,EANgB,QAOvB,IAAKA,EAAKuI,cAAcF,IAAYJ,EAAYZ,MAAK,SAACmB,GAAD,OAAcZ,EAAW5H,EAAMwI,MAAY,iBAEhG,IAAMnI,EAAcL,EAAKM,OAAOC,OAAO8H,GAAWrI,EAAKQ,OAASR,EAAKM,OACjED,EAAYE,OAAO+H,GACnBJ,EAASO,KAAK,IAAIC,IAAJ,sBAAcT,GAAd,CAA2BjI,IAAOmI,EAAiBxC,IAC1DyC,EAAU,GACjBJ,EACI3H,EACAsF,EACA5F,EACAxN,EAJY,sBAKR0V,GALQ,CAKKjI,IACjBkI,EACAC,EACAC,EAAU,IAftB,2BAA0B,IANC,8BA0B3B,OAAOF,EAQJ,SAASS,EACZjD,EACAC,GAEA,IAAQpT,EAAYD,cAAZC,QACR,EAAyCkT,EAAeC,EAAYC,GAA5D5F,EAAR,EAAQA,MAAgB6I,EAAxB,EAAejR,QAEf,EAAwBkR,cAAjBC,EAAP,oBAEA,OAAO/U,mBAAQ,WACX,GAAI6U,IAAiBrW,IAAYwN,IAAU2F,IAAeC,EAAa,MAAO,CAC1EhO,SAAS,EACToR,OAAQ,IASZ,MAAO,CAAEpR,SAAS,EAAOoR,OAFVf,EAAiBtC,EAAYC,EAAa5F,EAAOxN,EAAS,GAAI,GAAImT,EAAaoD,EAAoC,EAAI,MAGvI,CAACvW,EAASmT,EAAYC,EAAa5F,EAAO6I,EAAcE,I,IC1EnDE,E,0BAAAA,O,qBAAAA,I,qBAAAA,I,mCAAAA,I,iBAAAA,I,sBAAAA,M,KAQZ,IAAMC,EAAoB,IAOnB,SAASC,EACZC,EACAxD,GAEA,IAAQpT,EAAYD,cAAZC,QACF6W,EAASC,cAEf,EAA2CV,EAAc,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAUpR,SAAU4N,GAAtEoD,EAAR,EAAQA,OAAiBO,EAAzB,EAAgB3R,QAEV4R,EAAqBxV,mBAAQ,WAC/B,OAAOgV,EAAO5T,KAAI,SAACuK,GAAD,MAAW,CACzBD,YAAkBC,GAAO,GACzByJ,EAAQ,YAAQA,EAASK,SAASjT,SAAS,UAAQ3B,QAExD,CAACuU,EAAUJ,IAERU,EAAgBhU,YAA8B2T,EAAQ,kBAAmBG,EAAoB,CAC/FlS,YAAa9E,EAAU0W,OAAoBrU,IAGzC8U,EAAQ3V,mBAAQ,WAClB,IAAKoV,IAAaxD,EACd,MAAO,CACHtS,MAAO2V,EAAaW,QACpBD,MAAO,MAIf,GAAIJ,GAAiBG,EAAcvV,MAAK,qBAAGyD,WACvC,MAAO,CACHtE,MAAO2V,EAAarB,QACpB+B,MAAO,MAIf,MAAiCD,EAAc7T,QAC3C,SAACgU,EAAD,EAAwG9T,GAAO,IAAjBE,EAAgB,EAAhBA,OAC1F,OAAKA,IAEyB,OAA1B4T,EAAYC,WAKLD,EAAYC,UAAUC,GAAG9T,EAAO6T,YAJhC,CACHE,UAAWhB,EAAOjT,GAClB+T,UAAW7T,EAAO6T,WALND,IAgBxB,CACIG,UAAW,KACXF,UAAW,OApBXE,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UAwBnB,OAAKE,GAAcF,EASZ,CACHxW,MAHcoW,EAAcvV,MAAK,qBAAG8V,WAGjBhB,EAAaiB,QAAUjB,EAAakB,MACvDR,MAAOS,IAAMC,qBAAqB,CAC9B1K,MAAOqK,EACPM,UAAWC,IAAUC,YACrBC,YAAarB,EACbsB,aAAcxU,IAAeC,cAAcyP,EAAakE,EAAUtT,eAd/D,CACHlD,MAAO2V,EAAa0B,eACpBhB,MAAO,QAehB,CAACP,EAAUxD,EAAa8D,EAAeV,EAAQO,IAE5CqB,EAAYC,YAAYlB,EAAMA,MAAQA,OAAQ9U,GAEpD,OAAOb,mBAAQ,WACX,OAAK4W,IAEAjB,EAAMA,OAASiB,EAAUjB,MAAciB,EAFrBjB,IAKxB,CAACA,IASD,SAASmB,EACZnF,EACAmE,GAEA,IAAQtX,EAAYD,cAAZC,QACF6W,EAASC,cAEf,EAA2CV,EAAejD,EAAD,OAAamE,QAAb,IAAaA,OAAb,EAAaA,EAAW9R,UAAzEgR,EAAR,EAAQA,OAAiBO,EAAzB,EAAgB3R,QAEVmT,EAAsB/W,mBAAQ,WAChC,OAAOgV,EAAO5T,KAAI,SAACuK,GAAD,MAAW,CACzBD,YAAkBC,GAAO,GACzBmK,EAAS,YAAQA,EAAUL,SAASjT,SAAS,UAAQ3B,QAE1D,CAACiV,EAAWd,IAETU,EAAgBhU,YAA8B2T,EAAQ,mBAAoB0B,EAAqB,CACjGzT,YAAa9E,EAAU0W,OAAoBrU,IAGzC8U,EAAQ3V,mBAAQ,WAClB,IAAK8V,IAAcnE,GAAc+D,EAAcvV,MAAK,qBAAG6W,SACnD,MAAO,CACH1X,MAAO2V,EAAaW,QACpBD,MAAO,MAIf,GAAIJ,GAAiBG,EAAcvV,MAAK,qBAAGyD,WACvC,MAAO,CACHtE,MAAO2V,EAAarB,QACpB+B,MAAO,MAIf,MAAgCD,EAAc7T,QAC1C,SAACgU,EAAD,EAAuG9T,GAAO,IAAjBE,EAAgB,EAAhBA,OACzF,OAAKA,IAGwB,OAAzB4T,EAAYT,UAKLS,EAAYT,SAAS6B,GAAGhV,EAAOmT,WAJ/B,CACHY,UAAWhB,EAAOjT,GAClBqT,SAAUnT,EAAOmT,UANLS,IAiBxB,CACIG,UAAW,KACXZ,SAAU,OArBVY,EAAR,EAAQA,UAAWZ,EAAnB,EAAmBA,SAyBnB,OAAKY,GAAcZ,EASZ,CACH9V,MAHcoW,EAAcvV,MAAK,qBAAG8V,WAGjBhB,EAAaiB,QAAUjB,EAAakB,MACvDR,MAAOS,IAAMC,qBAAqB,CAC9B1K,MAAOqK,EACPM,UAAWC,IAAUW,aACrBT,YAAavU,IAAeC,cAAcwP,EAAYyD,EAAS5S,YAC/DkU,aAAcZ,KAdX,CACHxW,MAAO2V,EAAa0B,eACpBhB,MAAO,QAehB,CAACG,EAAWnE,EAAY+D,EAAeV,EAAQO,IAE5CqB,EAAYC,YAAYlB,EAAMA,MAAQA,OAAQ9U,GAEpD,OAAOb,mBAAQ,WAEX,OAAK4W,IAEAjB,EAAMA,OAASiB,EAAUjB,MAAciB,EAFrBjB,IAMxB,CAACA,M,kcC/MKtE,EAAU,CACnBC,IAAK,GACL6F,MAAO,KAQEC,GALqC,mBAC7C/F,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAK+F,iBADT,cAE7ChG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOE,iBAGjB,mBACzChG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAK8F,uBADb,cAEzC/F,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOC,uBAFjB,GAKjCE,GAA4B,mBACpCjG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAKiG,gBADlB,cAEpClG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOI,gBAFtB,GAK5BC,GAAiC,mBACzCnG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAKmG,qBADb,cAEzCpG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOM,qBAFjB,GAKjCC,GAAkD,mBAC1DrG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAKqG,sCADI,cAE1DtG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOQ,sCAFA,GAKlDC,GAA6B,mBACrCvG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAKsG,mBADjB,cAErCvG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOS,mBAFrB,GAK7BC,GAAiC,mBACzCxG,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAKwG,kBADb,cAEzCzG,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOW,kBAFjB,GAKjCC,GAA0B,mBAClC1G,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAK0G,uBADpB,cAElC3G,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOa,uBAFxB,GAU1BC,GALoC,mBAC5C5G,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAK4G,yBADV,cAE5C7G,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOe,yBAGxB,mBAClC7G,EAAQC,IAAMH,IAAcC,aAAaC,EAAQC,KAAK6G,wBADpB,cAElC9G,EAAQ8F,MAAQhG,IAAcC,aAAaC,EAAQ8F,OAAOgB,wBAFxB,GAK1BC,GAAgC,mBACxC/G,EAAQC,IAAM,8CAD0B,cAExCD,EAAQ8F,MAAQ,8CAFwB,GAKhCkB,GAAmC,mBAC3ChH,EAAQC,IAAM,8CAD6B,cAE3CD,EAAQ8F,MAAQ,8CAF2B,I,iCChEhD,8DAIe,SAASmB,IACpB,IAAQC,EAAWC,cAAXD,OACR,OAAOvY,mBACH,kBAAOuY,GAAUA,EAAO5V,OAAS,EAAI8V,gBAAMF,EAAQ,CAC/CG,aAAa,EACbC,mBAAmB,IAClB,KACL,CAACJ,M,qFCRM,SAASK,EAAe5W,EAAU6W,GAC7C,MAA4C1S,mBAAYnE,GAAxD,mBAAO8W,EAAP,KAAuBC,EAAvB,KAgBA,OAdAC,qBAAU,WAEN,IAAMC,EAAUC,YAAW,WACvBH,EAAkB/W,KACnB6W,GAKH,OAAO,WACHM,aAAaF,MAElB,CAACjX,EAAO6W,IAEJC,I,qSCLLM,EAA4BnZ,OAAOoZ,YACrCpZ,OAAOqZ,QAAQC,KAAiBnY,KAAI,yCAAkB,CAAlB,KAAwB,CAAxB,WAI3BgR,EAA6C,2BACnDgH,GADmD,uBAErD/H,IAAQC,IAF6C,sBAEnC8H,EAAU/H,IAAQC,MAFiB,YAERkI,OAFQ,cAGrDnI,IAAQ8F,MAH6C,sBAGjCiC,EAAU/H,IAAQ8F,QAHe,YAGJsC,OAHI,IAK7CnH,EAA+E,GAK/Ea,EAA2E,GAK3EuG,GAA+B,mBACvCrI,IAAQC,IAD+B,CAEpCqI,IAActX,QAAQgP,IAAQC,MAFM,mBAGjCsI,OAHiC,cAKvCvI,IAAQ8F,MAL+B,CAMpCwC,IAActX,QAAQgP,IAAQ8F,QANM,mBAOjC0C,OAPiC,GAY/BC,EAA4C,2BAClDV,GADkD,uBAEpD/H,IAAQC,IAF4C,sBAElC8H,EAAU/H,IAAQC,MAFgB,YAEPkI,OAFO,cAGpDnI,IAAQ8F,MAH4C,sBAGhCiC,EAAU/H,IAAQ8F,QAHc,YAGHsC,OAHG,IAK5CM,EAAiE,I,sHClDjEC,E,KAAc1d,QAAOwP,MAAV,uCAAGxP,CAAH,wcACb,gBAAGmB,EAAH,EAAGA,MAAH,EAAUhB,MAAV,OAAuBgB,EAAQ,cAAgB,kBAOpC,cAAGhB,MAAH,MAAe,gBACtB,gBAAGwd,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,UAC7B,gBAAGC,EAAH,EAAGA,MAAH,OAAeA,GAAgB,WAqBlC,cAAGzd,MAAH,MAAe,kB,+DC5BtB0d,EAAaC,OAAO,0BAWbC,EAAQC,IAAMxY,MAAK,YAAmK,IAA7IE,EAA4I,EAA5IA,MAAOuY,EAAqI,EAArIA,YAAaC,EAAwH,EAAxHA,YAAaC,EAA2G,EAA3GA,cAAkB7S,EAAyF,iBACxL8S,EAAW,SAACC,IACQ,KAAlBA,GAAwBR,EAAWS,KAAKC,YAAaF,EAAcG,WACnEP,EAAYI,IAIpB,OACI,cAACX,EAAD,2BACQpS,GADR,IAEI5F,MAAOyY,GAAiBzY,EAAQyY,EAAgBzY,EAAQA,EACxD+Y,SAAU,SAACC,GACP,GAAIP,EAAe,CACf,IAAMzY,EAAQgZ,EAAMC,OAAOjZ,MAGrBkZ,EAAiBlZ,EAAMQ,WAAW4N,SAASqK,GAAiBzY,EAAMQ,WAAW+M,MAAM,EAAGvN,EAAMQ,WAAWG,OAAS,GAAKX,EAG3H0Y,EAASQ,EAAeC,QAAQ,KAAM,WAEtCT,EAASM,EAAMC,OAAOjZ,MAAMmZ,QAAQ,KAAM,OAIlDC,UAAU,UACVC,aAAa,MACbC,YAAY,MAEZC,KAAK,OACLC,QAAQ,sBACRhB,YAAaA,GAAe,yBAC5BiB,UAAW,EACXC,UAAW,GACXC,WAAW,cAIRtB,O,iCClDA,SAASuB,EAAOC,GAC3B,MAAO,SAASjB,KAAKiB,GALzB,mC,gMCMMC,EAAUxZ,IAAKyZ,aAAazZ,IAAKC,OAAO,IAAKD,IAAKC,OAAO,IAEzCyZ,EAAtB,oGAKI,SACIC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAKD,GAECC,EAAaja,IAAKka,mBAAmBP,EAAqBC,GAC1DO,EAAUna,IAAKka,mBAAmBJ,EAAiBpO,KAEzD,GAAIyO,EAAS,CACT,IAAMC,EAAyBpa,IAAKuL,OAChCvL,IAAKsL,SAASwO,EAAiB9Z,IAAKqa,SAASb,EAASxZ,IAAKC,OAAO8Z,KAClEP,GAEJQ,EAAalH,SAAWmH,EAClBK,IAAcC,gBAAgBX,EAAoBD,EAAqBE,GAAW,GAClFS,IAAcE,gBAAgBb,EAAqBC,EAAoBC,GAAW,GACpF7Z,IAAKka,mBAAmBE,EAAwBJ,EAAalH,UAC7DkH,EAAaS,iBAAmBb,EAEhCI,EAAaS,iBAAmBH,IAAcI,0BAC1Cf,EACAE,EACAO,EACAH,QAIRD,EAAaxG,UAAYyG,EACnBK,IAAcE,gBAAgBZ,EAAoBD,EAAqBE,GAAW,GAClFS,IAAcC,gBAAgBZ,EAAqBC,EAAoBC,GAAW,GACpF7Z,IAAKka,mBAAmBla,IAAKsL,SAASwO,EAAiBa,KAAeX,EAAaxG,WACnFwG,EAAaS,iBAAmBb,EAEhCI,EAAaS,iBAAmBH,IAAcM,2BAC1CjB,EACAE,EACA7Z,IAAKsL,SAASwO,EAAiBa,KAC/BV,GAKZ,IAAMY,EAAM7a,IAAK8a,MAAMlB,EAAoBI,EAAaS,kBAqCxD,OAnCIR,GACAD,EAAalH,SACT+H,GAAOV,EACDH,EAAalH,SACbwH,IAAcC,gBAAgBP,EAAaS,iBAAkBd,EAAqBE,GAAW,GACvGG,EAAaxG,UACTqH,IAAQV,EACFH,EAAaxG,UACb8G,IAAcE,gBAAgBR,EAAaS,iBAAkBd,EAAqBE,GAAW,KAEvGG,EAAalH,SACT+H,GAAOV,EACDH,EAAalH,SACbwH,IAAcE,gBAAgBb,EAAqBK,EAAaS,iBAAkBZ,GAAW,GACvGG,EAAaxG,UACTqH,IAAQV,EACFH,EAAaxG,UACb8G,IAAcC,gBAAgBZ,EAAqBK,EAAaS,iBAAkBZ,GAAW,KAGtGM,GAAWna,IAAK+a,YAAYf,EAAaxG,UAAYxT,IAAKsL,SAASwO,EAAiBa,QACrFX,EAAaxG,UAAYxT,IAAKsL,SAASwO,EAAiBa,MAGxDR,GAAWna,IAAKwL,SAASwO,EAAaS,iBAAkBb,GAExDI,EAAagB,UAAYhb,IAAKqa,SAASP,EAAiBE,EAAalH,UAErEkH,EAAagB,UAAY9P,IAAS+P,iBAC9BjB,EAAalH,SACb9S,IAAKC,OAAO8Z,GACZ/Z,IAAKqa,SAASb,EAASxZ,IAAKC,OAAO8Z,KAIpC,CAACC,EAAaS,iBAAmBT,EAAalH,SAAWkH,EAAaxG,UAAYwG,EAAagB,eA7F9G,K,0BCoBME,EAAgC,IAAIC,IAK7BC,EAAb,WAmBI,WACI1L,EACAC,EACA+B,EACA2J,EACAxB,EACAyB,GAED,IADCC,EACF,uDAD6DL,EAC7D,yBA1BcjR,YA0Bd,OAzBcE,YAyBd,OAxBcuH,SAwBd,OAvBc2J,kBAuBd,OAtBcxB,eAsBd,OArBcyB,iBAqBd,OApBcE,sBAoBd,OAmBMC,kBAnBN,OAoCMC,kBApCN,EACEjR,YAAUC,OAAOC,UAAU+G,IAAQA,EAAM,IAAW,OAEpD,IAAMiK,EAA0B/Q,IAASgR,mBAAmBN,GACtDO,EAAuBjR,IAASgR,mBAAmBN,EAAc,GACvE7Q,YACIzK,IAAKka,mBAAmBla,IAAKC,OAAOob,GAAeM,IACnD3b,IAAK8b,gBAAgB9b,IAAKC,OAAOob,GAAeQ,GAChD,gBARN,MAWoCnM,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAX7F,mBAWQsM,KAAK/R,OAXb,KAWqB+R,KAAK7R,OAX1B,KAYE6R,KAAKtK,IAAMA,EACXsK,KAAKX,aAAerb,IAAKC,OAAOob,GAChCW,KAAKnC,UAAY7Z,IAAKC,OAAO4Z,GAC7BmC,KAAKV,YAAcA,EACnBU,KAAKR,iBAAmBS,MAAMC,QAAQX,GAAS,IAAIY,IAAqBZ,EAAO,IAAMA,EA3C7F,6CAmDI,WAA+C,IAAD,EAC1C,iBACIS,KAAKP,oBADT,QAEKO,KAAKP,aAAe,IAAIW,IACrBJ,KAAK/R,OACL+R,KAAK7R,OACLkS,IACArc,IAAKsL,SAAS0Q,KAAKX,aAAcW,KAAKX,iBA1DtD,uBAoEI,WAA+C,IAAD,EAC1C,iBACIW,KAAKN,oBADT,QAEKM,KAAKN,aAAe,IAAIU,IACrBJ,KAAK7R,OACL6R,KAAK/R,OACLjK,IAAKsL,SAAS0Q,KAAKX,aAAcW,KAAKX,cACtCgB,OA3EhB,mBAmFI,WACI,OAAOL,KAAK/R,OAAO/N,UApF3B,uBAuFI,WACI,OAAO,KAxFf,2BA0GI,SAAqBgF,GACjB,OAAOA,EAAMgJ,OAAO8R,KAAK/R,SAAW/I,EAAMgJ,OAAO8R,KAAK7R,UA3G9D,qBAmHI,SAAejJ,GAEX,OADAuJ,YAAUuR,KAAK9J,cAAchR,GAAQ,SAC9BA,EAAMgJ,OAAO8R,KAAK/R,QAAU+R,KAAKM,YAAcN,KAAKO,cArHnE,8EA8HI,WACIpI,EACAqI,GAFJ,oGAII/R,YAAUuR,KAAK9J,cAAciC,EAAYzS,UAAW,SAE9CuY,EAAa9F,EAAYzS,SAASwI,OAAO8R,KAAK/R,QANxD,SAac+R,KAAKS,KACXxC,EACA9F,EAAYhB,SACZqJ,GAhBR,uBAS0BpI,EAT1B,EASQsI,iBACArB,EAVR,EAUQA,aACAxB,EAXR,EAWQA,UACAyB,EAZR,EAYQA,YAMEtR,EAAciQ,EAAa+B,KAAK7R,OAAS6R,KAAK/R,OAlBxD,kBAmBW,CACHrK,IAAeC,cAAcmK,EAAahK,IAAKsL,SAAS8I,EAAcuG,MACtE,IAAIS,EAAKY,KAAK/R,OAAQ+R,KAAK7R,OAAQ6R,KAAKtK,IAAK2J,EAAcxB,EAAWyB,EAAaU,KAAKR,oBArBhG,iDA9HJ,sIA6JI,WACIpH,EACAoI,GAFJ,oGAII/R,YAAU2J,EAAa1S,SAASC,SAAWqa,KAAK9J,cAAckC,EAAa1S,UAAW,SAEhFuY,EAAa7F,EAAa1S,SAASwI,OAAO8R,KAAK7R,QANzD,SAac6R,KAAKS,KACXxC,EACAja,IAAKsL,SAAS8I,EAAajB,SAAUwH,KACrC6B,GAhBR,uBAS0BrI,EAT1B,EASQuI,iBACArB,EAVR,EAUQA,aACAxB,EAXR,EAWQA,UACAyB,EAZR,EAYQA,YAMEzR,EAAaoQ,EAAa+B,KAAK/R,OAAS+R,KAAK7R,OAlBvD,kBAmBW,CACHvK,IAAeC,cAAcgK,EAAYsK,GACzC,IAAIiH,EAAKY,KAAK/R,OAAQ+R,KAAK7R,OAAQ6R,KAAKtK,IAAK2J,EAAcxB,EAAWyB,EAAaU,KAAKR,oBArBhG,iDA7JJ,4HAgMI,WACIvB,EACA0C,EACAH,GAHJ,+FAKSA,IACDA,EAAoBvC,EACdja,IAAK2L,IAAIf,IAASgS,eAAgBhR,KAClC5L,IAAKqa,SAASzP,IAASiS,eAAgBjR,MAE7CqO,GACAxP,YAAUzK,IAAK+a,YAAYyB,EAAmB5R,IAASgS,gBAAiB,aACxEnS,YAAUzK,IAAK8c,SAASN,EAAmBR,KAAKX,cAAe,mBAE/D5Q,YAAUzK,IAAK8c,SAASN,EAAmB5R,IAASiS,gBAAiB,aACrEpS,YAAUzK,IAAK+a,YAAYyB,EAAmBR,KAAKX,cAAe,kBAGhE0B,EAAa/c,IAAKka,mBAAmByC,EAAiBjR,KAItD1O,EAAQ,CACVggB,yBAA0BL,EAC1BD,iBAAkBhR,IAClBuR,aAAcjB,KAAKX,aACnB9Q,KAAMyR,KAAKV,YACXzB,UAAWmC,KAAKnC,WA3BxB,WA+BW7Z,IAAKwL,SAASxO,EAAMggB,yBAA0BtR,MAAS1O,EAAMigB,cAAgBT,EA/BxF,wBAgCcU,EAAkC,IACnCC,kBAAoBngB,EAAMigB,aAjCvC,SAsCuDjB,KAAKR,iBAAiB4B,iCAC7DpgB,EAAMuN,KACN0P,EACA+B,KAAKxR,aAzCrB,sCAsCc0S,EAAKG,SAtCnB,KAsC6BH,EAAKI,YAtClC,KA4CYJ,EAAKG,SAAWzS,IAASC,SACzBqS,EAAKG,SAAWzS,IAASC,SAClBqS,EAAKG,SAAWzS,IAASE,WAChCoS,EAAKG,SAAWzS,IAASE,UAG7BoS,EAAKK,iBAAmB3S,IAASgR,mBAAmBsB,EAAKG,UAlDjE,EAmDmF3D,EAAS8D,gBAC5ExgB,EAAMigB,cACLhD,EACKja,IAAK8c,SAASI,EAAKK,iBAAkBf,GACrCxc,IAAK+a,YAAYmC,EAAKK,iBAAkBf,IACxCA,EACAU,EAAKK,iBACXvgB,EAAM6c,UACN7c,EAAMggB,yBACNhB,KAAKtK,KA5DrB,mBAmDc1U,EAAMigB,aAnDpB,KAmDkCC,EAAKpK,SAnDvC,KAmDiDoK,EAAK1J,UAnDtD,KAmDiE0J,EAAKlC,UAnDtE,KA+DY+B,GACA/f,EAAMggB,yBAA2Bhd,IAAKqa,SAClCrd,EAAMggB,yBACNhd,IAAK2L,IAAIuR,EAAKpK,SAAUoK,EAAKlC,YAEjChe,EAAM0f,iBAAmB1c,IAAKqa,SAASrd,EAAM0f,iBAAkBQ,EAAK1J,aAEpExW,EAAMggB,yBAA2Bhd,IAAK2L,IAAI3O,EAAMggB,yBAA0BE,EAAK1J,WAC/ExW,EAAM0f,iBAAmB1c,IAAK2L,IAAI3O,EAAM0f,iBAAkB1c,IAAK2L,IAAIuR,EAAKpK,SAAUoK,EAAKlC,cAIvFhb,IAAK8a,MAAM9d,EAAMigB,aAAcC,EAAKK,kBA3EhD,qBA6EgBL,EAAKI,YA7ErB,6BA8EmCtd,IA9EnC,UA8EsDgc,KAAKR,iBAAiBiC,QAAQP,EAAKG,UA9EzF,oBA8EoGK,aAAhFA,EA9EpB,KA8EwCzd,OA9ExC,gBAiFoBga,IAAYyD,EAAe1d,IAAKsL,SAASoS,EAAc/C,MAE3D3d,EAAM6c,UAAY8D,IAAcC,SAAS5gB,EAAM6c,UAAW6D,GAnF1E,QAsFY1gB,EAAMuN,KAAO0P,EAAaiD,EAAKG,SAAW,EAAIH,EAAKG,SAtF/D,wBAuFmBrgB,EAAMigB,cAAgBC,EAAKC,oBAElCngB,EAAMuN,KAAOK,IAASiT,mBAAmB7gB,EAAMigB,eAzF3D,wDA6FW,CACHP,iBAAkB1f,EAAM0f,iBACxBrB,aAAcre,EAAMigB,aACpBpD,UAAW7c,EAAM6c,UACjByB,YAAate,EAAMuN,OAjG3B,iDAhMJ,qFA2FI,SAAyBmF,EAAeC,EAAe+B,EAAgBoM,GACnE,OAAOC,YAAmB,CACtBC,eAAgBlJ,IAAsBpF,EAAOxT,SAC7CwV,MACAhC,SACAC,SACAmO,mCAjGZ,M,iCChCA,uDAGO,SAASG,EAAevc,GAC3B,GAAIA,EAASI,SAAU,OAAOJ,EAC9B,IAAMwc,EAAmBC,YAAiBzc,EAASxF,SACnD,OAAIgiB,GAAoBxc,EAASwI,OAAO+M,IAAgBiH,IAC7C7G,IAActX,QAAQ2B,EAASxF,SACnCwF,I,2GCAE0c,GALe,IAAIC,IAAa,CACzCC,IAAK,8CACLC,MAAO,IAAIC,MAGe,IAAIH,IAAa,CAC3CC,IAAKzP,IAAc4P,SAAS1P,IAAQC,KAAK0P,eACzCH,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,WAKZC,EAAY,IAAIZ,IAAa,CACtCC,IAAKzP,IAAc4P,SAAS1P,IAAQC,KAAKkQ,QACzCX,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,UAKZG,EAAmB,IAAId,IAAa,CAC7CC,IAAKzP,IAAc4P,SAAS1P,IAAQC,KAAKoQ,WACzCb,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,UAKZK,EAAmB,IAAIhB,IAAa,CAC7CC,IAAKzP,IAAc4P,SAAS1P,IAAQ8F,OAAO6J,eAC3CH,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,UAKZM,EAAc,IAAIjB,IAAa,CACxCC,IAAKzP,IAAc4P,SAAS1P,IAAQ8F,OAAOqK,QAC3CX,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,UAKZO,EAAqB,IAAIlB,IAAa,CAC/CC,IAAKzP,IAAc4P,SAAS1P,IAAQ8F,OAAOuK,WAC3Cb,MAAO,IAAIC,IACXG,oBAAoB,EACpBC,eAAgB,CACZC,WAAY,CACRC,YAAa,YAEjBC,MAAO,CACHD,YAAa,WACbE,YAAa,U,QClDlB,SAASQ,IASZ,MAAO,CACHC,WAnCD,WAEH,OADoBxjB,cAAZC,SAEJ,KAAK6S,IAAQC,IACT,OAAOiQ,EACX,KAAKlQ,IAAQ8F,MACT,OAAOyK,EACX,QACI,OAAOL,GAsBIS,GAMfC,cAxBD,WAEH,OADoB1jB,cAAZC,SAEJ,KAAK6S,IAAQC,IACT,OAAOmQ,EACX,KAAKpQ,IAAQ8F,MACT,OAAO0K,EACX,QACI,OAAOJ,GAWOS,GAMlBC,YAjDD,WAEH,OADoB5jB,cAAZC,SAEJ,KAAK6S,IAAQC,IACT,OAAOoP,EACX,KAAKrP,IAAQ8F,MACT,OAAOwK,EACX,QACI,OAAOjB,GAoCK0B,M,iCCnDxB,8CAGO,SAASC,EAAmB7jB,EAAiBwD,EAAkB+c,GAElE,OACW/c,EAAMsgB,IAAIC,IAAUnjB,KAAK,OAAe7C,IAAIgmB,IAAUnjB,KAAK,Q,iCCL1E,8DAKe,SAASojB,IACpB,IAAMC,EAAMljB,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAKC,gBAC3CC,EAAiBC,cACvB,OAAO7iB,mBAAQ,WACX,GAAI4iB,GAAkBH,EAAK,OAAOG,EAAe3U,IAAIwU,KAEtD,CAACG,EAAgBH,M,sGCEX1T,EAAb,WAQI,WAAYD,EAAsBH,GAAkB,yBAPpCvK,UAAkB,EAOiB,KANnCH,SAAgB,EAMmB,KALnC0K,UAKmC,OAHnCG,eAGmC,OAF3CgU,oBAAqC,KAEM,KAgC3CC,MAA0B,KA/B9BzE,KAAKxP,UAAYA,EACjBwP,KAAK3P,KAAOA,EAVpB,yCAaI,WACI,GAAI2P,KAAKwE,oBAAqB,OAAOxE,KAAKwE,oBAC1C,IAAME,EAAqB3hB,YAAUid,KAAKxP,UAAUnN,SACpD,IAAKqhB,EAAoB,MAAM,IAAI9jB,MAAJ,iCAAoCof,KAAKxP,UAAUnN,UAClF,OAAQ2c,KAAKwE,oBAAsBE,IAjB3C,mBAoBI,WACI,OAAO1E,KAAKxP,UAAUtQ,UArB9B,oBAwBI,WACI,OAAO8f,KAAKxP,UAAUmU,WAzB9B,gBA4BI,WACI,OAAO3E,KAAKxP,UAAUjI,OA7B9B,kBAgCI,WACI,OAAOyX,KAAKxP,UAAUoU,SAjC9B,mBAoCI,WACI,OAAO5E,KAAKxP,UAAUqU,UArC9B,gBAyCI,WACI,GAAmB,OAAf7E,KAAKyE,MAAgB,OAAOzE,KAAKyE,MACrC,IAAKzE,KAAKxP,UAAUsU,KAAM,OAAQ9E,KAAKyE,MAAQ,GAC/C,IAAMM,EAAW/E,KAAK3P,KAAKyU,KAC3B,OAEQ9E,KAAKyE,MAFRM,EAEgB/E,KAAKxP,UAAUsU,KAAKhiB,KAAI,SAACkiB,GAC1C,OAAO,2BACAD,EAASC,IADhB,IAEIzT,GAAIyT,OALwB,KA7C5C,mBAuDI,WACI,OAAOhF,OAxDf,oBA2DI,SAAOiF,GACH,OAAOA,EAAM/kB,UAAY8f,KAAK9f,SAAW+kB,EAAMtf,SAAWsf,EAAM5hB,QAAQ6hB,gBAAkBlF,KAAK3c,QAAQ6hB,gBA5D/G,yBA+DI,SAAYD,GACR,GAAIjF,KAAK9R,OAAO+W,GAAQ,MAAM,IAAIrkB,MAAM,iCACxC,OAAOof,KAAK3c,QAAQ6hB,cAAgBD,EAAM5hB,QAAQ6hB,kBAjE1D,M,iCCdA,6CAEO,SAASC,EACZC,EACAzK,GAEA,IAAM0K,EAAaC,iBAAiC3K,GACpDD,qBAAU,WACN2K,EAAWhU,QAAUsJ,IACtB,CAACA,IAEJD,qBAAU,WACN,IAAM6K,EAAqB,SAACC,GAAmB,IAAD,IAC1C,oBAAIJ,EAAK/T,eAAT,aAAI,EAAcoU,SAASD,EAAE7I,eAA7B,UAGI0I,EAAWhU,SAASgU,EAAWhU,WAKvC,OAFAqU,SAASC,iBAAiB,YAAaJ,GAEhC,WACHG,SAASE,oBAAoB,YAAaL,MAE/C,CAACH,M,4ECxBO,KAEXS,cAAY,mBACP,GAAK,CACF3lB,QAAS,GACT4lB,WAAY,OACZC,UAAW,YACXC,eAAgB,CAAEzd,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,GAAIsB,KAAM,gEAC3EC,sBAAuB,CAAE3d,KAAM,MAAOqc,OAAQ,MAAOD,SAAU,GAAIthB,QAAS,6CAA8C4iB,KAAM,gEAChIE,OAAQ,oCACRC,iBAAkB,wBARd,cAUP,IAAM,CACHlmB,QAAS,IACT4lB,WAAY,QACZC,UAAW,aACXC,eAAgB,CAAEzd,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,GAAIsB,KAAM,6CAC3EC,sBAAuB,CAAE3d,KAAM,MAAOqc,OAAQ,MAAOD,SAAU,GAAIthB,QAAS,6CAA8C4iB,KAAM,6CAChIE,OAAQ,8BACRC,iBAAkB,gCAjBd,GAsBZzV,oBAAkB,mBACb,GACD,CAEI0V,eAAa,mBACR,6CAA+C,CAAE9d,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KADxF,cAER,6CAA+C,CAAEpc,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KAFxF,cAGR,6CAA+C,CAAEpc,KAAM,aAAcqc,OAAQ,MAAOD,SAAU,KAHtF,cAIR,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KAJjF,cAKR,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KALjF,cAMR,6CAA+C,CAAEpc,KAAM,eAAgBqc,OAAQ,OAAQD,SAAU,KANzF,cAOR,6CAA+C,CAAEpc,KAAM,UAAWqc,OAAQ,MAAOD,SAAU,KAPnF,cAQR,6CAA+C,CAAEpc,KAAM,WAAYqc,OAAQ,MAAOD,SAAU,KARpF,cASR,6CAA+C,CAAEpc,KAAM,aAAcqc,OAAQ,OAAQD,SAAU,KATvF,GAYb2B,mBAAiB,mBACZ,6CAA+C,CAAE/d,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KADpF,cAEZ,6CAA+C,CAAEpc,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KAFpF,cAGZ,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KAH7E,cAIZ,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KAJ7E,GAMjB4B,aAAW,mBACN,6CAA+C,gEADzC,cAEN,6CAA+C,gEAFzC,cAGN,6CAA+C,gEAHzC,cAIN,6CAA+C,iEAJzC,cAKN,6CAA+C,+DALzC,cAMN,6CAA+C,iEANzC,cAON,6CAA+C,6DAPzC,cAQN,6CAA+C,gEARzC,cASN,6CAA+C,oCATzC,GAYXC,cAAY,mBACP,6CAA+C,CAAEje,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KADlF,cAEP,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KAFlF,cAGP,6CAA+C,CAAEpc,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KAHzF,GAKZ8B,uBAAwB,CAAEpjB,QAAS,6CAA8CkF,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,IAEzH+B,oBAAqB,CACjBC,gBAAc,mBACT,KAAO,8CADE,cAET,KAAO,8CAFE,GAIdC,kBAAmB,CACf,CACIC,MAAO,CAAC,cAAe,aAAc,cAAe,cACpDC,YAAa,8CAEjB,CACID,MAAO,CAAC,kBAAmB,kBAAmB,YAAa,aAC3DE,cAAe,kDArDjB,cA0Db,IAAM,CACHV,eAAa,mBACR,6CAA+C,CAAE9d,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KADxF,cAER,6CAA+C,CAAEpc,KAAM,yBAA0Bqc,OAAQ,OAAQD,SAAU,IAFnG,cAGR,6CAA+C,CAAEpc,KAAM,SAAUqc,OAAQ,SAAUD,SAAU,KAHrF,cAIR,6CAA+C,CAAEpc,KAAM,MAAOqc,OAAQ,MAAOD,SAAU,KAJ/E,cAKR,6CAA+C,CAAEpc,KAAM,MAAOqc,OAAQ,MAAOD,SAAU,KAL/E,cAMR,6CAA+C,CAAEpc,KAAM,oBAAqBqc,OAAQ,MAAOD,SAAU,IAN7F,cAOR,6CAA+C,CAAEpc,KAAM,qBAAsBqc,OAAQ,OAAQD,SAAU,IAP/F,cAQR,6CAA+C,CAAEpc,KAAM,qBAAsBqc,OAAQ,OAAQD,SAAU,IAR/F,cASR,6CAA+C,CAAEpc,KAAM,qBAAsBqc,OAAQ,OAAQD,SAAU,KAT/F,cAUR,6CAA+C,CAAEpc,KAAM,OAAQqc,OAAQ,OAAQD,SAAU,KAVjF,GAab2B,mBAAiB,mBACZ,6CAA+C,CAAE/d,KAAM,cAAeqc,OAAQ,OAAQD,SAAU,KADpF,cAEZ,6CAA+C,CAAEpc,KAAM,yBAA0Bqc,OAAQ,OAAQD,SAAU,IAF/F,GAIjB4B,aAAW,mBACN,6CAA+C,6CADzC,cAEN,6CAA+C,gEAFzC,cAGN,6CAA+C,iEAHzC,cAIN,6CAA+C,gEAJzC,cAKN,6CAA+C,8FALzC,cAMN,6CAA+C,gEANzC,cAON,6CAA+C,+DAPzC,cAQN,6CAA+C,6DARzC,cASN,6CAA+C,gEATzC,cAUN,6CAA+C,iEAVzC,GAYXC,cAAY,mBACP,6CAA+C,CAAEje,KAAM,qBAAsBqc,OAAQ,OAAQD,SAAU,IADhG,cAEP,6CAA+C,CAAEpc,KAAM,yBAA0Bqc,OAAQ,OAAQD,SAAU,IAFpG,cAGP,6CAA+C,CAAEpc,KAAM,MAAOqc,OAAQ,MAAOD,SAAU,KAHhF,GAKZ8B,uBAAwB,CAAEpjB,QAAS,6CAA8CkF,KAAM,yBAA0Bqc,OAAQ,OAAQD,SAAU,GAC3I+B,oBAAqB,CACjBC,gBAAc,mBACT,KAAO,8CADE,cAET,KAAO,8CAFE,GAIdC,kBAAmB,CACf,CACIC,MAAO,CAAC,cAAe,aAAc,cAAe,cACpDC,YAAa,8CAEjB,CACID,MAAO,CAAC,kBAAmB,kBAAmB,YAAa,aAC3DE,cAAe,kDA1GjB,GAiHlBjU,cAAY,mBACP,GAAK,CACFgG,sBAAuB,6CACvBC,gBAAiB,6CACjBE,eAAgB,6CAChBE,oBAAqB,6CACrBE,qCAAsC,6CACtCC,kBAAmB,6CACnBE,iBAAkB,6CAClBK,uBAAwB,6CACxBH,sBAAuB,6CACvBE,wBAAyB,6CACzBhH,oBAAqB,uEAZjB,cAcP,IAAM,CACHkG,sBAAuB,6CACvBC,gBAAiB,6CACjBE,eAAgB,6CAChBE,oBAAqB,6CACrBE,qCAAsC,6CACtCC,kBAAmB,6CACnBE,iBAAkB,6CAClBK,uBAAwB,6CACxBH,sBAAuB,6CACvBE,wBAAyB,6CACzBhH,oBAAqB,uEAzBjB,GA6BZ6P,UAAQ,mBACH,GAAK,CACFS,QAAS,8DACTE,WAAY,sEACZV,eAAgB,iEAJhB,cAMH,IAAM,CACHQ,QAAS,sFACTE,WAAY,qFACZV,eAAgB,sFAThB,GAaRsE,KAAG,mBACE,GAAK,CACFC,gBAAiB,4EACjBC,cAAe,oDACfC,gBAAiB,4EACjBC,cAAe,oDACfC,SAAU,oEANf,cAQE,IAAM,CACHJ,gBAAiB,0EACjBC,cAAe,qDACfC,gBAAiB,0EACjBC,cAAe,qDACfC,SAAU,kEAbf,GAiBHC,MAAI,mBACC,GAAK,CACFC,MAAO,iBACPC,YAAa,yCACbC,OAAQ,KAJZ,cAMC,IAAM,CACHF,MAAO,kBACPC,YAAa,2CACbC,OAAQ,KATZ,K,iCCpMR,8DAUO,SAASC,EAAmBC,EAAoBC,GACnD,IAAMC,EAAY7jB,IAAK8jB,UAAU9jB,IAAKC,OAAO0jB,GAAU3jB,IAAKC,OAAO,MAC7DmL,EAAcpL,IAAKC,OAAO2jB,GAC1BG,EAAY/jB,IAAKuL,OAAOsY,EAAWzY,GACzC,OAAO4Y,YAAKD,K,0JCRVE,EAAkB,IAAIC,IAAQlkB,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAC3DkkB,EAAsB,IAAID,IAAQlkB,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MAClEmkB,EAA2BD,EAAoB9J,SAAS4J,GAGvD,SAASI,EACZhR,GAEA,IAAIiR,EAoBJ,OAhBIA,EAHAjR,aAAiBkR,IAGPJ,EAAoB9J,SAC1BhH,EAAMhK,MAAMmb,MAAMjlB,QACd,SAACklB,GAAD,OAAkCA,EAAWnZ,SAAS8Y,KACtDD,IAIEA,EAAoB9J,SAC1BhH,EAAMhK,MAAMK,MAAMnK,QACd,SAACklB,EAAqB9a,GAAtB,OACI8a,EAAWnZ,SAAS6Y,EAAoB9J,SAAS,IAAIqK,IAAS/a,EAAK+H,IAAK,SAC5EyS,IAKL,IAAID,IAAQI,EAAQT,UAAWS,EAAQlZ,aAiBlD,IAAMuZ,EAAe,CACjBC,IACAC,IACAC,IACAC,KAKG,SAASC,EAAgBC,GAC5B,IAAKA,EAAa,OAAO,EACzB,IAF+E,EAE3EC,EAA0BP,EAAatkB,OAFoC,cAGrDskB,GAHqD,IAG/E,2BAAwC,CACpC,GADoC,QACpB7H,SAASmI,GAAc,OAAOC,EAC9CA,KAL2E,8BAO/E,OAAO,I,mLC1DX,SAASC,EAAYC,GACjB,IAAMC,EAA4BD,EAAqBlE,cACvD,OAAOoE,IAAkBtU,MACrB,SAACuU,GAAD,OAAYA,EAAOrE,gBAAkBmE,GAA6BE,EAAO9W,MAAM,KAAK,KAAO4W,KAO5F,SAASG,IACZ,GAAKC,UAAUC,SAAf,CAEA,IAEY,EAFZ,EAA2BD,UAAUC,SAASjX,MAAM,KAApD,mBAAOiX,EAAP,KAAiBC,EAAjB,KAEA,OAAIA,IACA,UAAOR,EAAY,GAAD,OAAIO,EAAJ,YAAgBC,EAAOC,uBAAzC,SAGGT,EAAYO,IAGhB,SAASG,IACZ,IAAMC,EAAS9P,cACf,EAAoC+P,cAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAvP,qBAAU,WACN,IAAMwP,EAAkC,kBAAfJ,EAAOK,IAAmBhB,EAAYW,EAAOK,UAAO5nB,EACzE2nB,GAAaA,IAAcF,GAC3BC,EAAcC,KAEnB,CAACJ,EAAOK,IAAKF,EAAeD,IAM5B,SAASI,IACZ,IAAMJ,EAAaK,cAEnB,OAAO3oB,mBAAQ,WAAO,IAAD,EACjB,wBAAOsoB,QAAP,IAAOA,IAAcR,WAArB,QAA0Cc,MAC3C,CAACN,M,qGCjDKO,EAAkBvsB,UAAOC,IAAV,wCAAGD,CAAH,qPAoBfwsB,EAAexsB,UAAOc,KAAV,wCAAGd,CAAH,qB,OClBV,SAASysB,EAAT,GAAuE,IAA7CphB,EAA4C,EAA5CA,KACrC,EAAwBxB,oBAAkB,GAA1C,mBAAOhI,EAAP,KAAa4J,EAAb,KAEMC,EAAOpJ,uBAAY,kBAAMmJ,GAAQ,KAAO,CAACA,IACzCE,EAAQrJ,uBAAY,kBAAMmJ,GAAQ,KAAQ,CAACA,IAEjD,OACI,sBAAMpK,MAAO,CAAEqrB,WAAY,EAAG3gB,QAAS,OAAQ4gB,WAAY,UAA3D,SACF,cAACvhB,EAAA,EAAD,CAASC,KAAMA,EAAMxJ,KAAMA,EAA3B,SACE,cAAC0qB,EAAD,CAAiBvd,QAAStD,EAAME,aAAcF,EAAMG,aAAcF,EAAlE,SACE,cAAC6gB,EAAD,wB,8FCFK,SAASI,EAAT,GAAqH,IAAnGrZ,EAAkG,EAAlGA,GAAIsZ,EAA8F,EAA9FA,SAAUC,EAAoF,EAApFA,OAAoF,IAA5EC,eAA4E,MAAlE,6BAAkE,MAA/CC,iBAA+C,MAAnC,8BAAmC,EAC/H,OACI,yBAAQxoB,UAAW,wBAAyB+O,GAAIA,EAAIvE,QAAS8d,EAA7D,UACI,sBAAMtoB,UAAW,6BAA8B,gBAAeqoB,EAA9D,SACKE,IAEL,sBAAMvoB,UAAW,6BAA8B,iBAAgBqoB,EAA/D,SACKG,S,iCCnBjB,gEAQe,SAASC,EAAOC,GAK3B,IAAMC,EAAYpoB,YAAUmoB,GACtBE,EAAgBC,YAAWF,QAAwB5oB,GACnD+oB,EAASC,YAAcL,GAE7B,MAAO,CACH5lB,QAAS8lB,EAAc9lB,SAAWgmB,EAAOhmB,QACzCjC,QAAS8nB,GAAwBG,EAAOjoB,QACxCkF,KAAM6iB,EAAcI,QAAUJ,EAAcI,SAAWL,GAAaG,EAAOjoB,SAAU6nB,GAAwB,Q,uECfzGO,E,iBAAAA,K,kBAAAA,E,oBAAAA,E,oBAAAA,E,kBAAAA,E,kBAAAA,E,mCAAAA,M,KAsDZ,IAAMC,EAAQ1tB,UAAOC,IAAV,wCAAGD,CAAH,mMAEa,cAAGG,MAAH,OA3CxB,SAA6BwtB,EAAmCxtB,GAC5D,OAAQwtB,GACJ,KAAKF,EAAaG,SACd,MAAO,eACX,KAAKH,EAAaI,SAElB,KAAKJ,EAAaK,QACd,MAAO,UACX,KAAKL,EAAaM,QACd,MAAO,iBACX,KAAKN,EAAaO,gBACd,MAAO,cACX,QACI,MAAO,WA8B6BC,CAAxB,EAAUN,YACpB,cAAGxtB,MAAH,OA3Bd,SAAoBwtB,EAAmCxtB,GACnD,OAAQwtB,IACCF,EAAaO,gBACR,aAAN,OAAoB,kBAEb,QAsBmBE,CAAxB,EAAUP,YAEX,cAAGxtB,MAAH,OApBb,SAAuBwtB,EAAmCxtB,GACtD,OAAQwtB,GACJ,KAAKF,EAAaG,SACd,MAAO,eACX,KAAKH,EAAaI,SACd,MAAO,iBACX,KAAKJ,EAAaM,QAElB,KAAKN,EAAaO,gBACd,MAAO,eACX,QACI,MAAO,cASkBG,CAAxB,EAAUR,YASRD,O,iCCzEf,oEAAO,IAAMpC,EAAoB,CAC7B,SAISgB,EAAkC,S,wMCMxC,SAASrqB,IACZ,IAAMmsB,EAAUC,yBACVC,EAAiBD,uBAA2BE,KAClD,OAAOH,EAAQI,OAASJ,EAAUE,EAG/B,SAASG,IAEZ,MAA6BJ,yBAArBK,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,OAClB,EAA0B3kB,oBAAS,GAAnC,mBAAO8kB,EAAP,KAAcC,EAAd,KAIA,EAAkC/kB,qBAAWglB,OAAOC,SAAWD,SAA/D,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAkCnlB,oBAAS,GAA3C,mBAAOolB,EAAP,KAAkBC,EAAlB,KAiFA,OA9EAxS,qBAAU,WACDqS,GACDI,IAAWC,YAAYC,MAAK,SAACC,GACrBA,EACAZ,EAASS,SAAY5qB,GAAW,GAAMgrB,OAAM,WACxCP,GAAa,MAGjBA,GAAa,QAI1B,CAACN,EAAUM,EAAcD,IAE5BrS,qBAAU,WACN,GAAK8R,IAAUO,GAAcE,EAuBzBC,GAAa,OAvBuB,CAEpC,IAAMM,EAAU,IAAIC,SAAQ,SAACC,EAAKC,GAAN,OAAc/S,WAAW+S,EAAK,QACpDC,EAAeC,IAAcD,eAEnCH,QAAQK,KAAK,CAACF,EAAcJ,IAAUH,MAAK,SAAAO,GAEnCA,EACAlB,EAASmB,SAAetrB,GAAW,GAAMgrB,OAAM,WAC3CL,GAAa,MAGbjgB,YAAY4f,OAAOkB,SACnBrB,EAASsB,SAAUzrB,GAAW,GAAMgrB,OAAM,WACtCL,GAAa,MAGjBA,GAAa,MAGtBK,OAAM,SAAA/H,GAAC,OAAIqH,OAAOoB,SAASC,eAKnC,CAACxB,EAAUM,EAAcC,IAI5BvS,oBAAS,gCAAC,iGACD8R,GAAUO,GAAaE,IAElBO,EAAU,IAAIC,SAAQ,SAACC,EAAKC,GAAN,OAAc/S,WAAW+S,EAAK,QACpDC,EAAeI,IAASJ,eAE9BH,QAAQK,KAAK,CAACF,EAAcJ,IAAUH,MAAK,SAAAO,GAEnCA,EACAlB,EAASsB,SAAUzrB,GAAW,GAAMgrB,OAAM,SAAC/H,GACvCoH,GAAS,MAGT3f,YAAY4f,OAAOkB,SACnBrB,EAASsB,SAAUzrB,GAAW,GAAMgrB,OAAM,WACtCX,GAAS,MAGbA,GAAS,MAGlBW,OAAM,SAAA/H,GAAC,OAAIqH,OAAOoB,SAASC,aArB5B,2CAwBP,CAACxB,EAAUF,EAAQO,EAAWE,IAGjCvS,qBAAU,WACF8R,IACAI,GAAS,GACTM,GAAa,MAElB,CAACV,IAEGG,GAASM,EAOb,SAASkB,IAAuC,IAAnBC,EAAkB,wDAClD,EAA+C/B,yBAAvCG,EAAR,EAAQA,OAAQrtB,EAAhB,EAAgBA,MAAOutB,EAAvB,EAAuBA,SAEjB2B,GAFN,EAAiCC,YAERC,aAAaC,QAAQ,gBAE9C9T,qBAAU,WACN,GAAKvb,GAEDA,aAAiBsvB,0BAAyB,CAC1C,IAAMC,EAAU7B,OACZ6B,EAAQC,MAAyC,KAAjCD,EAAQC,KAAKC,kBAC7BL,aAAaM,QAAQ,cAAe,QACpChC,OAAOoB,SAASC,aAIzB,CAAC/uB,EAAOkvB,IAEX3T,qBAAU,WACN,IAAMqT,EAAWlB,OAAOkB,SAExB,GAAIA,GAAYA,EAASe,KAAOtC,IAAWrtB,IAAUivB,EAAU,CAE3D,IAAMW,EAAqB,WAEvBrC,EAASsB,SAAUzrB,GAAW,GAAMgrB,OAAM,SAACpuB,GACvCuR,QAAQvR,MAAM,yCAA0CA,OAI1D6vB,EAAwB,SAACC,GACvBA,EAAS5qB,OAAS,IAElBkqB,aAAaM,QAAQ,cAAe,IACpCnC,EAASsB,SAAUzrB,GAAW,GAAMgrB,OAAM,SAACpuB,GACvCuR,QAAQvR,MAAM,4CAA6CA,QAQvE,OAHA4uB,EAASe,GAAG,eAAgBC,GAC5BhB,EAASe,GAAG,kBAAmBE,GAExB,WACCjB,EAASmB,iBACTnB,EAASmB,eAAe,eAAgBH,GACxChB,EAASmB,eAAe,kBAAmBF,QAMxD,CAACxC,EAAQrtB,EAAOivB,EAAU1B,M,yIC1J3ByC,EAAmB,SAACC,GACtB,MAAsBvnB,mBAAS9F,KAAKstB,OAApC,mBAAOA,EAAP,KAAYC,EAAZ,KAKA,OAHAvmB,aAAY,WACRumB,EAAOvtB,KAAKstB,SACbD,GACIC,GAGJ,SAASE,IAEZ,IAAMC,EAAcL,EAbK,KAcnBM,EAAYlL,cAIlB,OAFgBtS,UAAUwd,GAAaD,EAAcC,EAAUzL,IAAI,KAAM0L,WAjB9C,KAsBxB,SAASC,IACZ,IAAMH,EAAcL,EAAiB,KAC/BM,EAAYlL,cAIlB,OAFgBtS,UAAUwd,GAAaD,EAAcC,EAAUzL,IAAI,KAAM0L,c,2sEClC7E,kgBAGYE,EAKAC,EARZ,S,SAGYD,K,wBAAAA,E,yBAAAA,M,cAKAC,K,cAAAA,E,eAAAA,M,KAKL,IAAMC,EACTvyB,YAAyE,wBAChEwyB,EAAsBxyB,YAAqC,8BAC3DyyB,EAAqBzyB,YAAqC,6BAC1D0yB,EAAsB1yB,YAAqC,8BAC3D2yB,EAAiB3yB,YAAmB,yBACpC4yB,EAAe5yB,YAAmB,uBAClC6yB,EAAmB7yB,YAAqC,2BACxD8yB,EAAuB9yB,YAAyC,+BAChE+yB,EAAwB/yB,YAAiC,gCACzDgzB,EAAwBhzB,YAA8C,gCACtEizB,EAAsBjzB,YAAmD,8BACzEkzB,EAAuBlzB,YAAqC,+BAC5DmzB,EAAoBnzB,YAAsC,0B,iCC1BvE,gGAYe,SAAS8tB,EAAWhoB,GAAiE,IAAD,MACzFstB,EAAmBrW,YAAYjX,EAAS,KACxCutB,EAAkBlvB,mBAAQ,WAC5B,IAAKivB,IAAqB5tB,YAAU4tB,GAAmB,MAAO,MAACpuB,GAC/D,IACI,OAAOouB,EAAmB,CAACE,mBAAS,GAAD,OAAIF,EAAiBzL,cAAc4L,OAAO,GAA1C,mBAAgE,MAACvuB,GACtG,MAAOpD,GACL,MAAO,MAACoD,MAEb,CAACouB,IACEI,EAAoBC,aAAwB,GAC5CC,EAAkBC,YAAoBH,EAAmB,WAAYH,GACrEO,EAAqB,UAAGF,EAAgBttB,cAAnB,aAAG,EAAyB,GACjDytB,EAAmBC,YACrBF,IAA0B7T,YAAO6T,GAAyBA,OAAwB5uB,GAClF,GAEEgG,EAAO2oB,YAAoBE,EAAkB,OAAQR,GAErDU,EAAUX,IAAqBttB,EACrC,MAAO,CACHmoB,QAAS8F,EAAU,KAAH,oBAAU/oB,EAAK5E,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C2B,QAASgsB,GAAWL,EAAgB3rB,SAAWiD,EAAKjD,W,iCClC7C,QAA0B,2C,gICMzC,SAASisB,EAAetuB,EAASkM,GAC7B,OAAOlM,EAAE2K,MAAQuB,EAAEvB,MAMhB,IAAe4jB,EAAtB,iGAKI,SAA2BjS,EAAe/Q,GACtCC,YAAUD,EAAc,EAAG,wBAE3BC,YACI8Q,EAAMkS,OAAM,qBAAG7jB,MAAoBY,IAAgB,KACnD,gBAIJC,YACIzK,IAAK8a,MACDS,EAAMhc,QAAO,SAACmuB,EAAD,OAAgBhQ,EAAhB,EAAgBA,aAAhB,OAAmC1d,IAAK2L,IAAI+hB,EAAahQ,KAAehS,KACrFA,KAEJ,YAGJjB,YAAUkjB,YAASpS,EAAOgS,GAAiB,YAtBnD,6BAyBI,SAA8BhS,EAAwBhR,GAElD,OADAE,YAAU8Q,EAAMlb,OAAS,EAAG,UACrBkK,EAAOgR,EAAM,GAAG3R,QA3B/B,gCA8BI,SAAiC2R,EAAwBhR,GAErD,OADAE,YAAU8Q,EAAMlb,OAAS,EAAG,UACrBkK,GAAQgR,EAAMA,EAAMlb,OAAS,GAAGuJ,QAhC/C,qBAmCI,SAAsB2R,EAAwB3R,GAC1C,IAAMW,EAAOgR,EAAMS,KAAK4R,aAAarS,EAAO3R,IAE5C,OADAa,YAAUF,EAAKX,QAAUA,EAAO,iBACzBW,IAtCf,iCAyCI,SAAkCgR,EAAwBhR,EAAcsjB,GACpE,OAAIA,GACApjB,aAAW+iB,EAASM,gBAAgBvS,EAAOhR,GAAO,kBAC9CijB,EAASO,mBAAmBxS,EAAOhR,GAC5BgR,EAAMA,EAAMlb,OAAS,GAGzBkb,EADOS,KAAK4R,aAAarS,EAAOhR,MAGvCE,aAAWuR,KAAK+R,mBAAmBxS,EAAOhR,GAAO,uBAC7CyR,KAAK8R,gBAAgBvS,EAAOhR,GACrBgR,EAAM,GAGVA,EADOS,KAAK4R,aAAarS,EAAOhR,GAClB,MAvDjC,8CA2DI,SACIgR,EACAhR,EACAsjB,EACArjB,GAEA,IAAMwjB,EAAahjB,KAAKijB,MAAM1jB,EAAOC,GAErC,GAAIqjB,EAAK,CACL,IACMK,GADUF,GAAc,GACF,GAAKxjB,EAEjC,GAAIgjB,EAASM,gBAAgBvS,EAAOhR,GAChC,MAAO,CAAC2jB,GAAS,GAGrB,IAAMtkB,EAAQ4jB,EAASW,oBAAoB5S,EAAOhR,EAAMsjB,GAAKjkB,MACvDukB,EAAsBnjB,KAAK6P,IAAIqT,EAAStkB,GAC9C,MAAO,CAACukB,EAAqBA,IAAwBvkB,GAErD,IACMwkB,IADWJ,EAAa,GAAM,GACR,GAAM,GAAKxjB,EAAc,EAErD,GAAIwR,KAAK+R,mBAAmBxS,EAAOhR,GAC/B,MAAO,CAAC6jB,GAAS,GAGrB,IAAMxkB,EAAQoS,KAAKmS,oBAAoB5S,EAAOhR,EAAMsjB,GAAKjkB,MACnDukB,EAAsBnjB,KAAKqjB,IAAID,EAASxkB,GAC9C,MAAO,CAACukB,EAAqBA,IAAwBvkB,KAxFjE,0BAkGI,SAA4B2R,EAAwBhR,GAChDE,aAAWuR,KAAK8R,gBAAgBvS,EAAOhR,GAAO,kBAK9C,IAHA,IAEI9K,EAFA6uB,EAAI,EACJC,EAAIhT,EAAMlb,OAAS,IAEV,CAGT,GAAIkb,EAFJ9b,EAAIuL,KAAKijB,OAAOK,EAAIC,GAAK,IAEZ3kB,OAASW,IAAS9K,IAAM8b,EAAMlb,OAAS,GAAKkb,EAAM9b,EAAI,GAAGmK,MAAQW,GAC1E,OAAO9K,EAGP8b,EAAM9b,GAAGmK,MAAQW,EACjB+jB,EAAI7uB,EAAI,EAER8uB,EAAI9uB,EAAI,OAlHxB,M,sOCXO,SAAe+uB,EAAtB,kC,sDAAO,WAAmCtyB,GAAnC,wFAEGuyB,EAAS5f,IAAcmU,IAAI9mB,GAAS+mB,gBAFvC,kBAKcyL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UALxC,iGAQQ,IARR,0D,sBAaA,SAAeC,EAAtB,kC,sDAAO,WAAiC3yB,GAAjC,wFAEGuyB,EAAS5f,IAAcmU,IAAI9mB,GAASgnB,cAFvC,kBAKcwL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UALxC,iGAQQ,IARR,0D,sBAaA,SAAeE,EAAtB,kC,sDAAO,WAAiC5yB,GAAjC,wFAEGuyB,EAAS5f,IAAcmU,IAAI9mB,GAASknB,cAFvC,kBAKcsL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UALxC,iGAQQ,IARR,0D,sBAaA,SAAeG,EAAtB,kC,sDAAO,WAAmC7yB,GAAnC,wFAEGuyB,EAAS5f,IAAcmU,IAAI9mB,GAASinB,gBAFvC,kBAKcuL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UALxC,iGAQQ,IARR,0D,sBAaA,SAAeI,EAAtB,kC,sDAAO,WAA6B9yB,GAA7B,wFACGuyB,EAAS5f,IAAcmU,IAAI9mB,GAASmnB,SADvC,kBAIcqL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UAJxC,iGAOQ,IAPR,0D,iGC1CFK,EAIAC,E,wKCbCC,EAAcn1B,UAAOE,OAAV,wCAAGF,CAAH,2NAeJo1B,EAASp1B,kBAAOm1B,GAAV,wCAAGn1B,CAAH,yNAaN+d,EAAQ/d,UAAOwP,MAAV,wCAAGxP,CAAH,kLAWL,cAAGG,MAAH,MAAiC,QAAjC,EAAUk1B,MAA+B,cAAgB,kBAGzDC,EAAet1B,kBAAOm1B,GAAV,wCAAGn1B,CAAH,yJAKX,cAAGG,MAAH,IAAUquB,EAAV,EAAUA,OAAQ+G,EAAlB,EAAkBA,QAAlB,OACN/G,EAAM,oBAAgB+G,EAAU,cAAgB,kBAAqBA,GAAO,oBAAiB,kBAUxFC,EAAyBx1B,UAAOc,KAAV,wCAAGd,CAAH,uBAE7B,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,iD,ODvCS,SAAS8zB,EAAT,GAAiF,IAAlDC,EAAiD,EAAjDA,oBAClCxzB,EAAYD,cAAZC,QAEFyzB,EAAwBC,cACxBC,EAA2BC,cAEjC,EAAgCC,cAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAA0CpsB,mBAAS,IAAnD,mBAAOqsB,EAAP,KAAsBC,EAAtB,KACA,EAA0CtsB,oBAAgC,GAA1E,mBAAOusB,EAAP,KAAsBC,EAAtB,KAEA,EAA0CxsB,mBAAS,IAAnD,mBAAOysB,EAAP,KAAsBC,EAAtB,KACA,EAA0C1sB,oBAAgC,GAA1E,mBAAO2sB,EAAP,KAAsBC,EAAtB,KAEA,SAASC,EAAmBhxB,GAKxB,GAHAywB,EAAiBzwB,GACjB2wB,GAAiB,GAEI,IAAjB3wB,EAAMW,OACNwvB,EAAyB,YACtB,CACH,IAAM/J,EAAS9a,KAAKijB,MAAiC,IAA3BvjB,OAAOimB,WAAWjxB,KAEvCgL,OAAOC,UAAUmb,IAAWA,EAAS,GAAKA,EAAS,KACpD+J,EAAyB,QACX,MAAVnwB,GACA2wB,EAAiBpB,EAAc2B,eAGnCf,EAAyB,IAAI3L,IAAQ4B,EAAQ,OAKzD,IAAM+K,EAAmC,SAA1BlB,GAAoCA,EAAsB7S,SAAS,IAAIoH,IAAQ,EAAG,MAC3F4M,EAAoC,SAA1BnB,GAAoCA,EAAsB5U,YAAY,IAAImJ,IAAQ,EAAG,MAwBrG,IAAM6M,EAAwB9iB,QAAQ/R,GAEtC,OACI,eAAC,IAAD,CAAY80B,IAAI,KAAhB,UACI,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAKC,MAAN,CAAYC,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,eAAlD,SACI,+CAEJ,cAAC5I,EAAA,EAAD,CAAgBphB,KAAM,2HAE1B,eAAC4rB,EAAA,EAAD,WACI,cAAC7B,EAAD,CACIpmB,QAAS,WACL0nB,EAAmB,KAEvBlI,OAAkC,SAA1BmH,EAJZ,SAMI,iCAEJ,cAACL,EAAD,CAAc9G,OAAkC,SAA1BmH,EAAkCJ,UAAWa,EAAejnB,UAAW,EAA7F,SACI,sBAAK3K,UAAW,qBAAhB,UACKqyB,GAAUC,EACP,cAACtB,EAAD,UACI,sBAAM4B,KAAK,MAAM,aAAW,UAA5B,4BAIJ,KACJ,cAACrZ,EAAD,CACIG,YAAawX,EAAoB2B,QAAQ,GACzC3xB,MAAOwwB,EAAc7vB,OAAS,EAAI6vB,EAA0C,SAA1BP,EAAmC,GAAKA,EAAsB0B,QAAQ,GACxH5Y,SAAU,SAAC+I,GAAD,OAAOkP,EAAmBlP,EAAE7I,OAAOjZ,QAC7C4xB,OAAQ,WACJnB,EAAiB,IACjBE,GAAiB,IAErBhB,MAAOe,EAAgB,MAAQ,KAhBvC,YAsBPA,GAAiBS,GAAUC,EACxB,cAACG,EAAA,EAAD,CACI51B,MAAO,CACHsc,SAAU,OACV4Z,WAAY,MACZlC,MAAOe,EAAgB,MAAQ,WAJvC,SAOKA,EAAgB,4DAAmDS,EAAS,oDAA2C,6DAE5H,QAGPE,GACG,eAAC,IAAD,CAAYC,IAAI,KAAhB,UACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAKC,MAAN,CAAYvZ,SAAU,GAAIwZ,WAAY,IAAK9B,MAAO,eAAlD,SACI,iDAEJ,cAAC5I,EAAA,EAAD,CAAgBphB,KAAM,+FAE1B,eAAC4rB,EAAA,EAAD,WACI,cAAC3B,EAAD,CAAcj0B,MAAO,CAAEgH,MAAO,QAAUktB,UAAWiB,EAAernB,UAAW,EAA7E,SACI,cAAC4O,EAAD,CACIG,aAAcsZ,IAA4B,IAAItxB,WAC9CR,MAAO4wB,EAAcjwB,OAAS,EAAIiwB,EAAgBN,IAAawB,IAA4B,IAAMxB,EAAW,IAAI9vB,WAChHuY,SAAU,SAAC+I,GAAD,OA3FtC,SAA6B9hB,GAKzB,GAHA6wB,EAAiB7wB,GACjB+wB,GAAiB,GAEI,IAAjB/wB,EAAMW,OACN4vB,EAAYuB,UAEZ,IACI,IAAM1L,EAAiB9a,KAAKijB,MAAiC,GAA3BvjB,OAAOimB,WAAWjxB,KAC/CgL,OAAOC,UAAUmb,IAAWA,EAAS,IAAMA,EAAS,MACrD2K,EAAiBvB,EAAc0B,cAE/BX,EAAYnK,GAElB,MAAO3qB,GAEL,MADAs1B,EAAiBvB,EAAc0B,cACzB,IAAIh0B,MAAM,uBAAyBzB,IA0ERs2B,CAAoBjQ,EAAE7I,OAAOjZ,QAC9C4xB,OAAQ,WACJf,EAAiB,IACjBE,GAAiB,IAErBpB,MAAOmB,EAAgB,MAAQ,OAGvC,cAAC,IAAKkB,KAAN,CAAWr2B,MAAO,CAAEs2B,YAAa,MAAOtC,MAAO,gBAAkB1X,SAAU,GAA3E,SACI,8C,SAtJvBsX,K,6BAAAA,M,cAIAC,K,6BAAAA,M,6BEbQ0C,EAAiB53B,kBAAO63B,KAAV,wCAAG73B,CAAH,yEAYd83B,EAAkB93B,kBAAO+3B,KAAV,wCAAG/3B,CAAH,6EAWfg4B,EAAmBh4B,UAAOE,OAAV,wCAAGF,CAAH,2KAgBhBi4B,EAAej4B,UAAOC,IAAV,wCAAGD,CAAH,2DAMZk4B,EAAal4B,UAAOC,IAAV,wCAAGD,CAAH,8HASVm4B,EAAan4B,UAAOc,KAAV,wCAAGd,CAAH,qPAcnB,qBAAGG,MAAkBC,WAAW8M,WAA/B,MAAD,sDAMSkrB,EAAQp4B,UAAOC,IAAV,wCAAGD,CAAH,sDAKiBA,UAAOC,IAAV,wCAAGD,CAAH,wHChEjB,SAASq4B,EAAT,GAAiF,IAA1D3C,EAAyD,EAAzDA,oBAC5BtO,EAAOE,mBACP5b,EAAO4sB,YAAaC,IAAiBC,UACrC1L,EAAS2L,cAEf,EAAuCC,cAAvC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CpgB,cAA1C,mBAAOC,EAAP,KAAsBogB,EAAtB,KAGA,EAAgDhvB,oBAAS,GAAzD,mBAAOivB,EAAP,KAAyBC,EAAzB,KAIA,OAFA5R,YAAkBC,EAAM1b,EAAOohB,OAASvoB,GAIpC,cADA,CACC2zB,EAAD,CAAYltB,IAAKoc,EAAjB,UACI,cAACja,EAAA,EAAD,CAAOH,OAAQ8rB,EAAkB1rB,UAAW,kBAAM2rB,GAAoB,IAAQjsB,UAAW,IAAzF,SACI,8BACI,eAAC,IAAD,CAAYkqB,IAAI,KAAhB,UACI,eAACC,EAAA,EAAD,CAAY51B,MAAO,CAAEiH,QAAS,UAA9B,UACI,wBACA,cAAC,IAAD,CAAM6uB,WAAY,IAAKxZ,SAAU,GAAjC,SACI,0CAEJ,cAACma,EAAD,CAAiB9oB,QAAS,kBAAM+pB,GAAoB,SAExD,cAACX,EAAD,IACA,eAAC,IAAD,CAAYpB,IAAI,KAAK31B,MAAO,CAAEiH,QAAS,UAAvC,UACI,cAAC,IAAD,CAAM6uB,WAAY,IAAKxZ,SAAU,GAAjC,SACI,gKAEJ,cAAC,IAAD,CAAMwZ,WAAY,IAAKxZ,SAAU,GAAjC,SACI,+EAEJ,cAACqb,EAAA,EAAD,CACI73B,OAAO,EACPmH,QAAS,OACT0G,QAAS,WACL,IAAMiqB,EAAc,iBAChBpK,OAAOqK,OAAO,iFAA0BD,OAA2CA,IACnFL,IACAG,GAAoB,KAPhC,SAWI,cAAC,IAAD,CAAMpb,SAAU,GAAIwZ,WAAY,IAAK5jB,GAAG,sBAAxC,SACI,4DAOxB,eAACykB,EAAD,CAAkBhpB,QAAS8d,EAAQvZ,GAAG,8BAAtC,UACI,cAACqkB,EAAD,IACCe,EACG,cAACV,EAAD,UACI,sBAAMb,KAAK,MAAM,aAAW,cAA5B,4BAIJ,QAEP1rB,GACG,cAACysB,EAAD,UACI,eAAC,IAAD,CAAYnB,IAAI,KAAK31B,MAAO,CAAEiH,QAAS,QAAvC,UACI,cAAC,IAAD,CAAM6uB,WAAY,IAAKxZ,SAAU,GAAjC,SACI,iDAEJ,cAAC8X,EAAD,CAAqBC,oBAAqBA,IAC1C,cAAC,IAAD,CAAMyB,WAAY,IAAKxZ,SAAU,GAAjC,SACI,+CAEJ,eAACsZ,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,WACI,cAAC,IAAKC,MAAN,CAAYC,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,eAAlD,SACI,wCAEJ,cAAC5I,EAAA,EAAD,CAAgBphB,KAAM,iHAE1B,cAACuhB,EAAA,EAAD,CACIrZ,GAAG,4BACHsZ,SAAU8L,EACV7L,OACI6L,EACM,WACIC,IACAG,GAAoB,IAExB,WACIjM,IACAiM,GAAoB,SAK1C,eAAC9B,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,WACI,cAAC,IAAKC,MAAN,CAAYC,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,eAAlD,SACI,sCAEJ,cAAC5I,EAAA,EAAD,CAAgBphB,KAAM,mEAE1B,cAACuhB,EAAA,EAAD,CACIrZ,GAAG,iCACHsZ,UAAWpU,EACXqU,OAAQ,WACJ+L,GAAkBpgB,mB,wHClHzC0gB,EAAb,aAKI,cAA2E,IAA7DvpB,EAA4D,EAA5DA,MAAOwpB,EAAqD,EAArDA,eAAgB1V,EAAqC,EAArCA,aAAqC,yBAJ1D9T,WAI0D,OAH1DwpB,oBAG0D,OAF1D1V,kBAE0D,EACtEjT,YAAUb,GAASgB,IAASC,UAAYjB,GAASgB,IAASE,SAAU,QACpEkR,KAAKpS,MAAQA,EACboS,KAAKoX,eAAiBpzB,IAAKC,OAAOmzB,GAClCpX,KAAK0B,aAAe1d,IAAKC,OAAOyd,O,iCCpBxC,yHAaO,SAAS2V,EAAYC,EAAkBC,EAAmBhpB,GAC7D,IAAM8Q,EAAezQ,IAASgR,mBAAmBrR,GAE3CwZ,EAAY/jB,IAAKsL,SAAS+P,EAAcA,GAE9C,OAAOiY,EAAUvX,YAAYwX,GACvB,IAAInX,IAAMkX,EAAWC,EAAYlX,IAAM0H,GACvC,IAAI3H,IAAMkX,EAAWC,EAAYxP,EAAW1H,KAQ/C,SAASmX,EAAmBC,GAC/B,IAAMC,EAASD,EAAME,aAAa5X,YAAY0X,EAAMG,eAE9CvY,EAAeqY,EACfhQ,YAAmB+P,EAAM5P,UAAW4P,EAAMroB,aAC1CsY,YAAmB+P,EAAMroB,YAAaqoB,EAAM5P,WAE9CtZ,EAAOK,IAASiT,mBAAmBxC,GACjCwY,EAAgBR,EAAYI,EAAME,aAAcF,EAAMG,cAAerpB,EAAO,GAUlF,OATImpB,EACKD,EAAM3W,SAAS+W,IAChBtpB,IAGCkpB,EAAM1Y,YAAY8Y,IACnBtpB,IAGDA,I,i/cCnCJ,SAAeupB,EAAtB,wC,sDAAO,WACH/U,EACAgV,EACAC,EACA7xB,GAJG,yGAKH8xB,EALG,+BAKS,IAERC,EAAc,GACdC,GAAW,EACXC,EAAO,EATR,mBAWSD,EAXT,wBAYSE,EAAMlyB,EAAO9B,OACb+zB,EAAOH,EAAY9xB,EAAO9B,SAC1Bg0B,EAAMD,EAAOH,GAEXK,EAASnyB,EAAO8K,MAAMmnB,EAAMC,GAhBvC,UAiB0BN,EAAOhV,MAAY,CACpCA,MAAOA,EAAK,WAAL,cAASiV,GAAT,QAAeM,KACtBxV,YAAa,iBAnBtB,QAiBWnf,EAjBX,OAqBKu0B,EAAW,2BACJA,GACAv0B,EAAO40B,MAEV52B,OAAOC,KAAK+B,EAAO40B,MAAMl0B,OAAS4zB,GAAaG,EAAOH,EAAY9xB,EAAO9B,OACzE8zB,GAAW,EAEXC,GAAQH,EA5BjB,gDA+BQC,GA/BR,yCAiCCxnB,QAAQ8nB,IAAR,MAjCD,uBAkCQj2B,GAlCR,0D,wBAsCA,SAASk2B,IACZ,IAAMC,EAAiBC,MAKvB,MAAO,CAJID,EAAera,SAAS,EAAG,OAAOua,QAAQ,UAAUC,OACpDH,EAAera,SAAS,EAAG,OAAOua,QAAQ,UAAUC,OACjDH,EAAera,SAAS,EAAG,QAAQua,QAAQ,UAAUC,OACpDH,EAAera,SAAS,EAAG,SAASua,QAAQ,UAAUC,U,koBCnDnEC,EAAgD,eACjDjmB,IAAcyU,KAAKvU,IAAQC,KAAKyU,QAAS,G,wECEjCsR,EAAa/6B,UAAOE,OAAV,uCAAGF,CAAH,yJAkBVg7B,EAAYh7B,kBAAO+3B,KAAV,uCAAG/3B,CAAH,qBAKTi7B,EAAcj7B,UAAOC,IAAV,uCAAGD,CAAH,qIAIX,gBAAGoB,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,IAAQ,UACrB,gBAAGA,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,IAAQ,UAChB,gBAAG85B,EAAH,EAAGA,YAAH,cAAqBA,QAArB,IAAqBA,IAAe,KACrC,gBAAGxO,EAAH,EAAGA,WAAH,cAAoBA,QAApB,IAAoBA,IAAc,KAGnC,cAAGvsB,MAAH,IAAUg7B,EAAV,EAAUA,OAAV,cAAuBA,QAAvB,IAAuBA,IAAU,kBAKtCC,EAAmBp7B,UAAOE,OAAV,uCAAGF,CAAH,+LAKf,qBAAGq7B,SAA2B,UAAY,aAC3C,cAAGl7B,MAAH,SAAUk7B,SAA2B,eAAiB,oBAIxC,qBAAGA,SAA2B,KAAO,eAKrC,qBAAGA,SAA2B,KAAO,eASnDC,EAAqBt7B,kBAAOu7B,KAAV,uCAAGv7B,CAAH,uLAyCzBw7B,GApBax7B,UAAOiF,EAAV,uCAAGjF,CAAH,+HAGH,cAAGG,MAAH,MAAe,oBAiBJH,UAAOiF,EAAV,uCAAGjF,CAAH,mNAsBfy7B,EAAWz7B,kBAAO07B,KAAV,uCAAG17B,CAAH,yDAIA,cAAGG,MAAH,MAAe,kBAGhBw7B,EAAY37B,kBAAO47B,KAAV,uCAAG57B,CAAH,mJAIR,cAAGG,MAAH,MAAe,kBAYvB07B,EAAYC,oBAAH,kLAUiB97B,UAAO+7B,IAAV,uCAAG/7B,CAAH,+HACZ67B,GAKjB,SAASG,EAAwBtd,GAC7B,MAAyBA,EAAMud,cAAvBtd,EAAR,EAAQA,QD/JL,SAAuBud,GAC1B,IACI,IAAMroB,EAAM,IAAIsoB,IAAID,GACpB,GAAIpB,EAAmBjnB,EAAIuoB,UAAW,CAClC,IAEMC,EAFaxoB,EAAIyoB,SAAS7nB,MAAM,KAEJ3P,KAAI,SAACy3B,GAAD,MAAS,iBAAiBje,KAAKie,GAAM,MAAQA,KAAKC,KAAK,KAE7F,MAAM,GAAN,OAAU3oB,EAAI4oB,SAAd,aAA2B5oB,EAAIuoB,UAA/B,OAA0CC,IAGhD,MAAOl7B,GACL,OAAO+6B,GCqJYQ,CAFvB,EAAgBR,MAKD,WAAXvd,GAAuBD,EAAMie,SAAWje,EAAMke,SAK9Cle,EAAMme,iBAUP,SAASC,EAAT,GAA2K,IAAD,IAAlJne,cAAkJ,MAAzI,SAAyI,EAA/Hud,EAA+H,EAA/HA,KAA+H,IAAzHa,WAAyH,MAAnH,sBAAmH,EAAzFzxB,EAAyF,iBAC7K,OAAO,+BAAG9G,UAAW,wBAAyBma,OAAQA,EAAQoe,IAAKA,EAAKb,KAAMA,EAAMltB,QAASgtB,GAA6B1wB,IAGvH,SAAS0xB,EAAT,GAA+K,IAAD,IAAlJre,cAAkJ,MAAzI,SAAyI,EAA/Hud,EAA+H,EAA/HA,KAA+H,IAAzHa,WAAyH,MAAnH,sBAAmH,EAAzFzxB,EAAyF,iBACjL,OACI,cAACkwB,EAAD,yBAAiB7c,OAAQA,EAAQoe,IAAKA,EAAKb,KAAMA,EAAMltB,QAASgtB,GAA6B1wB,GAA7F,aACI,cAACmwB,EAAD,OAKZ,IAAMwB,EAASnB,oBAAH,sIASNoB,EAAUl9B,UAAO+7B,IAAV,wCAAG/7B,CAAH,6DACOi9B,GAKEj9B,kBAAOs7B,GAAV,wCAAGt7B,CAAH,gBACN,cAAGG,MAAH,MAAe,kBAWrB,I,QAAMg9B,EAAqBn9B,kBAAOk9B,GAAV,wCAAGl9B,CAAH,2BACjB,qBAAGoB,QACJ,qBAAGA,QAGHg8B,EAAap9B,UAAOc,KAAV,wCAAGd,CAAH,wBAEjB,qBAAGG,MAAkBC,WAAW8M,WAA/B,IAAD,iDAiBOmwB,GAZYr9B,UAAOc,KAAV,wCAAGd,CAAH,UAChB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,iDAKwB3B,UAAOc,KAAV,wCAAGd,CAAH,UACrB,qBAAGG,MAAkBC,WAAWC,eAA/B,IAAD,iDAKoBL,UAAOc,KAAV,wCAAGd,CAAH,uBAEjB,qBAAGG,MAAkBC,WAAW8M,WAA/B,IAAD,mD,GAKmBlN,UAAOc,KAAV,wCAAGd,CAAH,uBAEhB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,kDAKwB3B,UAAOc,KAAV,wCAAGd,CAAH,uBAErB,qBAAGG,MAAkBC,WAAWC,eAA/B,IAAD,kD,WCpQOi9B,EAAe,CACxBj9B,eAAgB,IAChBsB,UAAW,IACXuL,WAAY,IACZqwB,UAAW,MAGTC,EAA4E75B,OAAOC,KAAK05B,GAAc/3B,QAAO,SAACmuB,EAAatyB,GAM7H,OALCsyB,EAAoBtyB,GAAQ,SAAC6D,EAAQkM,EAAQssB,GAAjB,OAA4Bl9B,cAA3B,MAAD,0FACH+8B,EAAqBl8B,GACrCb,cAAI0E,EAAGkM,EAAGssB,KAGb/J,IACR,IAmGY,SAASgK,EAAT,GAAqE,IAA5Cr5B,EAA2C,EAA3CA,SAC9Bs5B,EAAWC,cAEXC,EAAcn6B,mBAAQ,kBAhChC,SAAei6B,GACX,OAAO,2BAlEX,SAAgBA,GACZ,MAAO,CAEHG,MANM,UAON5G,MANM,UASN6G,MAAkB,UAClBC,MAAOL,EAAW,UAAY,UAC9BM,MAAON,EAAW,UAAY,UAC9BO,MAAOP,EAAW,UAAY,UAC9BQ,MAAOR,EAAW,UAAY,UAG9BS,IAAKT,EAAW,gBAAkB,OAClCU,IAAKV,EAAW,UAAY,UAC5BW,IAAKX,EAAW,UAAY,UAC5BY,IAAKZ,EAAW,UAAY,UAC5Ba,IAAKb,EAAW,UAAY,UAC5Bc,IAAKd,EAAW,UAAY,UAC5Be,IAAKf,EAAW,UAAY,UAG5BgB,QAAShB,EAAW,mBAAqB,kBACzCiB,WAAYjB,EAAW,kBAAoB,wBAG3CkB,SAAUlB,EAAW,UAAY,UACjCmB,SAAUnB,EAAW,UAAY,UACjCoB,SAAUpB,EAAW,UAAY,UACjCqB,SAAUrB,EAAW,YAAc,UACnCsB,SAAUtB,EAAW,UAAY,UAGjCuB,aAAcvB,EAAW,UAAY,UAGrCwB,WAAYxB,EAAW,UAAY,UACnCyB,WAAYzB,EAAW,YAAc,UACrC0B,WAAY1B,EAAW,YAAc,UAGrC2B,KAAM3B,EAAW,UAAY,UAC7B4B,KAAM5B,EAAW,UAAY,UAC7B6B,KAAM,UACNC,OAAQ9B,EAAW,UAAY,UAC/B+B,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,MAAOlC,EAAW,UAAY,UAC9BmC,MAAOnC,EAAW,UAAY,UAC9Bx8B,MAAOw8B,EAAW,UAAY,UAC9BoC,QAASpC,EAAW,UAAY,UAChCpI,QAAS,UAGTyK,MAAOrC,EAAW,UAAY,UAG9BsC,iBAAkB,0BAClBC,iBAAkB,UAClBC,qBAAsB,WAMnBC,CAAOzC,IADd,IAGI0C,MAAO,CACHC,GAAI,EACJC,GAAI,GACJC,GAAI,IAIRj3B,QAASo0B,EAAW,OAAS,UAI7Bv9B,WAAYo9B,EAGZiD,iBAAkBlgC,cAAF,uGAIhBmgC,cAAengC,cAAF,sGAUiBJ,CAAMw9B,KAAW,CAACA,IAEpD,OAAO,cAAC,gBAAD,CAA+Bx9B,MAAO09B,EAAtC,SAAoDx5B,IAG/D,IAAMs8B,GAAc3gC,kBAAOU,KAAV,uCAAGV,CAAH,kBAKJ8B,GAAO,CAChB8+B,KADgB,SACXt3B,GACD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,gBAAoB/rB,KAEpEu3B,KAJgB,SAIXv3B,GACD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,YAAgB/rB,KAEhEw3B,MAPgB,SAOVx3B,GACF,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,gBAAoB/rB,KAEpE4tB,MAVgB,SAUV5tB,GACF,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,SAAa/rB,KAE7Dw0B,MAbgB,SAaVx0B,GACF,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,SAAa/rB,KAE7DouB,KAhBgB,SAgBXpuB,GACD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,gBAAoB/rB,KAElFy3B,YAnBgB,SAmBJz3B,GACR,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,IAAQrU,KAE3D03B,aAtBgB,SAsBH13B,GACT,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,IAAQrU,KAE3D23B,UAzBgB,SAyBN33B,GACN,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,IAAQrU,KAE3D43B,MA5BgB,SA4BV53B,GACF,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,IAAQrU,KAE3DvH,KA/BgB,SA+BXuH,GACD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,SAAa/rB,KAE7D63B,OAlCgB,SAkCT73B,GACH,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,WAAe/rB,KAE/D83B,SArCgB,SAqCP93B,GACL,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,SAAa/rB,KAE7D+3B,KAxCgB,SAwCX/3B,GACD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAO,OAAW/rB,KAE3Dg4B,OA3CgB,SA2CTh4B,GACH,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAKxZ,SAAU,GAAI4jB,UAAW,SAAUlM,MAAO,SAAa/rB,KAEhGnI,MA9CgB,YA8C4C,IAApDA,EAAmD,EAAnDA,MAAUmI,EAAyC,iBACvD,OAAO,cAACq3B,GAAD,aAAaxJ,WAAY,IAAK9B,MAAOl0B,EAAQ,OAAS,SAAamI,MAIrEk4B,GAAoBC,4BAAH,8EAEnB,cAAGthC,MAAH,MAAe,kBAIhB,cAAGA,MAAH,MAAe,mB,mIC9LZuhC,EAAoC,CAC7C3sB,IAAQC,IACRD,IAAQ8F,OAyBC8mB,GAAqB,mBAC7B5sB,IAAQC,IAAM,CACX8rB,MAAOjsB,IAAcgT,aAAa9S,IAAQC,KAAK+S,YAFrB,cAI7BhT,IAAQ8F,MAAQ,CACbimB,MAAOjsB,IAAcgT,aAAa9S,IAAQ8F,OAAOkN,YALvB,I,kGCzB5B6Z,GAAwD,mBACzD7sB,IAAQC,IADiD,mBAEzDD,IAAQ8F,MAFiD,QAK/C,SAASgnB,EAAWC,GAC/B,IAAMC,EAAU,IAAIC,IAChBF,EAC4B,kBAArBA,EAAS5/B,QACV4/B,EAAS5/B,QACmB,kBAArB4/B,EAAS5/B,QACZsR,SAASsuB,EAAS5/B,SAClB,OAWd,OATA6/B,EAAQE,gBAAkB,KAC1BF,EAAQG,gBAAgB7S,MAAK,SAAC8S,GAC1B,IAAMC,EAAyBR,EAA0BO,EAAQjgC,SAC7DkgC,IACA1vB,QAAQ2vB,MAAM,2BAA4BD,GAC1CL,EAAQE,gBAAkBG,MAI3BL,I,iCC3BX,yHAIMO,EAAa,kBAAM,GAMlB,SAASC,EAAuDtmB,GACnE,IAAMumB,EAAmBz9B,YAAUkX,GAEnC,GAAIumB,EAAkB,CAClB,IAAMC,EAAQD,EAAiBtb,cAC/B,OAAO,SAACzgB,GAAD,MAAW,YAAaA,EAAI+7B,IAAqB/7B,EAAEpB,QAAUo9B,IAAUh8B,EAAEpB,QAAQ6hB,eAG5F,IAAMwb,EAAmBzmB,EACpBiL,cACAzS,MAAM,OACNzP,QAAO,SAAC29B,GAAD,OAAOA,EAAEt8B,OAAS,KAE9B,GAAgC,IAA5Bq8B,EAAiBr8B,OAAc,OAAOi8B,EAE1C,IAAMM,EAAgB,SAACD,GACnB,IAAME,EAASF,EACVzb,cACAzS,MAAM,OACNzP,QAAO,SAAC29B,GAAD,OAAOA,EAAEt8B,OAAS,KAE9B,OAAOq8B,EAAiBjP,OAAM,SAACqP,GAAD,OAAoB,IAAbA,EAAEz8B,QAAgBw8B,EAAOh/B,MAAK,SAACk/B,GAAD,OAAQA,EAAGC,WAAWF,IAAMC,EAAGE,SAASH,UAG/G,OAAO,gBACHv4B,EADG,EACHA,KACAqc,EAFG,EAEHA,OAFG,OAGW3S,QAAS2S,GAAUgc,EAAchc,IAAarc,GAAQq4B,EAAcr4B,KAGnF,SAAS24B,EAA0C38B,EAAa0V,GACnE,OAAO1V,EAAOvB,OAAOu9B,EAA0BtmB,IAG5C,SAASknB,EAAuB58B,EAA6B68B,GAChE,OAAO1/B,mBAAQ,WACX,IAAK6C,EACD,MAAO,GAGX,IAAM88B,EAAcD,EACflc,cACAzS,MAAM,OACNzP,QAAO,SAAC29B,GAAD,OAAOA,EAAEt8B,OAAS,KAE9B,GAAIg9B,EAAYh9B,OAAS,EACrB,OAAOE,EAGX,IAAM+8B,EAAwB,GACxBC,EAA2B,GAC3Bj4B,EAAgB,GAatB,OAVA/E,EAAOzB,KAAI,SAACoC,GAAW,IAAD,IAClB,OAAI,UAAAA,EAAM0f,cAAN,eAAcM,iBAAkBmc,EAAY,GACrCC,EAAalrB,KAAKlR,GACtB,UAAIA,EAAM0f,cAAV,OAAI,EAAcM,cAAc8b,WAAWI,EAAYlc,cAAc1I,QACjE+kB,EAAgBnrB,KAAKlR,GAErBoE,EAAK8M,KAAKlR,MAInB,GAAN,OAAWo8B,EAAiBC,EAAoBj4B,KACjD,CAAC/E,EAAQ68B,M,iCC3EhB,sDAIe,SAAS7c,IAAmD,IAAD,IAChEid,EAAY5+B,cAClB,iBAAOsuB,YAAoBsQ,EAAW,mCAAtC,iBAAO,EAA4D79B,cAAnE,aAAO,EAAqE,K,8HCMzE,SAAS89B,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,UAAWzY,EAA+B,EAA/BA,YAE7B0Y,GADQC,cACWlgC,mBAAQ,WAC7B,GAAKunB,EAAL,CACA,GAAIA,EAAYnI,SAAS,KAAM,MAAO,UACtC,IAAMniB,EAAWqqB,YAAgBC,GACjC,OAAItqB,EAAW,EAAU,QACrBA,EAAW,EAAU,iBAClB,iBACR,CAACsqB,EAAa,gBAAiB,cAAe,eAAgB,oBAEjE,OACI,eAAC,IAAKyM,KAAN,CAAW/Z,SAAU,GAAI0X,MAAO,eAAhC,UACKqO,EACG,8CACO,cAAC,IAAD,CAAiBr4B,KAAI,OAAEq4B,QAAF,IAAEA,OAAF,EAAEA,EAAWG,cAAc,EAAG,CAAEC,eAAgB,WAG5E,uBAEH7Y,EACG,uBAAM5pB,MAAO,CAAEg0B,MAAOsO,GAAtB,UACK,IADL,IAEK,uCAAQ1Y,EAAY3Z,UAAU,GAAGuyB,cAAc,MAFpD,OAIA,U,uGCjCVE,EAAU/jC,UAAOC,IAAV,uCAAGD,CAAH,2EAII,gBAAGgkC,EAAH,EAAGA,QAAH,SAAYC,SAAwBD,EAAU,EAAI,GAAG99B,WAAa,QAC/E,qBAAG/F,MAAkBC,WAAWuB,UAA/B,IAAD,2CAYEuiC,EAAalkC,kBAAOmkC,KAAV,uCAAGnkC,CAAH,MAEVokC,EAAcpkC,kBAAOmkC,KAAV,uCAAGnkC,CAAH,4CAEP,kBAAiB,KAAjB,EAAGgkC,QAA+B,KAAK99B,WAAa,QAG/C,SAASm+B,EAAT,GAA2G,IAA7EC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,UAAiE,IAAtDnjC,YAAsD,MAA/C,GAA+C,MAA3C6iC,cAA2C,SACrH,OACI,eAACF,EAAD,CAASC,QAAS5iC,EAAM6iC,OAAQA,EAAhC,UACKK,GAAa,cAACJ,EAAD,CAAYx8B,SAAU48B,EAA8BljC,KAAMA,EAAK8E,WAAa,OACzFq+B,GAAa,cAACH,EAAD,CAAa18B,SAAU68B,EAA8BnjC,KAAMA,EAAK8E,WAAa,KAAM89B,QAAS5iC,S,iCCjCtH,sDAGO,SAASojC,IACZ,IAAM/gC,EAAkBV,cAExB,OAAOW,mBAAQ,WAEX,OADYC,OAAOwE,OAAO1E,GACfuB,QAAO,SAAClB,GAAD,OAAQ,IAAIC,MAAOC,UAAYF,EAAGG,UAAY,SAAYiB,MAAK,SAACD,EAAGkM,GAAJ,OAAUA,EAAElN,UAAYgB,EAAEhB,eAC5G,CAACR,M,gCCTR,gFAGapB,EAAiB,kBAAMoiC,eACvBxhC,EAAiDyhC,K,+QCSxDC,EAAaC,YAAM5+B,IAAKqa,SAASra,IAAKyZ,aAAazZ,IAAKC,OAAO,GAAID,IAAKC,OAAO,MAAOD,IAAKC,OAAO,KAyDxG,SAAS4+B,EAAOr6B,GACZ,OAAO7G,OAAOC,KAAK4G,GAAS3G,MAAK,SAAAihC,GAAC,MAAU,cAANA,KAyEnC,IAAeC,EAAtB,kDAMI,aAAuB,wCAN3B,6DAUI,SAAmCp1B,GAC/B,MAAO,CACHq1B,SAAUhjB,KAAKijB,aAAat1B,GAC5BjK,MAAOk/B,YAAM,MAbzB,+BAiBI,SAAgCM,EAAoB16B,GAChDiG,YAAUzK,IAAK+a,YAAYmkB,EAASrlB,UAAWnO,KAAO,kBAEtD,IAAMyzB,EAAsB,GAG5B,EAA6DD,EAASE,YAArDC,EAAjB,EAAQzb,QAAkC0b,EAA1C,EAAiC3b,QAG3B4b,EAAiBL,EAASM,wBAAwBh7B,EAAQi7B,mBAC1DC,EAAad,YAAMW,EAAe3b,SAClC+b,EAAaf,YAAMW,EAAe5b,SAElCqM,EAAW4O,YAAMp6B,EAAQwrB,UAgB/B,GAbI6O,EAAOr6B,IAAYA,EAAQo7B,YAC3BT,EAAU/sB,KAAK4J,KAAKijB,aAAaC,EAASv1B,OAI1CnF,EAAQq7B,cACRV,EAAU/sB,KAAK2sB,EAA2Be,aAAaZ,EAASv1B,KAAKM,OAAQzF,EAAQq7B,eAErFr7B,EAAQu7B,cACRZ,EAAU/sB,KAAK2sB,EAA2Be,aAAaZ,EAASv1B,KAAKQ,OAAQ3F,EAAQu7B,eAIrFlB,EAAOr6B,GAAU,CACjB,IAAMw7B,EAAoBC,YAAwBz7B,EAAQw7B,WAE1Db,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,OAAQ,CAC5D,CACIl2B,OAAQi1B,EAASv1B,KAAKM,OAAO5K,QAC7B8K,OAAQ+0B,EAASv1B,KAAKQ,OAAO9K,QAC7B+gC,UAAWlB,EAASkB,UACpBC,UAAWnB,EAASmB,UACpBhB,eAAgBT,YAAMS,GACtBC,eAAgBV,YAAMU,GACtBI,aACAC,aACAK,YACAhQ,oBAMZmP,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,oBAAqB,CACzE,CACIG,QAAS1B,YAAMp6B,EAAQ87B,SACvBjB,eAAgBT,YAAMS,GACtBC,eAAgBV,YAAMU,GACtBI,aACAC,aACA3P,eAMhB,IAAItwB,EAAgBk/B,YAAM,GAE1B,GAAIp6B,EAAQ+7B,UAAW,CACnB,IAAM92B,EAAUjF,EAAQ+7B,UAAU92B,QAClCgB,YAAUy0B,EAASv1B,KAAKM,OAAOC,OAAOT,IAAYy1B,EAASv1B,KAAKQ,OAAOD,OAAOT,GAAU,cAExF,IAAM+2B,EAAetB,EAASv1B,KAAKM,OAAOC,OAAOT,GAAW41B,EAAiBC,EAGzEt/B,IAAK+a,YAAYylB,EAAc90B,MAC/ByzB,EAAU/sB,KAAK2sB,EAA2BmB,UAAUC,mBAAmB,sBAG3EzgC,EAAQk/B,YAAM4B,GAGlB,MAAO,CACHxB,SACyB,IAArBG,EAAU9+B,OACJ8+B,EAAU,GACVJ,EAA2BmB,UAAUC,mBAAmB,YAAa,CAAChB,IAChFz/B,WAtGZ,mCA0GI,SAAoC8E,GAChC,IAAM26B,EAAsBJ,EAA2B0B,cAAcj8B,GAErE,MAAO,CACHw6B,SACyB,IAArBG,EAAU9+B,OACJ8+B,EAAU,GACVJ,EAA2BmB,UAAUC,mBAAmB,YAAa,CAAChB,IAChFz/B,MAAOk/B,YAAM,MAlHzB,kCA4HI,SAAmCM,EAAoB16B,GACnD,IAAM26B,EAAsB,GAEtBnP,EAAW4O,YAAMp6B,EAAQwrB,UACzBsQ,EAAU1B,YAAMp6B,EAAQ87B,SAGxBI,EAAkB,IAAIC,IAAS,CACjCh3B,KAAMu1B,EAASv1B,KACfkQ,UAAWrV,EAAQo8B,oBAAoBt1B,SAAS4zB,EAASrlB,WAAW1G,SACpEitB,UAAWlB,EAASkB,UACpBC,UAAWnB,EAASmB,YAExB51B,YAAUzK,IAAK+a,YAAY2lB,EAAgB7mB,UAAWnO,KAAO,kBAG7D,MAGIg1B,EAAgBG,wBAChBr8B,EAAQi7B,mBAHCC,EADb,EACI9b,QACS+b,EAFb,EAEIhc,QAKAnf,EAAQs8B,QACR3B,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,SAAU,CAC9DF,YAAwBz7B,EAAQs8B,OAAOtjC,SACvC8iC,EACA1B,YAAMp6B,EAAQs8B,OAAO9Q,UACrBxrB,EAAQs8B,OAAOnS,EACfnqB,EAAQs8B,OAAOvS,EACf/pB,EAAQs8B,OAAOnE,KAM3BwC,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,oBAAqB,CACzE,CACIG,UACAzmB,UAAW+kB,YAAM8B,EAAgB7mB,WACjC6lB,WAAYd,YAAMc,GAClBC,WAAYf,YAAMe,GAClB3P,eAKZ,MAAkExrB,EAAQu8B,eAAlEC,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,sBAA0B37B,EAAzD,iBAuBA,OAtBA65B,EAAU/sB,KAAV,MAAA+sB,EAAS,YACFJ,EAA2B0B,cAA3B,aACCH,QAAS97B,EAAQ87B,QAEjBU,sBAAuBA,EAAsBr1B,IACzC/L,IAAeC,cAAcmhC,EAAsBt/B,SAAUg+B,IAEjEuB,sBAAuBA,EAAsBt1B,IACzC/L,IAAeC,cAAcohC,EAAsBv/B,SAAUi+B,KAE9Dr6B,MAIPd,EAAQo8B,oBAAoBM,QAAQt1B,KAChCpH,EAAQ28B,WACRhC,EAAU/sB,KAAK2sB,EAA2BmB,UAAUC,mBAAmB,OAAQ,CAACG,KAGpF71B,aAAgC,IAAtBjG,EAAQ28B,UAAoB,eAGnC,CACHnC,SAAUD,EAA2BmB,UAAUC,mBAAmB,YAAa,CAAChB,IAChFz/B,MAAOk/B,YAAM,MAtMzB,0BA0MI,SAA4Bj1B,GACxB,OAAOo1B,EAA2BmB,UAAUC,mBAAmB,qCAAsC,CACjGx2B,EAAKM,OAAO5K,QACZsK,EAAKQ,OAAO9K,QACZu/B,YAAMj1B,EAAK0R,kBA9MvB,2BAkNI,SAA6B7W,GACzB,IAAM26B,EAAsB,GAEtBmB,EAAU1B,YAAMp6B,EAAQ87B,SAExBc,EACF58B,EAAQw8B,sBAAsBt/B,SAASI,UAAY0C,EAAQy8B,sBAAsBv/B,SAASI,SAExFk+B,EAAYC,YAAwBz7B,EAAQw7B,WAclD,GAXAb,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,UAAW,CAC/D,CACIG,UACAN,UAAWoB,EAAczyB,IAAeqxB,EACxCqB,WAAY1C,EACZ2C,WAAY3C,MAKpByC,EAAa,CACb,IAAMG,EAAY/8B,EAAQw8B,sBAAsBt/B,SAASI,SACnD0C,EAAQw8B,sBAAsB7tB,SAC9B3O,EAAQy8B,sBAAsB9tB,SAC9BjS,EAAQsD,EAAQw8B,sBAAsBt/B,SAASI,SAC9C0C,EAAQy8B,sBAAsBv/B,SAC9B8C,EAAQw8B,sBAAsBt/B,SAC/B8/B,EAAch9B,EAAQw8B,sBAAsBt/B,SAASI,SACrD0C,EAAQy8B,sBAAsB9tB,SAC9B3O,EAAQw8B,sBAAsB7tB,SAEpCgsB,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,qBAAsB,CAACvB,YAAM2C,GAAYvB,KAErGb,EAAU/sB,KACN2sB,EAA2BmB,UAAUC,mBAAmB,aAAc,CAClEj/B,EAAM7B,QACNu/B,YAAM4C,GACNxB,KAKZ,OAAOb,MA/Pf,GAAyDsC,KAAnC1C,EACJmB,UAAuB,IAAIr/B,IAAU6gC,I,0JC9IjDzQ,EAAMj3B,kBAAOoI,OAAV,wCAAGpI,CAAH,0GAQE,gBAAGqI,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAElB,gBAAGuV,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAG+pB,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGr/B,WACJ,qBAAGE,UACI,qBAAGo/B,gBAGTC,EAAa7nC,kBAAOi3B,GAAV,wCAAGj3B,CAAH,oCASV8nC,GALU9nC,UAAOC,IAAV,wCAAGD,CAAH,wCAKGA,kBAAOi3B,GAAV,wCAAGj3B,CAAH,iFAER,gBAAGg3B,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAG2Q,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAG3Q,QAIJ+Q,EAAW/nC,kBAAOi3B,GAAV,wCAAGj3B,CAAH,mCAET,gBAAGg3B,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBC,O,iHC9BR,SAASlT,EAAT,GAYK,IAXRC,EAWO,EAXPA,eACAtO,EAUO,EAVPA,OACAC,EASO,EATPA,OAEAmO,GAOO,EARPpM,IAQO,EAPPoM,4BAQA,EAAyBpO,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOzF,EAAP,KAAeE,EAAf,KACA,OAAO63B,4BACHhkB,EACAikB,oBACI,CAAC,SACD,CAACC,IAAgBC,OAAO,CAAC,UAAW,WAAY,CAACl4B,EAAO5K,QAAS8K,EAAO9K,YAJxD,OAMpBye,QANoB,IAMpBA,IAA8BlP,O,+GC/BhB+O,EAAtB,6FAKI,SAAuBykB,EAASn6B,GAC5B,OAAIjI,IAAK8c,SAAS7U,EAAGyD,KACV1L,IAAKqa,SAAS+nB,EAAGpiC,IAAKsL,SAASrD,EAAG0S,MAElC3a,IAAK2L,IAAIy2B,EAAGn6B,OAT/B,M,8HCEMo6B,EAAMriC,IAAKC,OAAO,GAClBqiC,EAAc,CAAC,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAGxjC,KAAI,SAACyjC,GAAD,MAAiC,CACnFA,EACAviC,IAAKyZ,aAAa4oB,EAAKriC,IAAKC,OAAOsiC,QAGhC,SAASC,EAAmBJ,GAC/B33B,YAAUzK,IAAK+a,YAAYqnB,EAAG12B,KAAO,QACrCjB,YAAUzK,IAAK8b,gBAAgBsmB,EAAGK,KAAa,OAE/C,IAJgD,EAI5CC,EAAM,EAJsC,cAKrBJ,GALqB,IAKhD,2BAAwC,CAAC,IAAD,yBAA5BK,EAA4B,KAArBtU,EAAqB,KAChCruB,IAAKka,mBAAmBkoB,EAAG/T,KAC3B+T,EAAIpiC,IAAK4iC,iBAAiBR,EAAGpiC,IAAKC,OAAO0iC,IACzCD,GAAOC,IARiC,8BAWhD,OAAOD,I,sGCGEvnB,EAAb,wIAGI,WAAc0nB,GAAd,iFACU,IAAIjmC,MAAMue,EAAmB2nB,eADvC,2CAHJ,sJAOI,WACID,EACAE,EACAC,GAHJ,iFAKU,IAAIpmC,MAAMue,EAAmB2nB,eALvC,2CAPJ,kEAAa3nB,EACM2nB,cAAgB,mC,wHClBtB3mB,EAAb,WAGI,WAAYZ,EAAuC/Q,GAAsB,yBAFjE+Q,WAEgE,EACpE,IAAM0nB,EAAsB1nB,EAAMzc,KAAI,SAAA2B,GAAC,OAAKA,aAAa0yB,IAAO1yB,EAAI,IAAI0yB,IAAK1yB,MAC7E+sB,IAAS0V,aAAaD,EAAaz4B,GACnCwR,KAAKT,MAAQ0nB,EANrB,4FASI,WAAc14B,GAAd,oGACWijB,IAAS/P,QAAQzB,KAAKT,MAAOhR,IADxC,gDATJ,sJAaI,WAAuCA,EAAcsjB,EAAcrjB,GAAnE,oGACWgjB,IAASpQ,iCAAiCpB,KAAKT,MAAOhR,EAAMsjB,EAAKrjB,IAD5E,gDAbJ,mE,iCCFO,SAASmjB,EAAYthB,EAAgB82B,GACxC,IAAK,IAAI1jC,EAAI,EAAGA,EAAI4M,EAAKhM,OAAS,EAAGZ,IACjC,GAAI0jC,EAAW92B,EAAK5M,GAAI4M,EAAK5M,EAAI,IAAM,EACnC,OAAO,EAGf,OAAO,EAZX,mC,iCCCA,8DAcA,SAAS2jC,EAAgCC,EAAqBC,EAAqB1f,GAC/E,GAAI5jB,IAAK+a,YAAYsoB,EAAeC,GAAgB,OACd,CAACA,EAAeD,GAAhDA,EAD8C,KAC/BC,EAD+B,KAGpD,IAAMC,EAAevjC,IAAKuL,OAAOvL,IAAKsL,SAAS+3B,EAAeC,GAAgBE,KAC9E,OAAOxjC,IAAKuL,OAAOvL,IAAKsL,SAAStL,IAAKC,OAAO2jB,GAAU2f,GAAevjC,IAAKqa,SAASipB,EAAeD,IAWvG,SAASI,EAA8BJ,EAAqBC,EAAqB1f,GAC7E,GAAI5jB,IAAK+a,YAAYsoB,EAAeC,GAAgB,OACd,CAACA,EAAeD,GAAhDA,EAD8C,KAC/BC,EAD+B,KAIpD,IAAMzf,EAAY7jB,IAAKsL,SAAStL,IAAKsL,SAAStL,IAAKC,OAAO2jB,GAAUyf,GAAgBC,GAC9El4B,EAAcpL,IAAKsL,SAASk4B,IAAKxjC,IAAKqa,SAASipB,EAAeD,IAEpE,OAAOrjC,IAAKuL,OAAOsY,EAAWzY,GAUlC,SAASs4B,EAAuBL,EAAqBC,EAAqB3f,GACtE,GAAI3jB,IAAK+a,YAAYsoB,EAAeC,GAAgB,OACd,CAACA,EAAeD,GAAhDA,EAD8C,KAC/BC,EAD+B,KAGpD,OAAOtjC,IAAKuL,OAAOvL,IAAKsL,SAAStL,IAAKC,OAAO0jB,GAAU6f,KAAMxjC,IAAKqa,SAASipB,EAAeD,IAcvF,SAASM,EACZhqB,EACA0pB,EACAC,EACA1f,EACAD,EACAigB,GAEA,GAAI5jC,IAAK+a,YAAYsoB,EAAeC,GAAgB,OACd,CAACA,EAAeD,GAAhDA,EAD8C,KAC/BC,EAD+B,KAIpD,IAAMO,EAAyBD,EAAmBH,EAAgCL,EAElF,GAAIpjC,IAAK8b,gBAAgBnC,EAAqB0pB,GAC1C,OAAOQ,EAAuBR,EAAeC,EAAe1f,GACzD,GAAI5jB,IAAK8c,SAASnD,EAAqB2pB,GAAgB,CAC1D,IAAMQ,EAAaD,EAAuBlqB,EAAqB2pB,EAAe1f,GACxEmgB,EAAaL,EAAuBL,EAAe1pB,EAAqBgK,GAC9E,OAAO3jB,IAAK8c,SAASgnB,EAAYC,GAAcD,EAAaC,EAE5D,OAAOL,EAAuBL,EAAeC,EAAe3f,K,0LCnEvDgd,EAAb,WAiBI,cAAwF,IAAnEh3B,EAAkE,EAAlEA,KAAMkQ,EAA4D,EAA5DA,UAAWumB,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAsC,yBAhBvE12B,UAgBuE,OAfvEy2B,eAeuE,OAdvEC,eAcuE,OAbvExmB,eAauE,OAV/EmqB,cAA8C,KAUiC,KAT/EC,cAA8C,KASiC,KAW/EC,aAAkE,KAVtEz5B,YAAU21B,EAAYC,EAAW,cACjC51B,YAAU21B,GAAax1B,IAASC,UAAYu1B,EAAYz2B,EAAKa,cAAgB,EAAG,cAChFC,YAAU41B,GAAaz1B,IAASE,UAAYu1B,EAAY12B,EAAKa,cAAgB,EAAG,cAEhFwR,KAAKrS,KAAOA,EACZqS,KAAKokB,UAAYA,EACjBpkB,KAAKqkB,UAAYA,EACjBrkB,KAAKnC,UAAY7Z,IAAKC,OAAO4Z,GAzBrC,6CAkCI,WACI,OAA0B,OAAtBmC,KAAKkoB,aACDloB,KAAKrS,KAAK2R,YAAcU,KAAKokB,UACtB,CACHxc,QAAStJ,IAAcC,gBACnB3P,IAASgR,mBAAmBI,KAAKokB,WACjCx1B,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,GAEJ8J,QAASjY,KAENsQ,KAAKrS,KAAK2R,YAAcU,KAAKqkB,UAC7B,CACHzc,QAAStJ,IAAcC,gBACnByB,KAAKrS,KAAK0R,aACVzQ,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,GAEJ8J,QAASrJ,IAAcE,gBACnB5P,IAASgR,mBAAmBI,KAAKokB,WACjCpkB,KAAKrS,KAAK0R,aACVW,KAAKnC,WACL,IAID,CACH+J,QAASlY,IACTiY,QAASrJ,IAAcE,gBACnB5P,IAASgR,mBAAmBI,KAAKokB,WACjCx1B,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,IAKTmC,KAAKkoB,eAzEpB,4BA+EI,WACI,OAAO7Q,YAAYrX,KAAKrS,KAAKM,OAAQ+R,KAAKrS,KAAKQ,OAAQ6R,KAAKokB,aAhFpE,4BAsFI,WACI,OAAO/M,YAAYrX,KAAKrS,KAAKM,OAAQ+R,KAAKrS,KAAKQ,OAAQ6R,KAAKqkB,aAvFpE,mBA6FI,WA0BI,OAzB2B,OAAvBrkB,KAAKgoB,gBACDhoB,KAAKrS,KAAK2R,YAAcU,KAAKokB,UAC7BpkB,KAAKgoB,cAAgBpkC,IAAeC,cAChCmc,KAAKrS,KAAKM,OACVqQ,IAAcC,gBACV3P,IAASgR,mBAAmBI,KAAKokB,WACjCx1B,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,IAGDmC,KAAKrS,KAAK2R,YAAcU,KAAKqkB,UACpCrkB,KAAKgoB,cAAgBpkC,IAAeC,cAChCmc,KAAKrS,KAAKM,OACVqQ,IAAcC,gBACVyB,KAAKrS,KAAK0R,aACVzQ,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,IAIRmC,KAAKgoB,cAAgBpkC,IAAeC,cAAcmc,KAAKrS,KAAKM,OAAQyB,MAGrEsQ,KAAKgoB,gBAvHpB,mBA6HI,WA0BI,OAzB2B,OAAvBhoB,KAAKioB,gBACDjoB,KAAKrS,KAAK2R,YAAcU,KAAKokB,UAC7BpkB,KAAKioB,cAAgBrkC,IAAeC,cAAcmc,KAAKrS,KAAKQ,OAAQuB,KAC7DsQ,KAAKrS,KAAK2R,YAAcU,KAAKqkB,UACpCrkB,KAAKioB,cAAgBrkC,IAAeC,cAChCmc,KAAKrS,KAAKQ,OACVmQ,IAAcE,gBACV5P,IAASgR,mBAAmBI,KAAKokB,WACjCpkB,KAAKrS,KAAK0R,aACVW,KAAKnC,WACL,IAIRmC,KAAKioB,cAAgBrkC,IAAeC,cAChCmc,KAAKrS,KAAKQ,OACVmQ,IAAcE,gBACV5P,IAASgR,mBAAmBI,KAAKokB,WACjCx1B,IAASgR,mBAAmBI,KAAKqkB,WACjCrkB,KAAKnC,WACL,KAKTmC,KAAKioB,gBAvJpB,qCA2QI,SAA+BxE,GAE3B,MAAiDzjB,KAAKmoB,oBAAoB1E,GAAlE2E,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,kBAGrBC,EAAY,IAAIlpB,IAClBY,KAAKrS,KAAKM,OACV+R,KAAKrS,KAAKQ,OACV6R,KAAKrS,KAAK+H,IACV2yB,EACA,EACAz5B,IAASiT,mBAAmBwmB,IAE1BE,EAAY,IAAInpB,IAClBY,KAAKrS,KAAKM,OACV+R,KAAKrS,KAAKQ,OACV6R,KAAKrS,KAAK+H,IACV0yB,EACA,EACAx5B,IAASiT,mBAAmBumB,IAI1BI,EAA4B7D,EAAS8D,YAAT,yBAC9B96B,KAAMqS,KAAKrS,KACXy2B,UAAWpkB,KAAKokB,UAChBC,UAAWrkB,KAAKqkB,WACbrkB,KAAKojB,aAJsB,IAK9BwE,kBAAkB,KAmBtB,MAAO,CAAEhgB,QAdW,IAAI+c,EAAS,CAC7Bh3B,KAAM46B,EACN1qB,UAAW2qB,EAA0B3qB,UACrCumB,UAAWpkB,KAAKokB,UAChBC,UAAWrkB,KAAKqkB,YACjBjB,YALKxb,QAcUD,QAPE,IAAIgd,EAAS,CAC7Bh3B,KAAM26B,EACNzqB,UAAW2qB,EAA0B3qB,UACrCumB,UAAWpkB,KAAKokB,UAChBC,UAAWrkB,KAAKqkB,YACjBjB,YALKzb,WAnThB,qCAmUI,SAA+B8b,GAE3B,MAAiDzjB,KAAKmoB,oBAAoB1E,GAAlE2E,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,kBAGrBC,EAAY,IAAIlpB,IAClBY,KAAKrS,KAAKM,OACV+R,KAAKrS,KAAKQ,OACV6R,KAAKrS,KAAK+H,IACV2yB,EACA,EACAz5B,IAASiT,mBAAmBwmB,IAa1BzgB,EAAU,IAAI+c,EAAS,CACzBh3B,KAZc,IAAIyR,IAClBY,KAAKrS,KAAKM,OACV+R,KAAKrS,KAAKQ,OACV6R,KAAKrS,KAAK+H,IACV0yB,EACA,EACAx5B,IAASiT,mBAAmBumB,IAO5BvqB,UAAWmC,KAAKnC,UAChBumB,UAAWpkB,KAAKokB,UAChBC,UAAWrkB,KAAKqkB,YACjBzc,QAEGD,EAAU,IAAIgd,EAAS,CACzBh3B,KAAM26B,EACNzqB,UAAWmC,KAAKnC,UAChBumB,UAAWpkB,KAAKokB,UAChBC,UAAWrkB,KAAKqkB,YACjB1c,QAEH,MAAO,CAAEC,QAASA,EAAQzQ,SAAUwQ,QAASA,EAAQxQ,YAzW7D,iCAiXI,SAA4BssB,GACxB,IAAMiF,EAAa1oB,KAAKrS,KAAK2S,YAAYqoB,WAAWr5B,SAAS,IAAI4Y,IAAQ,GAAG7J,SAASolB,IAC/EmF,EAAa5oB,KAAKrS,KAAK2S,YAAYqoB,WAAWr5B,SAASm0B,EAAkB9zB,IAAI,IAC/E04B,EAAoB3gB,YAAmBghB,EAAW7gB,UAAW6gB,EAAWt5B,aACxEpL,IAAK8b,gBAAgBuoB,EAAmBz5B,IAASgS,kBACjDynB,EAAoBrkC,IAAK2L,IAAIf,IAASgS,eAAgB5c,IAAKC,OAAO,KAEtE,IAAImkC,EAAoB1gB,YAAmBkhB,EAAW/gB,UAAW+gB,EAAWx5B,aAI5E,OAHIpL,IAAKka,mBAAmBkqB,EAAmBx5B,IAASiS,kBACpDunB,EAAoBpkC,IAAKqa,SAASzP,IAASiS,eAAgB7c,IAAKC,OAAO,KAEpE,CACHokC,oBACAD,wBA9XZ,0BAsKI,YAcI,IAbAz6B,EAaD,EAbCA,KACAy2B,EAYD,EAZCA,UACAC,EAWD,EAXCA,UACAzc,EAUD,EAVCA,QACAD,EASD,EATCA,QACAigB,EAQD,EARCA,iBASMP,EAAgBz4B,IAASgR,mBAAmBwkB,GAC5CkD,EAAgB14B,IAASgR,mBAAmBykB,GAClD,OAAO,IAAIM,EAAS,CAChBh3B,OACAy2B,YACAC,YACAxmB,UAAW8pB,YACPh6B,EAAK0R,aACLgoB,EACAC,EACA1f,EACAD,EACAigB,OAjMhB,yBAgNI,YAYI,IAXAj6B,EAWD,EAXCA,KACAy2B,EAUD,EAVCA,UACAC,EASD,EATCA,UACAzc,EAQD,EARCA,QACAggB,EAOD,EAPCA,iBAQA,OAAOjD,EAAS8D,YAAY,CACxB96B,OACAy2B,YACAC,YACAzc,UACAD,QAAS8e,IACTmB,uBAnOZ,yBA+OI,YAUI,IATAj6B,EASD,EATCA,KACAy2B,EAQD,EARCA,UACAC,EAOD,EAPCA,UACA1c,EAMD,EANCA,QAQA,OAAOgd,EAAS8D,YAAY,CACxB96B,OACAy2B,YACAC,YACAzc,QAAS6e,IACT9e,UACAigB,kBAAkB,QAjQ9B,M,iCCnBA,8CAEO,SAASiB,EAAWnjC,EAAoBxF,GAC3C,IAAI4oC,EAAcj2B,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,OAM5E,GAJI1kB,GAAWA,KAAW2S,IAAcgT,eACpCijB,EAAcj2B,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,QAGxElf,EAASI,SAAU,OAAOgjC,EAC9B,GAAIpjC,EAASC,QAAS,OAAOD,EAASrC,QACtC,MAAM,IAAIzC,MAAM,sB,iCCbpB,8DAGMmoC,EAAoC/kC,IAAKyZ,aAAazZ,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAKlF,SAAS+kC,EAAeC,GAC3B,GAAKA,EACL,OAAIA,EAAevjC,SAASI,SACpB9B,IAAK+a,YAAYkqB,EAAe9xB,SAAU4xB,GACnCnlC,IAAeC,cAClBolC,EAAevjC,SACf1B,IAAKqa,SAAS4qB,EAAe9xB,SAAU4xB,IAGpCnlC,IAAeC,cAAcolC,EAAevjC,SAAU1B,IAAKC,OAAO,IAG1EglC,I,iCCpBX,6CAEe,SAASlgC,EAAYmgC,EAAsB3uB,GAAuC,IAAjB4uB,IAAgB,yDACtFC,EAAgB9jB,mBAGtB5K,qBAAU,WACN0uB,EAAc/3B,QAAU63B,IACzB,CAACA,IAGJxuB,qBAAU,WACN,SAASnM,IACL,IAAM8C,EAAU+3B,EAAc/3B,QAC9BA,GAAWA,IAGf,GAAc,OAAVkJ,EAAgB,CACZ4uB,GAAS56B,IACb,IAAMgD,EAAK83B,YAAY96B,EAAMgM,GAC7B,OAAO,kBAAM+uB,cAAc/3B,OAGhC,CAACgJ,EAAO4uB,M,kHCKR,IAAe1D,EAAtB,iGAGI,SAA8BvgC,EAAcsD,GACxC,MAPG,UAOoBA,EACjBi9B,EAAWvB,UAAUC,mBAAmB,oBAAqB,CAC3Dj/B,EAAM7B,QACNu/B,YAAMp6B,EAAQ+gC,OACd3G,YAAMp6B,EAAQghC,QACdhhC,EAAQmqB,EACRnqB,EAAQ+pB,EACR/pB,EAAQm4B,IAEV8E,EAAWvB,UAAUC,mBAAmB,aAAc,CACpDj/B,EAAM7B,QACNu/B,YAAMp6B,EAAQrD,QACdy9B,YAAMp6B,EAAQwrB,UACdxrB,EAAQmqB,EACRnqB,EAAQ+pB,EACR/pB,EAAQm4B,QAnBxB,KAAsB8E,EACJvB,UAAuB,IAAIr/B,IAAU6gC,EAAIA,M,gCC7B3D,gNAEY9V,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKL,IAAM6Z,EAAiBlsC,YAAmD,uBACpEmsC,EAAmBnsC,YAAmB,yBACtCuyB,EAAYvyB,YAAmD,kBAC/DosC,EACTpsC,YAMG,yBACMqsC,EAAersC,YAA2C,sB,yECH3DmV,E,yDALCE,EAAsBC,IAAcC,aAAaC,IAAQC,KAAKJ,qB,SAK/DF,O,eAAAA,I,qBAAAA,I,kBAAAA,M,KASiD,mBACxDA,EAAUO,IAAM,IADwC,cAExDP,EAAUQ,OAAS,IAFqC,cAGxDR,EAAUS,KAAO,IAWf,SAAS4O,EAAT,GAUK,IATR8nB,EASO,EATPA,aACAn2B,EAQO,EARPA,OACAC,EAOO,EAPPA,OACAmO,EAMO,EANPA,2BAOA,EAAyBpO,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOzF,EAAP,KAAeE,EAAf,KACA,OAAO63B,4BACH6D,EACA5D,oBACI,CAAC,SACD,CAACC,IAAgBC,OAAO,CAAC,UAAW,WAAY,CAACl4B,EAAO5K,QAAS8K,EAAO9K,YAJxD,OAMpBye,QANoB,IAMpBA,IAA8BlP,K,iCCxDtC,kCAIO,IAAMk3B,EAAc,WACvB,OAJOrgB,UAAUsgB,S,iCCDrB,wFAUe,SAASxe,EAAcye,GAAwE,IAAD,MACnGC,EAAgB3vB,YAAY0vB,EAAS,KACrCpZ,EAAkBlvB,mBAAQ,WAC5B,IAAKuoC,EAAe,MAAO,MAAC1nC,GAC5B,IACI,OAAO0nC,EAAgB,CAACpZ,mBAASoZ,IAAkB,MAAC1nC,GACtD,MAAOpD,GACL,MAAO,MAACoD,MAEb,CAAC0nC,IACElZ,EAAoBC,aAAwB,GAC5CC,EAAkBC,YAAoBH,EAAmB,WAAYH,GACrEO,EAAqB,UAAGF,EAAgBttB,cAAnB,aAAG,EAAyB,GACjDytB,EAAmBC,YACrBF,IAA0B7T,YAAO6T,GAAyBA,OAAwB5uB,GAClF,GAEE2nC,EAAOhZ,YAAoBE,EAAkB,OAAQR,GAErDU,EAAU2Y,IAAkBD,EAClC,MAAO,CACH3mC,QAASiuB,EAAU,KAAH,oBAAU4Y,EAAKvmC,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C2B,QAASgsB,GAAWL,EAAgB3rB,SAAW4kC,EAAK5kC,W,iCChC5D,kCAAO,IAAM6kC,EAAiB,SAACC,GAE3B,IADA,IAAIzpC,EAAO,EACF8C,EAAI,EAAGA,EAAI2mC,EAAI/lC,OAAQZ,IAC5B9C,EAAOypC,EAAIC,WAAW5mC,KAAO9C,GAAQ,GAAKA,GAG9C,IADA,IAAI2pC,EAAS,IACJ7mC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB6mC,IAAW,MADI3pC,GAAa,EAAJ8C,EAAU,KACVS,SAAS,KAAK4sB,QAAQ,GAElD,OAGJ,SAAkByZ,GAEd,IAAIhY,EAAS,EAAGiY,EAAS,EAAGr7B,EAAS,EACrB,GAAZo7B,EAAElmC,QACFkuB,EAAI,KAAOgY,EAAE,GAAKA,EAAE,GACpBC,EAAI,KAAOD,EAAE,GAAKA,EAAE,GACpBp7B,EAAI,KAAOo7B,EAAE,GAAKA,EAAE,IACD,GAAZA,EAAElmC,SACTkuB,EAAI,KAAOgY,EAAE,GAAKA,EAAE,GACpBC,EAAI,KAAOD,EAAE,GAAKA,EAAE,GACpBp7B,EAAI,KAAOo7B,EAAE,GAAKA,EAAE,IAGxBhY,GAAK,IACLiY,GAAK,IACLr7B,GAAK,IACL,IAAMs7B,EAAOz7B,KAAKqjB,IAAIE,EAAGiY,EAAGr7B,GACxBu7B,EAAO17B,KAAK6P,IAAI0T,EAAGiY,EAAGr7B,GACtBw7B,EAAQD,EAAOD,EACfG,EAAS,EAETtY,EAAS,EAGTsY,EADS,GAATD,EACI,EACCD,GAAQnY,GACPiY,EAAIr7B,GAAKw7B,EAAS,EACnBD,GAAQF,GACRr7B,EAAIojB,GAAKoY,EAAQ,GAEjBpY,EAAIiY,GAAKG,EAAQ,GAE1BC,EAAI57B,KAAKC,MAAU,GAAJ27B,IAEP,IACJA,GAAK,KAOT,OALAtY,GAAKoY,EAAOD,GAAQ,IAEV,KADG,GAATE,EAAa,EAAIA,GAAS,EAAI37B,KAAK67B,IAAI,EAAIvY,EAAI,MACpC+C,QAAQ,GACvB/C,IAAU,IAAJA,GAAS+C,QAAQ,GAEhB,CACHyV,WAAY,OAASF,EAAI,iBACzBvhC,KAAM,OAASuhC,EAAI,iBACnBpkC,OAAQ,OAASokC,EAAI,kBAhDlBG,CAAST,K,wLCgBb,SAASU,EAAT,GAAwF,IAAjEzmC,EAAgE,EAAhEA,OAAQ0mC,EAAwD,EAAxDA,OAAQ7/B,EAAgD,EAAhDA,UAAW8/B,EAAqC,EAArCA,qBAC7ChrC,EAAYD,cAAZC,QAEFirC,EAAWC,cAEjB,OACI,sBAAK5oC,UAAW,cAAhB,UACI,cAAC,IAAD,CAAcwyB,IAAI,OAAO31B,MAAO,CAAEgH,MAAO,OAAQglC,KAAM,OAAvD,SACI,eAAC,IAAD,WACKJ,EAAS,cAAC,IAAD,CAAW5rC,MAAO,CAAEisC,OAAQ,WAAat+B,QAASi+B,IAAa,wBACzE,cAAC,IAAKjM,aAAN,CAAmB3L,MAAO,eAA1B,SACI,wFAAe9uB,EAAOF,YAEzB+G,EAAY,cAAC,IAAD,CAAW4B,QAAS5B,IAAgB,6BAGzD,cAAC,IAAD,IACA,eAAC,IAAD,CAAY4pB,IAAI,KAAK31B,MAAO,CAAEiH,QAAS,QAAvC,UACK/B,EAAOzB,KAAI,SAACoC,GACT,OACI,cAAC,IAAD,CAAMqmC,gBAAiB,gBAAgD/oC,UAAU,2BAA2B8D,QAAQ,OAApH,SACI,eAAC,IAAD,CAAY0uB,IAAI,OAAO2Q,QAAQ,SAA/B,UACI,cAAC,IAAD,CAAcjgC,SAAUR,EAA0B9F,KAAM,SACxD,eAAC,IAAD,CAAY41B,IAAI,MAAM2Q,QAAQ,SAA9B,UACI,cAAC,IAAKjQ,KAAN,CAAW8V,GAAG,MAAMC,GAAG,MAAMtW,WAAY,IAAKxZ,SAAU,GAAxD,SACKzW,EAAM0f,SAEX,cAAC,IAAK8Q,KAAN,CAAWrC,MAAO,eAAgB8B,WAAY,IAAKxZ,SAAU,GAA7D,SACKzW,EAAMqD,UAGdrI,GACG,cAAC,IAAD,CAAcg6B,KAAMwR,YAAgBxrC,EAASgF,EAAM7B,QAASsoC,IAAiBC,SAA7E,SACI,cAAC,IAAD,CAAajwB,SAAU,GAAvB,SAA4BzW,EAAM7B,gBAbL,SAAW6B,EAAM7B,YAoBtE,cAAC,IAAD,CACIwoC,kBAAkB,EAClBtlC,cAAc,OACdD,QAAQ,YACR0G,QAAS,WACLzI,EAAOzB,KAAI,SAACoC,GAAD,OAAWimC,EAASjmC,MAC/BgmC,GAAwBA,EAAqB3mC,EAAO,KAExD/B,UAAU,wBARd,SAUI,2C,iCC5EpB,8CAMO,SAAS2f,EAAiBjiB,GAC7B,GAAIA,GAAWA,KAAW2S,IAAcgT,aACpC,OAAO3lB,I,sMCSTd,GAf6BpB,UAAOC,IAAV,wCAAGD,CAAH,mCAKCA,UAAOC,IAAV,wCAAGD,CAAH,qHAYjB,SAFPoB,EAGO,QAHPA,EAIM,QAJNA,EAKM,SALNA,EAMO,SANPA,EAOO,SAyCA0sC,GArCD,eAAD,OAVE,QAUF,KACC,eAAD,OAAiB1sC,EAAjB,KACC,eAAD,OAAiBA,EAAjB,KACA,eAAD,OAAiBA,EAAjB,KACC,eAAD,OAAiBA,EAAjB,KACE,eAAD,OAAiBA,EAAjB,KACC,eAAD,OAAiBA,EAAjB,KACE,eAAD,OAAiBA,EAAjB,KAIcpB,UAAOC,IAAV,wCAAGD,CAAH,uEAMOA,UAAOC,IAAV,wCAAGD,CAAH,kHASrB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,6DAIuB3B,UAAOC,IAAV,wCAAGD,CAAH,mEACpB,qBAAGG,MAAkBugC,iBAMH1gC,UAAOC,IAAV,wCAAGD,CAAH,OAeR+tC,GAdgB/tC,UAAOiF,EAAV,wCAAGjF,CAAH,oHAUpB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,kDAI2B3B,UAAOC,IAAV,wCAAGD,CAAH,yHASxB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,wKA0BOqsC,GAjBgBhuC,UAAOC,IAAV,wCAAGD,CAAH,+KAiBCyhC,4BAAH,oEAOXwM,EAAcjuC,UAAOC,IAAV,wCAAGD,CAAH,mQAEP,gBAAGkuC,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,WAKzC,qBAAG/tC,MAAkBC,WAAWuB,UAA/B,IAAD,+E,gRChHS,SAASwsC,EAAT,GAAwE,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,iBACpCnsC,EAAYD,cAAZC,QAEF0T,EAAQwH,IAAavI,IAAcgT,aAAa3lB,GAAW,IAAIA,SAErE,OAAO0T,EAAMvP,OAAS,EAClB,qBAAK7B,UAAW,oBAAhB,SACI,cAAC,IAAD,CAASwyB,IAAI,MAAb,SACKphB,EAAM9Q,KAAI,SAAC4C,GACR,IAAM4mC,EAAU,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAkBn+B,OAAOxI,GAC5C,OACI,yBACIlD,UAAW,0CACXwK,QAAS,kBAAOs/B,GAAcF,EAAS1mC,IACvC2zB,SAAUiT,EAHd,UAMI,cAACnK,EAAA,EAAD,CAAcz8B,SAAUA,EAAUrG,MAAO,CAAE65B,YAAa,KACxD,+BAAOxzB,EAASkf,WAHXikB,YAAWnjC,EAAUxF,GAAW2S,IAAcgT,aAAa3lB,GAAW,IAAIA,iBASnG,K,uDCnBO,SAASqsC,EAAT,GAA2F,IAAtErnC,EAAqE,EAArEA,MAAcsnC,GAAuD,EAA9DntC,MAA8D,EAAvDmtC,KAAKC,EAAkD,EAAlDA,eAAgBC,EAAkC,EAAlCA,eAI7DC,GAHQ/K,cAGEgL,YAAoB1nC,IAC9B2lB,EAAWgiB,YAAiB3nC,GAElC,OACI,sBAAK1C,UAAW,6CAAhB,UACI,sBAAKA,UAAW,SAAhB,UACI,cAAC2/B,EAAA,EAAD,CAAcz8B,SAAUR,EAA0B9F,KAAM,OAAQC,MAAO,CAAEwM,QAAS2gC,EAAM,MAAQ,OAChG,sBAAKhqC,UAAW,eAAhB,UACK0C,EAAM0f,OACP,qBAAKpiB,UAAW,qBAAsB+kB,MAAOriB,EAAMqD,KAAnD,SACKrD,EAAMqD,aAIjBsiB,GAAa8hB,EAWX,eAAC,IAAD,CAAUttC,MAAO,CAAEytC,SAAU,eAA7B,UACI,cAAC,IAAD,IACA,cAAC,IAAKlO,KAAN,CAAWvL,MAAO,gBAAlB,SACI,sCAbR,wBACI7wB,UAAW,4CACXwK,QAAS,WACL0/B,GAAkBA,EAAexnC,GACjCunC,KAJR,SAOI,sC,8BCvBpB,SAASM,EAAYrnC,GACjB,OAAOA,EAASC,QAAUD,EAASrC,QAAU,UAGjD,SAAS2pC,EAAT,GAA0D,IAArCtnC,EAAoC,EAApCA,SACjB,KAAMA,aAAoB+K,KACtB,OAAO,yBAGX,IAAMqU,EAAOpf,EAASof,KACtB,IAAKA,GAAwB,IAAhBA,EAAKzgB,OAAc,OAAO,yBAEvC,IAAM4oC,EAAMnoB,EAAK,GAEjB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAkBzb,KAAM4jC,EAAIzlB,YAA5B,SACI,cAAC,IAAD,UAAmBylB,EAAI1kC,MAAb0kC,EAAI17B,MAEjBuT,EAAKzgB,OAAS,EACX,cAAC,IAAD,CACIgF,KAAMyb,EACD7T,MAAM,GACNnO,KAAI,gBAAGyF,EAAH,EAAGA,KAAMif,EAAT,EAASA,YAAT,gBAA8Bjf,EAA9B,aAAuCif,MAC3CgT,KAAK,QAJd,SAMI,cAAC,IAAD,oBAEJ,QAchB,SAAS0S,EAAT,GAAkG,IAA3ExnC,EAA0E,EAA1EA,SAAU0mC,EAAgE,EAAhEA,SAAUE,EAAsD,EAAtDA,WAAYa,EAA0C,EAA1CA,cAC7CrgC,GADuF,EAA3BzN,MACtD0tC,EAAYrnC,IAClB0nC,EAAoBr7B,cACpBs7B,EAAmBC,YAAcF,EAAmB1nC,EAASC,QAAUD,OAAWnD,GAClFgrC,EAAcX,YAAoBlnC,GAEhCxF,EAAYD,cAAZC,QAGR,OACI,sBAAKsC,UAAS,gEAA2DsK,GAAOE,QAAS,kBAAOs/B,EAAa,KAAOF,KAAa,gBAAeE,EAAY,gBAAea,EAA3K,UACI,sBAAK3qC,UAAW,SAAhB,UACI,cAAC2/B,EAAA,EAAD,CAAcz8B,SAAUA,EAA6BtG,KAAM,SAC3D,sBAAKoD,UAAW,YAAhB,UACI,cAAC,IAAD,CAAM+kB,MAAO7hB,EAAS6C,KAAM4sB,WAAY,IAAxC,SACKzvB,EAASkf,SAEd,sBAAMpiB,UAAW,SAAjB,SACMkD,EAASI,UAAaunC,IAAoBE,EAGxC16B,IAAcgT,aAAa3lB,GAAW6S,IAAQC,KAAKkT,sBAAsBtB,OAFzE,2DAAQlf,EAAS6C,gBAOjC,cAACykC,EAAD,CAAWtnC,SAAUA,OAKjC,IAAM8nC,EAAa,QAGnB,SAASC,EAAYrH,GACjB,OAAOA,IAAMoH,EAGjB,SAASE,EAAT,GAAkE,IAApCruC,EAAmC,EAAnCA,MACZuiC,cACd,OACI,cAAC,IAAD,CAAiBviC,MAAOA,EAAxB,SACI,cAAC,IAAD,CAAeiH,QAAQ,WAAWC,cAAc,MAAhD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAKq4B,KAAN,CAAW4M,GAAG,MAAM7vB,SAAS,OAAO0X,MAAO,eAA3C,SACI,yEAGR,cAAC5I,EAAA,EAAD,CAAgBphB,KAAM,oIAoB3B,SAASskC,EAAT,GAWQ,IAVnBC,EAUkB,EAVlBA,OACAnoC,EASkB,EATlBA,WACAooC,EAQkB,EARlBA,gBACAxB,EAOkB,EAPlBA,iBACAyB,EAMkB,EANlBA,iBACAC,EAKkB,EALlBA,cACAC,EAIkB,EAJlBA,aACAvB,EAGkB,EAHlBA,eACAC,EAEkB,EAFlBA,eACAuB,EACkB,EADlBA,mBAEMC,EAAqCxsC,mBAAQ,WAC/C,OAAImsC,IAAkC,OAAfA,QAAe,IAAfA,OAAA,EAAAA,EAAiBxpC,QAAS,EACvC,GAAN,mBAAWoB,GAAX,CAAuB+nC,GAAvB,YAAsCK,IAEnCpoC,IACR,CAACA,EAAYooC,IAEV5Y,EAAM30B,uBACR,YAAgD,IAA5Bi4B,EAA2B,EAA3BA,KAAM3qB,EAAqB,EAArBA,MAAOvO,EAAc,EAAdA,MACvB8uC,EAA4B5V,EAAK3qB,GAEvC,GAAI6/B,EAAYU,GACZ,OAAO,cAACT,EAAD,CAAoBruC,MAAOA,IAGtC,IAAMqG,EAAWyoC,EAEX7B,EAAar6B,QAAQvM,GAAY2mC,GAAoBA,EAAiBn+B,OAAOxI,IAC7EynC,EAAgBl7B,QAAQvM,GAAYqoC,GAAiBA,EAAc7/B,OAAOxI,IAG1ER,EAAK,OAAGQ,QAAH,IAAGA,OAAH,EAAGA,EAAU+H,QAIxB,OAFmBG,EAAQnI,EAAWpB,QAEpBa,EACP,cAACqnC,EAAD,CAAWltC,MAAOA,EAAO6F,MAAOA,EAAOunC,eAAgBA,EAAgBC,eAAgBA,EAAgBF,KAAG,IAC1G9mC,EACA,cAACwnC,EAAD,CAAa7tC,MAAOA,EAAOqG,SAAUA,EAAU4mC,WAAYA,EAAYF,SAT7D,kBAAM1mC,GAAYooC,EAAiBpoC,IASkDynC,cAAeA,EAAec,mBAAoBA,IAEjJ,OAGf,CAACxoC,EAAWpB,OAAQypC,EAAkBC,EAAe1B,EAAkBK,EAAgBD,EAAgBwB,IAGrGG,EAAU9tC,uBAAY,SAACsN,EAAe2qB,GACxC,IAAM7yB,EAAW6yB,EAAK3qB,GACtB,OAAI6/B,EAAY/nC,GAAkB8nC,EAC3BT,EAAYrnC,KACpB,IAEH,OACI,cAAC,IAAD,CAAerG,MAAO,CAAEgvC,SAAU,SAAWT,OAAQA,EAAQ5kC,IAAKglC,EAAqB3nC,MAAM,OAAO6nC,SAAUA,EAAUI,UAAWJ,EAAS7pC,OAAQkqC,SAAU,GAAIH,QAASA,EAA3K,SACKnZ,I,sBC9LE,SAASuZ,IAAwD,IAA9CC,EAA6C,wDAC3E,EAA0B5mC,mBAAS4mC,GAAnC,mBAAOztC,EAAP,KAAc0tC,EAAd,KACM5jB,EAASxqB,uBAAY,kBAAMouC,GAAS,SAAC1tC,GAAD,OAAYA,OAAQ,IAC9D,MAAO,CAACA,EAAO8pB,G,8BC+BZ,SAAS6jB,EAAT,GAWkB,IAVrBtC,EAUoB,EAVpBA,iBACAyB,EASoB,EATpBA,iBACAc,EAQoB,EARpBA,sBACAC,EAOoB,EAPpBA,gBACAZ,EAMoB,EANpBA,mBACAa,EAKoB,EALpBA,gBACA1jC,EAIoB,EAJpBA,UACAJ,EAGoB,EAHpBA,OACAyhC,EAEoB,EAFpBA,eACAC,EACoB,EADpBA,eAEQxsC,EAAYD,cAAZC,QAIF6uC,GAHQnN,cAGItc,oBAElB,EAAsCzd,mBAAiB,IAAvD,mBAAOu5B,EAAP,KAAoB4N,EAApB,KACMC,EAAiB30B,YAAY8mB,EAAa,KAEhD,EAA4Bv5B,oBAAkB,GAAvCqnC,EAAP,oBAEMjpC,EAAYC,cAGZipC,EAAkBpsC,YAAUksC,GAE5BG,EAAcC,YAASJ,GAEvBK,EAAqB1C,YAAoBwC,GAE/C10B,qBAAU,WACFy0B,GACAI,IAAQ7yB,MAAM,CACV8yB,SAAU,kBACVC,OAAQ,oBACR3Q,MAAOqQ,MAGhB,CAACA,IAEJ,IAAMO,ECvCH,SAA4BC,GAC/B,IAAMrsC,EAAW0C,cACXmhC,EAAazlC,mBAAQ,kBAzB/B,SAA4B4B,GAGxB,OAAO,SAAoBoQ,EAAeC,GAKtC,IAnBmBi8B,EAAqCC,EAsBlDC,GAtBaF,EAmBFtsC,EAASoQ,EAAOrQ,SAnBuBwsC,EAoBvCvsC,EAASqQ,EAAOtQ,SAnBjCusC,GAAYC,EACLD,EAAS7wB,YAAY8wB,IAAa,EAAID,EAAS1K,QAAQ2K,GAAY,EAAI,EACvED,GAAYA,EAAS7wB,YAAY,MAChC,EACD8wB,GAAYA,EAAS9wB,YAAY,KACjC,EAEJ,GAeH,OAAoB,IAAhB+wB,EAA0BA,EAE1Bp8B,EAAOkR,QAAUjR,EAAOiR,OAEjBlR,EAAOkR,OAAOM,cAAgBvR,EAAOiR,OAAOM,eAAiB,EAAI,EAEjExR,EAAOkR,QAAcjR,EAAOiR,QAAX,EAAyB,GAOxBmrB,CAAkB,OAACzsC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAO5B,mBAAQ,WACX,OAAIiuC,EACO,SAACj8B,EAAeC,GAAhB,OAAgE,EAA9BwzB,EAAWzzB,EAAQC,IAErDwzB,IAEZ,CAACwI,EAAUxI,ID8BU6I,CAAmBd,GAErCe,EAA0BvuC,mBAAQ,WACpC,OAAOw/B,YAAav/B,OAAOwE,OAAOF,GAAYgpC,KAC/C,CAAChpC,EAAWgpC,IAETiB,EAAwBxuC,mBAAQ,WAClC,OAAOuuC,EAAe/sC,KAAKwsC,KAC5B,CAACO,EAAgBP,IAEdS,EAAuBhP,YAAuB+O,EAAcjB,GAE5DmB,EAAQ1uC,mBAAQ,kBAAMxB,GAAWmb,IAActX,QAAQ7D,KAAU,CAACA,IAElEmwC,EAA0C3uC,mBAAQ,WACpD,IAAMi/B,EAAIsO,EAAe/pB,cAAc1I,OACvC,OAAU,MAANmkB,GAAmB,OAANA,GAAoB,QAANA,GAAqB,SAANA,IACnCyP,EAAK,CAAIA,GAAJ,mBAAcD,IAEvBA,IACR,CAAClB,EAAgBmB,EAAOD,IAErBjF,EAAuB5qC,uBACzB,SAACoF,GACGooC,EAAiBpoC,GACjB0F,MAEJ,CAACA,EAAW0iC,IAIhBpzB,qBAAU,WACF1P,GAAQgkC,EAAe,MAC5B,CAAChkC,IAGJ,IAAMslC,GAAWhrB,mBACXirB,GAAcjwC,uBAAY,SAACoc,GAAW,IAAD,EACjClP,EAAQkP,EAAMC,OAAOjZ,MACrB8sC,EAAmBztC,YAAUyK,GACnCwhC,EAAewB,GAAoBhjC,GACnC,UAAAuhC,EAAU19B,eAAV,SAAmBo/B,SAAS,KAC7B,IAEGC,GAAcpwC,uBAChB,SAACklB,GACG,GAAc,UAAVA,EAAE1Y,IAEF,GAAU,SADAmiC,EAAe/pB,cAAc1I,QACnB4zB,EAChBlF,EAAqBkF,QAClB,GAAIC,EAA4BhsC,OAAS,EAAG,CAAC,IAAD,GAC3C,UAAAgsC,EAA4B,GAAGzrB,cAA/B,eAAuCM,iBAAkB+pB,EAAezyB,OAAO0I,eAAwD,IAAvCmrB,EAA4BhsC,QAC5H6mC,EAAqBmF,EAA4B,OAKjE,CAACpB,EAAgBmB,EAAOC,EAA6BnF,IAIzD,GAAuBsD,GAAU,GAAjC,qBAAO9kC,GAAP,MAAaohB,GAAb,MACM1F,GAAOE,mBACbH,YAAkBC,GAAM1b,GAAOohB,QAASvoB,GAGxC,IAAMouC,GAAyBC,YAAsD,IAA1BX,EAAe5rC,QAAiB4qC,EAAe5qC,OAAS,IAAM8qC,EAAmBF,OAAiB1sC,GAE7J,OACI,sBAAKC,UAAW,QAAhB,UACI,gCACI,sBAAKA,UAAW,sBAAhB,UACI,yCACA,cAAC,IAAD,CAAWwK,QAAS5B,OAExB,cAAC,IAAD,CACI6R,KAAK,OACL1L,GAAG,qBACH2K,YAAa,sCACba,aAAa,MACbrZ,MAAO09B,EACPp4B,IAAKsnC,GACL7zB,SAAU8zB,GACVM,UAAWH,KAEd7B,GAAmB,cAAC1C,EAAD,CAAaC,SAAUlB,EAAsBmB,iBAAkBA,OAEtF+C,IAAgBE,EACb,8BACI,cAAC/C,EAAD,CAAWrnC,MAAOkqC,EAAa3C,eAAgBA,EAAgBC,eAAgBA,OAE/D,OAApByD,QAAoB,IAApBA,OAAA,EAAAA,EAAsB9rC,QAAS,IAA2B,OAAtBssC,SAAsB,IAAtBA,QAAA,EAAAA,GAAwBtsC,QAAS,EACrE,qBAAK7B,UAAW,QAASnD,MAAO,CAAEgvC,SAAU,QAA5C,SACI,cAACV,EAAD,CACIC,OAAQ,IACRnoC,WAAYqpC,EAAkBqB,EAAuBE,EACrDxC,gBAAiB8C,GACjB7C,iBAAkB5C,EAClB6C,cAAea,EACfvC,iBAAkBA,EAClB2B,aAAce,EACdtC,eAAgBA,EAChBC,eAAgBA,EAChBuB,mBAAoBA,MAI5B,cAAC6C,EAAA,EAAD,CAAQzxC,MAAO,CAAEiH,QAAS,OAAQsnC,OAAQ,QAA1C,SACI,cAAC,IAAKhP,KAAN,CAAWvL,MAAO,eAAgB0d,UAAU,SAASC,GAAG,OAAxD,SACI,mD,2GEvLT,SAASC,GAAU3uB,GAAwB,IAAD,IAErD,OADiBA,EAAI7P,MAAM,KAAK,GAAGyS,eAE/B,IAAK,QACD,MAAO,CAAC5C,GACZ,IAAK,OACD,MAAO,CAAC,QAAUA,EAAIwO,OAAO,GAAIxO,GACrC,IAAK,OACD,IAAM3hB,EAAI,UAAG2hB,EAAI4uB,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCvwC,EAArC,oCAAsEA,EAAtE,MACX,IAAK,OACD,IAAM4H,EAAI,UAAG+Z,EAAI4uB,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqC3oC,EAArC,oCAAsEA,EAAtE,MACX,QACI,MAAO,I,wDCanB,WAAmC+Z,GAAnC,wFACU6uB,EAAgBF,GAAU3uB,GAAK,GADzC,kBAGW8uB,KAAQtwC,KAAKqwC,GACfE,aACAhkB,MAAK,SAACikB,GACH,cAAIA,QAAJ,IAAIA,KAASF,QACFE,EAAQF,QAAQG,IAEpB,QAEVhkB,OAAM,kBAAM,SAXrB,4C,sBAqCO,SAASikB,GAAaC,GACzB,MAA0B5pC,mBAAS,WAAnC,mBAAOwrB,EAAP,KAAcqe,EAAd,KAmBA,OAjBAC,2BAAgB,WACZ,IAAIC,GAAQ,EAUZ,OARIH,G,4CACAI,CAAoBJ,GAAcpkB,MAAK,SAACgG,GAC/Bue,GAAmB,OAAVve,GACVqe,EAASre,MAKd,WACHue,GAAQ,EACRF,EAAS,cAEd,CAACD,IAEGpe,E,4FCnFLye,GAAqB,I,QAAIC,GAAI,CAAEC,WAAW,IAAQC,QAAQC,IAOjD,SAAeC,GAA9B,mC,wDAAe,WAA4BriC,GAA5B,iGAGLkB,EAAOigC,GAAUnhC,GACdrM,EAAI,EAJF,YAIKA,EAAIuN,EAAK3M,QAJd,wBAKDwN,EAAMb,EAAKvN,GACX2uC,EAAS3uC,IAAMuN,EAAK3M,OAAS,EAC/B9D,OAPG,oBAScmyB,MAAM7gB,EAAK,CAAEwgC,YAAa,SATxC,OASH9xC,EATG,4DAWHmQ,QAAQ2vB,MAAM,uBAAwBvwB,EAAtC,OACIsiC,EAZD,uBAYe,IAAIxxC,MAAJ,kCAAqCkP,IAZpD,kDAgBFvP,EAAS+xC,GAhBP,qBAiBCF,EAjBD,uBAiBe,IAAIxxC,MAAJ,kCAAqCkP,IAjBpD,gEAqBYvP,EAASqyB,OArBrB,WAqBDA,EArBC,OAsBFkf,GAAmBlf,GAtBjB,uBAuBG2f,EAvBH,oBAwBCT,GAAmBU,cAxBpB,aAwBC,EAA2BjvC,QAAe,SAACC,EAAMrE,GAAW,IAAD,EACjDwQ,EAAG,UAAMxQ,EAAMszC,SAAZ,sBAAwBtzC,EAAMuzC,eAA9B,QAAyC,IAClD,OAAOlvC,EAAKa,OAAS,EAAd,UAAqBb,EAArB,aAA8BmM,GAA9B,UAAyCA,KACjD,WA3BJ,QA2BW,gBACR,IAAI/O,MAAJ,wCAA2C2xC,IA5B9C,iCA8BA3f,GA9BA,QAIsBnvB,IAJtB,6BAgCL,IAAI7C,MAAM,mCAhCL,2D,8CCRT+xC,GAAgB,CAClB,CACIC,UAAU,EACVC,OAAQ,CACJ,CACItqC,KAAM,OACN0U,KAAM,YAGd1U,KAAM,WACNuqC,QAAS,CACL,CACIvqC,KAAM,kBACN0U,KAAM,YAGd81B,SAAS,EACTC,gBAAiB,OACjB/1B,KAAM,aAGRg2B,GAAoB,6CAEpBC,GAAe,CACjB,CACIN,UAAU,EACVC,OAAQ,CACJ,CACIM,aAAc,UACd5qC,KAAM,OACN0U,KAAM,YAGd1U,KAAM,cACNuqC,QAAS,CACL,CACIK,aAAc,QACd5qC,KAAM,GACN0U,KAAM,UAGd81B,SAAS,EACTC,gBAAiB,OACjB/1B,KAAM,aAKd,SAASmU,GAAiBH,EAAyB6O,GAC/C,OAAO,IAAIsT,KAASniB,EAAiBiiB,GAAcpT,GAQxC,SAAeuT,GAA9B,qC,wDAAe,WAAqCrJ,EAAiBlK,GAAtD,4FACLwT,EAAuB,IAAIF,KAASH,GAAmBN,GAAe7S,GACtEn/B,EAAOkwB,oBAASmZ,GAFX,SAGmBsJ,EAAqBC,SAAS5yC,GAHjD,cAGLswB,EAHK,yBAIJG,GAAiBH,EAAiB6O,GAAU0T,YAAY7yC,IAJpD,4C,sBCnDR,SAAS8yC,KACZ,MAA6BxzC,cAArBC,EAAR,EAAQA,QAAS6/B,EAAjB,EAAiBA,QACX3/B,EAAWC,eAEXqzC,EAAcpzC,sBAAW,iDAC3B,WAAO0pC,GAAP,sFACSjK,GAAuB,IAAZ7/B,EADpB,uBAEcyzC,EAAiBC,eAF/B,SAG8BD,EAAeE,aAH7C,UAGc1T,EAHd,QAIYwT,GAAsC,IAApBxT,EAAQjgC,QAJtC,yCAKmBmzC,GAAsBrJ,EAAS2J,IALlD,aAOc,IAAI/yC,MAAM,4CAPxB,gCASWyyC,GAAsBrJ,EAASjK,IAT1C,2CAD2B,sDAY3B,CAAC7/B,EAAS6/B,IAId,OAAOz/B,sBAAW,iDACd,WAAOwP,GAAP,sGAAwBgkC,IAAxB,iCACUC,EAAYC,eAClBF,GAAgB1zC,EAAS/C,KAAeC,QAAQ,CAAEy2C,YAAWliC,IAAK/B,KAFtE,kBAGWqiC,GAAariC,GACfud,MAAK,SAAC4mB,GAMH,OALAH,GAAgB1zC,EAAS/C,KAAeG,UAAU,CAC9CqU,IAAK/B,EACLmkC,YACAF,eAEGE,KAEV1mB,OAAM,SAACpuB,GAOJ,MANAuR,QAAQ2vB,MAAR,oCAA2CvwB,GAAW3Q,GACtD20C,GAAgB1zC,EAAS/C,KAAeI,SAAS,CAC7CoU,IAAK/B,EACLikC,YACAG,aAAc/0C,EAAMuzC,WAElBvzC,MAnBlB,2CADc,sDAuBd,CAACiB,EAAUszC,ICrDnB,IAAMS,GAAiB,kDAEhB,SAASC,GAAgBC,GAC5B,IAAMnD,EAAQmD,EAAWnD,MAAMiD,IAC/B,GAAKjD,EACL,MAAO,CAAElH,QAAQ,GAAD,OAAKkH,EAAM,GAAGhsB,cAAd,OAAkCovB,QAASpD,EAAM,I,sDCSrE,IAAMqD,GAAgB,IAAIC,YAAY,SAMvB,SAASC,GAAiBjB,GACrC,IAAMkB,EAjBH,SAAyBnD,GAE5B,IADAA,EAAMA,EAAIvQ,WAAW,MAAQuQ,EAAIzgB,OAAO,GAAKygB,GACrCltC,OAAS,IAAM,EAAG,MAAM,IAAIzD,MAAM,8CAE1C,IADA,IAAM+zC,EAAM,IAAIC,WAAWrD,EAAIltC,OAAS,GAC/BZ,EAAI,EAAGA,EAAIkxC,EAAItwC,OAAQZ,IAC5BkxC,EAAIlxC,GAAK+N,SAAS+/B,EAAIzgB,OAAW,EAAJrtB,EAAO,GAAI,IAE5C,OAAOkxC,EAUME,CAAgBrB,GACvBsB,EAAQC,oBAASL,GACvB,OAAQI,GACJ,IAAK,UACD,IAAMvc,EAAOyc,oBAASN,GAChBO,EAAM,IAAIC,KAAI3c,GACpB,MAAM,UAAN,OAAiB4c,uBAAYF,EAAIG,YAErC,IAAK,UACD,IAAM7c,EAAOyc,oBAASN,GAChBO,EAAM,IAAIC,KAAI3c,GACd6c,EAAYC,kBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAU7sC,KACJ,UAAN,OAAiBgsC,GAAcc,OAAOD,EAAUE,QAAQ94B,QAElD,UAAN,OAAiB24B,uBAAYF,EAAIG,YAGzC,QACI,MAAM,IAAIx0C,MAAJ,8BAAiCk0C,K,gCClCpC,SAASS,GAAiBjzB,GACrC,IAAMkzB,EAAM9zC,mBAAQ,kBAAO4gB,EAAM8xB,GAAgB9xB,QAAO/f,IAAY,CAAC+f,IAC/DmzB,ECCK,SAA2BzL,GAA4E,IAAD,MAC3GpZ,EAAkBlvB,mBAAQ,WAC5B,IAAKsoC,EAAS,MAAO,MAACznC,GACtB,IACI,OAAOynC,EAAU,CAACnZ,oBAASmZ,IAAY,MAACznC,GAC1C,MAAOpD,GACL,MAAO,MAACoD,MAEb,CAACynC,IACEjZ,EAAoBC,cAAwB,GAC5CG,EAAwBD,aAAoBH,EAAmB,WAAYH,GAC3EK,EAAe,UAAGE,EAAsBxtB,cAAzB,aAAG,EAA+B,GACjDytB,EAAmBC,aACrBJ,GAAmB3T,aAAO2T,QAAmB1uB,EAAY0uB,GACzD,GAEEuiB,EAActiB,aAAoBE,EAAkB,cAAeR,GAEzE,MAAO,CACH4iB,YAAW,oBAAEA,EAAY7vC,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxC2B,QAAS6rB,EAAsB7rB,SAAWkuC,EAAYluC,SDrB9BowC,CAAiB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKxL,SACnD,OAAOtoC,mBAAQ,WACX,OAAI8zC,EACOC,EAAoBjC,YAAcvC,GAAUwD,GAAiBgB,EAAoBjC,cAAgB,GAEjGlxB,EAAM2uB,GAAU3uB,GAAO,KAEnC,CAACkzB,EAAKC,EAAoBjC,YAAalxB,I,yDEVxCqzB,GAA6C,GCF5C,IAAMC,GAAiB53C,oBDWf,YAAyD,IAAzC63C,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,IAAKz2C,EAA6B,EAA7BA,MAAUiK,EAAmB,mBACnE,EAAoBzB,mBAAiB,GAA5BkuC,EAAT,oBAIMC,GAFQpU,cAEkBiU,EAAK7gC,MAAK,SAACghC,GAAD,OAAUL,GAASK,OAE7D,OAAIA,EAEI,+CACQ1sC,GADR,IAEIwsC,IAAKA,EACLE,IAAKA,EACL32C,MAAOA,EACP42C,QAAS,WACDD,IAAKL,GAASK,IAAO,GACzBD,GAAQ,SAACtyC,GAAD,OAAOA,EAAI,SAM5B,cAAC,KAAD,2BAAW6F,GAAX,IAAiBjK,MAAK,2BAAOA,GAAP,IAAcg0B,MAAO,qBCjC3B,uCAAGr1B,CAAH,2BACd,qBAAGoB,QACF,qBAAGA,QCMF,SAAS82C,GAAT,GAA0E,IAAtDrxB,EAAqD,EAArDA,QAASxlB,EAA4C,EAA5CA,MAA4C,IAArCD,YAAqC,MAA9B,OAA8B,EAAtB02C,EAAsB,EAAtBA,IACxDD,EAAiBN,GAAiB1wB,GAExC,OAAO,cAAC+wB,GAAD,CAAgBE,IAAKA,EAAK12C,KAAMA,EAAMy2C,KAAMA,EAAMx2C,MAAOA,ICRnCrB,WAAOc,KAAV,uCAAGd,CAAH,wJAGd,cAAGG,MAAH,IAAU0sB,EAAV,EAAUA,SAAV,EAAoBsrB,WAApB,OACRtrB,EAAyB,iBAAuC,UAC7D,gBAAG1sB,EAAH,EAAGA,MAAH,SAAU0sB,SAA2B1sB,EAAM29B,MAAQ,kBAE7C,qBAAGqa,WAA+B,MAAQ,SAExC,qBAAGA,WAA+B,OAAS,aAC5C,cAAGh4C,MAAH,IAAU0sB,EAAV,EAAUA,SAAV,EAAoBsrB,WAApB,OACVtrB,EAAyBurB,aAAO,IAAMC,OAAOC,aAAO,eAA8D,UAC7G,gBACDn4C,EADC,EACDA,MACA0sB,EAFC,EAEDA,SAFC,EAGDsrB,WAHC,OAIEtrB,EAAyB1sB,EAAM29B,MAAuB,kBAGzC99B,WAAOE,OAAV,uCAAGF,CAAH,+HAnBlB,IA+BM+jC,GAAU/jC,WAAOE,OAAV,uCAAGF,CAAH,wJAGJ,cAAGG,MAAH,MAAe,gBAQlBo4C,GAAoBv4C,WAAOc,KAAV,uCAAGd,CAAH,wFAIR,gBAAG6sB,EAAH,EAAGA,SAAU2rB,EAAb,EAAaA,QAAb,EAAsBr4C,MAAtB,OAAmC0sB,EAAW2rB,EAAU,gBAKjEC,GAAaz4C,mBAAO8B,IAAK8+B,MAAf,uCAAG5gC,CAAH,yCAGZ,cAAGG,MAAH,SAAU0sB,SAA2B,eAAiB,kBAIpC7sB,WAAOE,OAAV,uCAAGF,CAAH,yIAGf,gBAAGqI,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAQNrI,WAAOc,KAAV,uCAAGd,CAAH,2OAQV,cAAGG,MAAH,SAAU0sB,SAA2B,iBAAmB,UAEzD,gBAAGlP,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,UAKhC,cAAGxd,MAAH,SAAU0sB,SAA2B,eAAiB,kBChFpD,SAAS6rB,GAAT,GAAqE,IAA/CnlC,EAA8C,EAA9CA,GAAIsZ,EAA0C,EAA1CA,SAAU2rB,EAAgC,EAAhCA,QAAS1rB,EAAuB,EAAvBA,OACxD,OACI,eAACiX,GAAD,CAASxwB,GAAIA,EAAIsZ,SAAUA,EAAU7d,QAAS8d,EAA9C,UACKD,GACG,cAAC4rB,GAAD,CAAYthB,WAAW,MAAM8M,OAAO,QAAQpX,UAAU,EAAtD,SACI,+BAGR,cAAC0rB,GAAD,CAAmB1rB,SAAUA,EAAU2rB,QAASA,KAC9C3rB,GACE,cAAC4rB,GAAD,CAAYthB,WAAW,MAAM8M,OAAO,QAAQpX,UAAU,EAAtD,SACI,mCCoBpB,SAAS8rB,GAAiB7mC,GACtB,MAAM,YAAN,OAAmBA,EAAQ+M,QAAQ,MAAO,MAG9C,IAAM+5B,GAAUpzC,gBAAK,YAAoD,IAAjCsM,EAAgC,EAAhCA,QAC5B5P,EAAYD,cAAZC,QACF22C,EAAa51C,cAAe,SAACD,GAAD,OAAWA,EAAM6P,MAAMC,SACnD1Q,EAAWC,eACjB,EAAkDw2C,EAAW/mC,GAA5CO,EAAjB,EAAQgB,QAA8B/T,EAAtC,EAAuBw5C,cAEjBC,EAA0Br1C,mBAAQ,WACpC,OAAK2O,GAASnQ,EAGPmQ,EAAK9L,OAAOhB,QAAO,SAACyzC,EAAKC,GAAN,OAAeA,EAAI/2C,UAAYA,EAAU82C,EAAM,EAAIA,IAAM,GAFxE,IAGZ,CAAC92C,EAASmQ,IAGP6mC,GADQtV,cACI4P,GAAY,OAACnhC,QAAD,IAACA,OAAD,EAACA,EAAMwU,UAC/BgG,EAAW7Y,YAAgBlC,GAEjC,EAAuB0+B,GAAU,GAAjC,mBAAO9kC,EAAP,KAAaohB,EAAb,KACM1F,EAAOE,mBACb,EAAgDzd,qBAAhD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0CF,qBAA1C,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAA+BG,aAAUN,EAAkBE,EAAe,CACtEJ,UAAW,OACXS,SAAU,QACVC,UAAW,CAAC,CAAEC,KAAM,SAAUC,QAAS,CAAEC,OAAQ,CAAC,EAAG,QAHjDE,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,WAMhBsc,YAAkBC,EAAM1b,EAAOohB,OAASvoB,GAExC,ICzEqC40C,EDyE/BC,EAAyB92C,uBAAY,WAClChD,GACL8C,EAAStC,aAAiBgS,MAC3B,CAAC1P,EAAU0P,EAASxS,IAEjB+5C,EAAmB/2C,uBAAY,WAC7B,WAAAusB,OAAOqK,OAAO,8EACd92B,EAASzC,aAAWmS,MAEzB,CAAC1P,EAAU0P,IAERwnC,EAAmBh3C,uBAAY,WACjCF,EAASxC,aAAWkS,MACrB,CAAC1P,EAAU0P,IAERynC,EAAoBj3C,uBAAY,WAClCF,EAASvC,aAAYiS,MACtB,CAAC1P,EAAU0P,IAEd,OAAKO,EAGD,eAAC,IAAD,CAAYmc,OAAQ3B,EAAU2sB,gBAAiBT,EAA0B,EAAGP,QAASU,EAAyB3lC,GAAIolC,GAAiB7mC,GAAnI,UACKO,EAAKwU,QACF,cAACqxB,GAAD,CAAU92C,KAAK,OAAOC,MAAO,CAAE65B,YAAa,QAAUrU,QAASxU,EAAKwU,QAASixB,IAAG,UAAKzlC,EAAK9H,KAAV,gBAEhF,qBAAKlJ,MAAO,CAAEgH,MAAO,OAAQunC,OAAQ,OAAQ1U,YAAa,UAE9D,eAAC4X,EAAA,EAAD,CAAQzxC,MAAO,CAAEgsC,KAAM,KAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiB7e,OAAQ3B,EAAzB,SAAoCxa,EAAK9H,SAE7C,eAAC,IAAD,CAAUkvC,GAAG,MAAb,UACI,cAAC,IAAD,CAAmBjrB,OAAQ3B,EAAU4gB,GAAG,MAAxC,SACI,yFAAQsL,OAEZ,eAAC,IAAD,CAAY/tC,IAAKoc,EAAjB,UACI,cAAC4R,GAAA,EAAD,CAAahqB,QAAS8d,EAAQ9hB,IAAKjB,EAAqBzB,QAAQ,IAAhE,SACI,cAAC,KAAD,CAAU6yB,OAAQtO,EAAW,aAAe,cAAezrB,KAAM,OAEpEsK,GACG,eAAC,IAAD,yBAAkB7J,MAAM,EAAMmJ,IAAKf,EAAyB5I,MAAOsJ,EAAOM,QAAYJ,EAAWI,QAAjG,cACI,8BAAMoH,ICnHG8mC,EDmHsB9mC,EAAK8mC,QClH1D,IAAN,OAAWA,EAAQO,MAAnB,YAA4BP,EAAQQ,MAApC,YAA6CR,EAAQS,UDmHzB,cAAC,IAAD,IACA,cAAC,IAAD,CAAc1d,KAAI,gDAA2CpqB,GAA7D,SACI,sCAEJ,cAAC,IAAD,CAA0B9C,QAASqqC,EAAkBhe,SAA6C,IAAnC13B,OAAOC,KAAKi1C,GAAYxyC,OAAvF,SACI,wCAEH/G,GACG,cAAC,IAAD,CAA0B0P,QAASoqC,EAAnC,SACI,qDAQ5B,cAACV,GAAD,CACI7rB,SAAUA,EACV2rB,QAASU,EACTpsB,OAAQ,WACJD,EAAW0sB,IAAsBD,SA1CwDxnC,GAHvF,QAoDf,SAAS+nC,GAAT,GAQH,IAPAC,EAOD,EAPCA,aACAC,EAMD,EANCA,cACAC,EAKD,EALCA,WAMQ93C,EAAYD,cAAZC,QAGR,GAFc0hC,cAE0B/5B,mBAAiB,KAAzD,mBAAOowC,EAAP,KAAqBC,EAArB,KAEMrnC,EAAQD,cAERunC,EAAuBz2C,mBACzB,kBACIC,OAAOwE,OAAO0K,GAAOtN,QAAO,SAACyzC,EAAD,GAA6B,IAAZ3mC,EAAW,EAApBgB,QAChC,OAAKhB,EAGE,2BACA2mC,GADP,kBAEK3mC,EAAK9H,KAAO8H,EAAK9L,OAAOhB,QAAO,SAAC60C,EAAelzC,GAAhB,OAA2BA,EAAMhF,UAAYA,EAAUk4C,EAAQ,EAAIA,IAAQ,KAJpGpB,IAMZ,MACP,CAAC92C,EAAS2Q,IAIRa,EAAiBD,cAEjB8+B,EAAcjwC,uBAAY,SAACklB,GAC7B0yB,EAAgB1yB,EAAE7I,OAAOjZ,SAC1B,IAEG20C,EAAY5E,KAEZ6E,EAAoB52C,mBAAQ,WAC9B,OAAOuvC,GAAUgH,GAAc5zC,OAAS,GAAK4N,QAAQmiC,GAAgB6D,MACtE,CAACA,IAEEM,EAAc72C,mBAAQ,WAExB,OADiBC,OAAOC,KAAKiP,GAExB7N,QAAO,SAAC8M,GAEL,OAAOmC,QAAQpB,EAAMf,GAASuB,WAAaY,QAAQhL,KAAsB6K,SAAShC,OAErF5M,MAAK,SAACs1C,EAAUC,GACb,IAAiBC,EAAU7nC,EAAM2nC,GAAzBnnC,QACSsnC,EAAU9nC,EAAM4nC,GAAzBpnC,QAGR,OAAkB,OAAdK,QAAc,IAAdA,MAAgBI,SAAS0mC,IAAa,OAAC9mC,QAAD,IAACA,KAAgBI,SAAS2mC,GAGhE,OAAC/mC,QAAD,IAACA,KAAgBI,SAAS0mC,IAA1B,OAAuC9mC,QAAvC,IAAuCA,MAAgBI,SAAS2mC,GAIhEC,GAASC,EACLR,EAAqBO,EAAMnwC,MAAQ4vC,EAAqBQ,EAAMpwC,OACtD,EAER4vC,EAAqBO,EAAMnwC,MAAQ4vC,EAAqBQ,EAAMpwC,MACvD,EAEJmwC,EAAMnwC,KAAK2c,cAAgByzB,EAAMpwC,KAAK2c,eAAiB,EAAIwzB,EAAMnwC,KAAK2c,gBAAkByzB,EAAMpwC,KAAK2c,cAAgB,EAAI,EAE9HwzB,GAAe,EACfC,EAAc,EACX,EAdI,GAHC,OAmBrB,CAAC9nC,EAAOa,EAAgBymC,IAG3B,EAAgCtwC,qBAAhC,mBAAO+wC,EAAP,KAAiBC,EAAjB,KACA,EAAgChxC,qBAAhC,mBAAOixC,EAAP,KAAiBC,EAAjB,KAEAr+B,qBAAU,WAAM,sDACZ,wFACI29B,EAAUJ,GAAc,GACnB5qB,MAAK,SAAChd,GAAD,OAAUwoC,EAAYxoC,MAC3Bkd,OAAM,kBAAMwrB,EAAY,kCAHjC,4CADY,sBAQRT,EARS,WAAD,wBASRU,IAEAH,OAAYt2C,GACK,KAAjB01C,GAAuBc,EAAY,qCAIlB,KAAjBd,GACAc,OAAYx2C,KAEjB,CAAC81C,EAAWJ,EAAcK,IAG7B,IAAMW,EAAat3C,OAAOC,KAAKiP,GAAOiB,SAASmmC,GAGzCiB,EAAe54C,uBAAY,WACxBs4C,IACLb,EAAca,GACdd,EAAaqB,GAAkBC,YAC/BpB,EAAWC,MACZ,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAc5jB,IAAI,OAAlB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAa/X,KAAK,OAAO1L,GAAG,iBAAiB2K,YAAa,yCAAoCxY,MAAOu0C,EAAcx7B,SAAU8zB,MAEhIuI,EACG,cAAC,IAAK35C,MAAN,CAAYooB,MAAOuxB,EAAUz5C,MAAO,CAAEg6C,aAAc,WAAYhL,SAAU,UAAYlvC,OAAK,EAA3F,SACK25C,IAEL,QAEPF,GACG,cAAC,IAAD,CAAcv5C,MAAO,CAAEk2B,WAAY,GAAnC,SACI,cAACpzB,EAAA,EAAD,CAAMopC,gBAAiB,aAAcjlC,QAAQ,YAA7C,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACKsyC,EAAS/zB,SAAW,cAACqxB,GAAD,CAAUrxB,QAAS+zB,EAAS/zB,QAASzlB,KAAK,SAC/D,eAAC,IAAD,CAAY41B,IAAI,MAAM31B,MAAO,CAAEqrB,WAAY,QAA3C,UACI,cAAC,IAAKgL,KAAN,CAAWP,WAAY,IAAvB,SAA6ByjB,EAASrwC,OACtC,cAAC,IAAKq2B,KAAN,CAAWjjB,SAAU,OAArB,SACI,6CAAQi9B,EAASr0C,OAAOF,kBAInC40C,EACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAa9f,OAAQ,eAAgB/5B,KAAK,OAAO85B,YAAa,OAA9D,SACI,cAAC,KAAD,MAEJ,cAAC,IAAKxD,KAAN,CAAWrC,MAAO,eAAlB,SACI,sCAIR,cAAC2D,GAAA,EAAD,CAAe33B,MAAO,CAAEsc,SAAU,QAAUrV,QAAQ,UAAUD,MAAM,cAAc2G,QAASksC,EAA3F,SACI,0CAOxB,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAYlkB,IAAI,KAAhB,SACKujB,EAAYz1C,KAAI,SAACgN,GAAD,OACb,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,a,sBE/RvB,SAASwpC,GAAT,GAAsJ,IAA9HxB,EAA6H,EAA7HA,aAAcpL,EAA+G,EAA/GA,eACzCxsC,EAAYD,cAAZC,QAER,EAAsC2H,mBAAiB,IAAvD,mBAAOu5B,EAAP,KAAoB4N,EAApB,KAIMsB,GAHQ1O,cAGGtc,oBACXirB,EAAcjwC,uBAAY,SAACoc,GAC7B,IAAMlP,EAAQkP,EAAMC,OAAOjZ,MACrB8sC,EAAmBztC,YAAUyK,GACnCwhC,EAAewB,GAAoBhjC,KACpC,IAGG2hC,EAAkBpsC,YAAUq+B,GAC5BgO,EAAcC,YAASjO,GAGvBmY,EAA2BC,eAC3BC,EAAcC,eAEdC,EAAkBr5C,uBAAY,WAC5BJ,GAAWq5C,GACXA,EAAgBz2C,KAAI,SAACoC,GACjB,OAAOu0C,EAAYv5C,EAASgF,EAAM7B,cAG3C,CAACo2C,EAAaF,EAAiBr5C,IAE5B+zC,EAAYvyC,mBAAQ,WACtB,OACIxB,GACAq5C,EAAgBz2C,KAAI,SAACoC,GAAD,OAChB,eAAC,IAAD,CAAgCmB,MAAM,OAAtC,UACI,eAAC,IAAD,WACI,cAAC87B,EAAA,EAAD,CAAcz8B,SAAUR,EAA0B9F,KAAM,SACxD,cAAC,IAAD,CAAc86B,KAAMwR,aAAgBxrC,EAASgF,EAAM7B,QAASsoC,KAAiBC,SAA7E,SACI,cAAC,IAAKhN,KAAN,CAAW4M,GAAI,OAAQrW,WAAY,IAAnC,SACKjwB,EAAM0f,cAInB,eAAC,IAAD,WACI,cAAC,IAAD,CAAW5X,QAAS,kBAAMysC,EAAYv5C,EAASgF,EAAM7B,YACrD,cAAC,IAAD,CAAkB62B,KAAMwR,aAAgBxrC,EAASgF,EAAM7B,QAASsoC,KAAiBC,gBAXxE1mC,EAAM7B,cAgBhC,CAACk2C,EAAiBr5C,EAASu5C,IAE9B,OACI,eAAC,IAAD,WACI,eAAC3I,EAAA,EAAD,CAAQzxC,MAAO,CAAEgH,MAAO,OAAQunC,OAAQ,OAAQvC,KAAM,OAAtD,UACI,eAAC,IAAD,CAAcrW,IAAI,OAAlB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACI/X,KAAK,OACL1L,GAAG,qBACH2K,YAAa,SACbxY,MAAO09B,EACPrkB,aAAa,MACb/T,IAAKsnC,EACL7zB,SAAU8zB,MAGD,KAAhBnP,IAAuB+N,GACpB,cAAC,IAAKhwC,MAAN,CAAYA,OAAO,EAAnB,SACI,sDAGPiwC,GACG,cAACjtC,EAAA,EAAD,CAAMopC,gBAAiB,aAAcjlC,QAAQ,SAA7C,SACI,cAACimC,EAAD,CAAWrnC,MAAOkqC,EAAa3C,eAAgB,kBAAMqL,EAAaqB,GAAkBS,cAAclN,eAAgBA,EAAgBrtC,MAAO,CAAEuuC,OAAQ,sBAI/J,cAAC,IAAD,IACA,eAAC,IAAD,CAAc5Y,IAAI,KAAK31B,MAAO,CAAEgvC,SAAU,OAAQwL,aAAc,QAAhE,UACI,eAAC,IAAD,WACI,cAAC,IAAKjb,KAAN,CAAWzJ,WAAY,IAAvB,SACI,2DAAQokB,QAAR,IAAQA,OAAR,EAAQA,EAAiBl1C,YAE5Bk1C,EAAgBl1C,OAAS,GACtB,cAAC,IAAD,CAAY2I,QAAS2sC,EAArB,SACI,cAAC,IAAK55C,KAAN,UACI,2CAKfk0C,QAGT,cAAC,IAAD,UACI,cAAC,IAAK7U,SAAN,UACI,uFCvGL,SAAS0a,GAAT,GAYX,IAXA1uC,EAWD,EAXCA,UACA0sC,EAUD,EAVCA,aACAC,EASD,EATCA,cACArL,EAQD,EARCA,eACAsL,EAOD,EAPCA,WASA,EAAkCnwC,oBAAS,GAA3C,mBAAOkyC,EAAP,KAAkBC,EAAlB,KAEA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAW36C,MAAO,CAAEisC,OAAQ,WACjBt+B,QAAS,kBAAM8qC,EAAaqB,GAAkBl/B,WACzD,cAAC,IAAD,CAAMkb,WAAY,IAAKxZ,SAAU,GAAjC,SACI,mCAEJ,cAAC,IAAD,CAAW3O,QAAS5B,SAG5B,cAAC,IAAD,IACA,cAAC,IAAD,CAAc/L,MAAO,CAAE46C,cAAe,GAAtC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAcjtC,QAAS,kBAAMgtC,GAAcD,IAAYvtB,OAAQutB,EAA/D,SACI,kCAEJ,cAAC,IAAD,CAAc/sC,QAAS,kBAAMgtC,GAAcD,IAAYvtB,QAASutB,EAAhE,SACI,wCAIXA,EACG,cAAClC,GAAD,CAAaC,aAAcA,EAAcC,cAAeA,EAC3CC,WAAYA,IAEzB,cAACsB,GAAD,CAAcxB,aAAcA,EAAcpL,eAAgBA,O,ICjC9DyM,G,oBCKL,SAASe,GAAT,GAA8E,IAAD,EAAvDC,EAAuD,EAAvDA,QAAS9pC,EAA8C,EAA9CA,KAAMynC,EAAwC,EAAxCA,aAAc1sC,EAA0B,EAA1BA,UAEhDhL,GADQwhC,cACGvhC,gBAGjB,EAAkCwH,oBAAS,GAA3C,mBAAOuyC,EAAP,KAAkBC,EAAlB,KAEMxpC,EAAQD,cACRynC,EAAY5E,KAGZ6G,EAASroC,QAAO,UAACpB,EAAMspC,UAAP,aAAC,EAAgBI,kBACvC,EAAgC1yC,mBAAwB,MAAxD,mBAAOixC,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgBl6C,uBAAY,WAC1Bg6C,IACJvB,EAAY,MACZV,EAAU8B,GACL9sB,MAAK,WAEFjtB,EAASxC,aAAWu8C,IAEpBrC,EAAaqB,GAAkBsB,WAElCltB,OAAM,SAACpuB,GACJ45C,EAAY55C,EAAMuzC,SAClBtyC,EAASzC,aAAWw8C,UAE7B,CAACG,EAAQl6C,EAAUi4C,EAAW8B,EAASrC,IAE1C,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAc9iB,IAAI,OAAO31B,MAAO,CAAEgH,MAAO,OAAQglC,KAAM,OAAvD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAWhsC,MAAO,CAAEisC,OAAQ,WAAat+B,QAAS,kBAAM8qC,EAAaqB,GAAkBsB,WACvF,cAAC,IAAKzb,aAAN,UACI,wCAEJ,cAAC,IAAD,CAAWhyB,QAAS5B,SAG5B,cAAC,KAAD,IACA,cAAC,IAAD,CAAc4pB,IAAI,KAAlB,SACI,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACI,cAAC7yB,EAAA,EAAD,CAAMopC,gBAAiB,aAAcjlC,QAAQ,YAA7C,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACK+J,EAAKwU,SAAW,cAACqxB,GAAD,CAAUrxB,QAASxU,EAAKwU,QAASzlB,KAAK,SACvD,eAAC,IAAD,CAAY41B,IAAI,KAAK31B,MAAO,CAAEqrB,WAAY,QAA1C,UACI,eAAC,IAAD,WACI,cAAC,IAAKgL,KAAN,CAAWP,WAAY,IAAKsW,GAAG,MAA/B,SACKp7B,EAAK9H,OAEV,cAAC,IAAD,IACA,cAAC,IAAKq2B,KAAN,CAAWjjB,SAAU,OAAQ6vB,GAAG,MAAhC,SACI,6CAAQn7B,EAAK9L,OAAOF,eAG5B,cAAC,IAAD,CAAc61B,KAAI,gDAA2CigB,GAA7D,SACI,cAAC,IAAKvb,KAAN,CAAWjjB,SAAU,OAAQ0X,MAAO,eAApC,SACK8mB,gBAOzB,eAACh4C,EAAA,EAAD,CAAM9C,MAAO,CAAEksC,gBAAiBvsC,aAAe,GAAK,gBAApD,UACI,eAAC,IAAD,CACI2mC,QAAQ,SACRtmC,MAAO,CACH0xC,UAAW,SACX/b,IAAK,OACL6kB,aAAc,QALtB,UAQI,cAAC,KAAD,CAAe1gB,OAAQ,cAAe/5B,KAAM,KAC5C,cAAC,IAAKs2B,KAAN,CAAWP,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,cAAjD,SACI,uDAIR,eAAC,IAAD,CAAYh0B,MAAO,CAAE0xC,UAAW,SAAU/b,IAAK,OAAQ6kB,aAAc,QAArE,UACI,cAAC,IAAKnkB,KAAN,CAAWP,WAAY,IAAK9B,MAAO,cAAnC,SACI,oPAKJ,cAAC,IAAKqC,KAAN,CAAWP,WAAY,IAAK9B,MAAO,cAAnC,SACI,4GAGR,eAAC,IAAD,CAASsS,QAAQ,SAAStmC,MAAO,CAAEisC,OAAQ,WAAat+B,QAAS,kBAAMqtC,GAAcD,IAArF,UACI,cAAC,IAAD,CAAU7xC,KAAK,YAAY0U,KAAK,WAAW8N,QAASqvB,EAAW39B,SAAU,kBAAM49B,GAAcD,MAC7F,cAAC,IAAK1kB,KAAN,CAAW8V,GAAG,OAAO7vB,SAAS,OAAO0X,MAAO,cAAe8B,WAAY,IAAvE,SACI,+CAIZ,cAAC6B,GAAA,EAAD,CAAeqC,UAAW+gB,EAAWvO,kBAAkB,EAAMtlC,cAAc,OAAOD,QAAQ,YAAY0G,QAASwtC,EAA/G,SACI,mCAEH1B,EACG,cAAC,IAAK35C,MAAN,CAAYooB,MAAOuxB,EAAUz5C,MAAO,CAAEg6C,aAAc,WAAYhL,SAAU,UAAYlvC,OAAK,EAA3F,SACK25C,IAEL,aDzGT,SAAS4B,GAAT,GASe,IAR1B1vC,EAQyB,EARzBA,OACAI,EAOyB,EAPzBA,UACA0iC,EAMyB,EANzBA,iBACAzB,EAKyB,EALzBA,iBACAuC,EAIyB,EAJzBA,sBAIyB,IAHzBC,uBAGyB,aAFzBZ,0BAEyB,aADzBa,uBACyB,SACzB,EAAkCjnC,mBAA4BsxC,GAAkBsB,QAAhF,mBAAOE,EAAP,KAAkB7C,EAAlB,KACM8C,EElCK,SACXl3C,EACAm3C,GAEA,MAAwBhzC,mBAA+BgzC,GAAYA,EAASn3C,GAASA,OAAQnB,GAA7F,mBAAOu4C,EAAP,KAAaC,EAAb,KAQA,OAPArgC,qBAAU,WACNqgC,GAAQ,SAACD,GAEL,OAD2BD,GAAWA,EAASn3C,GACzBA,EACfo3C,OAEZ,CAACD,EAAUn3C,IACPo3C,EFsBUE,CAAQhwC,GAEzB0P,qBAAU,WACF1P,IAAW4vC,GACX9C,EAAaqB,GAAkBl/B,UAEpC,CAACjP,EAAQ4vC,IAEZ,IAAM1P,EAAuB5qC,uBACzB,SAACoF,GACGooC,EAAiBpoC,GACjB0F,MAEJ,CAACA,EAAW0iC,IAIVmN,EAAW1iC,YAAYoiC,GAG7B,EAAsC9yC,qBAAtC,mBAAO+xC,EAAP,KAAoBlN,EAApB,KAGA,EAAoC7kC,qBAApC,mBAAOuxC,EAAP,KAAmBrB,EAAnB,KACA,EAA8BlwC,qBAA9B,mBAAOsyC,EAAP,KAAgBnC,EAAhB,KAGMntC,EAAY8vC,IAAcxB,GAAkBS,aAAee,IAAcxB,GAAkBC,WAAa,GAAK,GAEnH,OACI,cAACjuC,EAAA,EAAD,CAAOH,OAAQA,EAAQI,UAAWA,EAAWN,UAAW,GAAID,UAAWA,EAAvE,SACK8vC,IAAcxB,GAAkBl/B,OAC7B,cAAC00B,EAAD,CACI3jC,OAAQA,EACRI,UAAWA,EACX0iC,iBAAkB5C,EAClBmB,iBAAkBA,EAClBuC,sBAAuBA,EACvBC,gBAAiBA,EACjBZ,mBAAoBA,EACpBa,gBAAiBA,EACjBrC,eAAgB,kBAAMqL,EAAaqB,GAAkBS,cACrDlN,eAAgBA,EAChBwO,eAAgB,kBAAMpD,EAAaqB,GAAkBsB,WAEzDE,IAAcxB,GAAkBS,aAAeA,EAC/C,cAAC5O,EAAA,EAAD,CACIzmC,OAAQ,CAACq1C,GACTxuC,UAAWA,EACXiF,KAAMupC,aAAuBnpC,IAAmBmpC,EAAYvpC,UAAO9N,EACnE0oC,OAAQ,kBACJ6M,EAAamD,GAAYA,IAAa9B,GAAkBS,YAAcqB,EAAW9B,GAAkBl/B,SAEvGixB,qBAAsBA,IAE1ByP,IAAcxB,GAAkBC,YAAcA,GAAce,EAC5D,cAACD,GAAD,CAAY7pC,KAAM+oC,EAAYe,QAASA,EAAS/uC,UAAWA,EAC/C0sC,aAAcA,IAC1B6C,IAAcxB,GAAkBsB,OAChC,cAACX,GAAD,CACI1uC,UAAWA,EACX0sC,aAAcA,EACdpL,eAAgBA,EAChBqL,cAAeA,EACfC,WAAYA,IAGhB,M,SArFJmB,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,oQGvBG,MAA0B,wC,gCCGlC,IAAMpX,EAAU/jC,UAAOC,IAAV,wCAAGD,CAAH,8BAIPm9C,EAAUn9C,kBAAOwB,KAAV,wCAAGxB,CAAH,kBACP,cAAGo9C,OAAH,MAA0B,OAE1BC,EAAgBr9C,kBAAOm9C,GAAV,wCAAGn9C,CAAH,qEAIbs9C,EAAgBt9C,kBAAOu9C,KAAV,wCAAGv9C,CAAH,kBACb,qBAAGo9C,OAAuB,SAAW,aAErCI,EAAax9C,UAAO+7B,IAAV,wCAAG/7B,CAAH,6C,OCSvB,SAASy9C,EAAT,GAA0G,IAApErwC,EAAmE,EAAnEA,UAAWswC,EAAwD,EAAxDA,YAAaN,EAA2C,EAA3CA,OAC1D,OACI,sBAAK54C,UAAW,YAAhB,WACM44C,GACE,sBAAK54C,UAAW,iBAAhB,UACI,wBACA,cAAC,IAAD,CAAGA,UAAW,oBAAqBwK,QAAS5B,OAGpD,qBAAK5I,UAAW,yBAAhB,SACI,cAAC,IAAD,CAAoBwzC,IAAK2F,EAAQ7F,IAAI,SAAS12C,KAAMg8C,EAAS,OAAS,WAE1E,sBAAK54C,UAAW,gBAAhB,UACI,sBAAMA,UAAW,uBAAjB,SACI,qDAEJ,sBAAMA,UAAW,kBAAjB,SAAqCk5C,IACrC,sBAAMl5C,UAAW,SAAUnD,MAAO,CAAEg0B,MAAO,gBAA3C,SACI,0EAepB,SAASuoB,EAAT,GAA6H,IAAD,EAArFxwC,EAAqF,EAArFA,UAAWlL,EAA0E,EAA1EA,QAASS,EAAiE,EAAjEA,KAAMk7C,EAA2D,EAA3DA,cAAeT,EAA4C,EAA5CA,OAGpErb,GAFM+b,qBAAWC,gBAEL97C,cAAZ8/B,SAER,EC3DW,SAA+B8b,GAI1C,IAAQ9b,EAAY9/B,cAAZ8/B,QAEF76B,EAAwB,OAAG22C,QAAH,IAAGA,OAAH,EAAGA,EAAepuC,QAEhD,EAA8B5F,qBAA9B,mBAAOk2B,EAAP,KAAgBie,EAAhB,KAEM7Q,EAAW7qC,uBAAY,WACrBy/B,GAAWA,EAAQD,SAASmc,YAAclc,EAAQD,SAASoc,SAAWh3C,EACtE66B,EAAQD,SACHoc,QAAQ,CACLC,OAAQ,oBACRC,OAAQ,CAEJn/B,KAAM,QACNzU,QAAS,CACLnF,QAAS6B,EAAM7B,QACfuhB,OAAQ1f,EAAM0f,OACdD,SAAUzf,EAAMyf,SAChB03B,MAAOC,YAAgBp3C,EAAM7B,aAIxCgqB,MAAK,SAAC0Q,GACHie,EAAWje,MAEdxQ,OAAM,kBAAMyuB,GAAW,MAE5BA,GAAW,KAEhB,CAACjc,EAAS76B,IAEb,MAAO,CAAEimC,WAAUpN,WDwBWwe,CAAsBV,GAA5C1Q,EAAR,EAAQA,SAAUpN,EAAlB,EAAkBA,QAElB,OACI,iCACMqd,GACE,eAACnmB,EAAA,EAAD,WACI,wBACA,cAAC,IAAD,CAAWjoB,QAAS5B,OAG5B,cAACkwC,EAAD,CAAeF,OAAQA,EAAvB,SACI,cAAC,IAAD,CAAeoB,YAAa,GAAKp9C,KAAMg8C,EAAS,OAAS,OAAQ/nB,MAAO,qBAE5E,eAAC,IAAD,CAAY2B,IAAI,OAAO2Q,QAAS,SAAhC,UACI,cAAC,IAAD,CAAMxQ,WAAY,IAAKxZ,SAAU,GAAIo1B,UAAU,SAA/C,SACI,kDAEH7wC,GAAWS,GACR,cAAC,IAAD,CAAcu5B,KAAMwR,YAAgBxrC,EAASS,EAAMgrC,IAAiB8Q,aAApE,SACI,cAAC,IAAD,CAAMtnB,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,iBAA5C,SACI,+CAIXwoB,IAAa,OAAI9b,QAAJ,IAAIA,GAAJ,UAAIA,EAASD,gBAAb,aAAI,EAAmBmc,aACjC,cAACjlB,EAAA,EAAD,CAAaygB,GAAG,OAAOnxC,QAAQ,WAAWD,MAAM,cAAc2G,QAASm+B,EAAvE,SACMpN,EAOE,eAAC9I,EAAA,EAAD,WACI,4CAAc4mB,EAAcj3B,UAC5B,cAAC,IAAD,CAAaxlB,KAAM,OAAQ+5B,OAAQ,eAAgB95B,MAAO,CAAEqrB,WAAY,YAR5E,cAACuK,EAAA,EAAD,UACI,2DACS4mB,EAAcj3B,QADvB,cAC2C,cAAC42B,EAAD,CAAYxF,IAAK0G,aAW5E,cAAC1lB,EAAA,EAAD,CAAehqB,QAAS5B,EAAW/L,MAAO,CAAE4iC,OAAQ,aAAc5O,MAAO,SAAzE,SACI,cAAC,IAAD,CAAM8B,WAAY,IAAKxZ,SAAU,GAAjC,SACKy/B,EAAS,iCAAwB,0CAenD,SAASuB,EAAT,GAAmH,IAA/Ep1B,EAA8E,EAA9EA,MAAOq1B,EAAuE,EAAvEA,cAAexxC,EAAwD,EAAxDA,UAAWyxC,EAA6C,EAA7CA,WACxE,OACI,sBAAKr6C,UAAW,QAAhB,UACI,sBAAKA,UAAW,sBAAhB,UACK+kB,EACD,cAAC,IAAD,CAAW/kB,UAAW,oBAAqBwK,QAAS5B,OAEvDyxC,IACAD,GAAiB,cAACvB,EAAD,CAAermB,IAAI,OAAnB,SAA2B4nB,SAUlD,SAASE,EAAT,GAAwF,IAArDpK,EAAoD,EAApDA,QAAStnC,EAA2C,EAA3CA,UACjC0wC,qBAAWC,gBACzB,OACI,eAACha,EAAD,WACI,eAACoZ,EAAD,WACI,eAAClmB,EAAA,EAAD,WACI,cAAC,IAAD,CAAME,WAAY,IAAKxZ,SAAU,GAAjC,SACI,kCAEJ,cAAC,IAAD,CAAW3O,QAAS5B,OAExB,eAAC,IAAD,CAAY/L,MAAO,CAAE09C,UAAW,GAAIz2C,QAAS,UAAY0uB,IAAI,OAAO2Q,QAAQ,SAA5E,UACI,cAAC,IAAD,CAAetS,MAAO,cAAeh0B,MAAO,CAAEm9C,YAAa,KAAOp9C,KAAM,KACxE,cAAC,IAAD,CAAM+1B,WAAY,IAAKxZ,SAAU,GAAI0X,MAAO,cAAeh0B,MAAO,CAAE0xC,UAAW,SAAU1qC,MAAO,MAAO/G,UAAW,cAAlH,SACKozC,UAIb,cAAC2I,EAAD,CAAermB,IAAI,OAAnB,SACI,cAACgC,EAAA,EAAD,CAAehqB,QAAS5B,EAAxB,SACI,yCAiBL,SAAS4xC,EAAT,GAAgJ,IAAxGhyC,EAAuG,EAAvGA,OAAQI,EAA+F,EAA/FA,UAAW6xC,EAAoF,EAApFA,cAAet8C,EAAqE,EAArEA,KAAM+6C,EAA+D,EAA/DA,YAAa/zC,EAAkD,EAAlDA,QAASk0C,EAAyC,EAAzCA,cACzG37C,EAAYD,cAAZC,QASR,OANAwa,qBAAU,WACF1P,GAAU9K,GAAWS,GACrByK,MAEL,CAAClL,EAASS,EAAMqK,EAAQI,IAEtBlL,EAMD,cAACiL,EAAA,EAAD,CAAOH,OAAQA,EAAQI,UAAWA,EAAWN,UAAW,GAAxD,SACKmyC,EACG,cAACxB,EAAD,CAA4BrwC,UAAWA,EAAWswC,YAAaA,IAC/D/6C,EACA,cAACi7C,EAAD,CAA6B17C,QAASA,EAASS,KAAMA,EAAMyK,UAAWA,EAAWywC,cAAeA,IAEhGl0C,MAZS,O,6mBEhLZ0O,EAAb,WAYI,WAAmB3I,EAAeF,EAAe0vC,GAAkB,yBAXnDxvC,WAWkD,OAVlDyvC,eAUkD,OATlD3vC,WASkD,OARlD0vC,YAQkD,OA6B1DE,UAA2C,KA5B/C3uC,YAAUf,EAAMrJ,OAAS,EAAG,SAE5B,IAAMnE,EAAUwN,EAAM,GAAGxN,QACnBm9C,EAAiB3vC,EAAM+jB,OAAM,SAAA9jB,GAAI,OAAIA,EAAKzN,UAAYA,KAC5DuO,YAAU4uC,EAAgB,aAE1B,IAAMC,EAAe9vC,EAAMC,QAC3BgB,YAAUf,EAAM,GAAGwI,cAAconC,GAAe,SAEhD7uC,YAAUf,EAAMA,EAAMrJ,OAAS,GAAG6R,cAAcgnC,EAAOzvC,SAAU,UAKjE,IAf8D,EAexD0vC,EAAqB,CAACG,GAfkC,cAgBtC5vC,EAAMsN,WAhBgC,IAgB9D,2BAAyC,CAAC,IAAD,yBAA7BvX,EAA6B,KAA1BkK,EAA0B,KAC/B4vC,EAAoBJ,EAAU15C,GACpCgL,YAAU8uC,EAAkBrvC,OAAOP,EAAKM,SAAWsvC,EAAkBrvC,OAAOP,EAAKQ,QAAS,QAC1F,IAAMqvC,EAAYD,EAAkBrvC,OAAOP,EAAKM,QAAUN,EAAKQ,OAASR,EAAKM,OAC7EkvC,EAAU/mC,KAAKonC,IApB2C,8BAuB9Dx9B,KAAKtS,MAAQA,EACbsS,KAAKm9B,UAAYA,EACjBn9B,KAAKxS,MAAQA,EACbwS,KAAKk9B,OAAL,OAAcA,QAAd,IAAcA,IAAUC,EAAUA,EAAU94C,OAAS,GAtC7D,0CA8CI,WACI,GAAuB,OAAnB2b,KAAKo9B,UAAoB,OAAOp9B,KAAKo9B,UAEzC,IAAM3lB,EAAQzX,KAAKtS,MAAMuD,MAAM,GAAG1N,QAC9B,WAAuBoK,GAAU,IAA9B8vC,EAA6B,EAA7BA,UAAWhmB,EAAkB,EAAlBA,MACV,OAAOgmB,EAAUvvC,OAAOP,EAAKM,QACvB,CACEwvC,UAAW9vC,EAAKQ,OAChBspB,MAAOA,EAAMnoB,SAAS3B,EAAK2S,cAE7B,CACEm9B,UAAW9vC,EAAKM,OAChBwpB,MAAOA,EAAMnoB,SAAS3B,EAAK4S,gBAGvCP,KAAKtS,MAAM,GAAGO,OAAOC,OAAO8R,KAAKxS,MAAMC,SACjC,CACEgwC,UAAWz9B,KAAKtS,MAAM,GAAGS,OACzBspB,MAAOzX,KAAKtS,MAAM,GAAG4S,aAEvB,CACEm9B,UAAWz9B,KAAKtS,MAAM,GAAGO,OACzBwpB,MAAOzX,KAAKtS,MAAM,GAAG6S,cAE/BkX,MAEF,OAAQzX,KAAKo9B,UAAY,IAAIh9B,IAAMJ,KAAKxS,MAAOwS,KAAKk9B,OAAQzlB,EAAMroB,YAAaqoB,EAAM5P,aAxE7F,mBA2EI,WACI,OAAO7H,KAAKtS,MAAM,GAAGxN,YA5E7B,K,+CCKO,SAASw9C,EACZz6C,EACAkM,GAKA,OAFAV,YAAUxL,EAAEkV,YAAYzS,SAASwI,OAAOiB,EAAEgJ,YAAYzS,UAAW,kBACjE+I,YAAUxL,EAAEmV,aAAa1S,SAASwI,OAAOiB,EAAEiJ,aAAa1S,UAAW,mBAC/DzC,EAAEmV,aAAa8sB,QAAQ/1B,EAAEiJ,cACrBnV,EAAEkV,YAAY+sB,QAAQ/1B,EAAEgJ,aAEVlV,EAAE06C,MAAMp6C,QAAO,SAACq6C,EAAO3G,GAAR,OAAgB2G,EAAQ3G,EAAI5pC,MAAM8vC,UAAU94C,SAAQ,GACnE8K,EAAEwuC,MAAMp6C,QAAO,SAACq6C,EAAO3G,GAAR,OAAgB2G,EAAQ3G,EAAI5pC,MAAM8vC,UAAU94C,SAAQ,GAIjFpB,EAAEkV,YAAY2I,SAAS3R,EAAEgJ,cACjB,EAED,EAIPlV,EAAEmV,aAAa0I,SAAS3R,EAAEiJ,cACnB,GAEC,EAwBb,IAAMN,EAAb,WAoBI,cAUI,IATApB,EASD,EATCA,OACAsB,EAQD,EARCA,UAQD,yBAzBa2lC,WAyBb,OAjBa3lC,eAiBb,OA0CK6lC,kBA1CL,OAiEKC,mBAjEL,OAwFKC,qBAxFL,OA6GKC,kBA7GL,EACC,IAAMC,EAAgBvnC,EAAO,GAAGyB,YAAYzS,SACtCw4C,EAAiBxnC,EAAO,GAAG0B,aAAa1S,SAC9C+I,YACIiI,EAAO+a,OAAM,gBAAGpkB,EAAH,EAAGA,MAAH,OAAe4wC,EAAcxwC,QAAQS,OAAOb,EAAMG,MAAMC,YACrE,wBAEJgB,YACIiI,EAAO+a,OAAM,gBAAGpkB,EAAH,EAAGA,MAAH,OAAe6wC,EAAezwC,QAAQS,OAAOb,EAAM6vC,OAAOzvC,YACvE,yBAGJ,IAZD,EAYO0wC,EAAWznC,EAAO5T,KAAI,qBAAGuK,MAAkBK,MAAMrJ,UAAQd,QAAO,SAACq6C,EAAO3G,GAAR,OAAgB2G,EAAQ3G,IAAK,GAC7FmH,EAAiB,IAAIC,IAb5B,cAcyB3nC,GAdzB,IAcC,2BAAgC,CAAC,IAAD,EAAnBrJ,EAAmB,QAAnBA,MAAmB,cACTA,EAAMK,OADG,IAC5B,2BAAgC,CAAC,IAAtBC,EAAqB,QAC5BywC,EAAezuC,IAAIyP,IAAKk/B,WAAW3wC,EAAKM,OAAQN,EAAKQ,OAAQR,EAAK+H,OAF1C,gCAdjC,8BAoBCjH,YAAU0vC,GAAYC,EAAeh/C,KAAM,oBAE3C4gB,KAAK29B,MAAQjnC,EACbsJ,KAAKhI,UAAYA,EArDzB,uCA+DI,WAEI,OADAvJ,YAA+B,GAArBuR,KAAK29B,MAAMt5C,OAAa,mBAC3B2b,KAAK29B,MAAM,GAAGtwC,QAjE7B,uBA6EI,WACI,GAAI2S,KAAK69B,aACL,OAAO79B,KAAK69B,aAGhB,IAAMI,EAAgBj+B,KAAK29B,MAAM,GAAGxlC,YAAYzS,SAC1C64C,EAAuBv+B,KAAK29B,MAC7B76C,KAAI,qBAAGqV,eACP5U,QAAO,SAACq6C,EAAO3G,GAAR,OAAgB2G,EAAMjuC,IAAIsnC,KAAMrzC,IAAeC,cAAco6C,EAAe,IAGxF,OADAj+B,KAAK69B,aAAeU,EACbv+B,KAAK69B,eAxFpB,wBAoGI,WACI,GAAI79B,KAAK89B,cACL,OAAO99B,KAAK89B,cAGhB,IAAMI,EAAiBl+B,KAAK29B,MAAM,GAAGvlC,aAAa1S,SAC5C84C,EAAwBx+B,KAAK29B,MAC9B76C,KAAI,qBAAGsV,gBACP7U,QAAO,SAACq6C,EAAO3G,GAAR,OAAgB2G,EAAMjuC,IAAIsnC,KAAMrzC,IAAeC,cAAcq6C,EAAgB,IAGzF,OADAl+B,KAAK89B,cAAgBU,EACdx+B,KAAK89B,gBA/GpB,0BA2HI,WAAqD,IAAD,EAChD,iBACI99B,KAAK+9B,uBADT,QAEK/9B,KAAK+9B,gBAAkB,IAAI39B,IACxBJ,KAAK7H,YAAYzS,SACjBsa,KAAK5H,aAAa1S,SAClBsa,KAAK7H,YAAYhB,SACjB6I,KAAK5H,aAAajB,YAlIlC,uBAgJI,WACI,GAAI6I,KAAKg+B,aACL,OAAOh+B,KAAKg+B,aAGhB,IAL8B,EAK1BS,EAAmB76C,IAAeC,cAAcmc,KAAK5H,aAAa1S,SAAU,GALlD,cAMOsa,KAAK29B,OANZ,IAM9B,2BAAiD,CAAC,IAAD,UAApCtwC,EAAoC,EAApCA,MAAO8K,EAA6B,EAA7BA,YACVumC,EAAWrxC,EAAMqxC,SACvBD,EAAmBA,EAAiB9uC,IAAI+uC,EAASC,MAAMxmC,KAR7B,8BAW9B,IAAM8Q,EAAcw1B,EAAiBpgC,SAAS2B,KAAK5H,cAAc7I,OAAOkvC,GAGxE,OAFAz+B,KAAKg+B,aAAe,IAAI91B,IAAQe,EAAYpB,UAAWoB,EAAY7Z,aAE5D4Q,KAAKg+B,eA9JpB,8BAihBI,SAAwBva,GAAqF,IAAzDjsB,EAAwD,uDAA5CwI,KAAK5H,aAEjE,GADA3J,aAAWg1B,EAAkB3iB,SAASpR,KAAO,sBACzCsQ,KAAKhI,YAAcC,IAAUW,aAC7B,OAAOpB,EAEP,IAAMonC,EAA4B,IAAIl2B,IAAS9Y,KAC1CD,IAAI8zB,GACJob,SACAvvC,SAASkI,EAAUL,UAAUA,SAClC,OAAOvT,IAAeC,cAAc2T,EAAU9R,SAAUk5C,KA1hBpE,6BAmiBI,SAAuBnb,GAAkF,IAAtD3sB,EAAqD,uDAA1CkJ,KAAK7H,YAE/D,GADA1J,aAAWg1B,EAAkB3iB,SAASpR,KAAO,sBACzCsQ,KAAKhI,YAAcC,IAAUC,YAC7B,OAAOpB,EAEP,IAAMgoC,EAA2B,IAAIp2B,IAAS9Y,KAAKD,IAAI8zB,GAAmBn0B,SAASwH,EAASK,UAAUA,SACtG,OAAOvT,IAAeC,cAAciT,EAASpR,SAAUo5C,KAziBnE,iCAkjBI,SAA2Brb,GACvB,OAAO,IAAIrjB,IACPJ,KAAK7H,YAAYzS,SACjBsa,KAAK5H,aAAa1S,SAClBsa,KAAK++B,gBAAgBtb,GAAmBtsB,SACxC6I,KAAKg/B,iBAAiBvb,GAAmBtsB,aAvjBrD,uEAyKI,WACI9J,EACAyJ,GAFJ,oGAIWgB,EAAMmnC,UAAU5xC,EAAOyJ,EAAUmB,IAAUC,cAJtD,2CAzKJ,gIAwLI,WACI7K,EACAmK,GAFJ,oGAIWM,EAAMmnC,UAAU5xC,EAAOmK,EAAWS,IAAUW,eAJvD,2CAxLJ,iIAyMI,WACIvL,EACAlI,EACA6S,GAHJ,4GAKUknC,EAAmC,IAAIj/B,MAAM5S,EAAM8vC,UAAU94C,QAG/D2T,IAAcC,IAAUC,YARhC,iBASQzJ,YAAUtJ,EAAOO,SAASwI,OAAOb,EAAMG,OAAQ,SAC/C0xC,EAAQ,GAAK/5C,EAAOsI,QACXhK,EAAI,EAXrB,YAWwBA,EAAI4J,EAAM8vC,UAAU94C,OAAS,GAXrD,wBAYkBsJ,EAAON,EAAMK,MAAMjK,GAZrC,SAayCkK,EAAKwxC,gBAAgBD,EAAQz7C,IAbtE,mCAamB2U,EAbnB,KAcY8mC,EAAQz7C,EAAI,GAAK2U,EAd7B,QAWwD3U,IAXxD,uBAgBQ0U,EAAcvU,IAAew7C,qBAAqB/xC,EAAMG,MAAOrI,EAAO0iB,UAAW1iB,EAAOiK,aACxFgJ,EAAexU,IAAew7C,qBAC1B/xC,EAAM6vC,OACNgC,EAAQA,EAAQ76C,OAAS,GAAGwjB,UAC5Bq3B,EAAQA,EAAQ76C,OAAS,GAAG+K,aApBxC,wBAuBQX,YAAUtJ,EAAOO,SAASwI,OAAOb,EAAM6vC,QAAS,UAChDgC,EAAQA,EAAQ76C,OAAS,GAAKc,EAAOsI,QAC5BhK,EAAI4J,EAAM8vC,UAAU94C,OAAS,EAzB9C,aAyBiDZ,EAAI,GAzBrD,wBA0BkBkK,EAAON,EAAMK,MAAMjK,EAAI,GA1BzC,UA2BwCkK,EAAK0xC,eAAeH,EAAQz7C,IA3BpE,oCA2BmB0U,EA3BnB,KA4BY+mC,EAAQz7C,EAAI,GAAK0U,EA5B7B,QAyBwD1U,IAzBxD,wBA8BQ0U,EAAcvU,IAAew7C,qBAAqB/xC,EAAMG,MAAO0xC,EAAQ,GAAGr3B,UAAWq3B,EAAQ,GAAG9vC,aAChGgJ,EAAexU,IAAew7C,qBAAqB/xC,EAAM6vC,OAAQ/3C,EAAO0iB,UAAW1iB,EAAOiK,aA/BlG,iCAkCW,IAAI0I,EAAM,CACbpB,OAAQ,CAAC,CAAEyB,cAAaC,eAAc/K,UACtC2K,eApCR,4CAzMJ,oIA2PI,WACItB,EAIAsB,GALJ,qHAOUsnC,EAIA,GAXV,cAaoC5oC,GAbpC,sEAaiBrJ,EAbjB,EAaiBA,MAAOlI,EAbxB,EAawBA,OACV+5C,EAAmC,IAAIj/B,MAAM5S,EAAM8vC,UAAU94C,QAC/D8T,OAfZ,EAgBYC,OAhBZ,EAkBYJ,IAAcC,IAAUC,YAlBpC,iBAmBYzJ,YAAUtJ,EAAOO,SAASwI,OAAOb,EAAMG,OAAQ,SAC/C2K,EAAcvU,IAAew7C,qBAAqB/xC,EAAMG,MAAOrI,EAAO0iB,UAAW1iB,EAAOiK,aACxF8vC,EAAQ,GAAKt7C,IAAew7C,qBAAqB/xC,EAAMG,MAAMC,QAAStI,EAAO0iB,UAAW1iB,EAAOiK,aAEtF3L,EAAI,EAvBzB,aAuB4BA,EAAI4J,EAAM8vC,UAAU94C,OAAS,GAvBzD,wBAwBsBsJ,EAAON,EAAMK,MAAMjK,GAxBzC,UAyB6CkK,EAAKwxC,gBAAgBD,EAAQz7C,IAzB1E,oCAyBuB2U,EAzBvB,KA0BgB8mC,EAAQz7C,EAAI,GAAK2U,EA1BjC,QAuB4D3U,IAvB5D,wBA6BY2U,EAAexU,IAAew7C,qBAC1B/xC,EAAM6vC,OACNgC,EAAQA,EAAQ76C,OAAS,GAAGwjB,UAC5Bq3B,EAAQA,EAAQ76C,OAAS,GAAG+K,aAhC5C,wBAmCYX,YAAUtJ,EAAOO,SAASwI,OAAOb,EAAM6vC,QAAS,UAChD9kC,EAAexU,IAAew7C,qBAAqB/xC,EAAM6vC,OAAQ/3C,EAAO0iB,UAAW1iB,EAAOiK,aAC1F8vC,EAAQA,EAAQ76C,OAAS,GAAKT,IAAew7C,qBACzC/xC,EAAM6vC,OAAOzvC,QACbtI,EAAO0iB,UACP1iB,EAAOiK,aAGF3L,EAAI4J,EAAM8vC,UAAU94C,OAAS,EA3ClD,aA2CqDZ,EAAI,GA3CzD,wBA4CsBkK,EAAON,EAAMK,MAAMjK,EAAI,GA5C7C,UA6C4CkK,EAAK0xC,eAAeH,EAAQz7C,IA7CxE,oCA6CuB0U,EA7CvB,KA8CgB+mC,EAAQz7C,EAAI,GAAK0U,EA9CjC,QA2C4D1U,IA3C5D,wBAiDY0U,EAAcvU,IAAew7C,qBAAqB/xC,EAAMG,MAAO0xC,EAAQ,GAAGr3B,UAAWq3B,EAAQ,GAAG9vC,aAjD5G,QAoDQkwC,EAAgBlpC,KAAK,CAAE/I,QAAO8K,cAAaC,iBApDnD,wKAuDW,IAAIN,EAAM,CACbpB,OAAQ4oC,EACRtnC,eAzDR,gEA3PJ,2FAiUI,SAEkCunC,GAM9B,OAAO,IAAIznC,EAAJ,2BACAynC,GADA,IAEH7oC,OAAQ,CACJ,CACIyB,YAAaonC,EAAqBpnC,YAClCC,aAAcmnC,EAAqBnnC,aACnC/K,MAAOkyC,EAAqBlyC,aA/UhD,oDA8VI,SAEkCkyC,GAQ9B,OAAO,IAAIznC,EAAMynC,KAxWzB,+EA0XI,WACI7xC,EACA8xC,EACAlsC,GAHJ,4JAI2D,GAJ3D,IAIMmsC,qBAJN,MAIsB,EAJtB,MAIyB1pC,eAJzB,MAImC,EAJnC,EAMI2pC,EANJ,+BAM2B,GACvBC,EAPJ,+BAO6CH,EACzCI,EARJ,+BAQkE,GAE9DnxC,YAAUf,EAAMrJ,OAAS,EAAG,SAC5BoK,YAAUsH,EAAU,EAAG,YACvBtH,YAAU+wC,IAAqBG,GAAgBD,EAAar7C,OAAS,EAAG,qBAElEyS,EAAW6oC,EAAalyC,QACxBwI,EAAW3C,EAAY7F,QACpBhK,EAAI,EAhBjB,aAgBoBA,EAAIiK,EAAMrJ,QAhB9B,qBAiBcsJ,EAAOD,EAAMjK,IAETwK,OAAOC,OAAO4I,EAASpR,WAAciI,EAAKQ,OAAOD,OAAO4I,EAASpR,UAnBnF,+DAqBY8R,OArBZ,sBAuBiC7J,EAAKwxC,gBAAgBroC,GAvBtD,oCAuBcU,EAvBd,4DA0BgB,KAAMqoC,+BA1BtB,+EAgCYroC,EAAU9R,SAASC,UAAW6R,EAAU9R,SAASwI,OAAO+H,GAhCpE,6BAiCY6pC,IAjCZ,KAkCgBF,EAlChB,UAmCsB9nC,EAAMmnC,UACR,IAAI5oC,EAAJ,sBAAcqpC,GAAd,CAA4B/xC,IAAO6xC,EAAiB95C,SAAU4N,GAC9DksC,EACAvnC,IAAUC,aAtC9B,yBAwCgBunC,EAxChB,KAyCgB/B,GAzChB,0DA2CmB3nC,EAAU,GAAKrI,EAAMrJ,OAAS,GA3CjD,wBA4CkB07C,EAAyBryC,EAAMuD,MAAM,EAAGxN,GAAG6N,OAAO5D,EAAMuD,MAAMxN,EAAI,EAAGiK,EAAMrJ,SA5C7F,UA+CkByT,EAAMkoC,iBACRD,EACAP,EACAlsC,EACA,CACImsC,gBACA1pC,QAASA,EAAU,GANrB,sBAQE2pC,GARF,CAQgB/xC,IAClB6J,EACAooC,GAzDhB,QAgBsCn8C,IAhBtC,iDA8DWm8C,GA9DX,2DA1XJ,2IA2cI,WACIlyC,EACA2F,EACA4sC,GAHJ,4JAI2D,GAJ3D,IAIMR,qBAJN,MAIsB,EAJtB,MAIyB1pC,eAJzB,MAImC,EAJnC,EAMI2pC,EANJ,+BAM2B,GACvBQ,EAPJ,+BAO8CD,EAC1CL,EARJ,+BAQmE,GAE/DnxC,YAAUf,EAAMrJ,OAAS,EAAG,SAC5BoK,YAAUsH,EAAU,EAAG,YACvBtH,YAAUwxC,IAAsBC,GAAiBR,EAAar7C,OAAS,EAAG,qBAEpEmT,EAAY0oC,EAAczyC,QAC1BuI,EAAU3C,EAAW5F,QAClBhK,EAAI,EAhBjB,aAgBoBA,EAAIiK,EAAMrJ,QAhB9B,qBAiBcsJ,EAAOD,EAAMjK,IAETwK,OAAOC,OAAOsJ,EAAU9R,WAAciI,EAAKQ,OAAOD,OAAOsJ,EAAU9R,UAnBrF,+DAqBYoR,OArBZ,sBAuBgCnJ,EAAK0xC,eAAe7nC,GAvBpD,oCAuBcV,EAvBd,4DA0BgB,KAAMqpC,4BA1BtB,+EAgCYrpC,EAASpR,SAASwI,OAAO8H,GAhCrC,6BAiCY8pC,IAjCZ,KAkCgBF,EAlChB,UAmCsB9nC,EAAMmnC,UACR,IAAI5oC,EAAJ,CAAW1I,GAAX,mBAAoB+xC,IAAersC,EAAY4sC,EAAkBv6C,UACjEu6C,EACAhoC,IAAUW,cAtC9B,yBAwCgB6mC,EAxChB,KAyCgB/B,GAzChB,0DA2CmB3nC,EAAU,GAAKrI,EAAMrJ,OAAS,GA3CjD,wBA4CkB07C,EAAyBryC,EAAMuD,MAAM,EAAGxN,GAAG6N,OAAO5D,EAAMuD,MAAMxN,EAAI,EAAGiK,EAAMrJ,SA5C7F,UA+CkByT,EAAMsoC,kBACRL,EACA1sC,EACA4sC,EACA,CACIR,gBACA1pC,QAASA,EAAU,GANrB,CAQDpI,GARC,mBAQQ+xC,IACV5oC,EACA8oC,GAzDhB,QAgBsCn8C,IAhBtC,iDA8DWm8C,GA9DX,2DA3cJ,kE,8FCIsBS,EAAtB,kDAMI,aAAuB,wCAN3B,2DAeI,SACIC,EACA93C,GAEKyX,MAAMC,QAAQogC,KACfA,EAAS,CAACA,IAGd,IAAMC,EAAcD,EAAO,GACrBtqC,EAAUuqC,EAAYpoC,YAAYzS,SAAS+H,QAC3CwI,EAAWsqC,EAAYnoC,aAAa1S,SAAS+H,QAGnDgB,YACI6xC,EAAO7uB,OAAM,SAAApa,GAAK,OAAIA,EAAMc,YAAYzS,SAAS+H,QAAQS,OAAO8H,MAChE,iBAEJvH,YACI6xC,EAAO7uB,OAAM,SAAApa,GAAK,OAAIA,EAAMe,aAAa1S,SAAS+H,QAAQS,OAAO+H,MACjE,kBAGJ,IAAMktB,EAAsB,GAEtBqd,EAAoC58C,IAAeC,cAAcy8C,EAAO,GAAGnoC,YAAYzS,SAAU,GACjG+6C,EAAqC78C,IAAeC,cAAcy8C,EAAO,GAAGloC,aAAa1S,SAAU,GAEnGg7C,EAA2CJ,EAAO/8C,QACpD,SAACo9C,EAAKtpC,GAAN,OAAgBspC,EAAIhxC,IAAI0H,EAAM2nC,iBAAiBx2C,EAAQi7B,sBACvDgd,GAIEG,EAAaL,EAAYpoC,YAAYzS,SAASI,UAAYy6C,EAAYvoC,YAAcC,IAAUW,aAC9FioC,EAAgBN,EAAYpoC,YAAYzS,SAASI,SAEjDg7C,EAAiBP,EAAYnoC,aAAa1S,SAASI,SACnDi7C,EAAoBD,KAAoBt4C,EAAQkN,IAEhDsrC,EAAuCH,EACvCP,EAAO/8C,QAAO,SAACo9C,EAAKtpC,GAAN,OAAgBspC,EAAIhxC,IAAI0H,EAAM0nC,gBAAgBv2C,EAAQi7B,sBAAqB+c,GACzFA,EAGFh4C,EAAQy4C,mBACRxyC,YAAU8xC,EAAYpoC,YAAYzS,SAASC,QAAS,oBACpDw9B,EAAU/sB,KAAKiqC,EAAWvc,aAAayc,EAAYpoC,YAAYzS,SAAU8C,EAAQy4C,oBAGrF,IA9CgB,EA8CVjd,EAAoBC,YAAwBz7B,EAAQw7B,WACpDhQ,EAAW4O,YAAMp6B,EAAQwrB,UA/Cf,cAiDIssB,GAjDJ,IAiDhB,2BAA4B,CAAC,IAAD,EAAjBjpC,EAAiB,sBAC2BA,EAAMsmC,OADjC,IACxB,2BAAgE,CAAC,IAAD,UAAnDtwC,EAAmD,EAAnDA,MAAO8K,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,aACvBtB,EAAmB8rB,YAAMvrB,EAAM0nC,gBAAgBv2C,EAAQi7B,kBAAmBtrB,GAAahB,UACvFK,EAAoBorB,YAAMvrB,EAAM2nC,iBAAiBx2C,EAAQi7B,kBAAmBrrB,GAAcjB,UAKhG,GAFyC,IAAvB9J,EAAMK,MAAMrJ,OAG1B,GAAIgT,EAAMW,YAAcC,IAAUC,YAAa,CAAC,IAAD,EACrCgpC,EAAyB,CAC3BlrC,QAAS3I,EAAM8vC,UAAU,GAAG95C,QAC5B4S,SAAU5I,EAAM8vC,UAAU,GAAG95C,QAC7BqS,IAAKrI,EAAMK,MAAM,GAAGgI,IACpBsuB,UAAW+c,EAAoBpuC,IAAeqxB,EAC9ChQ,WACAld,WACAqqC,iBAAkB3pC,EAClBgJ,kBAAmBoiB,YAAK,UAACp6B,EAAQgY,yBAAT,QAA8B,IAE1D2iB,EAAU/sB,KAAKiqC,EAAWnc,UAAUC,mBAAmB37B,EAAQ44C,gBAAkBP,EAAgB,gDAAkD,mBAAoB,CAACK,SACrK,CAAC,IAAD,EACGG,EAA0B,CAC5BrrC,QAAS3I,EAAM8vC,UAAU,GAAG95C,QAC5B4S,SAAU5I,EAAM8vC,UAAU,GAAG95C,QAC7BqS,IAAKrI,EAAMK,MAAM,GAAGgI,IACpBsuB,UAAW+c,EAAoBpuC,IAAeqxB,EAC9ChQ,WACAxc,YACA8pC,gBAAiBxqC,EACjB0J,kBAAmBoiB,YAAK,UAACp6B,EAAQgY,yBAAT,QAA8B,IAG1D2iB,EAAU/sB,KAAKiqC,EAAWnc,UAAUC,mBAAmB,oBAAqB,CAACkd,SAE9E,CACH5yC,iBAAwClM,IAA9BiG,EAAQgY,kBAAiC,wBAEnD,IAAM1S,EAAeV,YAAkBC,EAAOgK,EAAMW,YAAcC,IAAUW,cAE5E,GAAIvB,EAAMW,YAAcC,IAAUC,YAAa,CAC3C,IAAMqpC,EAAmB,CACrBzzC,OACAk2B,UAAW+c,EAAoBpuC,IAAeqxB,EAC9ChQ,WACAld,WACAqqC,iBAAkB3pC,GAGtB2rB,EAAU/sB,KAAKiqC,EAAWnc,UAAUC,mBAAmB,aAAc,CAACod,SACnE,CACH,IAAMC,EAAoB,CACtB1zC,OACAk2B,UAAW+c,EAAoBpuC,IAAeqxB,EAC9ChQ,WACAxc,YACA8pC,gBAAiBxqC,GAGrBqsB,EAAU/sB,KAAKiqC,EAAWnc,UAAUC,mBAAmB,cAAe,CAACqd,QA3D3D,gCAjDZ,8BAmHhB,GAAIT,EACA,GAAMv4C,EAAQkN,IAAK,CACf,IAAM+rC,EAAuBxd,YAAwBz7B,EAAQkN,IAAIsuB,WAC3DtuB,EAAMktB,YAAMp6B,EAAQkN,IAAIA,IAAIpG,SAAS,KAAQ6H,UAC/C2pC,EACA3d,EAAU/sB,KACNiqC,EAAWnc,UAAUC,mBAAmB,4BAA6B,CACjEvB,YAAM8d,EAAevpC,UACrB6sB,EACAtuB,EACA+rC,KAIRte,EAAU/sB,KACNiqC,EAAWnc,UAAUC,mBAAmB,oBAAqB,CACzDoc,EAAYnoC,aAAa1S,SAAS+H,QAAQpK,QAC1Cu/B,YAAM8d,EAAevpC,UACrB6sB,EACAtuB,EACA+rC,UAKZte,EAAU/sB,KACNiqC,EAAWnc,UAAUC,mBAAmB,qBAAsB,CAACvB,YAAM8d,EAAevpC,UAAW6sB,KAU3G,OAJI4c,GACAzd,EAAU/sB,KAAKiqC,EAAWnc,UAAUC,mBAAmB,sBAGpD,CACHnB,SACyB,IAArBG,EAAU9+B,OAAe8+B,EAAU,GAAKkd,EAAWnc,UAAUC,mBAAmB,YAAa,CAAChB,IAClGz/B,MAAOk/B,YAAMoe,EAAW7pC,eA5KpC,GAAyCsuB,KAAnB4a,EACJnc,UAAuB,IAAIr/B,IAAU6gC,I,gCCrEvD,8LAGa/mB,EAAe3a,IAAKC,QAAQ,GAC5ByL,EAAO1L,IAAKC,OAAO,GACnB2L,EAAM5L,IAAKC,OAAO,GAGlBujC,EAAMxjC,IAAKyZ,aAAazZ,IAAKC,OAAO,GAAID,IAAKC,OAAO,KACpDoc,EAAOrc,IAAKyZ,aAAa+pB,EAAKxjC,IAAKC,OAAO,K,uECTnDy9C,E,wKAEAC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAAiS,OAApRA,EAAWjgD,OAAOkgD,OAASlgD,OAAOkgD,OAAOv1C,OAAS,SAAUqQ,GAAU,IAAK,IAAIlZ,EAAI,EAAGA,EAAIq+C,UAAUz9C,OAAQZ,IAAK,CAAE,IAAIs+C,EAASD,UAAUr+C,GAAI,IAAK,IAAIqJ,KAAOi1C,EAAcpgD,OAAOqgD,UAAUC,eAAe9vC,KAAK4vC,EAAQj1C,KAAQ6P,EAAO7P,GAAOi1C,EAAOj1C,IAAY,OAAO6P,GAAkBilC,EAASM,MAAMliC,KAAM8hC,WAEtU,SAASK,EAAyBJ,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEj1C,EAAKrJ,EAAnEkZ,EAEzF,SAAuColC,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dj1C,EAAKrJ,EAA5DkZ,EAAS,GAAQ0lC,EAAa1gD,OAAOC,KAAKmgD,GAAqB,IAAKt+C,EAAI,EAAGA,EAAI4+C,EAAWh+C,OAAQZ,IAAOqJ,EAAMu1C,EAAW5+C,GAAQ2+C,EAASE,QAAQx1C,IAAQ,IAAa6P,EAAO7P,GAAOi1C,EAAOj1C,IAAQ,OAAO6P,EAFxM4lC,CAA8BR,EAAQK,GAAuB,GAAIzgD,OAAO6gD,sBAAuB,CAAE,IAAIC,EAAmB9gD,OAAO6gD,sBAAsBT,GAAS,IAAKt+C,EAAI,EAAGA,EAAIg/C,EAAiBp+C,OAAQZ,IAAOqJ,EAAM21C,EAAiBh/C,GAAQ2+C,EAASE,QAAQx1C,IAAQ,GAAkBnL,OAAOqgD,UAAUU,qBAAqBvwC,KAAK4vC,EAAQj1C,KAAgB6P,EAAO7P,GAAOi1C,EAAOj1C,IAAU,OAAO6P,EAMne,SAASgmC,EAAYC,EAAMC,GACzB,IAAIt7B,EAAQq7B,EAAKr7B,MACbu7B,EAAUF,EAAKE,QACfx7C,EAAQ66C,EAAyBS,EAAMjB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDv7C,MAAO,GACPunC,OAAQ,EACRmV,QAAS,WACTC,KAAM,OACNC,MAAO,6BACPj6C,IAAK65C,EACL,kBAAmBC,GAClBx7C,GAAQigB,EAAqB,gBAAoB,QAAS,CAC3DhW,GAAIuxC,GACHv7B,GAAS,KAAMm6B,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EwB,EAAG,gCACH/pB,OAAQ,cAIZ,I,kBAAIgqB,EAA0B,aAAiBR,GCxBlCS,GDyBE,ICzBWplD,UAAOC,IAAV,uCAAGD,CAAH,8GACjB,qBAAGG,MAAkBsgC,oBAEN,qBAAG4kB,UAA6B,OAAS,UAKxD,qBAAGllD,MAAkBC,WAAWC,eAA/B,IAAD,0DAIOilD,EAAiBtlD,UAAOC,IAAV,uCAAGD,CAAH,gHASdulD,EAAYvlD,UAAOC,IAAV,uCAAGD,CAAH,+DACD,qBAAGqlD,UAA6B,OAAS,UAEjD,qBAAGA,UAA6B,OAAS,aAEzCG,EAAiBxlD,kBAAOylD,KAAV,uCAAGzlD,CAAH,wWAWb,qBAAGqlD,UAA6B,OAAS,UAC1C,qBAAGA,UAA6B,OAAS,aAIlC,qBAAGA,UAA6B,IAAM,UAMpD,qBAAGK,SAEDnlD,cADO,8QAWT,qBAAGJ,MAAkBC,WAAWC,eAA/B,IAAD,iEAKOslD,EAAW3lD,UAAOC,IAAV,uCAAGD,CAAH,4CACf,qBAAGG,MAAkBugC,iBAEZ,qBAAGklB,aAAmC,sBAAwB,4BACvE,qBAAGzlD,MAAkBC,WAAWC,eAA/B,IAAD,uFAKOwlD,EAAmB7lD,kBAAOwB,KAAV,uCAAGxB,CAAH,0CAGvB,gBAAGG,EAAH,EAAGA,MAAO2lD,EAAV,EAAUA,KAAV,OAAqB3lD,EAAMC,WAAWC,eAArC,IAAD,mEACa,WAATylD,EAAoB,IAAM,OAIvBC,EAAW/lD,UAAOC,IAAV,uCAAGD,CAAH,mIACf,qBAAGG,MAAkBugC,iBAEd,cAAGvgC,MAAH,MAAe,kBAOX,cAAGA,MAAH,OAAei4C,YAAO,GAAKC,OAAOC,YAAO,gBAG7C0N,EAAUhmD,kBAAO+lD,GAAV,uCAAG/lD,CAAH,oGAEL,gBAAG0lD,EAAH,EAAGA,QAAH,MAAiC,WAAjC,EAAYI,KAAgC,SAAWJ,EAAU,IAAM,iBACpE,kBAAwB,SAAxB,EAAGI,KAA8B,QAAU,OAUhDG,EAAUjmD,UAAOc,KAAV,uCAAGd,CAAH,uFAGG,qBAAGkmD,SAA2B,SAAW,mBAInDC,EAAuBnmD,kBAAOomD,KAAV,uCAAGpmD,CAAH,aAC3B,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,6DAGA,qBAAGxB,MAAkBC,WAAWC,eAA/B,IAAD,sHAeOgmD,GATiBrmD,kBAAOsmD,GAAV,wCAAGtmD,CAAH,gFAKT,gBAAGumD,EAAH,EAAGA,SAAUpmD,EAAb,EAAaA,MAAb,OAA0BomD,EAAW,eAAiBpmD,EAAM29B,SAI/C99B,UAAOc,KAAV,wCAAGd,CAAH,wBACtB,cAAGwuB,OAAH,MAA0B,oCACf,cAAGA,OAAH,MAA0B,WAE9Bg4B,EAAYxmD,UAAOE,OAAV,wCAAGF,CAAH,4IACE,gBAAG8lD,EAAH,EAAGA,KAAH,EAAS3lD,MAAT,MAA8B,WAAT2lD,EAAoB,iBAAmB,yBAO9E,qBAAG3lD,MAAkBC,WAAWC,eAA/B,IAAD,sDAIsB,gBACxBylD,EADwB,EACxBA,KADwB,EAExB3lD,MAFwB,MAGb,WAAT2lD,EAAoB1N,YAAO,IAAMC,OAAOC,YAAO,eAAiBF,YAAO,IAAM,cAG7E,qBAAGj4C,MAAkBC,WAAWC,eAA/B,IAAD,kG,oTCvHS,SAASomD,EAAT,GA0Bc,IAzBzB/gD,EAyBwB,EAzBxBA,MACAuY,EAwBwB,EAxBxBA,YACAyoC,EAuBwB,EAvBxBA,MACAC,EAsBwB,EAtBxBA,cACA7W,EAqBwB,EArBxBA,iBACApoC,EAoBwB,EApBxBA,SACAqoC,EAmBwB,EAnBxBA,cACAx8B,EAkBwB,EAlBxBA,GACAs9B,EAiBwB,EAjBxBA,gBACAZ,EAgBwB,EAhBxBA,mBACAa,EAewB,EAfxBA,gBACApN,EAcwB,EAdxBA,UACAzY,EAawB,EAbxBA,YAawB,IAZxB27B,mBAYwB,aAXxBC,YAWwB,MAXjB,KAWiB,MAVxBxB,iBAUwB,aATxByB,cASwB,SARxBC,EAQwB,EARxBA,YAQwB,IAPxBnB,oBAOwB,aANxBM,iBAMwB,SALxB7qB,GAKwB,EALxBA,SAKwB,KAJxBqqB,gBAIwB,gBAHxBjjC,aAGwB,WAFxBqjC,GAEwB,EAFxBA,KACGx6C,GACqB,iBACxB,GAAkCzB,oBAAS,GAA3C,qBAAOm9C,GAAP,MAAkBC,GAAlB,MACQ9kD,GAAYF,cAAZE,QAEF+kD,GAAUn/C,YAAkB,OAAC5F,SAAD,IAACA,WAAWoC,EAAZ,OAAuBmD,QAAvB,IAAuBA,SAAYnD,GAE/D4iD,GAAeC,YAAY,OAAC1/C,QAAD,IAACA,SAAYnD,GAExC8iD,GAAsB/kD,uBAAY,WACpC2kD,IAAa,KACd,CAACA,KAEEK,GAAgB5jD,mBAAQ,WAC1B,IAAKwjD,GAAS,MAAO,aAErB,IAAMK,EAAWL,GAAQ7vB,UAEzB,OAAIkwB,EAAS9yC,MAAM,KAAK,GAAGpO,OAAS,GACzBkhD,EAASt0C,MAAM,EAAG,GAAK,MAGP,KAAtBi0C,GAAQ7vB,UACF,KAEN6vB,GAAQ7vB,UAAY,KACd,YAGH6vB,GAAQ7vB,QAAQ,KACzB,CAAC6vB,KAEJ,OACI,eAAC9B,EAAD,yBAAY7xC,GAAIA,EAAI8xC,UAAWA,GAAe/5C,IAA9C,cACKw7C,GACG,cAACxB,EAAD,CAAgBjkD,MAAO,CAAEuuC,OAAO,GAAD,OAAc,SAATkW,GAAkB,OAAS,SAA/D,SACI,cAACD,EAAD,CACI7uB,IAAI,KACJ2Q,QAAQ,SACRtmC,MAAO,CACH0K,QAAS,OACT4gB,WAAY,SACZtkB,MAAO,OACP02C,UAAW,OACX7Z,SAAU,WACVsiB,OAAQ,OAThB,SAaI,cAAC,IAAK1mB,MAAN,CAAYnjB,SAAS,OAArB,SACI,mGAMhB,eAAC4nC,EAAD,CAAWF,UAAWA,EAAtB,UACI,eAACM,EAAD,CACIC,aAAcA,EACdvkD,MAAOgkD,EAAY,CAAEzd,aAAc,MAAOt/B,QAAQ,GAAD,OAAc,SAATw9C,GAAkB,IAAM,KAAS,CAAEx9C,QAAQ,GAAD,OAAc,SAATw9C,GAAkB,IAAM,KAC7HS,UAAWzW,EAHf,WAKM8V,GACE,cAACJ,EAAD,CACIM,KAAMA,GACNS,WAAY7+C,EACZ29C,UAAWA,EACX7gD,UAAU,8BACVkhD,QAASA,GACTjjC,KAAMA,GACN4Y,SAAUqqB,IAAoB,WAATI,GACrB92C,QAAS,WACD8gC,GACAmX,IAAa,IAVzB,SAcI,cAAChB,EAAD,CAASC,SAAUA,GAAU38B,MAAO29B,GAAUA,GAAQrjB,cAAc,GAAK,GAAzE,SACI,eAAC5M,EAAA,EAAD,WACK4vB,EACG,sBAAMxlD,MAAO,CAAE65B,YAAa,UAA5B,SACI,cAAC,IAAD,CAAoBoJ,UAAWuiB,EAAK52C,OAAQs0B,UAAWsiB,EAAK12C,OAAQ/O,KAAM,GAAI6iC,QAAQ,MAE1Fv8B,EACA,cAACy8B,EAAA,EAAD,CAAc9iC,MAAO,CAAE65B,YAAa,UAAYxzB,SAAUA,EAAUtG,KAAM,SAC1E,KACHylD,EACG,eAACR,EAAD,CAAiB7hD,UAAU,sBAA3B,iBACKqiD,QADL,IACKA,OADL,EACKA,EAAM52C,OAAO2W,OADlB,WAC2BigC,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAM12C,OAAOyW,UAGxC,cAACy/B,EAAD,CAAiB7hD,UAAU,yBAAyBgqB,OAAQva,QAAQvM,GAAYA,EAASkf,QAAzF,UACMlf,GAAYA,EAASkf,QAAUlf,EAASkf,OAAOvgB,OAAS,GACtDqB,EAASkf,OAAO3T,MAAM,EAAG,GAAK,MAAQvL,EAASkf,OAAO3T,MAAMvL,EAASkf,OAAOvgB,OAAS,EAAGqB,EAASkf,OAAOvgB,QACxGqB,EACA,sBAAKrG,MAAO,CAAE0K,QAAS,OAAQ4gB,WAAY,UAA3C,UACI,+BACK+4B,IAAWqB,GAAeG,IAAoB,WAATpB,KAAsBoB,GAAQrjB,cAAc,GAAK,KACnF,wDAA6Bn8B,EAASkf,UACtC8+B,IAAWqB,GAAeG,GAC1B,+DAAqCx/C,EAASkf,OAA9C,cAAoB0gC,MAEpB5/C,EAASkf,SAGhBmgC,GAAeG,KAAYxB,GACxB,sBAAMrkD,MAAO,CAAE6jC,SAAU,WAAYuiB,MAAO,EAAG9pC,SAAU,QAAU4L,MAAO29B,GAAQQ,UAAlF,SACKJ,KAGLP,IACCG,IACD/kD,IACI,sBAAMd,MAAO,CAAE6jC,SAAU,WAAYuiB,MAAO,GAA5C,SACI,cAACE,EAAA,EAAD,SAKhB,OAAS,mDAOnCllC,IAAiB,WAATqjC,MAAuBgB,GAAUp/C,GAAYi/C,GACnD,cAACH,EAAD,CAAWV,KAAMA,GAAM92C,QAAS03C,EAAhC,kBAIFrB,GACE,mCACI,cAACc,EAAD,CACI9kD,MAAO,CACHksC,gBAAiB,cACjBwF,UAAW6S,EAAe,OAAS,QACnCjoC,SAAU,OACVohC,UAAoB,SAAT+G,GAAkB,OAAS,KAE1CthD,UAAU,qBACVkB,MAAOA,EACP21B,SAAUA,GACVpd,YAAa,SAAC2pC,GACE,MAARA,IAAaA,EAAM,MACvB3pC,EAAY2pC,WAM9BvC,GAAcuB,GAAgBE,IAAUphD,EAMtCgC,GAAY+a,IAAQ0kC,GACpB,cAACnB,EAAD,CAASF,KAAMA,GAAf,SACI,cAAC7uB,EAAA,EAAD,sBAAkBvvB,EAASkf,OAA3B,eAAwCugC,GAAa9vB,eAGzD3vB,GACA+a,IACI,cAACujC,EAAD,CAASF,KAAMA,GAAf,SACI,cAAC7uB,EAAA,EAAD,UACI,0CAdZ,cAAC+uB,EAAD,CAASN,QAASA,GAASI,KAAMA,GAAjC,SACI,cAAC7uB,EAAA,EAAD,UACI,cAACwM,EAAA,EAAD,CAAWC,UAAWA,EAAWzY,YAAaA,WAkB7D6kB,GACG,cAAC4M,EAAA,EAAD,CACI1vC,OAAQg6C,GACR55C,UAAWi6C,GACXvX,iBAAkBA,EAClBzB,iBAAkB3mC,EAClBkpC,sBAAuBb,EACvBc,gBAAiBA,EACjBZ,mBAAoBA,EACpBa,gBAAiBA,U,+GC1P/BgC,EAAS9yC,UAAOC,IAAV,uCAAGD,CAAH,oEAKCu9C,EAAev9C,kBAAO8yC,GAAV,uCAAG9yC,CAAH,oCAKZwB,EAAaxB,UAAOC,IAAV,uCAAGD,CAAH,0EAML,gBAAGg3B,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAG2Q,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCmL,O,uHChBT+U,EAAe7nD,UAAOC,IAAV,wCAAGD,CAAH,gGAQZ8nD,EAAY9nD,UAAOC,IAAV,wCAAGD,CAAH,oDAMT+nD,EAAY/nD,UAAOc,KAAV,wCAAGd,CAAH,uFAaA,SAASgoD,EAAT,GAA4D,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,QAC1C,OACI,cAACL,EAAD,UACKI,EACG,cAAC,IAAD,CAAkB58C,KAAM,kFAAxB,SACI,eAAC,IAAD,CAAOsiB,QAASF,IAAa06B,QAA7B,UACI,cAAC,IAAD,CAAa9/C,MAAO,GAAIunC,OAAQ,KADpC,OAGI,cAACkY,EAAD,UACI,wCAIZI,EACA,cAAC,IAAD,CAAkB78C,KAAM,yHAAxB,SACI,eAAC,IAAD,CAAOsiB,QAASF,IAAa06B,QAA7B,UACI,cAACJ,EAAD,IADJ,QAEI,cAACD,EAAD,UACI,0CAKZ,cAAC,IAAD,CAAkBz8C,KAAM,iIAAxB,SACI,eAAC,IAAD,CAAOsiB,QAASF,IAAaM,QAA7B,UACI,cAAC,IAAD,CAAa1lB,MAAO,GAAIunC,OAAQ,KADpC,OAGI,cAACkY,EAAD,UACI,kD,4IC3CrB,SAASM,IACZ,IACMC,EAfc,SAACC,GACrB,IAAMC,EAAgB7kD,mBAAQ,kBAAM8nB,gBAAmB,IAEvD,OAAI+8B,GAAkBA,IAAkBj8B,KAAkBg8B,IAAiBh8B,IAOpE,KANCg8B,IAAiBC,EACVj8B,IAEAi8B,EAQMC,CADAp8B,eAGrB,ECdG,SAA8Bb,GAIjC,IAAM0E,EAAW/T,cACXusC,EAAKzsC,cACLssC,EAAel8B,cAErB,OAAO1oB,mBACH,kBACK6nB,EAEK,CACEm9B,GAAG,2BACIz4B,GADL,IAEEhU,OAAQ0sC,oBAAU,2BAAKF,GAAN,IAAUt8B,IAAKZ,OAEpCvc,QAAS,WACL0D,QAAQ8nB,QAPd,KAUV,CAACvK,EAAUw4B,EAAIH,EAAc/8B,IDPlBq9B,CAAqBP,GAA5BK,EAAR,EAAQA,GAER,OAAKL,GAAiBK,EAEf,6BAF0B,O,gLEVrC,SAASG,EAA2BC,GAChC,IAAMC,EAAkBC,cAClBnU,EAASnxC,mBAAQ,kBAAOolD,EAAWA,EAAShkD,KAAI,SAACwhC,GAAD,MAAa,CAACrgB,IAAUnjB,KAAKwjC,OAAa,KAAK,CAACwiB,IAChG3jD,EAAUC,YAA8B2jD,EAAiB,YAAalU,GAEtEvtC,EAAU5D,mBAAQ,kBAAMyB,EAAQtB,MAAK,qBAAGyD,aAAwB,CAACnC,IACjEhE,EAAQuC,mBAAQ,kBAAMyB,EAAQtB,MAAK,qBAAG1C,WAAoB,CAACgE,IAEzDhD,EAAYF,cAAZE,QAEF8mD,EAAc1uC,YAAYpY,GAE1B+mD,EAAYxlD,mBAAQ,WACtB,IAAK4D,IAAYnG,GAAS2nD,EACtB,OAAO3jD,EAAQL,KAAI,SAACqP,EAAM1O,GACtB,IAAM6gC,EAAUwiB,EAASrjD,GACnBE,EAASwO,EAAKxO,OACpB,MAAO,CACH2gC,UACA5uB,IAAK/R,EAAO+R,IACZyxC,yBAA0BxjD,EAAOwjD,yBACjCC,yBAA0BzjD,EAAOyjD,yBACjCvpC,UAAWla,EAAOka,UAClB0rB,MAAO5lC,EAAO4lC,MACd8d,SAAU1jD,EAAO0jD,SACjBjjB,UAAWzgC,EAAOygC,UAClBC,UAAW1gC,EAAO0gC,UAClBp2B,OAAQtK,EAAOsK,OACfE,OAAQxK,EAAOwK,OACfm5C,YAAa3jD,EAAO2jD,YACpBC,YAAa5jD,EAAO4jD,kBAKjC,CAACjiD,EAASnG,EAAOgE,EAAS2jD,EAAU3mD,IAEjCqnD,EAAgBC,YAAyBP,GAAa,IAE5D,OAAOxlD,mBAAQ,WAEX,OAAIulD,IAAgB9mD,IAKfqnD,GAAiBN,EALc,CAChC5hD,UACA4hD,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWpkD,KAAI,SAACogC,EAAUz/B,GAAX,mBAAC,eAAsBy/B,GAAvB,IAAiCoB,QAASuO,EAAOpvC,GAAG,SAQ9EqjD,GAAYU,GAAiBV,EAASziD,SAAWmjD,EAAcnjD,OAAe,CAC9EiB,SAAS,EACT4hD,UAAW,IAGTA,GAAkC,IAArBA,EAAU7iD,SAAiBmjD,GAA0C,IAAzBA,EAAcnjD,OAKtE,CACHiB,UACA4hD,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWpkD,KAAI,SAACogC,EAAUz/B,GAAX,mBAAC,eAAsBy/B,GAAvB,IAAiCoB,QAASuO,EAAOpvC,GAAG,SAPgB,CAC9F6B,SAAS,EACT4hD,UAAWM,EAAc1kD,KAAI,SAACogC,EAAUz/B,GAAX,mBAAC,eAAsBy/B,GAAvB,IAAiCoB,QAASuO,EAAOpvC,GAAG,WAQtF,CAAC+jD,EAAeN,EAAWrU,EAAQ1yC,IASnC,SAASunD,EAAyBpjB,GAAuD,IAAD,EACrFpB,EAAW2jB,EAA2BviB,EAAU,CAACA,QAAW/hC,GAClE,MAAO,CACH+C,QAAS49B,EAAS59B,QAClB49B,SAAQ,UAAEA,EAASgkB,iBAAX,aAAE,EAAqB,IAIhC,SAASS,EAAexnD,GAA4D,IAAD,EAChF4mD,EAAkBC,cAExB,EAA2D91B,YAAoB61B,EAAiB,YAAa,QAAC5mD,QAAD,IAACA,SAAWoC,IAAxGqlD,EAAjB,EAAQtiD,QAAiCuiD,EAAzC,EAAiClkD,OAEjC,EAA8GmkD,cAAtGC,uBAA0BC,EAAlC,EAAkCA,kBAA6CC,GAA/E,EAAqDC,yBAArD,EAA+ED,0BAGzEE,EAAkC,OAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAgB,UAAnB,aAAG,EAAoBn4B,WAE/DhV,qBAAU,WACFva,GACA8nD,EAAyB9nD,KAE9B,CAACA,IAGJ,IAAMioD,EAAe1mD,mBAAQ,WACzB,GAAIymD,GAAkBhoD,EAAS,CAE3B,IADA,IAAMkoD,EAAuB,GACpB5kD,EAAI,EAAGA,EAAI0kD,EAAgB1kD,IAChC4kD,EAAcjyC,KAAK,CAACjW,EAASsD,IAEjC,OAAO4kD,EAEX,MAAO,KACR,CAACloD,EAASgoD,IAEPG,EAAiBllD,YAA8B2jD,EAAiB,sBAAuBqB,GACvFG,EAAsB7mD,mBAAQ,kBAAM4mD,EAAezmD,MAAK,qBAAGyD,aAAwB,CAACgjD,IAwB1F,EAAiDzB,EAtBhCnlD,mBAAQ,WACrB,OAAIvB,EACOmoD,EACFxlD,KAAI,qBAAGa,UACPX,QAAO,SAACW,GAAD,QAAgCA,KACvCb,KAAI,SAACa,GAAD,OAAYsgB,IAAUnjB,KAAK6C,EAAO,OAExC,KACR,CAACxD,EAASmoD,KAcLpB,EAAR,EAAQA,UAAoBsB,EAA5B,EAAmBljD,QAanB,EAA8EuhD,EAXlDnlD,mBAAQ,WAEhC,OAAIsmD,GAAqBA,EAAkBS,wBAChCT,EAAkBS,wBAGtB,KAER,CAACT,EAAmB7nD,KAGJuoD,EAAnB,EAAQxB,UAAwCyB,EAAhD,EAAuCrjD,QAavC,EAAoFuhD,EAXrDnlD,mBAAQ,WAEnC,OAAIsmD,GAAqBA,EAAkBY,2BAChCZ,EAAkBY,2BAGtB,KAER,CAACZ,EAAmB7nD,KAGJ0oD,EAAnB,EAAQ3B,UAAR,EAA0C5hD,QAkB1C,MAAO,CACHA,QAASijD,GAAuBX,GAAkBY,GAAoBG,EACtEzB,UAlBsBxlD,mBAAQ,WAE9B,GAAIwlD,GAAawB,GAAsBG,EACnC,MAAM,GAAN,mBAAW3B,GAAX,YAAyBwB,EAAmB5lD,KAAI,SAAAogC,GAAQ,kCACjDA,GADiD,IAEpD4lB,WAAW,QAFf,YAGQD,EAAsB/lD,KAAI,SAAAogC,GAAQ,kCACnCA,GADmC,IAEtC6lB,YAAY,WAMrB,CAAC7B,EAAWwB,EAAoBvoD,O,6PCjJhC,SAAS2nD,IAEZ,MAAsC7nD,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAAS4/B,EAA1B,EAA0BA,QAC1B,EAAsCvc,cAA9BC,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,cAEpB,EAAgD9b,mBAA4B,MAA5E,mBAAOmhD,EAAP,KAAyBC,EAAzB,KACA,EAA8DphD,oBAAkB,GAAhF,mBAAOqhD,EAAP,KAAgCC,EAAhC,KAEA,EAAwDthD,mBAA2B,MAAnF,mBAAOuhD,EAAP,KAA6BC,EAA7B,KACA,EAAsExhD,oBAAkB,GAAxF,mBAAOyhD,EAAP,KAAoCC,EAApC,KAEA,EAA8D1hD,mBAAyB,MAAvF,mBAAO2hD,EAAP,KAAgCC,EAAhC,KACA,EAA4E5hD,oBAAkB,GAA9F,mBAAO6hD,EAAP,KAAuCC,EAAvC,KAEA,EAA0C9hD,mBAA8C,IAAxF,oBAAO+hD,GAAP,MAAsBC,GAAtB,MACA,GAA4ChiD,oBAAkB,GAA9D,qBAAOiiD,GAAP,MAAuBC,GAAvB,MAEA,GAAwCliD,mBAAsC,MAA9E,qBAAOmiD,GAAP,MAAqBC,GAArB,MACA,GAAsDpiD,oBAAkB,GAAxE,qBAAOqiD,GAAP,MAA4BC,GAA5B,MAEA,GAAkCtiD,mBAAuF,MAAzH,qBAAOuiD,GAAP,MAAkBC,GAAlB,MACA,GAAgDxiD,oBAAkB,GAAlE,qBAAOyiD,GAAP,MAAyBC,GAAzB,MAEA,GAAkD1iD,mBAA6F,MAA/I,qBAAOmgD,GAAP,MAA0BwC,GAA1B,MACA,GAAgE3iD,oBAAkB,GAAlF,qBAAOqgD,GAAP,MAAiCuC,GAAjC,MAEA,GAAwC5iD,mBAA2C,MAAnF,qBAAO6iD,GAAP,MAAqBC,GAArB,MACA,GAAsD9iD,oBAAkB,GAAxE,qBAAO+iD,GAAP,MAA4BC,GAA5B,MAEA,GAAgDhjD,mBAA+B,MAA/E,qBAAOijD,GAAP,MAAyBC,GAAzB,MACA,GAA8DljD,oBAAkB,GAAhF,qBAAOmjD,GAAP,MAAgCC,GAAhC,MAEMnrB,GAAWC,EAAU,IAAImrB,YAAUlrB,aAAaD,EAAQD,eAAYv9B,EAhCzC,SAoClBiwB,KApCkB,wFAoCjC,qGAEUC,EAAS5f,IAAcmU,IAAI9mB,GAAW6S,IAAQC,KAAKiU,gBAF7D,kBAKqByL,MAAMD,GAAQpF,MAAK,SAAAsF,GAAC,OAAIA,EAAEC,UAL/C,iGAQe,IARf,0DApCiC,+BAiDlBu4B,GAjDkB,2FAiDjC,WAAyBC,GAAzB,2GAAwCC,EAAxC,gCAEUC,EAAiB,GAEd7nD,EAAI,EAJjB,YAIoBA,EAAI2nD,EAAO/mD,QAJ/B,iCAM2BknD,GAAUH,EAAO3nD,GAAGkK,MAN/C,cAMcA,EANd,gBAOkC69C,GAAWJ,EAAO3nD,GAAGgoD,YAAaJ,GAPpE,cAOcI,EAPd,iBAQuCD,GAAWJ,EAAO3nD,GAAGioD,iBAAkBL,GAR9E,eAQcK,EARd,iBASsCF,GAAWJ,EAAO3nD,GAAGkoD,gBAAiBN,GAT5E,QAScM,EATd,OAWcC,EAXd,2BAYeR,EAAO3nD,IAZtB,IAaYkK,OACA89C,cACAC,mBACAC,kBACAE,OAAQC,sBAAY7nC,IAAUnjB,KAAKsqD,EAAO3nD,GAAGooD,QAASJ,EAAY9mC,UAClEonC,YAAaD,sBAAY7nC,IAAUnjB,KAAKsqD,EAAO3nD,GAAGsoD,aAAcL,EAAiB/mC,YAGrF2mC,EAAQl1C,KAAR,eAAkBw1C,IArB1B,QAIuCnoD,IAJvC,gDAwBW6nD,GAxBX,4CAjDiC,kCA6ElBE,GA7EkB,2FA6EjC,WAA0BlnB,GAA1B,0GAA2C+mB,EAA3C,mDAIoDA,EAAU1nC,EAAgBF,GAAYV,MAAyC,CACvHA,MAAOipC,cACPC,UAAW,CAAE3nB,aANzB,mBAIwB//B,EAJxB,EAIgBg0B,KAAQh0B,SAAUpF,EAJlC,EAIkCA,OAJlC,sBASyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAT1D,gCAWenuC,EAAO,IAXtB,wCAcc,IAAI3D,MAAM,qBAdxB,0DA7EiC,kCA+FlB2qD,GA/FkB,2FA+FjC,WAAyBW,GAAzB,8GAEkDzoC,EAAWV,MAAwC,CACzFA,MAAOopC,cACPF,UAAW,CAAEC,YAJzB,mBAEwBx+C,EAFxB,EAEgB6qB,KAAQ7qB,QAASvO,EAFjC,EAEiCA,OAFjC,sBAOyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAP1D,gCASehlC,EAAM,IATrB,wCAYc,IAAI9M,MAAM,qBAZxB,2DA/FiC,+BA+GlBwrD,GA/GkB,2FA+GjC,WAA0BC,GAA1B,8GAG0D1oC,EAAcZ,MAA8C,CAC1GA,MAAOupC,cACPL,UAAW,CAAEI,oBALzB,mBAGwBE,EAHxB,EAGgBh0B,KAAQg0B,gBAAiBptD,EAHzC,EAGyCA,OAHzC,sBAQyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAR1D,gCAUe6Z,EAAc,IAV7B,wCAcc,IAAI3rD,MAAM,8BAdxB,2DA/GiC,+BAiIlB4rD,GAjIkB,2FAiIjC,WAAmCC,GAAnC,8GAI4D9oC,EAAcZ,MAAkD,CAChHA,MAAO2pC,cACPT,UAAW,CAAEQ,YANzB,mBAIwBE,EAJxB,EAIgBp0B,KAAQo0B,kBAAmBxtD,EAJ3C,EAI2CA,OAJ3C,sBASyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAT1D,gCAWeia,EAAgB,IAX/B,wCAec,IAAI/rD,MAAM,0BAA4B,KAAI8xC,SAfxD,2DAjIiC,8EAoJjC,WAA4BxkB,GAA5B,0GAES/tB,GAAYD,EAFrB,iEAKQ6pD,IAAkB,GAL1B,SAOoDpmC,EAAcZ,MAAM,CAC5DA,MAAO6pC,cACP9pC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CAAE9rD,aAVzB,mBAOwB0sD,EAPxB,EAOgBt0B,KAAQs0B,UAAW1tD,EAPnC,EAOmCA,OAPnC,uBAayB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAb1D,WAea5S,GAfb,uBAe6B,IAAIl/B,MAAM,eAfvC,QAiBcksD,EAAoB,GAjBlC,cAmB6BD,GAnB7B,kEAmBmBhB,EAnBnB,QAqBkBkB,EAAiB,IAAI3Z,IACvByY,EAAOmB,cACPC,EACAntB,IAxBhB,UA2BiCitB,EAAenoC,SA3BhD,eA2BkBA,EA3BlB,iBA4B+BmoC,EAAexkD,OA5B9C,eA4BkBA,EA5BlB,iBA6BmCwkD,EAAepoC,WA7BlD,QA6BkBA,EA7BlB,OA+BkBuoC,EA/BlB,2BAgCmBrB,GAhCnB,IAiCgB1mD,OAAQ0mD,EAAO1mD,OAAS,GAAK0mD,EAAO1mD,OAAS6J,KAAKu3B,IAAI,GAAI5hB,IAAW0Q,QAAQ1Q,GAAY,EACzFwoC,WAAYtB,EAAO1mD,OACnByf,SACArc,SAGJukD,EAAW12C,KAAK82C,GAvC5B,iJA2CQrD,GAAiBiD,GA3CzB,qDA8CQjD,GAAiB,YACb,gBAAejpD,OA/C3B,uBAgDkB,IAAIA,MAAM,mBAAqB,KAAI8xC,SAhDrD,QAoDIqX,IAAkB,GApDtB,yEApJiC,8EA2MjC,WAAiC77B,GAAjC,qGAGQi8B,IAAuB,GAH/B,SAKwExmC,EAAcZ,MAA8C,CACxHA,MAAOqqC,cACPtqC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CAAEoB,UAAWr+C,KAAKC,MAAMlN,KAAKstB,MAAQ,QAR5D,mBAKuC26B,EALvC,EAKgBzxB,KAAQg0B,gBAA+BptD,EALvD,EAKuDA,OALvD,sBAWyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAX1D,UAaoC,IAAxBsX,EAAa3lD,OAbzB,wBAcY4lD,GAAgB,IAChBE,IAAuB,GAfnC,uCAmBQF,GAnBR,UAmB8BkB,GAAUnB,GAAc,GAnBtD,2FAsBc,IAAIppD,MAAM,wCAtBxB,yBAwBQupD,IAAuB,GAxB/B,8EA3MiC,8EAuOjC,WAA8Bj8B,GAA9B,0GAEIq8B,IAAoB,GAFxB,kBAMyE5mC,EAAcZ,MAAwC,CACnHA,MAAOuqC,cACPxqC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CACPsB,UAAWv+C,KAAKC,MAAMlN,KAAKstB,MAAQ,KACnCm+B,QAASx+C,KAAKC,MAAMlN,KAAKstB,MAAQ,QAXjD,mBAMuCo+B,EANvC,EAMgBl1B,KAAQg0B,gBAAgCptD,EANxD,EAMwDA,OANxD,sBAeyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAf1D,wBAiB+E/uB,EAAcZ,MAA8C,CAC/HA,MAAOqqC,cACPtqC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CAAEoB,UAAWr+C,KAAKC,MAAMlN,KAAKstB,MAAQ,QApB5D,oBAiBuC26B,EAjBvC,EAiBgBzxB,KAAQg0B,gBAAsCmB,EAjB9D,EAiBuDvuD,OAjBvD,uBAuB0B,IAAIyB,MAAJ,UAAa8sD,EAAOnlD,KAApB,YAA4BmlD,EAAOhb,UAvB7D,WAyBqC,IAAzB+a,EAAcppD,QAAwC,IAAxB2lD,EAAa3lD,OAzBvD,wBA0BYgmD,GAAa,CACToD,cAAe,GACfzD,aAAc,KAElBO,IAAoB,GA9BhC,4CAkC+Bz3B,YAAkB5yB,GAAW6S,IAAQC,KAlCpE,eAkCc26C,EAlCd,iBAmCiC96B,YAAkB3yB,GAAW6S,IAAQC,KAnCtE,eAmCc46C,EAnCd,OAqCcn2B,EAAQ,EAERo2B,EAAa,IAvC3B,KAyCQxD,GAzCR,UA0CiCc,GAAUsC,EAAc3qD,KAAI,SAAAgrD,GAAE,kCAC5CA,GAD4C,IAE/CthC,QAAQ,EACRuhC,IAAKH,EAAKE,EAAGv8C,IAAMq8C,EAAKE,EAAGv8C,IAAM,SAChC,GA9CjB,qCA+CgC45C,GAAUnB,EAAalnD,KAAI,SAAAgrD,GAAE,kCAC1CA,GAD0C,IAE7ChJ,YAA4BviD,IAApBorD,EAASG,EAAGv8C,KAA4Bo8C,EAASG,EAAGv8C,IAAMkmB,GAASo2B,EAC3EE,IAAKH,EAAKE,EAAGv8C,IAAMq8C,EAAKE,EAAGv8C,IAAM,SAChC,GAnDjB,0BA0CYk8C,cA1CZ,KA+CYzD,aA/CZ,qBAsDQO,IAAoB,GAtD5B,wDAyDc,IAAI3pD,MAAM,qDAzDxB,yBA2DQ2pD,IAAoB,GA3D5B,8EAvOiC,8EAsSjC,qGACSrqD,GAAYC,EADrB,oDAGS2/B,GAHT,sBAGyB,IAAIl/B,MAAM,eAHnC,uBAMQ+oD,GAAkC,GAN1C,SAQ2EhmC,EAAcZ,MAAmC,CAChHA,MAAOirC,cACPlrC,YAAa,eACbmpC,UAAW,CAAE9rD,aAXzB,mBAQkC8tD,EARlC,EAQgB11B,KAAQ21B,WAAkC/uD,EAR1D,EAQ0DA,OAR1D,uBAcyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAd1D,QAgBQ+W,EAA2Bx3C,QAAQg8C,EAAqB5pD,SACxDslD,GAAkC,GAjB1C,wDAoBc,IAAI/oD,MAAM,6BAA+B,KAAIutD,KAAO,IAAM,KAAIzb,SApB5E,yBAsBQiX,GAAkC,GAtB1C,8EAtSiC,8EAiUjC,WAAyCz7B,GAAzC,2OAEShuB,GAAYC,EAFrB,oDAIS2/B,GAJT,sBAIyB,IAAIl/B,MAAM,eAJnC,uBAQQ2oD,GAA+B,GARvC,SAU2E5lC,EAAcZ,MAAmC,CAChHA,MAAOqrC,aAAqB,GAC5BtrC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CAAE9rD,aAbzB,mBAUkC8tD,EAVlC,EAUgB11B,KAAQ21B,WAAkC/uD,EAV1D,EAU0DA,OAV1D,uBAgByB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAhB1D,WAkB4C,IAAhCub,EAAqB5pD,OAlBjC,wBAmBYglD,EAAwB,IACxBE,GAA+B,GApB3C,2BAwBc8E,EAAoB,GAxBlC,cA0B+BJ,GA1B/B,mEA0BmB/qB,EA1BnB,QA4BkBorB,EAAc,IAAIlb,IACpBh6B,IAAuClZ,GACvCquD,EACAzuB,GAAS0uB,aA/BzB,UAkC8EF,EAAYpH,WAAWhkB,EAAS3xB,IAlC9G,oBAkCoB6yB,EAlCpB,EAkCoBA,UAAWC,EAlC/B,EAkC+BA,UAAWxmB,EAlC1C,EAkC0CA,UAAW5P,EAlCrD,EAkCqDA,OAAQE,EAlC7D,EAkC6DA,OAE7CsgD,EApChB,2BAqCmBvrB,GArCnB,IAsCgBkB,YACAC,YACAxmB,YACA5P,SACAE,WAGC+0B,EAASwrB,cAAiBxrB,EAASyrB,gBAA2C,kBAAlBzrB,EAASv1B,KA7CtF,kCA+CoC49C,GAAUroB,EAASv1B,MA/CvD,WA+CsBihD,EA/CtB,gEAmDgBH,EAAS,2BAAQA,GAAR,IAAmB9gD,KAAMihD,IAnDlD,YAsDgB1rB,EAASwrB,aAtDzB,wBAwDsBG,EAAwB,IAAIzb,IAC9B35B,IAAevZ,GACf4uD,EACAhvB,GAAS0uB,aA3D7B,UA4E0BpC,GAAWlpB,EAASwrB,cA5E9C,wBA+DoBjD,EA/DpB,EA+DoBA,YACAC,EAhEpB,EAgEoBA,iBACA/9C,EAjEpB,EAiEoBA,KACA4/C,EAlEpB,EAkEoBA,UACAC,EAnEpB,EAmEoBA,QACAuB,EApEpB,EAoEoBA,mBACApD,EArEpB,EAqEoBA,gBACAqD,EAtEpB,EAsEoBA,oBACAC,EAvEpB,EAuEoBA,oBACAC,EAxEpB,EAwEoBA,oBACAC,EAzEpB,EAyEoBA,gBACAC,EA1EpB,EA0EoBA,gBACAC,EA3EpB,EA2EoBA,gBA3EpB,UA8EyCR,EAAsBS,WAAWC,cACtD,CAAC9D,EAAaC,EAAkB/9C,GAAO4/C,GAAYC,IAClDtqB,EAAS3xB,IAhF9B,eA8EsBi+C,EA9EtB,iBAmF2ChE,GAAWC,GAAa,GAnFnE,eAmFsBgE,EAnFtB,iBAoFgDjE,GAAWE,GAAkB,GApF7E,eAoFsBgE,EApFtB,iBAqF+ClE,GAAWG,GAAiB,GArF3E,eAqFsBgE,EArFtB,iBAsFoCpE,GAAU59C,GAtF9C,YAsFsBihD,EAtFtB,SAwF+Ba,GAAiBC,GAAsBC,EAxFtE,yDA0FgBlB,EAAS,2BACFA,GADE,IAGL9gD,KAAMihD,EACNgB,iBAAkBH,EAClBI,sBAAuBH,EACvBI,gBAAiBvC,EACjBwC,cAAevC,EACfwC,QAAsB,KAAZzC,EAAmBxrD,KAAKstB,MAClC4gC,MAAkB,KAAVzC,EAAiBzrD,KAAKstB,MAC9B0/B,oBAAqBA,EACrBmB,YAAaV,EAAW,GAAK1D,sBAAY7nC,IAAUnjB,KAAK0uD,EAAW,IAAKC,EAAa9qC,UAAY,EACjGwrC,iBAAkBX,EAAW,GAAK1D,sBAAY7nC,IAAUnjB,KAAK0uD,EAAW,IAAKE,EAAkB/qC,UAAY,EAC3GyrC,qBAAsBT,EACtBU,yBAA0BrB,EAC1BsB,yBAA0BrB,EAC1BsB,yBAA0BrB,EAC1BsB,qBAAsBrB,EACtBsB,qBAAsBrB,EACtBsB,qBAAsBrB,IA7G1C,yCAiHiE1rC,EAAcZ,MAAM,CAEjEA,MAAO4tC,YAA4B,CAACztB,EAASv1B,OAC7CmV,YAAa,iBApHjC,qBAiHgCypC,GAjHhC,GAiHwBh0B,KAAQg0B,gBAAiBptD,GAjHjD,GAiHiDA,OAjHjD,uBAuHiC,IAAIyB,MAAJ,UAAazB,GAAMoJ,KAAnB,YAA2BpJ,GAAMuzC,UAvHlE,QAyHmH,IAA/F6Z,GAAcvpD,QAAO,SAAC4tD,GAAD,OAAe5hD,KAAKC,MAAMlN,KAAKstB,MAAQ,KAAQuhC,EAAKrD,aAAWlpD,SACpFoqD,EAAS,2BACFA,GADE,IAELoC,gBAAgB,KA5HxC,YAiIgB3tB,EAASyrB,eAjIzB,mCAgJ0BnC,GAAoBtpB,EAASyrB,gBAhJvD,yBAoIoBlD,GApIpB,GAoIoBA,YACAC,GArIpB,GAqIoBA,iBACA/9C,GAtIpB,GAsIoBA,KACA4/C,GAvIpB,GAuIoBA,UACAC,GAxIpB,GAwIoBA,QACA7B,GAzIpB,GAyIoBA,gBACAwD,GA1IpB,GA0IoBA,gBACAC,GA3IpB,GA2IoBA,gBACAC,GA5IpB,GA4IoBA,gBACAL,GA7IpB,GA6IoBA,oBACAC,GA9IpB,GA8IoBA,oBACAC,GA/IpB,GA+IoBA,oBAGE4B,GAAwB,IAAI1d,IAC9Bz5B,IAAezZ,GACf6wD,EACAjxB,GAAS0uB,aArJ7B,WAwJsDsC,GAAsBxB,WAAW0B,eACnE,CAACvF,GAAaC,GAAkB/9C,GAAM4/C,GAAWC,KAChDtqB,EAAS3xB,GACV,CAAEzQ,KAAMX,IA3J5B,0BAwJwB0rD,GAxJxB,GAwJwBA,OAAQE,GAxJhC,GAwJgCA,YAxJhC,WA8J2CP,GAAWC,IAAa,GA9JnE,gBA8JsBgE,GA9JtB,kBA+JgDjE,GAAWE,IAAkB,GA/J7E,gBA+JsBgE,GA/JtB,kBAgKoCnE,GAAU59C,IAhK9C,gBAgKsBihD,GAhKtB,kBAiK+CpD,GAAWG,IAAiB,GAjK3E,YAiKsBgE,GAjKtB,OAmKqBf,IAAUa,IAAiBC,IAAsBC,GAnKtE,2DAqKgBlB,EAAS,2BACFA,GADE,IAELwC,mBAAoBxB,GACpByB,wBAAyBxB,GACzByB,iBAAkB5D,GAClB6D,eAAgB5D,GAChB6D,uBAAwB1B,GACxB2B,uBAAwBnC,GACxBoC,uBAAwBnC,GACxBoC,uBAAwBnC,GACxBoC,2BAA4BzC,GAC5B0C,2BAA4BzC,GAC5B0C,2BAA4BzC,GAE5BvhD,KAAMihD,GACNgD,cAAe9F,sBAAY7nC,IAAUnjB,KAAK+qD,IAAS4D,GAAa9qC,UAChEktC,mBAAoB/F,sBAAY7nC,IAAUnjB,KAAKirD,IAAc2D,GAAkB/qC,YArLnG,4CA0LmEhB,EAAcZ,MAAM,CAEnEA,MAAO+uC,YAA6B,CAAC5uB,EAASv1B,OAC9CmV,YAAa,iBA7LjC,sBA0LgC6pC,GA1LhC,GA0LwBp0B,KAAQo0B,kBAAmBxtD,GA1LnD,GA0LmDA,OA1LnD,wBAgMiC,IAAIyB,MAAJ,UAAazB,GAAMoJ,KAAnB,YAA2BpJ,GAAMuzC,UAhMlE,SAkMsI,IAAlHia,GAAgB3pD,QAAO,SAAC4tD,GAAD,QAAiBA,EAAKmB,aAAenB,EAAKoB,mBAAqBpB,EAAKqB,cAAY5tD,SACvGoqD,EAAS,2BACFA,GADE,IAELyD,kBAAkB,KArM1C,SA0MY7D,EAAWj4C,KAAKq4C,GA1M5B,0JA4MQpF,EAAwBgF,GA5MhC,2DA+Mc,IAAIztD,MAAM,+BAAsC,KAAIutD,KAAO,KAAO,KAAIzb,SA/MpF,2BAiNQ6W,GAA+B,GAjNvC,oGAjUiC,8EAshBjC,WAA8Cr7B,GAA9C,kIAEShuB,GAAYC,EAFrB,oDAIS2/B,GAJT,sBAIyB,IAAIl/B,MAAM,eAJnC,cAMIqqD,IAA2B,GAN/B,kBAUuEtnC,EAAcZ,MAAoC,CAC7GA,MAAOovC,cACPrvC,YAAaoL,EAAS,eAAiB,cACvC+9B,UAAW,CAAE9rD,aAbzB,mBAUkCiyD,EAVlC,EAUgB75B,KAAQ21B,WAA8B/uD,EAVtD,EAUsDA,OAVtD,uBAgByB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAhB1D,WAkBwC,IAA5B0f,EAAiB/tD,OAlB7B,wBAmBY0mD,GAAoB,IACpBE,IAA2B,GApBvC,2BAwBcoD,EAA4B,GAxB1C,cA0B+B+D,GA1B/B,kEA0BmBlvB,EA1BnB,QA4BkBorB,EAAc,IAAIlb,IACpBh6B,IAAuClZ,GACvCquD,EACAzuB,GAAS0uB,aA/BzB,UAkC8EF,EAAYpH,WAAWhkB,EAAS3xB,IAlC9G,wBAkCoB6yB,EAlCpB,EAkCoBA,UAAWC,EAlC/B,EAkC+BA,UAAWxmB,EAlC1C,EAkC0CA,UAAW5P,EAlCrD,EAkCqDA,OAAQE,EAlC7D,EAkC6DA,OAE7CsgD,EAAyB,CAAErqB,YAAWC,YAAWxmB,YAAW5P,SAAQE,UApCpF,UAsCsFq+C,GAAoBnW,OAAOnT,EAASyrB,iBAtC1H,wBAsCoBlD,EAtCpB,EAsCoBA,YAAaC,EAtCjC,EAsCiCA,iBAAkB/9C,EAtCnD,EAsCmDA,KAAM4/C,EAtCzD,EAsCyDA,UAAWC,EAtCpE,EAsCoEA,QAtCpE,UAwCgCjC,GAAU59C,GAxC1C,eAwCkBihD,EAxClB,iBAyCuCpD,GAAWC,GAzClD,eAyCkBgE,EAzClB,iBA0C4CjE,GAAWE,GA1CvD,WA0CkBgE,EA1ClB,OA4CiBd,GAAUa,GAAiBC,EA5C5C,wDA8CYjB,EAAS,uCACFA,GACAvrB,GAFE,IAGLv1B,KAAMihD,EACNnD,YAAagE,EACb/D,iBAAkBgE,EAClBnC,YACAC,YAGJa,EAAWj4C,KAAKq4C,GAxD5B,iJA2DQ1D,GAAoBsD,GA3D5B,wDA8Dc,IAAIztD,MAAM,yBAA2B,KAAMutD,KAAO,KAAMzb,SA9DtE,yEAthBiC,8EAwlBjC,WAAqC/kC,EAAyB0kD,GAA9D,kGAESnyD,GAAYC,EAFrB,iEAMQgpD,GAA2B,GANnC,SAQ6FxlC,EAAcZ,MAAoC,CACnIA,MAAOuvC,cACPxvC,YAAa,eACbmpC,UAAW,CAAE9rD,UAASwN,KAAMA,EAAK4D,GAAI8gD,oBAXjD,mBAQkCpE,EARlC,EAQgB11B,KAAQ21B,WAAyCqE,EARjE,EAQ0DpzD,OAR1D,uBAcoC,IAAIyB,MAAJ,UAAa2xD,EAAiBhqD,KAA9B,YAAsCgqD,EAAiB7f,UAd3F,QAgBc2b,EAAyB,GAhBvC,cAqB+BJ,GArB/B,IAqBQ,2BAAW/qB,EAAkC,QAEzCurB,EAAS,2BAAQvrB,GAAR,IAAkBsvB,gBAAiBtvB,EAASsvB,kBAErDnE,EAAWj4C,KAAKq4C,GAzB5B,8BA6BQxF,EAAoBoF,GA7B5B,wDAgCc,IAAIztD,MAAM,6BAhCxB,yBAkCQuoD,GAA2B,GAlCnC,8EAxlBiC,8EA8nBjC,WAAsChpD,GAAtC,uGAGQsqD,IAA4B,GAHpC,SAK2E9mC,EAAcZ,MAAoC,CACjHA,MAAOqrC,aAAqB,GAC5BtrC,YAAa,eACbmpC,UAAW,CAAE9rD,aARzB,mBAKkC8tD,EALlC,EAKgB11B,KAAQ21B,WAAkC/uD,EAL1D,EAK0DA,OAL1D,sBAWyB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAX1D,UAqB4C,IAAhCub,EAAqB5pD,OArBjC,wBAsBYmmD,GAAqB,CACjB/B,wBAAyB,GACzBG,2BAA4B,KAEhC6B,IAA4B,GA1BxC,2BA8BchC,EAA0BwF,EAAqBnrD,KAAI,SAAAogC,GAAQ,OAAIA,EAAS3xB,MAI9Ei5C,GAAqB,CACjB/B,0BACAG,2BAJ+B,KAhC3C,wDAwCQ6B,IAA4B,GACtB,IAAI7pD,MAAM,sCAzCxB,0DA9nBiC,iFA2qBjC,WAAiCstB,GAAjC,wHAII28B,IAAuB,GAJ3B,kBAQ4DlnC,EAAcZ,MAA0C,CACxGA,MAAO0vC,IACP3vC,YAAaoL,EAAS,eAAiB,gBAVnD,mBAQwBy+B,EARxB,EAQgBp0B,KAAQo0B,kBAAmBxtD,EAR3C,EAQ2CA,OAR3C,sBAayB,IAAIyB,MAAJ,UAAazB,EAAMoJ,KAAnB,YAA2BpJ,EAAMuzC,UAb1D,UAeuC,IAA3Bia,EAAgBtoD,OAf5B,wBAgBYsmD,GAAgB,IAChBE,IAAuB,GAjBnC,4CAqBiCr4B,KArBjC,eAqBco7B,EArBd,iBAsB+B76B,YAAoB7yB,GAAW6S,IAAQC,KAtBtE,eAwBY0/C,EAA8C,GAxB1D,cA2B8B/F,GA3B9B,kEA2BmBtB,EA3BnB,kBA4B+BE,GAAUF,EAAQ19C,MA5BjD,eA4BkBA,EA5BlB,iBA6BsC69C,GAAWH,EAAQI,aAAa,GA7BtE,eA6BkBA,EA7BlB,iBA8B2CD,GAAWH,EAAQK,kBAAkB,GA9BhF,eA8BkBA,EA9BlB,iBA+B0CF,GAAWH,EAAQM,iBAAiB,GA/B9E,WA+BkBA,EA/BlB,OAiCiBh+C,GAAS89C,GAAgBC,GAAqBC,EAjC/D,wDAmCkBgH,EAAc7G,sBAAY7nC,IAAUnjB,KAAKuqD,EAAQ0G,YAAatG,EAAY9mC,UAC1EiuC,EAAmB9G,sBAAY7nC,IAAUnjB,KAAKuqD,EAAQ2G,iBAAkBtG,EAAiB/mC,UAEzFkuC,EAAkB7jD,KAAKC,MAAqB,OAAd0jD,GAC9BG,EAAuB9jD,KAAKC,MAA0B,OAAnB2jD,GAEnC7E,EAAMH,EAAKvC,EAAQ95C,IAAMq8C,EAAKvC,EAAQ95C,IAAM,IAGlDmhD,EAAgB,sBAETA,GAFS,4BAILrH,GAJK,IAKRI,cACAC,mBACAC,kBACAkH,kBACAC,uBAEAnlD,OACAogD,MACAgF,IAAK,MAzDzB,iJA+DQpI,GAAgB+H,GA/DxB,qDAkEQ/H,GAAgB,QACZ,gBAAe/pD,OAnE3B,uBAoEkB,IAAIA,MAAM,uCAAyC,KAAI8xC,SApEzE,yBAuEQmY,IAAuB,GAvE/B,4FA3qBiC,sBAsvBjC,MAAO,CACHmI,mBArtBcC,cAstBdC,aAAc,CAAEtJ,iBAAeE,kBAAgBqJ,eAxvBlB,8CAyvB7BC,kBAAmB,CACfpJ,gBACAE,uBACAmJ,oBA5vByB,8CA8vB7BC,eAAgB,CAAElJ,aAAWE,oBAAkBiJ,iBA9vBlB,8CA+vB7BC,sBAAuB,CACnBxK,mBACAE,0BACAuK,wBAlwByB,gDAowB7BC,0BAA2B,CACvBtK,uBACAE,8BACAqK,4BAvwByB,8CAywB7BC,6BAA8B,CAC1BpK,0BACAE,iCACAmK,+BA5wByB,6CA8wB7B9L,uBAAwB,CACpBC,qBACAE,4BACAD,yBAjxByB,8CAmxB7B6L,kBAAmB,CACfpJ,gBACAE,uBACAmJ,oBAtxByB,8CAwxB7BC,gCAAiC,CAC7BlJ,oBACAE,2BACAiJ,iCA3xByB,iD,0JC1C/BC,EAAkB,SACXC,EAAOn2D,UAAOC,IAAV,uCAAGD,CAAH,6EACb,qBAAGG,MAAkBugC,iBAKZ01B,EAAgBp2D,kBAAOq2D,KAASppD,MAAM,CAC/CipD,oBADsB,uCAAGl2D,CAAH,0OAGtB,qBAAGG,MAAkBugC,iBAQd,cAAGvgC,MAAH,MAAe,iBAGpB+1D,GAGO,cAAG/1D,MAAH,MAAe,kBAKf,cAAGA,MAAH,OAAei4C,YAAO,GAAKC,OAAOC,YAAO,gB,GAGrBt4C,kBAAOs2D,KAAV,uCAAGt2D,CAAH,mBACpB,gBAAGqtC,EAAH,EAAGA,KAAH,cAAcA,QAAd,IAAcA,IAAQ,UAE5B,qBAAGltC,MAAkBC,WAAW8M,WAA/B,IAAD,uEAKsBlN,UAAOC,IAAV,uCAAGD,CAAH,qCAIQA,kBAAOu2D,KAAV,uCAAGv2D,CAAH,gBACjB,cAAGG,MAAH,MAAe,kB,MC3CnB,SAASq2D,EAAT,GAAiD,IAAzBhoC,EAAwB,EAAxBA,OAC3B,OACI,eAAC2nC,EAAD,CAAM90D,MAAO,CAAEw6C,aAAc,OAAQ9vC,QAAS,OAAQzD,QAAS,oBAA/D,UACI,cAAC8tD,EAAD,CAAe7iD,GAAE,gBAAmBm1C,GAAI,QAAS77B,SAAU,iBAAiB,SAAX2B,GAAjE,SACI,iCAEJ,cAAC4nC,EAAD,CAAe7iD,GAAE,gBAAmBm1C,GAAI,QAAS77B,SAAU,iBAAiB,SAAX2B,GAAjE,SACI,oC,qDCMT,SAASioC,EAAT,GAAyG,IAAhFna,EAA+E,EAA/EA,OAAQoa,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,gBAAiBC,EAA4C,EAA5CA,WAAYvyD,EAAgC,EAAhCA,SAErEjC,EAAWC,cAIXw0D,EAHW36C,cAGSogB,SAASxoB,SAAS,UAAY,WAAa,SAAa8iD,EAAF,WAAmBA,EAAW1wD,YAAe,IAE7H,OACI,sBAAK1B,UAAW,iBAAhB,UACI,cAAC,IAAD,CACIkkD,GAAImO,EACJ7nD,QAAS,WACDstC,IAEAl6C,EAAS8vB,eACT9vB,EAAS00D,iBANrB,SAUI,cAAC,IAAD,CAAW37B,OAAQ,kBAEvB,sBAAM32B,UAAW,oBAAjB,SAAuCkyD,EAAW,wCAA+Bpa,EAAS,6CAAoC,6CAC9H,cAAC,IAAD,CAAKj7C,MAAO,CAAE65B,YAAa,SAA3B,SAAuC72B,IACvC,cAACwzB,EAAA,EAAD,CAAanC,oBAAqBihC,S,seCrCjCI,GAAqC,mBAC7ChiD,IAAQC,IAAM,IAAIgiD,IAAMjiD,IAAQC,IAAKH,IAAcgT,aAAa9S,IAAQC,KAAKkT,sBAAsB7iB,QAASwP,IAAcgT,aAAa9S,IAAQC,KAAKkT,sBAAsBvB,SAAU9R,IAAcgT,aAAa9S,IAAQC,KAAKgT,eAAepB,OAAQ/R,IAAcgT,aAAa9S,IAAQC,KAAKgT,eAAezd,OAD7P,cAE7CwK,IAAQ8F,MAAQ,IAAIm8C,IAAMjiD,IAAQ8F,MAAOhG,IAAcgT,aAAa9S,IAAQ8F,OAAOqN,sBAAsB7iB,QAASwP,IAAcgT,aAAa9S,IAAQ8F,OAAOqN,sBAAsBvB,SAAU9R,IAAcgT,aAAa9S,IAAQ8F,OAAOmN,eAAepB,OAAQ/R,IAAcgT,aAAa9S,IAAQ8F,OAAOmN,eAAezd,OAFzQ,GCCrC0sD,EAAb,kDAGI,WAAsB/0D,GAAkB,uCAC9BA,EAAS2S,IAAcgT,aAAa3lB,GAASgmB,sBAAsBvB,SAAU9R,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,OAAQ/R,IAAcgT,aAAa3lB,GAASgmB,sBAAsB3d,MAJvN,yCAOI,WACI,IAAM2sD,EAAQH,EAAQ/0C,KAAK9f,SAE3B,OADAuO,cAAYymD,EAAO,WACZA,IAVf,oBAiBI,SAAcjwC,GACV,OAAOA,EAAMnf,UAAYmf,EAAM/kB,UAAY8f,KAAK9f,WAlBxD,sBAaI,SAAsBA,GAAyB,IAAD,EAC1C,iBAAO8f,KAAKm1C,YAAYj1D,UAAxB,QAAqC8f,KAAKm1C,YAAYj1D,GAAW,IAAI+0D,EAAM/0D,OAdnF,GAA2Bk1D,KAAdH,EACME,YAA4C,GCFxD,MAIH,CACAtiD,IAAclC,mBAAmBoC,IAAQC,KAAKqT,cAC9CxT,IAAclC,mBAAmBoC,IAAQC,KAAKsT,kBAC9CzT,IAAclC,mBAAmBoC,IAAQC,KAAKwT,cAChD1jB,KAAI,SAAAyB,GAAM,OAAI5C,OAAOqZ,QAAQzW,GAAQzB,KAAI,mCAAEO,EAAF,YAAakF,EAAb,EAAaA,KAAMqc,EAAnB,EAAmBA,OAAQD,EAA3B,EAA2BA,SAA3B,OAAgD,IAAIqwC,IAAMniD,IAAcgT,aAAa9S,IAAQC,KAAK9S,QAASmD,EAASshB,EAAUC,EAAQrc,SAR1K,mBACH+S,EADG,KAEHJ,EAFG,KAGHm6C,EAHG,KAUA,EAIH,CACAxiD,IAAclC,mBAAmBoC,IAAQ8F,OAAOwN,cAChDxT,IAAclC,mBAAmBoC,IAAQ8F,OAAOyN,kBAChDzT,IAAclC,mBAAmBoC,IAAQ8F,OAAO2N,cAClD1jB,KAAI,SAAAyB,GAAM,OAAI5C,OAAOqZ,QAAQzW,GAAQzB,KAAI,mCAAEO,EAAF,YAAakF,EAAb,EAAaA,KAAMqc,EAAnB,EAAmBA,OAAQD,EAA3B,EAA2BA,SAA3B,OAAgD,IAAIqwC,IAAMniD,IAAcgT,aAAa9S,IAAQ8F,OAAO3Y,QAASmD,EAASshB,EAAUC,EAAQrc,SAR5K,mBACHgT,EADG,KAEHJ,EAFG,KAGHm6C,EAHG,KAWMC,EAAiC,IAAIP,IAC9CniD,IAAcgT,aAAa9S,IAAQC,KAAK9S,QACxC2S,IAAclC,mBAAmBoC,IAAQC,KAAKyT,uBAAuBpjB,QACrEwP,IAAclC,mBAAmBoC,IAAQC,KAAKyT,uBAAuB9B,SACrE9R,IAAclC,mBAAmBoC,IAAQC,KAAKyT,uBAAuB7B,OACrE/R,IAAclC,mBAAmBoC,IAAQC,KAAKyT,uBAAuBle,MAG5DitD,EAAmC,IAAIR,IAChDniD,IAAcgT,aAAa9S,IAAQ8F,OAAO3Y,QAC1C2S,IAAclC,mBAAmBoC,IAAQ8F,OAAO4N,uBAAuBpjB,QACvEwP,IAAclC,mBAAmBoC,IAAQ8F,OAAO4N,uBAAuB9B,SACvE9R,IAAclC,mBAAmBoC,IAAQ8F,OAAO4N,uBAAuB7B,OACvE/R,IAAclC,mBAAmBoC,IAAQ8F,OAAO4N,uBAAuBle,MAG9D0S,EAA6C,eACnD85C,GAGM15C,EAAb,2JAGI,WACI,GAAI2E,KAAK9f,WAAW+a,EAAiB,OAAOA,EAAgB+E,KAAK9f,SACjE,MAAM,IAAIU,MAAM,2BALxB,sBAQI,SAAsBV,GAAiC,IAAD,EAClD,iBAAO8f,KAAKy1C,aAAav1D,UAAzB,QAAsC8f,KAAKy1C,aAAav1D,GAAW,IAAImb,EAAcnb,OAT7F,GAAmC+0D,GAAtB55C,EACMo6C,aAAqD,I,s4BC1C3D1zB,EAAU/jC,UAAOC,IAAV,uCAAGD,CAAH,iDAKP03D,EAAe13D,kBAAOwB,KAAV,uCAAGxB,CAAH,mBAGZ23D,EAAc33D,UAAOwP,MAAV,uCAAGxP,CAAH,uaAqBP,cAAGG,MAAH,MAAe,kBAWnBy3D,EAAY53D,UAAOC,IAAV,uCAAGD,CAAH,iDAGE,cAAGG,MAAH,MAAe,gBAyB1B03D,GArBgB73D,kBAAOwB,KAAV,uCAAGxB,CAAH,MAECA,UAAOC,IAAV,uCAAGD,CAAH,4KACA,qBAAG83D,QAAyB,cAAgB,aAQlD,qBAAGA,SAA0B,aACnB,qBAAGA,SAA0B,aAG5C,cAAG33D,MAAH,SAAU23D,SAAyB,kBACxB,qBAAGA,SAAyB,aACtC,qBAAGA,SAAyB,kBAIvB93D,UAAOC,IAAV,uCAAGD,CAAH,4NACQ,cAAGG,MAAH,MAAe,gBAC1B,cAAGA,MAAH,MAAe,mBAWf43D,EAAkB/3D,UAAOC,IAAV,uCAAGD,CAAH,iFAOfg4D,EAAeh4D,UAAOC,IAAV,uCAAGD,CAAH,4CAwCZi4D,GApCWj4D,kBAAO6nC,KAAV,uCAAG7nC,CAAH,qMAMP,qBAAGq7B,UAA4B,aACvB,qBAAGA,UAA2B,UAGxB,qBAAGA,UAA4B,aAG5C,gBAAGA,EAAH,EAAGA,SAAUkrB,EAAb,EAAaA,SAAb,OAA6BlrB,GAAYkrB,EAAW,GAAM,KAI3CvmD,kBAAO8yC,KAAV,wCAAG9yC,CAAH,0DAQCA,UAAOC,IAAV,wCAAGD,CAAH,4JASV,qBAAGwuC,IAAiB,MAAQ,OAElBxuC,kBAAOk4D,KAAV,wCAAGl4D,CAAH,yDAIR,cAAGG,MAAH,MAAe,oBAWhBg4D,GATen4D,UAAOC,IAAV,wCAAGD,CAAH,+FASFA,UAAOC,IAAV,wCAAGD,CAAH,kEAGI,cAAGG,MAAH,MAAe,mBAG1Bi4D,EAAWp4D,UAAOwP,MAAV,wCAAGxP,CAAH,gDACG,cAAGG,MAAH,MAAe,iBAM1Bk4D,EAAcr4D,kBAAO8B,IAAKC,MAAf,wCAAG/B,CAAH,gEAKlB,qBAAGG,MAAkBC,WAAWuB,UAA/B,IAAD,mDAMO22D,EAAgBt4D,kBAAO6nC,KAAV,wCAAG7nC,CAAH,0DACF,cAAGG,MAAH,MAAe,gBAI1Bo4D,EAAev4D,UAAOC,IAAV,wCAAGD,CAAH,0MAQD,cAAGG,MAAH,SAAUquB,OAAuB,aAAe,gBAC3D,cAAGruB,MAAH,SAAUquB,OAAuB,eAAiB,kBAUlDgqC,EAAgBx4D,kBAAO8yC,KAAV,wCAAG9yC,CAAH,kBAGby4D,EAA2Bz4D,kBAAOo7B,KAAV,wCAAGp7B,CAAH,2CAGtB,qBAAGq7B,SAA2B,MAAQ,OAExChyB,EAAmBrJ,UAAOC,IAAV,wCAAGD,CAAH,8XAEX,SAACsJ,GAAD,OAAYA,EAAMzH,KAAO,UAAY,YACxC,SAACyH,GAAD,OAAYA,EAAMzH,KAAO,EAAI,KAE1B,cAAG1B,MAAH,MAAe,gBACT,cAAGA,MAAH,MAAe,gBAG1B,cAAGA,MAAH,MAAe,kBASf+3B,EAAal4B,UAAOC,IAAV,wCAAGD,CAAH,2FAOV04D,EAAkB14D,UAAOC,IAAV,wCAAGD,CAAH,sFAKf,gBAAGG,EAAH,EAAGA,MAAH,SAAUquB,OAAuBruB,EAAM29B,MAAQ,kBAE/C66B,EAAoB34D,kBAAO8B,IAAK8+B,MAAf,wCAAG5gC,CAAH,+BAEjB,gBAAGG,EAAH,EAAGA,MAAH,SAAUquB,OAAuBruB,EAAM29B,MAAQ,kBAE/C86B,EAAa54D,kBAAOi3B,KAAV,wCAAGj3B,CAAH,2GACC,gBACpBw4C,EADoB,EACpBA,QACAhqB,EAFoB,EAEpBA,OAFoB,EAGpBruB,MAHoB,OAIjBquB,EAAM,OAAGgqB,QAAH,IAAGA,IAAW,cAAgB,gBAC5B,qBAAGgB,gBAAyC,EAAI,MAMlDqf,EAAgB74D,UAAOC,IAAV,wCAAGD,CAAH,uDAKb84D,EAAgB94D,UAAOC,IAAV,wCAAGD,CAAH,iDAGF,cAAGG,MAAH,MAAe,gBAI1B44D,EAAsB/4D,UAAOC,IAAV,wCAAGD,CAAH,gFAMnBg5D,EAASh5D,UAAOC,IAAV,wCAAGD,CAAH,gIAKS,cAAGG,MAAH,MAAe,iB,uIC/Q3C,SAAS84D,EAASrR,EAAWsR,GACzB,OAAOlzD,IAAK4iC,iBAAiB5iC,IAAKsL,SAASs2C,EAAK5hD,IAAKC,OAAOizD,IAASlzD,IAAKC,OAAO,MAGrF,IAAMkzD,EAAMnzD,IAAKyZ,aAAazZ,IAAKC,OAAO,GAAID,IAAKC,OAAO,KAEpC2K,EAAtB,uGA2BI,SAAiCL,GAE7BE,YAAUF,GAAQK,EAASC,UAAYN,GAAQK,EAASE,UAAYJ,OAAOC,UAAUJ,GAAO,QAC5F,IAAM6oD,EAAkB7oD,EAAO,GAAY,EAARA,EAAYA,EAE3C8oD,EACmB,IAAR,EAAVD,GACKpzD,IAAKC,OAAO,sCACZD,IAAKC,OAAO,uCAwBtB,OAvBuB,IAAR,EAAVmzD,KAAqBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAR,EAAVD,KAAqBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAR,EAAVD,KAAqBC,EAAQJ,EAASI,EAAO,uCAC1B,IAAT,GAAVD,KAAsBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAT,GAAVD,KAAsBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAT,GAAVD,KAAsBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAT,IAAVD,KAAsBC,EAAQJ,EAASI,EAAO,uCAC1B,IAAV,IAAVD,KAAuBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAV,IAAVD,KAAuBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAV,KAAVD,KAAuBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAV,KAAVD,KAAuBC,EAAQJ,EAASI,EAAO,uCAC1B,IAAX,KAAVD,KAAwBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAX,KAAVD,KAAwBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAX,MAAVD,KAAwBC,EAAQJ,EAASI,EAAO,uCAC3B,IAAX,MAAVD,KAAwBC,EAAQJ,EAASI,EAAO,uCAC1B,IAAZ,MAAVD,KAAyBC,EAAQJ,EAASI,EAAO,sCAC3B,IAAZ,OAAVD,KAAyBC,EAAQJ,EAASI,EAAO,qCAC3B,IAAZ,OAAVD,KAAyBC,EAAQJ,EAASI,EAAO,mCAC3B,IAAZ,OAAVD,KAAyBC,EAAQJ,EAASI,EAAO,8BAElD9oD,EAAO,IAAG8oD,EAAQrzD,IAAKuL,OAAOk3B,IAAY4wB,IAGvCrzD,IAAK+a,YAAY/a,IAAKyL,UAAU4nD,EAAOF,GAAMznD,KAC9C1L,IAAK2L,IAAI3L,IAAKuL,OAAO8nD,EAAOF,GAAMvnD,KAClC5L,IAAKuL,OAAO8nD,EAAOF,KA7DjC,gCAqEI,SAAiC93C,GAC7B5Q,YACIzK,IAAKka,mBAAmBmB,EAAczQ,EAASgS,iBAC/C5c,IAAK8c,SAASzB,EAAczQ,EAASiS,gBACrC,cAGJ,IAII0R,EAJE+kC,EAAgBtzD,IAAK8jB,UAAUzI,EAAcrb,IAAKC,OAAO,KAEzDyiC,EAAMF,YAAmB8wB,GAI3B/kC,EADAvuB,IAAKka,mBAAmBla,IAAKC,OAAOyiC,GAAM1iC,IAAKC,OAAO,MAClDD,IAAK4iC,iBAAiB0wB,EAAetzD,IAAKC,OAAOyiC,EAAM,MAEvD1iC,IAAK8jB,UAAUwvC,EAAetzD,IAAKC,OAAO,IAAMyiC,IAKxD,IAFA,IAAI6wB,EAAcvzD,IAAK8jB,UAAU9jB,IAAKqa,SAASra,IAAKC,OAAOyiC,GAAM1iC,IAAKC,OAAO,MAAOD,IAAKC,OAAO,KAEvFR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB8uB,EAAIvuB,IAAK4iC,iBAAiB5iC,IAAKsL,SAASijB,EAAGA,GAAIvuB,IAAKC,OAAO,MAC3D,IAAMuzD,EAAIxzD,IAAK4iC,iBAAiBrU,EAAGvuB,IAAKC,OAAO,MAC/CszD,EAAQvzD,IAAKyzD,UAAUF,EAAOvzD,IAAK8jB,UAAU0vC,EAAGxzD,IAAKC,OAAO,GAAKR,KACjE8uB,EAAIvuB,IAAK4iC,iBAAiBrU,EAAGilC,GAGjC,IAAME,EAAgB1zD,IAAKsL,SAASioD,EAAOvzD,IAAKC,OAAO,6BAEjD0zD,EAAU3zD,IAAK0rB,SACjB1rB,IAAK4iC,iBACD5iC,IAAKqa,SAASq5C,EAAe1zD,IAAKC,OAAO,0CACzCD,IAAKC,OAAO,OAGd2zD,EAAW5zD,IAAK0rB,SAClB1rB,IAAK4iC,iBACD5iC,IAAK2L,IAAI+nD,EAAe1zD,IAAKC,OAAO,4CACpCD,IAAKC,OAAO,OAIpB,OAAO0zD,IAAYC,EACbD,EACA3zD,IAAK8b,gBAAgBlR,EAASgR,mBAAmBg4C,GAAWv4C,GACxDu4C,EACAD,MAnHlB,KAAsB/oD,EAQJC,UAAY,OARRD,EAYJE,UAAoBF,EAASC,SAZzBD,EAiBJgS,eAAuB5c,IAAKC,OAAO,cAjB/B2K,EAqBJiS,eAAuB7c,IAAKC,OAAO,sD,oKCpB/C4zD,GAAuE,mBACxE9kD,IAAQC,IAAMpP,IAAeC,cAAc0xD,IAAgC,IADH,cAExExiD,IAAQ8F,MAAQjV,IAAeC,cAAc2xD,IAAkC,IAFP,GAKvEsC,GAA4E,mBAC7E/kD,IAAQC,IAAMpP,IAAeC,cAAc0xD,IAAgC,MADE,cAE7ExiD,IAAQ8F,MAAQjV,IAAeC,cAAc2xD,IAAkC,MAFF,GASnE,SAASpQ,EAAa1/C,EAAqBqyD,GACtD,IAAQ73D,EAAYD,cAAZC,QAEFsX,EAAYtX,EAAW63D,EAAeF,EAA0B33D,GAAW43D,EAA+B53D,QAAYqC,EACtHy1D,EAAU,OAAGxgD,QAAH,IAAGA,OAAH,EAAGA,EAAW9R,SAExBuyD,EAAcz/C,YAAuB9S,EAAU8R,GAErD,OAAO9V,mBAAQ,WAEX,GAAKgE,GAAasyD,EAAlB,CAKA,UAAItyD,QAAJ,IAAIA,KAAU+H,QAAQS,OAAO8pD,GACzB,OAAO,IAAI53C,IAAM43C,EAAYA,EAAY,IAAK,KAGlD,GAAIC,EAAY5gD,MAAO,CACnB,MAAmC4gD,EAAY5gD,MAAMhK,MAAMqxC,SAAnD72B,EAAR,EAAQA,UAAWzY,EAAnB,EAAmBA,YACnB,OAAO,IAAIgR,IAAM1a,EAAUsyD,EAAY5oD,EAAayY,OAIzD,CAACniB,EAAUsyD,EAAYC,EAAY5gD,QAGnC,SAAS6gD,EAAajvB,GAAoF,IAAvB8uB,EAAsB,wDAEtGtgC,EAAQ2tB,EAAY,OAACnc,QAAD,IAACA,OAAD,EAACA,EAAgBvjC,SAAUqyD,GAErD,OAAOr2D,mBAAQ,WACX,IAAK+1B,IAAUwR,EAAgB,OAAO,KACtC,IACI,OAAOxR,EAAMknB,MAAM1V,GACrB,MAAO9pC,GACL,OAAO,QAEZ,CAAC8pC,EAAgBxR,M,k2aCjDX0gC,EAAaC,YAAH,8gB,SAgCRC,E,0FAAf,WACIC,EACAvgC,GAFJ,0HAMsCA,EAAOhV,MAAsB,CACvDA,MAAOo1C,EACPlM,UAAW,CACPsM,QAASD,EAAO,GAChBE,QAASF,EAAO,GAChBG,UAAWH,EAAO,MAXlC,mBAMgB//B,EANhB,EAMgBA,MANhB,EAMsBp5B,MANtB,0CAgBmB,CACHA,OAAO,EACPo5B,UAAMh2B,IAlBtB,YAoBmBg2B,EApBnB,0CAqBmB,CACHA,KAAM,CACFlnB,QAASsjB,WAAU,UAAC4D,EAAKlnB,QAAQ,GAAGqnD,qBAAjB,QAAkC,GACrDC,OAAQhkC,WAAU,oBAAC4D,EAAKogC,OAAO,UAAb,aAAC,EAAgBD,qBAAjB,QAAkC,GACpDE,OAAQjkC,WAAU,oBAAC4D,EAAKqgC,OAAO,UAAb,aAAC,EAAgBF,qBAAjB,QAAkC,GACpDG,QAASlkC,WAAU,oBAAC4D,EAAKsgC,QAAQ,UAAd,aAAC,EAAiBH,qBAAlB,QAAmC,IAE1Dv5D,OAAO,IA5BvB,iCA+BmB,CACHo5B,UAAMh2B,EACNpD,OAAO,IAjCvB,iEAqCQuR,QAAQ8nB,IAAR,MArCR,kBAsCe,CACHD,UAAMh2B,EACNpD,OAAO,IAxCnB,2D,sBAgDO,SAAS8zD,IACZ,MAA4BprD,qBAA5B,mBAAOixD,EAAP,KAAeC,EAAf,KACA,EAA0BlxD,oBAAS,GAAnC,mBAAO1I,EAAP,KAAc65D,EAAd,KACQv1C,EAAeD,cAAfC,WAER,EAA0BgV,cAA1B,mBAAOwgC,EAAP,KAAYC,EAAZ,KAAiBC,EAAjB,KACA,EAAsCC,YAAwB,CAACH,EAAKC,EAAKC,IAAjEb,EAAR,EAAQA,OAAee,EAAvB,EAAgBl6D,MAGRe,EAAYD,cAAZC,QACFo5D,EAAa,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAM,OAAG54D,QAAH,IAAGA,IAAW6S,IAAQC,KAE5CumD,EAAkB73D,mBAAQ,WAC5B,GAAI42D,EACA,OAAOA,EAAOjqD,UAAUnL,MAAK,SAACD,EAAGkM,GAAJ,OAAWA,EAAEk+C,WAAapqD,EAAEoqD,aAAWvqD,KAAI,SAACqM,GAAD,OAAOwlB,WAAWxlB,EAAEqqD,aAGjG,CAAClB,IAsBJ,OApBA59C,qBAAU,WAAM,sDACZ,gHAIc29C,EAAekB,EAAqD91C,GAJlF,gBAEQ8U,EAFR,EAEQA,KAFR,EAGQp5B,OAESk6D,EACTL,GAAS,GACFzgC,GACPwgC,EAAU,eAAD,OACJ74D,QADI,IACJA,IAAW6S,IAAQC,IAAMulB,IATtC,4CADY,sBAeP+gC,GAAkBn6D,IAASo6D,GAfnB,WAAD,wBAgBR7mC,KAEL,CAACvzB,EAAO25D,EAAQS,EAAiBF,EAAY51C,EAAY61C,EAAep5D,IAE3E,OAAO44D,QAAP,IAAOA,OAAP,EAAOA,EAAM,OAAG54D,QAAH,IAAGA,IAAW6S,IAAQC,O,6JC9HhC,SAASomD,EAAwBK,EAAsBC,GAO1D,IAAQx5D,EAAYD,cAAZC,QACR,EAA4B2H,qBAA5B,mBAAOywD,EAAP,KAAeqB,EAAf,KACA,EAA0B9xD,oBAAS,GAAnC,mBAAO1I,EAAP,KAAc65D,EAAd,KAEQn1C,EAAgBL,cAAhBK,YACF+1C,EAAiB,OAAGF,QAAH,IAAGA,IAAuB71C,EAG3Cg2C,EAAa,OAAGvB,QAAH,IAAGA,OAAH,EAAGA,EAAM,OAAGp4D,QAAH,IAAGA,IAAW6S,IAAQC,KAkClD,OAhCA0H,qBAAU,WAAM,sDACZ,8GAC0Bod,YAAWgiC,IAAYF,EAAmB,GAAIH,GADxE,QACUt2D,EADV,QAGQw2D,EAAU,2BAAD,OAAOrB,QAAP,IAAOA,IAAU,IAAjB,yBAAuBp4D,QAAvB,IAAuBA,IAAW6S,IAAQC,IAAM7P,KAEzD61D,GAAS,GALjB,4CADY,sBAUPa,GAAkB16D,GAVV,WAAD,wBAWR46D,MAqBD,CACHzB,OAlBoB52D,mBAAQ,WAC5B,UAAI42D,QAAJ,IAAIA,KAAM,OAAGp4D,QAAH,IAAGA,IAAW6S,IAAQC,KAAM,CAClC,IAAM6mD,EAAa,OAAGvB,QAAH,IAAGA,OAAH,EAAGA,EAAM,OAAGp4D,QAAH,IAAGA,IAAW6S,IAAQC,KAC5CgnD,EAAmB,GACzB,IAAK,IAAMv1D,KAAKo1D,EACRA,EAAcp1D,GAAGJ,OAAS,GAC1B21D,EAAU5jD,KAAK,CACXi3C,UAAW5oD,EAAEgO,MAAM,KAAK,GACxB+mD,OAAQK,EAAcp1D,GAAG,GAAjB,SAIpB,OAAOu1D,KAGZ,CAAC95D,EAASo4D,IAITn5D,W,sICpDF86D,EAAch2C,IAAUnjB,KAAK,GAAGylC,IAAI,KAAK2zB,IAAI,GAG5C,SAASC,EACZxsD,EACA22B,GAE8E,IAAD,EAD7E81B,EAC6E,wDACvErT,EAAkBC,aAAgC,GAClDqT,EAAyB,UAAGnpC,YAAoBoT,EAAUyiB,EAAkB,KAAM,UAAW,CAACziB,IAC/F3gC,cAD0B,aAAG,EACpB,GAER22D,EAAgB,OAAGh2B,QAAH,IAAGA,OAAH,EAAGA,EAASi2B,cAC5BC,EAAoBC,cAI1B,EAA8B5yD,qBAA9B,mBAAOq3C,EAAP,KAAgBwb,EAAhB,KAyBA,OAxBAhgD,qBAAU,WACN,IAAIk3B,GAAQ,EAkBZ,OAhBImV,GAAmBuT,GAAoBD,GAAsC,kBAAtBG,GACvDzT,EAAgBuI,WACXqL,QACG,CACIr2B,QAASg2B,EACTt2B,UAAWq2B,EACXh1B,WAAY40B,EACZ30B,WAAY20B,GAEhB,CAAEn5D,KAAMu5D,IAEXhtC,MAAK,SAAClqB,GACEyuC,GAAO8oB,EAAW,CAACv3D,EAAQykB,QAASzkB,EAAQwkB,aAItD,WACHiqB,GAAQ,KAEb,CAACmV,EAAiBuT,EAAkBD,EAAOG,IAE1C7sD,GAAQuxC,EACD,CACHt7C,IAAeC,cAAeu2D,EAAuCzsD,EAAKM,OAAnCgU,YAAetU,EAAKM,QAAuBixC,EAAQ,GAAGh7C,YAC7FN,IAAeC,cAAeu2D,EAAuCzsD,EAAKQ,OAAnC8T,YAAetU,EAAKQ,QAAuB+wC,EAAQ,GAAGh7C,aAG1F,MAAC3B,OAAWA,K,2ECvDdo8B,E,KAAc3gC,QAAOc,KAAV,uCAAGd,CAAH,4JACL,qBAAGikC,QAAuB,SAE5B,gBAAGtmB,EAAH,EAAGA,SAAH,cAAkBA,QAAlB,IAAkBA,IAAY,aAO1B,qBAAGi/C,YAA+B,U,0ECgCxCC,IA/BS,SAAC,GAAqH,IAAnHxxD,EAAkH,EAAlHA,KAAkH,IAA5GyxD,qBAA4G,MAA5F,GAA4F,MAAxF74B,cAAwF,aAAxE24B,kBAAwE,SAApDj/C,EAAoD,EAApDA,SAAUkjB,EAA0C,EAA1CA,KAASv1B,EAAiC,iBACzI,EAAkCzB,oBAAS,GAA3C,mBAAOkzD,EAAP,KAAkBC,EAAlB,KAEA,OAAK3xD,EAIDA,EAAKhF,OAASy2D,EAEV,cAAC1xD,EAAA,EAAD,CAASC,KAAMA,EAAMxJ,KAAMk7D,EAA3B,SACI,cAACp8B,EAAD,yBACI/0B,aAAc,kBAAMoxD,GAAa,IACjCnxD,aAAc,kBAAMmxD,GAAa,IACjC/4B,OAAQA,EACR24B,WAAYA,EACZ/7B,KAAMA,EACNljB,SAAUA,GACNrS,GAPR,aASK,IAAMD,EAAK4H,MAAM,EAAG6pD,EAAgB,GAAK,WAOtD,cAACn8B,EAAD,yBAAasD,OAAQA,EAAQ24B,WAAYA,EAAY/7B,KAAMA,EAAMljB,SAAUA,GAAcrS,GAAzF,aACKD,KAvBE,2B,+ZCdR,SAAS4xD,EAAe3jC,EAAmBC,EAAoBhpB,GAClE,GAAK+oB,GAAcC,GAA8B,kBAAThpB,EAGxC,OAAO8oB,YAAYC,EAAWC,EAAYhpB,G,4ECmBvC,SAAS2sD,EACZ5jC,EACAC,EACAvY,EACAtb,GAEA,GAAK4zB,GAAcC,GAAevY,GAActb,EAAhD,CAIA,IAAM+zB,EAhCH,SAAuBH,EAAmBC,EAAoB7zB,GAAiB,IAAD,EACjF,GAAK4zB,GAAcC,GAAe7zB,GAI7BA,EAAMwtC,MAAM,eAAjB,CAIA,MAA0BxtC,EAAM+O,MAAM,KAAtC,mBAAO0oD,EAAP,KAAcC,EAAd,KAEMz2C,EAAQ,iBAAGy2C,QAAH,IAAGA,OAAH,EAAGA,EAAU/2D,cAAb,QAAuB,EAC/Bg3D,EAAkBr3D,IAAKC,QAAO,OAACk3D,QAAD,IAACA,IAAS,KAAV,OAAiBC,QAAjB,IAAiBA,IAAY,KAEjE,OAAO,IAAIh7C,IACPkX,EACAC,EACAvzB,IAAKsL,SAAStL,IAAKC,OAAL,SAAY,GAAM0gB,IAAW3gB,IAAKC,OAAL,SAAY,GAAMqzB,EAAU3S,YACvE3gB,IAAKsL,SAAS+rD,EAAiBr3D,IAAKC,OAAL,SAAY,GAAMszB,EAAW5S,cAclD22C,CAAchkC,EAAWC,EAAY7zB,GAEnD,GAAK+zB,EAAL,CAIA,IAAIlpB,EAGE8Q,EAAeqI,YAAmB+P,EAAM5P,UAAW4P,EAAMroB,aAY/D,OATIb,EADAvK,IAAKka,mBAAmBmB,EAAczQ,IAASiS,gBACxCjS,IAASE,SACT9K,IAAK8b,gBAAgBT,EAAczQ,IAASgS,gBAC5ChS,IAASC,SAGT2oB,YAAmBC,GAIvBnpB,YAAkBC,EAAM,M,YCZ5B,SAASgtD,IACZ,OAAOt6D,aAAe,SAACD,GAAD,OAAWA,EAAMw6D,UAGpC,SAASC,EAAwBC,GAOpC,IAAMt7D,EAAWC,cA6CjB,MAAO,CACHs7D,cA5CkBr7D,uBAClB,SAACs7D,GACGx7D,EAAS0vB,YAAU,CACf+rC,MAAOjsC,IAAMksC,WACbF,aACAF,aAA6B,IAAhBA,OAGrB,CAACt7D,EAAUs7D,IAqCXK,cAlCkBz7D,uBAClB,SAACs7D,GACGx7D,EAAS0vB,YAAU,CACf+rC,MAAOjsC,IAAMosC,WACbJ,aACAF,aAA6B,IAAhBA,OAGrB,CAACt7D,EAAUs7D,IA2BXO,iBAxBqB37D,uBACrB,SAACs7D,GACGx7D,EAAS4vB,YAAmB,CAAE4rC,kBAElC,CAACx7D,IAqBD87D,kBAlBsB57D,uBACtB,SAACs7D,GACGx7D,EAAS6vB,YAAoB,CAAE2rC,kBAEnC,CAACx7D,IAeD+7D,kBAZsB77D,uBACtB,SAACs7D,GACGx7D,EAAS2vB,YAAoB,CAAE6rC,kBAEnC,CAACx7D,KAYF,SAASg8D,EACZ5oD,EACAC,EACAuL,EACA2Y,EAEA0kC,GA2BD,IAAD,MAoTMnoB,EACAooB,EAEU,EAKuB,IAKnB,IAQhB,IAvUMn8D,EAAYF,cAAZE,QAER,EAA0Go7D,IAAlGgB,EAAR,EAAQA,iBAAkBX,EAA1B,EAA0BA,WAAYY,EAAtC,EAAsCA,oBAAqBC,EAA3D,EAA2DA,qBAAsBC,EAAjF,EAAiFA,qBAE3EC,EAAiBJ,IAAqB3sC,IAAMksC,WAAalsC,IAAMosC,WAAapsC,IAAMksC,WAGlFr2D,EAA8C/D,mBAChD,2CAESkuB,IAAMksC,WAAatoD,GAF5B,cAGSoc,IAAMosC,WAAavoD,GAH5B,IAME,CAACD,EAAWC,IAGlB,EAAoC/R,mBAChC,iBAAM,QAAC8R,QAAD,IAACA,OAAD,EAACA,EAAW/F,QAAZ,OAAqBgG,QAArB,IAAqBA,OAArB,EAAqBA,EAAWhG,QAAhC,OAAyCkqB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAclqB,WAC7D,CAAC+F,EAAWC,EAAWkkB,IAF3B,mBAAOjkB,EAAP,KAAeC,EAAf,KAAuB2jB,EAAvB,KAKA,EAAyB51B,mBACrB,kBACIgS,GAAUC,EAAUD,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAW,MAACnR,OAAWA,KACxG,CAACmR,EAAQC,IAHb,mBAAO1F,EAAP,KAAeE,EAAf,KAOM7K,EAAWkC,YAAmB,OAACrF,QAAD,IAACA,SAAWoC,EAAW,CACvDkD,EAAWmqB,IAAMksC,YACjBr2D,EAAWmqB,IAAMosC,cAEfY,GAAiE,mBAClEhtC,IAAMksC,WAAax4D,EAAS,IADsC,cAElEssB,IAAMosC,WAAa14D,EAAS,IAFsC,GAOvE,EAA0Bu5D,YAAQp3D,EAAWmqB,IAAMksC,YAAar2D,EAAWmqB,IAAMosC,aAAjF,oBAAOc,GAAP,MAAkBnvD,GAAlB,MACM+tD,GAAcoB,KAAc1nD,IAAU2nD,WAEtCC,GAAarvD,GAAOA,GAAK+H,IAAM,IAG/BunD,GAAchrD,QAAQqlB,GAAarpB,IAAWqpB,EAAUppB,OAAOD,IAG/DwpB,GAAyC/1B,mBAAQ,WAEnD,IAAIg6D,GAkBA,OAAO/tD,IAAQM,EAASN,GAAKuvD,QAAQjvD,QAAU1L,EAjB/C,IAAM46D,EAAoBC,YAAeV,EAAsBO,GAAchvD,EAASE,GACtF,GAAIgvD,GAAqBlvD,GAAUE,EAAQ,CAAC,IAAD,EACjCkvD,EAAaD,YAAe,IAAKH,GAAc9uD,EAASF,GACxDwpB,EACF4lC,GAAcF,EACR,IAAI/8C,IACFi9C,EAAW33D,SACXy3D,EAAkBz3D,SAClB23D,EAAWlmD,SACXgmD,EAAkBhmD,eAEpB5U,EACV,iBAAQ06D,GAAW,OAAGxlC,QAAH,IAAGA,OAAH,EAAGA,EAAOonB,SAAWpnB,SAAxC,aAAkDl1B,KAO3D,CAACm5D,GAAagB,EAAsBO,GAAa9uD,EAAQF,EAAQN,KAG9D2vD,GAAe57D,mBAAQ,WACzB,IAAM2d,EAAeoY,GAAQ/P,YAAmB+P,GAAM5P,UAAW4P,GAAMroB,kBAAe7M,EAQtF,OANIk1B,IACApY,KAEIrb,IAAKka,mBAAmBmB,EAAczQ,IAASgS,iBAC/C5c,IAAK8c,SAASzB,EAAczQ,IAASiS,mBAG9C,CAAC4W,KAGE8lC,GAAW77D,mBAAQ,WACrB,GAAIgS,GAAUC,GAAUqL,GAAayY,KAAU6lC,GAAc,CACzD,IAAME,EAAchmC,YAAmBC,IACjCgmC,EAAc7uD,IAASgR,mBAAmB49C,GAChD,OAAO,IAAIp+C,IAAK1L,EAAQC,EAAQqL,EAAWy+C,EAAaz5D,IAAKC,OAAO,GAAIu5D,EAAa,OAI1F,CAACx+C,EAAWs+C,GAAc7lC,GAAO/jB,EAAQC,IAGtC+pD,GAAiC,OAAG/vD,SAAH,IAAGA,MAAQ4vD,GAG5CI,GAEFj8D,mBACA,2CACKmuB,IAAM+tC,MAAQ5+C,EAAY1Q,YAAkBM,IAASC,SAAU,SAAMtM,GAD1E,cAEKstB,IAAMguC,MAAQ7+C,EAAY1Q,YAAkBM,IAASE,SAAU,SAAMvM,GAF1E,IAIA,CAACyc,IAKCO,GAEF7d,mBAAQ,WAAO,IAAD,EAEd,OAAO,EAAP,iBACKmuB,IAAM+tC,MACoC,kBAAvC,OAAOvB,QAAP,IAAOA,OAAP,EAAOA,EAAkBj4B,WACnBi4B,EAAiBj4B,UAChB64B,IAA+C,mBAAzBR,IACnBQ,IAA8C,mBAAxBT,EACtBmB,GAAgB9tC,IAAM+tC,OACtBX,GACI/B,EAAa/sD,EAAQF,EAAQ+Q,EAAWy9C,EAAqBv4D,YAC7Dg3D,EAAajtD,EAAQE,EAAQ6Q,EAAWw9C,EAAoBt4D,aATlF,cAUK2rB,IAAMguC,MACoC,kBAAvC,OAAOxB,QAAP,IAAOA,OAAP,EAAOA,EAAkBh4B,WACnBg4B,EAAiBh4B,WACf44B,IAA+C,mBAAzBR,GACrBQ,IAA8C,mBAAxBT,EACrBmB,GAAgB9tC,IAAMguC,OACtBZ,GACI/B,EAAa/sD,EAAQF,EAAQ+Q,EAAWw9C,EAAoBt4D,YAC5Dg3D,EAAajtD,EAAQE,EAAQ6Q,EAAWy9C,EAAqBv4D,aAlBnF,IAoBD,CACCm4D,EACAr9C,EACAi+C,GACAT,EACAC,EACAxuD,EACAE,EACAwvD,KAGJ,GAA+Dp+C,IAAS,GAAjD6kB,GAAvB,GAASvU,IAAM+tC,OAAkCv5B,GAAjD,GAAmCxU,IAAMguC,OAGnCC,GAAep8D,mBACjB,2CACKmuB,IAAM+tC,MAAQ5+C,GAAaolB,KAAcu5B,GAAgBC,OAD9D,cAEK/tC,IAAMguC,MAAQ7+C,GAAaqlB,KAAcs5B,GAAgBE,OAF9D,IAIA,CAACF,GAAiBv5B,GAAWC,GAAWrlB,IAItC++C,GAAe9rD,QAA6B,kBAAdmyB,IAA+C,kBAAdC,IAA0BD,IAAaC,IAGtG25B,GAAgBt8D,mBAAQ,WAAO,IAAD,EAEhC,OAAO,EAAP,iBACKmuB,IAAM+tC,MAAQ3C,EAAehtD,EAAQE,EAAQoR,GAAMsQ,IAAM+tC,SAD9D,cAEK/tC,IAAMguC,MAAQ5C,EAAehtD,EAAQE,EAAQoR,GAAMsQ,IAAMguC,SAF9D,IAID,CAAC5vD,EAAQE,EAAQoR,KACG0+C,GAA0CD,GAAxDnuC,IAAM+tC,OAAmCM,GAAeF,GAA7BnuC,IAAMguC,OAGpCM,GAAalsD,SACd8rD,IAAgBtmC,IAASwmC,IAAcC,KAAezmC,GAAM3W,SAASm9C,KAAexmC,GAAM1Y,YAAYm/C,MAGrGE,GAA0DhB,YAC5DxB,EACAn2D,EAAW82D,IAGT8B,GAAwD38D,mBAAQ,WAElE,IAAM48D,EAAwB,OAAGF,SAAH,IAAGA,QAAH,EAAGA,GAAmB3wD,QAC9C8wD,EAAoB5B,IAAmB/sC,IAAMosC,WAAavoD,EAAYD,EAC5E,GACI4qD,IACAE,GACqB,kBAAdl6B,IACc,kBAAdC,IACPq5B,GACF,CAEE,GAAIS,IAAcJ,GACd,OAGJ,IAAM76B,EAAiCo7B,EAAyB54D,SAASwI,OAAOwvD,GAAgBzvD,QAC1F02B,IAAS65B,YAAY,CACnB7wD,KAAM+vD,GACNt5B,aACAC,aACAzc,QAASw2C,GAAkBjnD,SAC3BywB,kBAAkB,IAEpBjD,IAAS85B,YAAY,CACnB9wD,KAAM+vD,GACNt5B,aACAC,aACA1c,QAASy2C,GAAkBjnD,WAG7BunD,EAAuBJ,EAAyB54D,SAASwI,OAAOwvD,GAAgBzvD,QAChFi1B,EAASvb,QACTub,EAAStb,QACf,OAAO22C,GAAqB36D,IAAeC,cAAc06D,EAAmBG,EAAqBvnD,aAItG,CACCinD,GACAD,GACAxB,EACAlpD,EACAD,EACA4wB,GACAC,GACAq5B,GACAK,KAGEY,GAA4Ej9D,mBAAQ,WAAO,IAAD,EAC5F,OAAO,EAAP,iBACKkuB,IAAMksC,WAAaS,IAAqB3sC,IAAMksC,WAAasC,GAAoBC,IADpF,cAEKzuC,IAAMosC,WAAaO,IAAqB3sC,IAAMksC,WAAauC,GAAkBD,IAFlF,IAID,CAACC,GAAiBD,GAAmB7B,IAGlCqC,GAAmB3sD,QACA,kBAAdoyB,IAA0Bq5B,IAAmBA,GAAgBp+C,aAAe+kB,IAEjFw6B,GAAmB5sD,QACA,kBAAdmyB,IAA0Bs5B,IAAmBA,GAAgBp+C,aAAe8kB,IAIjF06B,GACFf,IACA9rD,QACK2sD,IAAoBlB,IAAmBhqD,GAAUgqD,GAAgBzvD,OAAOC,OAAOwF,IAC/EmrD,IAAoBnB,IAAmBhqD,GAAUgqD,GAAgBvvD,OAAOD,OAAOwF,IAElFqrD,GACFhB,IACA9rD,QACK2sD,IAAoBlB,IAAmB/pD,GAAU+pD,GAAgBzvD,OAAOC,OAAOyF,IAC/EkrD,IAAoBnB,IAAmB/pD,GAAU+pD,GAAgBvvD,OAAOD,OAAOyF,IAIlFuvB,GAAiCxhC,mBAAQ,WAAO,IAAD,IACjD,GACKg8D,IACAhqD,GACAC,GACoB,kBAAdywB,IACc,kBAAdC,KACP05B,GANJ,CAYA,IAAMn2C,EAAWg3C,GAEXI,IAFU,OACVL,SADU,IACVA,IADU,UACVA,GAAgBjrD,EAAOxF,OAAOwvD,GAAgBzvD,QAAU2hB,IAAMksC,WAAalsC,IAAMosC,mBADvE,aACV,EAA8F7kD,SAE9FwQ,EAAWk3C,GAEXG,IAFU,OACVL,SADU,IACVA,IADU,UACVA,GAAgBjrD,EAAOxF,OAAOwvD,GAAgBzvD,QAAU2hB,IAAMosC,WAAapsC,IAAMksC,mBADvE,aACV,EAA8F3kD,SAGpG,YAAgB5U,IAAZqlB,QAAqCrlB,IAAZolB,EAClBgd,IAAS8D,YAAY,CACxB96B,KAAM+vD,GACNt5B,aACAC,aACAzc,UACAD,UACAigB,kBAAkB,SAGtB,KAEL,CACC+2B,GACAjB,GACAhqD,EACAC,EACAirD,GACAC,GACAd,GACA35B,GACAC,KAMClkC,IACD+zC,EAAe,wBACfooB,EAAS,UAAGA,SAAH,QAAgB,GAGzBQ,KAAc1nD,IAAUkC,UACxB48B,EAAY,UAAGA,SAAH,QAAmB,sBAC/BooB,EAAS,UAAGA,SAAH,QAAgB,GAGzBgB,KACAppB,EAAY,UAAGA,SAAH,QAAmB,6BAC/BooB,EAAS,UAAGA,SAAH,QAAgB,IAIvBqC,GAAc/uC,IAAMksC,aAAgBgD,MACpCH,GAAc/uC,IAAMosC,aAAgB+C,MAEtC7qB,EAAY,UAAGA,SAAH,QAAmB,yBAC/BooB,EAAS,UAAGA,SAAH,QAAgB,GAG7B,IAGwF,MAKA,MAR5D2C,GAA0DN,GAA7E/uC,IAAMksC,YAAkDoD,GAAqBP,GAAxC/uC,IAAMosC,YAGhDiD,IAAe,OAAIrC,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBhtC,IAAMksC,mBAA7B,OAAI,EAAsCh7C,SAASm+C,MAClE/qB,EAAe,+CAAiBzuC,EAAWmqB,IAAMksC,mBAAlC,cAAiB,GAA8Bl3C,SAC9D03C,EAAS,WAAGA,SAAH,UAAgB,GAGzB4C,IAAe,OAAItC,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBhtC,IAAMosC,mBAA7B,OAAI,EAAsCl7C,SAASo+C,MAClEhrB,EAAe,+CAAiBzuC,EAAWmqB,IAAMosC,mBAAlC,cAAiB,GAA8Bp3C,SAC9D03C,EAAS,WAAGA,SAAH,UAAgB,GAG7B,IAAM6C,GAAcrC,KAAc1nD,IAAUkC,QAE5C,MAAO,CACHqlD,iBACAl3D,aACAkI,QACAmvD,aACAF,mBACA+B,iBACAp/C,SACAkY,SACAumC,iBACA96B,YACAw4B,eACAxnB,eACAooB,YACA6C,eACApB,gBACAI,cACAW,oBACAC,oBACA9B,eACAa,gBACAd,cACAiB,cACAC,eAID,SAASkB,EACZznC,EACAC,EACA5Y,EACAolB,EACAC,EACA12B,GAEA,IAAMvN,EAAWC,cAEXi3B,EAAY51B,mBAAQ,yBAAMi2B,QAAN,IAAMA,OAAN,EAAMA,EAAclqB,UAAS,CAACkqB,IAClDJ,EAAa71B,mBAAQ,yBAAMk2B,QAAN,IAAMA,OAAN,EAAMA,EAAenqB,UAAS,CAACmqB,IAEpDynC,EAAoB/+D,uBAAY,WAAe,IAAdg/D,EAAa,uDAAN,EAC1C,GAAIhoC,GAAaC,GAAmC,kBAAd6M,GAA0BplB,EAAW,CACvE,IAAMugD,EAAWloC,YAAYC,EAAWC,EAAY6M,EAAY,GAAKk7B,GACrE,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAIzD,GAA2B,kBAAdr7B,GAA2B9M,GAAaC,GAAcvY,GAAarR,EAAM,CAClF,IAAM4xD,EAAWloC,YAAYC,EAAWC,EAAY5pB,EAAK2R,YAAc,GAAKggD,GAC5E,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAEzD,MAAO,KACR,CAACnoC,EAAWC,EAAY6M,EAAWplB,EAAWrR,IAE3C+xD,EAAoBp/D,uBAAY,WAAe,IAAdg/D,EAAa,uDAAN,EAC1C,GAAIhoC,GAAaC,GAAmC,kBAAd6M,GAA0BplB,EAAW,CACvE,IAAMugD,EAAWloC,YAAYC,EAAWC,EAAY6M,EAAY,GAAKk7B,GACrE,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAGzD,GAA2B,kBAAdr7B,GAA2B9M,GAAaC,GAAcvY,GAAarR,EAAM,CAClF,IAAM4xD,EAAWloC,YAAYC,EAAWC,EAAY5pB,EAAK2R,YAAc,GAAKggD,GAC5E,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAEzD,MAAO,KACR,CAACnoC,EAAWC,EAAY6M,EAAWplB,EAAWrR,IAE3CgyD,EAAoBr/D,uBAAY,WAAe,IAAdg/D,EAAa,uDAAN,EAC1C,GAAIhoC,GAAaC,GAAmC,kBAAd8M,GAA0BrlB,EAAW,CACvE,IAAMugD,EAAWloC,YAAYC,EAAWC,EAAY8M,EAAY,GAAKi7B,GACrE,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAGzD,GAA2B,kBAAdp7B,GAA2B/M,GAAaC,GAAcvY,GAAarR,EAAM,CAClF,IAAM4xD,EAAWloC,YAAYC,EAAWC,EAAY5pB,EAAK2R,YAAc,GAAKggD,GAC5E,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAEzD,MAAO,KACR,CAACnoC,EAAWC,EAAY8M,EAAWrlB,EAAWrR,IAE3CiyD,EAAoBt/D,uBAAY,WAAe,IAAdg/D,EAAa,uDAAN,EAC1C,GAAIhoC,GAAaC,GAAmC,kBAAd8M,GAA0BrlB,EAAW,CACvE,IAAMugD,EAAWloC,YAAYC,EAAWC,EAAY8M,EAAY,GAAKi7B,GACrE,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAGzD,GAA2B,kBAAdp7B,GAA2B/M,GAAaC,GAAcvY,GAAarR,EAAM,CAClF,IAAM4xD,EAAWloC,YAAYC,EAAWC,EAAY5pB,EAAK2R,YAAc,GAAKggD,GAC5E,OAAOC,EAAS19B,cAAc,OAAGt/B,EAAWi9D,IAASC,UAEzD,MAAO,KACR,CAACnoC,EAAWC,EAAY8M,EAAWrlB,EAAWrR,IA+BjD,MAAO,CACH0xD,oBACAK,oBACAC,oBACAC,oBACAC,YAlCgBv/D,uBAChB,SAACw/D,GACG,GAAIxoC,GAAaC,GAAcvY,GAAarR,EAAM,CAE9C,IAAMoyD,EAAgB1oC,YAClBC,EACAC,EACAvoB,KAAK6P,IAAIjQ,IAASC,SAAUlB,EAAK2R,YAAcwgD,IAE7CE,EAAgB3oC,YAClBC,EACAC,EACAvoB,KAAKqjB,IAAIzjB,IAASE,SAAUnB,EAAK2R,YAAcwgD,IAGnD,MAAO,CACHC,EAAcl+B,cAAc,OAAGt/B,EAAWi9D,IAASC,UACnDO,EAAcn+B,cAAc,OAAGt/B,EAAWi9D,IAASC,WAG3D,MAAO,CAAC,GAAI,MAEhB,CAACnoC,EAAWC,EAAYvY,EAAWrR,IAanCsyD,gBAVoB3/D,uBAAY,WAChCF,EAAS+vB,iBACV,CAAC/vB,KAaD,SAAS8/D,IACZ,IAAMC,EAASl/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAO2E,UAChE,OAAOz+D,mBAAQ,kBAAMy+D,IAAQ,CAACA,IAG3B,SAASC,IACZ,IAAMC,EAASp/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAO6E,UAChE,OAAO3+D,mBAAQ,kBAAM2+D,IAAQ,CAACA,IAG3B,SAASC,IACZ,IAAMC,EAAiBt/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAOgF,sBACxE,OAAO9+D,mBAAQ,kBAAM6+D,IAAgB,CAACA,IAGnC,SAASE,IACZ,IAAMC,EAAmBz/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAOkF,oBAC1E,OAAOh/D,mBAAQ,kBAAMg/D,IAAkB,CAACA,IAGrC,SAASC,IACZ,IAAMC,EAAoB3/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAOoF,qBAC3E,OAAOl/D,mBAAQ,kBAAMk/D,IAAmB,CAACA,IAGtC,SAASC,IACZ,IAAMC,EAAc7/D,aAAe,SAACD,GAAD,OAAqBA,EAAMw6D,OAAOsF,eACrE,OAAOp/D,mBAAQ,kBAAMo/D,IAAa,CAACA,M,6+2DCznBvC,SAASC,EAAY36B,GACjB,OAAOniB,IAAU+8C,YAAY56B,KAAkD,IAA5C,CAAC,SAAU,UAAUkc,eAAelc,GAG3E,SAAS66B,EAAkB76B,GACvB,YACU7jC,IAAN6jC,GACCnmB,MAAMC,QAAQkmB,IAAMA,EAAE3U,OAAM,SAACyvC,GAAD,OAAQH,EAAYG,IAAQjhD,MAAMC,QAAQghD,IAAOA,EAAGzvC,MAAMsvC,MAU/F,IAAMI,EAA6B,CAAEzoD,OAAO,EAAO0oD,iBAAa7+D,EAAWg2B,UAAMh2B,GAGpE8+D,EAAgC,CACzCC,eAAgBC,KAIpB,SAASC,EACLC,GAGa,IAAD,yDAF0B,CAAEH,eAAgB,GAAtDA,EAEU,EAFVA,eAGF,EAAoBrhE,cAAZC,EAAR,EAAQA,QACFwhE,EAAczgE,aAAe,SAACD,GAAD,OAAWA,EAAMwgC,UAAUkgC,eACxDthE,EAAWC,cAEXshE,EAA6BjgE,mBAC/B,4BACIkgE,KAAKjb,UAAL,iBACI8a,QADJ,IACIA,GADJ,UACIA,EACMz+D,QAAO,SAACy4B,GAAD,OAAkBxpB,QAAQwpB,aAF3C,iBACI,EAEM34B,IAAIoP,YAHd,aACI,EAGMhP,cAJV,QAIoB,MAExB,CAACu+D,IA4BL,OAxBA/mD,qBAAU,WACN,IAAMmnD,EAAqBD,KAAKznD,MAAMwnD,GACtC,GAAKzhE,GAA+B,IAApB2hE,EAASx9D,OAAzB,CACA,IAAMo9D,EAAQI,EAAS/+D,KAAI,SAACgK,GAAD,OAASwF,YAAaxF,MAUjD,OARA1M,EACI6J,YAAsB,CAClB/J,UACAuhE,QACAj5D,QAAS,CAAE84D,qBAIZ,WACHlhE,EACI8J,YAAyB,CACrBhK,UACAuhE,QACAj5D,QAAS,CAAE84D,yBAIxB,CAACphE,EAASE,EAAUkhE,EAAgBK,IAEhCjgE,mBACH,kBACI+/D,EAAM3+D,KAAgB,SAACqP,GAAU,IAAD,EAC5B,IAAKjS,IAAYiS,EAAM,OAAOgvD,EAE9B,IACI5oC,EADE50B,EAAM,UAAG+9D,EAAYxhE,UAAf,aAAG,EAAuBgS,YAAUC,IAShD,OANU,OAANxO,QAAM,IAANA,KAAQ40B,MAAyB,QAAX,OAAN50B,QAAM,IAANA,OAAA,EAAAA,EAAQ40B,QACxBA,EAAO50B,EAAO40B,MAKX,CAAE7f,OAAO,EAAM6f,OAAM6oC,YAAW,OAAEz9D,QAAF,IAAEA,OAAF,EAAEA,EAAQy9D,kBAEzD,CAACM,EAAaD,EAAOvhE,IAgB7B,IAAM4hE,EAAgC,CAClCppD,OAAO,EACP/U,YAAQpB,EACR+C,SAAS,EACTqS,SAAS,EACTxY,OAAO,GAEL4iE,EAAgC,CAClCrpD,OAAO,EACP/U,YAAQpB,EACR+C,SAAS,EACTqS,SAAS,EACTxY,OAAO,GAGX,SAAS6iE,EACLC,EACAC,EACAC,EACA3H,GAEA,IAAKyH,EAAY,OAAOH,EACxB,IAAQppD,EAA6BupD,EAA7BvpD,MAAO6f,EAAsB0pC,EAAtB1pC,KAAM6oC,EAAgBa,EAAhBb,YACrB,IAAK1oD,EAAO,OAAOopD,EACnB,GAAIppD,IAAU0oD,EAAa,OAAOW,EAClC,IAAKG,IAAsBC,IAAa3H,EAAmB,OAAOuH,EAClE,IAAMhkC,EAAUxF,GAAQA,EAAKl0B,OAAS,EAChCsT,GAAU,OAACypD,QAAD,IAACA,IAAe,GAAK5G,EACjC72D,OAA6BpB,EAEjC,GAAIw7B,GAAWxF,EACX,IACI50B,EAASu+D,EAAkBE,qBAAqBD,EAAU5pC,GAC5D,MAAOp5B,GAEL,OADAuR,QAAQ2vB,MAAM,6BAA8B8hC,EAAU5pC,GAC/C,CACH7f,OAAO,EACPpT,SAAS,EACTnG,OAAO,EACPwY,UACAhU,UAKZ,MAAO,CACH+U,OAAO,EACPpT,SAAS,EACTqS,UACAhU,OAAQA,EACRxE,OAAQ4+B,GAIT,SAAS36B,EACZi/D,EACAC,EACAC,GAEY,IADZ/5D,EACW,uDADoD,GAGzD25D,EAAWzgE,mBAAQ,+BAAM2gE,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAElFhB,EAAc,OAAG94D,QAAH,IAAGA,OAAH,EAAGA,EAAS84D,eAC1Bt8D,EAAW,OAAGwD,QAAH,IAAGA,OAAH,EAAGA,EAASxD,YAEvBy8D,EAAQ//D,mBACV,kBACI2gE,GAAYF,IAAsB,OAAVI,QAAU,IAAVA,OAAA,EAAAA,EAAYl+D,QAAS,GAAKk+D,EAAW9wC,OAAM,SAACohB,GAAD,OAAYouB,EAAkBpuB,MAC3F0vB,EAAWz/D,KAAU,SAAC+vC,GACpB,OAAO,aACHxvC,QAASg/D,EAASh/D,QAClB+O,SAAUiwD,EAASG,UAAUr+B,mBAAmBg+B,EAAUtvB,IACtD7tC,EAAc,CAAEA,eAAgB,OAG1C,KACV,CAACq9D,EAAUF,EAAUI,EAAYv9D,IAG/B7B,EAAUq+D,EAAaC,EAAOH,EAAiB,CAAEA,uBAAmB/+D,EAAW+/D,GAE/E9H,EAAoBC,cAE1B,OAAO/4D,mBAAQ,WACX,OAAOyB,EAAQL,KAAI,SAACa,GAAD,OAAYq+D,EAAYr+D,EAAD,OAAS0+D,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWL,EAAU3H,QACnF,CAAC2H,EAAUE,EAAUl/D,EAASq3D,IAG9B,SAASz1D,EACZlC,EACAq/D,EACAI,EACAC,EACA/5D,GAEA,IAAM25D,EAAWzgE,mBAAQ,kBAAMwgE,EAAkBO,YAAYH,KAAa,CAACJ,EAAmBI,IAExFhB,EAAc,OAAG94D,QAAH,IAAGA,OAAH,EAAGA,EAAS84D,eAC1Bt8D,EAAW,OAAGwD,QAAH,IAAGA,OAAH,EAAGA,EAASxD,YAEvBoN,EAA+B1Q,mBACjC,kBACIygE,GAAYlB,EAAkBsB,GACxBL,EAAkB/9B,mBAAmBg+B,EAAUI,QAC/ChgE,IACV,CAACggE,EAAYL,EAAmBC,IAmB9Bh/D,EAAUq+D,EAhBF9/D,mBACV,kBACIygE,GAAYt/D,GAAaA,EAAUwB,OAAS,GAAK+N,EAC3CvP,EAAUC,KAAsB,SAACO,GAC/B,OAAOA,GAAW+O,EAAX,aAEC/O,UACA+O,YACIpN,EAAc,CAAEA,eAAgB,SAEtCzC,KAER,KACV,CAACM,EAAWuP,EAAU+vD,EAAUn9D,IAGAs8D,EAAiB,CAAEA,uBAAmB/+D,GAEpEi4D,EAAoBC,cAE1B,OAAO/4D,mBAAQ,WACX,OAAOyB,EAAQL,KAAI,SAACa,GAAD,OAAYq+D,EAAYr+D,EAAQu+D,EAAmBC,EAAU3H,QACjF,CAAC2H,EAAUh/D,EAAS++D,EAAmB1H,IAGvC,SAAStpC,EACZmxC,EACAC,EACAzvB,EACArqC,GAEA,IAAM25D,EAAWzgE,mBAAQ,+BAAM2gE,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAElFhB,EAAc,OAAG94D,QAAH,IAAGA,OAAH,EAAGA,EAAS84D,eAC1Bt8D,EAAW,OAAGwD,QAAH,IAAGA,OAAH,EAAGA,EAASxD,YAcvBrB,EAAS69D,EAZD9/D,mBAAgB,WAC1B,OAAO2gE,GAAYF,GAAYlB,EAAkBpuB,GAC3C,CAAC,aAEKxvC,QAASg/D,EAASh/D,QAClB+O,SAAUiwD,EAASG,UAAUr+B,mBAAmBg+B,EAAUtvB,IACtD7tC,EAAc,CAAEA,eAAgB,KAG1C,KACP,CAACq9D,EAAUF,EAAUtvB,EAAQ7tC,IAEGs8D,EAAiB,CAAEA,uBAAmB/+D,GAAW,GAC9Ei4D,EAAoBC,cAE1B,OAAO/4D,mBAAQ,WACX,OAAOsgE,EAAYr+D,EAAD,OAAS0+D,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWL,EAAU3H,KAC3D,CAAC72D,EAAQ0+D,EAAUF,EAAU3H,M,6reC3RpC,0OASO,SAASz3D,EAAUW,GACtB,IACI,OAAO46C,qBAAW56C,GACpB,SACE,OAAO,GAKR,SAASg/D,EAAer/D,GAAqC,IAApBs/D,EAAmB,uDAAX,EAC9C74C,EAAS/mB,EAAUM,GACzB,IAAKymB,EACD,MAAMlpB,MAAM,gCAAD,OAAiCyC,EAAjC,OAEf,MAAM,GAAN,OAAUymB,EAAO84C,UAAU,EAAGD,EAAQ,GAAtC,cAA8C74C,EAAO84C,UAAU,GAAKD,IAcjE,SAASE,EAAYx/D,EAAiBy/D,EAAU/iC,EAAuB5/B,GAC1E,IAAK4C,EAAUM,IAAYA,IAAY0/D,IACnC,MAAMniE,MAAM,gCAAD,OAAiCyC,EAAjC,OAGf,OAAO,IAAI+vC,IAAS/vC,EAASy/D,EAVjC,SAA6B/iC,EAAuB5/B,GAChD,OAAOA,EANX,SAAmB4/B,EAAuB5/B,GACtC,OAAO4/B,EAAQyuB,UAAUruD,GAAS6iE,mBAKjBxU,CAAUzuB,EAAS5/B,GAAW4/B,EASbkjC,CAAoBljC,EAAS5/B,IAG5D,SAASoc,EAAa2mD,GACzB,OAAOA,EAAOrmD,QAAQ,sBAAuB,QAG1C,SAASywB,EAAc61B,EAAkCj+D,GAAyB,IAAD,EACpF,OAAO+M,SAAa,OAAL/M,QAAK,IAALA,OAAA,EAAAA,EAAOS,WAAP,UAAkBw9D,EAAgBj+D,EAAMhF,gBAAxC,aAAkB,EAAiCgF,EAAM7B,WAOrE,SAAS+/D,EAAe1tD,GAC3B,OAAQA,EAAM,KAAO2f,QAAQ,GAAK,M,8KCnDzBguC,EAA2C1hE,OAAOqZ,QAAQnI,IAAclC,mBAAmBoC,IAAQC,KAAKuT,aAAahjB,QAAO,SAACyzC,EAAD,0BAAO3zC,EAAP,KAAgB4iB,EAAhB,wBAAC,eACnI+wB,GADkI,kBAEpI3zC,EAAU4iB,MACX,IAGSq9C,EAA6C3hE,OAAOqZ,QAAQnI,IAAclC,mBAAmBoC,IAAQ8F,OAAO0N,aAAahjB,QAAO,SAACyzC,EAAD,0BAAO3zC,EAAP,KAAgB4iB,EAAhB,wBAAC,eACvI+wB,GADsI,kBAExI3zC,EAAU4iB,MACX,I,OCdSs9C,EAAgBvlE,UAAO+7B,IAAV,wCAAG/7B,CAAH,sFACb,qBAAGoB,QACF,qBAAGA,QAKJo8C,EAAax9C,UAAOC,IAAV,wCAAGD,CAAH,6NACV,qBAAGoB,QACF,qBAAGA,QACI,qBAAGA,QAEA,qBAAGjB,MAAkB29B,S,qCCJhCwgB,EAAkB,SAACj5C,GAAD,oGAA4GA,EAA5G,cAEhB,SAAS8+B,EAAT,GAAgJ,IAAD,MAGtJlc,EAH+BvgB,EAAuH,EAAvHA,SAAuH,IAA7GtG,YAA6G,MAAtG,OAAsG,EAA9FC,EAA8F,EAA9FA,MAAUiK,EAAoF,iBAClJpJ,EAAYD,cAAZC,QAQR,OAJIA,GAAWA,IAAY2S,IAAcgT,aAAa3lB,GAASA,UAC3D+lB,EAAOpT,IAAcgT,aAAa3lB,GAASgmB,sBAAsBD,MAGhEvgB,GAED,UAAAA,EAASrC,eAAT,eAAkB6hB,iBAAiBm+C,EAC5B,cAACE,EAAD,aAAevtB,IAAKqtB,EAAiB39D,EAASrC,QAAQ6hB,eAAgB9lB,KAAMA,EAAMC,MAAOA,GAAWiK,KAG3G,UAAA5D,EAASrC,eAAT,eAAkB6hB,iBAAiBo+C,EAC5B,cAACC,EAAD,aAAevtB,IAAKstB,EAAmB59D,EAASrC,QAAQ6hB,eAAgB9lB,KAAMA,EAAMC,MAAOA,GAAWiK,IAG7G5D,EAASI,SACF,cAACy9D,EAAD,aAAevtB,IAAK/vB,EAAM7mB,KAAMA,EAAMC,MAAOA,GAAWiK,IAI/D,cAACkyC,EAAD,yBACIp8C,KAAMA,EACNC,MAAK,2BACEA,GADF,IAEDyrC,WAAYX,YAAezkC,EAASkf,QAAQkmB,WAC5CzX,MAAO8W,YAAezkC,EAASkf,QAAQvb,KACvC7C,OAAQ2jC,YAAezkC,EAASkf,QAAQpe,OAExCmV,SAAmB,SAATvc,EAAkB,MAAiB,SAATA,EAAkB,OAAS,UAE/DkK,GAVR,uBAYK5D,EAASkf,cAZd,aAYK,EAAiB3T,MAAM,EAAG,MA3Bb,0B,gCCpB1B,4bAyBO,SAASuyD,EACZC,EACAX,GAES,IADTY,IACQ,yDACR,EAAsCzjE,cAA9B8/B,EAAR,EAAQA,QAAS5/B,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,OAAOwB,mBAAQ,WACX,IAAK+hE,IAAwBX,IAAQ/iC,IAAY7/B,EAAS,OAAO,KACjE,IAAImD,EAGJ,KAF6CA,EAAV,kBAAxBogE,EAA4CA,EACxCA,EAAoBvjE,IACrB,OAAO,KACrB,IACI,OAAO2iE,YAAYx/D,EAASy/D,EAAK/iC,EAAS2jC,GAAwBvjE,EAAUA,OAAUoC,GACxF,MAAOpD,GAEL,OADAuR,QAAQvR,MAAM,yBAA0BA,GACjC,QAEZ,CAACskE,EAAqBX,EAAK/iC,EAAS7/B,EAASwjE,EAAsBvjE,IAOnE,SAASwjE,EAAiBpiE,EAAuBmiE,GACpD,OAAOF,EAAYjiE,EAAc0rD,EAAWyW,GAGzC,SAASE,EAAgBF,GAAiC,IAAD,EACpDxjE,EAAYD,cAAZC,QACR,OAAOsjE,EAAYtjE,EAAO,UAAG+a,IAAgB/a,UAAnB,aAAG,EAA0BmD,aAAUd,EAAWshE,EAAUH,GAGnF,SAAS1yC,EAAwB0yC,GACpC,OAAOF,EAAYzpD,IAAyB+pD,EAASJ,GAGlD,SAASryC,EAAuBhuB,EAA6BqgE,GAChE,OAAOF,EAAYngE,EAAS0gE,EAAyBL,GAGlD,SAASM,EAAwBziE,EAAuBmiE,GAC3D,OAAOF,EAAYjiE,EAAc0iE,EAAmBP,GAGjD,SAASQ,EAAmB3iE,GAC/B,OAAOiiE,EAAYjiE,EAAc4iE,GAAU,GAOxC,SAASvhE,IACZ,OAAO4gE,EAAYlqD,IAAmB8qD,GAAe,GAGlD,SAASpd,EAAgC0c,GAC5C,OAAOF,EACHpqD,IACAirD,EACAX,GAID,SAAS1sD,IACZ,OAAOwsD,EAAYxqD,IAAkBsrD,K,gCC7FzC,sDAqBO,SAAS1hC,EAAM2hC,GAClB,IACIhzB,EADWvtC,IAAKC,OAAOsgE,GACVrgE,SAAS,IAI1B,OAHIqtC,EAAIltC,OAAS,IAAM,IACnBktC,EAAG,WAAOA,IAER,KAAN,OAAYA,K,ouBCjBez3B,IAAqB/G,IAAQC,KAK3BhP,IAAKC,OAAO,KAGzBD,IAAKC,OAAO,GACbD,IAAKC,OAAO,GACXD,IAAKC,OAAO,GACZD,IAAKC,OAAO,KACXD,IAAKC,OAAO,K,OCMjC,SAASugE,EAAet/D,GACpB,MAAO,CACHhF,QAASgF,EAAMhF,QACfmD,QAAS6B,EAAM7B,QACfshB,SAAUzf,EAAMyf,SAChBC,OAAQ1f,EAAM0f,OACdrc,KAAMrD,EAAMqD,MAIpB,SAASk8D,EAAiBC,GACtB,OAAO,IAAI1P,IAAM0P,EAAgBxkE,QAASwkE,EAAgBrhE,QAASqhE,EAAgB//C,SAAU+/C,EAAgB9/C,OAAQ8/C,EAAgBn8D,MAGlI,SAASqzB,IACZ,MAA0C36B,aACtC,oBAAGmjB,KAAQugD,EAAX,EAAWA,gBAAX,MAAkD,CAC9CC,aADJ,EAA4BA,aAExBD,qBAEJE,KALID,EAAR,EAAQA,aAAR,EAAsBD,gBAQtB,OAAO1yD,QAAQ2yD,GAGZ,SAASE,IACZ,IAAM1kE,EAAWC,cACXs7B,EAAWC,IAEXmpC,EAAoBzkE,uBAAY,WAClCF,EAAS4kE,YAAmB,CAAEJ,cAAejpC,OAC9C,CAACA,EAAUv7B,IAEd,MAAO,CAACu7B,EAAUopC,GAGf,SAAS16C,IACZ,OAAOppB,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAK4F,cA0BzC,SAASD,IACZ,IAAM3pB,EAAWC,cAUjB,MAAO,CATQgqB,IAEG/pB,uBACd,SAAC2kE,GACG7kE,EAAS8kE,YAAiB,CAAEl7C,WAAYi7C,OAE5C,CAAC7kE,KAMF,SAAS+kE,IACZ,OAAOlkE,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAKghD,kBAGzC,SAAS1uC,IACZ,IAAMt2B,EAAWC,cACXs2B,EAAawuC,IAEbE,EAAsB/kE,uBAAY,WACpCF,EAASklE,YAAqB,CAAEF,gBAAiBzuC,OAClD,CAACA,EAAYv2B,IAEhB,MAAO,CAACu2B,EAAY0uC,GAGjB,SAAS7uD,IACZ,IAAMpW,EAAWC,cAWjB,MAAO,CATeY,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAKmhD,qBAElCjlE,uBACrB,SAACklE,GACGplE,EAASqlE,YAAwB,CAAEF,kBAAmBC,OAE1D,CAACplE,KAMF,SAAS0zB,IACZ,IAAM1zB,EAAWC,cAEjB,OAAOC,uBACH,SAACqzB,GACG,IAAIjwB,EACJ,IACIA,EAAkC,SAA1BiwB,EAAmC,OAAS3vB,IAAK0rB,SAASiE,EAAsBrkB,SAAS,KAAQ6H,UAC3G,MAAOhY,GACLuE,EAAQ,OAEZtD,EACIslE,YAA4B,CACxB/xC,sBAAuBjwB,OAInC,CAACtD,IAOF,SAASwzB,IACZ,IAAMD,EAAwB1yB,aAAe,SAACD,GAC1C,OAAOA,EAAMojB,KAAKuP,yBAGtB,OAAOjyB,mBAAQ,iBAAiC,SAA1BiyB,EAAmC,OAAS,IAAIzL,IAAQyL,EAAuB,OAAU,CAACA,IAG7G,SAASgyC,IACZ,IAAMvlE,EAAWC,cAWjB,MAAO,CATqBY,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAKwhD,2BAElCtlE,uBAC3B,SAACulE,GACGzlE,EAAS0lE,YAA0B,CAAEF,wBAAyBC,OAElE,CAACzlE,KAMF,SAAS2lE,IACZ,IAAM3lE,EAAWC,cAWjB,MAAO,CATsBY,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAK4hD,4BAElC1lE,uBAC5B,SAAC2lE,GACG7lE,EAAS8lE,YAA2B,CAAEF,yBAA0BC,OAEpE,CAAC7lE,KAUF,SAAS+lE,EAAoCC,GAChD,IAAMC,EAAkBzyC,IACxB,OAAOlyB,mBAAQ,iBAA2B,SAApB2kE,EAA6BD,EAA2BC,IAAkB,CAACA,EAAiBD,IAG/G,SAASryC,IACZ,IAAM3zB,EAAWC,cAUjB,MAAO,CATUY,aAAe,SAACD,GAAD,OAAWA,EAAMojB,KAAKC,gBAE9B/jB,uBACpB,SAAC+jB,GACGjkB,EAASkmE,YAAmB,CAAEjiD,oBAElC,CAACjkB,KAMF,SAASgrC,IACZ,IAAMhrC,EAAWC,cACjB,OAAOC,uBACH,SAAC4E,GACG9E,EAASmmE,YAAmB,CAAE7B,gBAAiBF,EAAet/D,QAElE,CAAC9E,IAIF,SAASs5C,IACZ,IAAMt5C,EAAWC,cACjB,OAAOC,uBACH,SAACJ,EAAiBmD,GACdjD,EAASomE,YAAsB,CAAEtmE,UAASmD,eAE9C,CAACjD,IAIF,SAASo5C,IACZ,IAAQt5C,EAAYD,cAAZC,QACFumE,EAAsBxlE,aAAe,qBAAGmjB,KAAQ7f,UAiBtD,OAAO7C,mBAAQ,WAAO,IAAD,EACjB,OAAKxB,EACEyB,OAAOwE,OAAP,iBAAcsgE,QAAd,IAAcA,OAAd,EAAcA,EAAsBvmE,UAApC,QAAgD,IAAI4C,IAAI2hE,GAD1C,KAEtB,CAACgC,EAAqBvmE,IAqBtB,SAASwmE,IACZ,OAAOzlE,aAAe,SAACD,GAAD,OAAqBA,EAAMojB,KAAKuiD,uB,gCC9R1D,kaAOap6C,EAAqB,UAGrBiJ,EAA4B,KAM5BwpC,GAF0Bh7D,IAAKC,OAAO,QAEvBD,IAAKC,OAAO,IAGlC2iE,EAAY5iE,IAAKC,OAAO,KAIjB8kB,GAHW,IAAIb,IAAQlkB,IAAKC,OAAO,GAAI2iE,GAGH,IAAI1+C,IAAQlkB,IAAKC,OAAO,KAAM2iE,IAClE99C,EAAuC,IAAIZ,IAAQlkB,IAAKC,OAAO,KAAM2iE,GACrE/9C,EAAqC,IAAIX,IAAQlkB,IAAKC,OAAO,KAAM2iE,GAEnEC,EAAgD,IAAI3+C,IAAQlkB,IAAKC,OAAO,KAAO2iE,GAE/Eh+C,EAA2C,IAAIV,IAAQlkB,IAAKC,OAAO,MAAO2iE,GAI1EE,GAFmC,IAAI5+C,IAAQlkB,IAAKC,OAAO,IAAK2iE,GAEjD,IAAI1+C,IAAQ,MAC3BC,EAAsB,IAAID,IAAQ,KAElChhB,EAAgB2lB,QAAUA,OAAOoB,SAASmM,WAAavnB,IAAcyU,KAAKvU,IAAQC,KAAKyU,Q,gCCpCpG,0gBAgBas/C,EAAwBxpE,YAA2C,8BACnEypE,EAAkCzpE,YAAqD,wCACvFynE,EAAqBznE,YAAwC,2BAC7D+nE,EAAuB/nE,YAA0C,6BACjE2nE,EAAmB3nE,YAA8C,yBACjEkoE,EAA0BloE,YAA6C,gCACvEuoE,EAA4BvoE,YAAmD,4BAC/E2oE,EAA6B3oE,YAAoD,6BACjFmoE,EAA8BnoE,YAAyD,oCACvF+oE,EAAqB/oE,YAAuC,2BAC5DgpE,EAAqBhpE,YAAmD,2BACxEipE,EAAwBjpE,YAAmD,8BAC3E0pE,EAAoB1pE,YAAiD,0BACrE2pE,EAAuB3pE,YAAgF,6BACvG4pE,EAA4B5pE,YAAmC,mC,2XCyBrE,SAAS2I,IAEZ,OAtCJ,SAA0BqK,EAA2B62D,GACjD,IAAQlnE,EAAYD,cAAZC,QACFq5C,EAAkBC,cAExB,OAAO93C,mBAAQ,WAAO,IAAD,EACjB,IAAKxB,EAAS,MAAO,GAGrB,IAAMmnE,EAAiB1lE,OAAOC,KAAP,UAAY2O,EAASrQ,UAArB,QAAiC,IAAIqD,QACxD,SAAC+jE,EAAQjkE,GAEL,OADAikE,EAAOjkE,GAAWkN,EAASrQ,GAASmD,GAAS6B,MACtCoiE,IAEX,IAGJ,OAAIF,EAEI7tB,EAEKh2C,QACG,SAACgN,EAAUrL,GAEP,OADAqL,EAASrL,EAAM7B,SAAW6B,EACnBqL,IALnB,eASa82D,IAKdA,IACR,CAACnnE,EAASq5C,EAAiBhpC,EAAU62D,IAKjCG,CADWx1D,eACiB,GAGhC,SAAS6+B,EAA4B32B,GAAkE,IAAtCutD,EAAqC,uDAAxB,GAC3E32D,EAAQD,cACR62D,EAAe91D,cACrB,EAAoB1R,cAAZC,EAAR,EAAQA,QACFwnE,EAAexhE,IAErB,OAAOxE,mBAAQ,WACX,IAAKuY,GAAmC,IAAzBA,EAAOuC,OAAOnY,OAAc,MAAO,GAClD,IAFiB,EAEXsjE,EAAcpnC,YAA0BtmB,GACxCtW,EAA6B,GAC7BikE,EAA0C,GAJ/B,cAKCH,GALD,IAKjB,2BAAgC,CAAC,IAAtB51D,EAAqB,QACtBxB,EAAOQ,EAAMgB,GAAKR,QACxB,GAAKhB,EAAL,CAF4B,oBAGJA,EAAK9L,QAHD,IAG5B,2BAAqC,CAAC,IAA3BiM,EAA0B,QACjC,GAAIA,EAAUtQ,UAAYA,GAAWynE,EAAYn3D,GAAY,CACzD,IAAM/C,EAA4B,IAAIgD,IAAiBD,EAAWH,GAClE,KAAM5C,EAAQpK,WAAWqkE,KAAkBE,EAAWn6D,EAAQpK,WAC1DukE,EAAWn6D,EAAQpK,UAAW,EAC9BM,EAAOyS,KAAK3I,GACR9J,EAAOU,QAAUmjE,GAAY,OAAO7jE,IATxB,iCALf,8BAmBjB,OAAOA,IACR,CAAC+jE,EAAcxnE,EAASunE,EAAc52D,EAAO22D,EAAYvtD,IAGzD,SAAS4yB,EAAiB3nC,GAC7B,IAAMwiE,EAAexhE,IAErB,SAAKwhE,IAAiBxiE,MAIbwiE,EAAaxiE,EAAM7B,SAIzB,SAASupC,EAAoBlnC,GAChC,IAAM6zC,EAAkBC,cAExB,QAAK9zC,KAII6zC,EAAgBvkC,MAAK,SAAC9P,GAAD,OAAWQ,EAASwI,OAAOhJ,MAI7D,IAAM2iE,EAAgB,sBAEtB,SAASC,EAAqB19B,EAAyB29B,EAA6BC,GAChF,OAAO59B,GAAOA,EAAI/lC,OAAS,EACrB+lC,EAEF29B,GAAWF,EAAcvrD,KAAKyrD,IAAsC,IAA1BE,mBAASF,GAAS,IACtDG,YAAmBH,GACnBC,EAMP,SAAS34B,EAAS9tC,GACrB,IAAQrB,EAAYD,cAAZC,QACFqE,EAAS2B,IAET7C,EAAUN,YAAUxB,GACpB4mE,EAAiBzmE,mBAAQ,WAC3B,GAAK2B,EAEL,OAAOA,EAAQ6hB,gBAEhB,CAAC3jB,EAAc8B,IAEZ+kE,EAAgBzE,YAAiBtgE,QAAoBd,GAAW,GAChE8lE,EAAuBrE,YAAwB3gE,QAAoBd,GAAW,GAC9E2C,EAA2B7B,EAAUkB,EAAOlB,QAAWd,EAEvD+lE,EAAYp3C,YAAoBhsB,OAAQ3C,EAAY6lE,EAAe,YAAQ7lE,EAAW8+D,KACtFkH,EAAmBr3C,YACrBhsB,OAAQ3C,EAAY8lE,EACpB,YACA9lE,EACA8+D,KAGEz8C,EAASsM,YAAoBhsB,OAAQ3C,EAAY6lE,EAAe,cAAU7lE,EAAW8+D,KACrFmH,EAAgBt3C,YAAoBhsB,OAAQ3C,EAAY8lE,EAAsB,cAAU9lE,EAAW8+D,KAEnG18C,EAAWuM,YAAoBhsB,OAAQ3C,EAAY6lE,EAAe,gBAAY7lE,EAAW8+D,KAE/F,OAAO3/D,mBAAQ,WACX,GAAIwD,EAAO,OAAOA,EAClB,GAAKhF,GAAYmD,GAAY8kE,EAA7B,CACA,GAAIA,KAAkBt1D,IAAclC,mBAAmBoC,IAAQC,KAAKqT,cAAe,OAAO,IAAI2uC,IAC1F90D,EACAmD,EACAwP,IAAclC,mBAAmBoC,IAAQC,KAAKqT,cAAc8hD,GAAgBxjD,SAC5E9R,IAAclC,mBAAmBoC,IAAQC,KAAKqT,cAAc8hD,GAAgBvjD,OAC5E/R,IAAclC,mBAAmBoC,IAAQC,KAAKqT,cAAc8hD,GAAgB5/D,MAEhF,GAAI4/D,KAAkBt1D,IAAclC,mBAAmBoC,IAAQ8F,OAAOwN,cAAe,OAAO,IAAI2uC,IAC5F90D,EACAmD,EACAwP,IAAclC,mBAAmBoC,IAAQ8F,OAAOwN,cAAc8hD,GAAgBxjD,SAC9E9R,IAAclC,mBAAmBoC,IAAQ8F,OAAOwN,cAAc8hD,GAAgBvjD,OAC9E/R,IAAclC,mBAAmBoC,IAAQ8F,OAAOwN,cAAc8hD,GAAgB5/D,MAElF,GAAIoc,EAASrf,SAAWsf,EAAOtf,SAAWgjE,EAAUhjE,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAIqf,EAAShhB,OACT,OAAO,IAAIqxD,IACP90D,EACAmD,EACAshB,EAAShhB,OAAO,GAChBmkE,EAAoB,UAACljD,EAAOjhB,cAAR,aAAC,EAAgB,GAAjB,UAAqB6kE,EAAc7kE,cAAnC,aAAqB,EAAuB,GAAI,WACpEmkE,EAAoB,UAACQ,EAAU3kE,cAAX,aAAC,EAAmB,GAApB,UAAwB4kE,EAAiB5kE,cAAzC,aAAwB,EAA0B,GAAI,qBAInF,CACCN,EACAnD,EACAykB,EAASrf,QACTqf,EAAShhB,OACTihB,EAAOtf,QACPsf,EAAOjhB,OACP6kE,EAAc7kE,OACduB,EACAojE,EAAUhjE,QACVgjE,EAAU3kE,OACV4kE,EAAiB5kE,SAIlB,SAAS8kE,EAAY5/B,GAA8D,IAAD,EAC7E3oC,EAAYD,cAAZC,QAEFwoE,GAAkB,OAAV7/B,QAAU,IAAVA,OAAA,EAAAA,EAAYjf,iBAAkB/W,IAAcgT,aAAa9S,IAAQC,KAAKkT,sBAAsBtB,SAAoB,OAAVikB,QAAU,IAAVA,OAAA,EAAAA,EAAYjf,iBAAkB/W,IAAcgT,aAAa9S,IAAQ8F,OAAOqN,sBAAsBtB,OAE5M1f,EAAQmqC,EAASq5B,OAAQnmE,EAAYsmC,GACrC8/B,EAAgBjnE,mBAAQ,kBAAOxB,EAAUmb,IAActX,QAAQ7D,QAAWqC,IAAY,CAACrC,IACvF0oE,EAAO1oE,EAAU+a,IAAgB/a,QAAWqC,EAClD,OAAQ,OAAJqmE,QAAI,IAAJA,GAAA,UAAAA,EAAMvlE,eAAN,eAAe6hB,kBAAf,OAAiC2jB,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAY3jB,eAAsB0jD,EAChEF,EAAQC,EAAgBzjE,I,gCC9MnC,kPAUYqxB,EAVZ,S,SAUYA,O,mBAAAA,I,uBAAAA,I,2BAAAA,I,iCAAAA,I,6BAAAA,I,eAAAA,I,uBAAAA,I,eAAAA,I,iDAAAA,I,wCAAAA,M,KAaL,IAAMsyC,EAAgBtrE,YAAyC,6BACzDurE,EAAoBvrE,YAAuD,iCAC3EwrE,EAAiBxrE,YAA4D,8BAC7EyrE,EAAezrE,YAAsC,4BACrD0rE,EACT1rE,YAAqF,wBAC5E2rE,EAAc3rE,YAA8B,4B,gCC7BzD,0GAEYqyB,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAME,EAAYvyB,YAAyE,sBACrF2yB,EAAiB3yB,YAAmB,wB,gCCRjD,mTAMO,SAASk9D,IACZ,IAAQv6D,EAAYD,cAAZC,QAER,OAAOe,aAAe,SAACD,GAAD,OAAqBA,EAAMmoE,YAAY/H,YAAlB,OAA8BlhE,QAA9B,IAA8BA,KAAY,MAGlF,SAASo2B,EAAa8yC,GAEzB,OADkBnoE,aAAe,SAACD,GAAD,OAAqBA,EAAMmoE,YAAYE,eACnDD,EAGlB,SAASE,EAAeF,GAC3B,IAAM1/D,EAAO4sB,EAAa8yC,GACpBhpE,EAAWC,cACjB,OAAOC,uBAAY,kBAAMF,EAAS4oE,YAAat/D,EAAO,KAAO0/D,MAAS,CAAChpE,EAAUgpE,EAAO1/D,IAGrF,SAAS6/D,IACZ,OAAOD,EAAe/yC,IAAiBizC,QAGpC,SAAS/yC,IACZ,OAAO6yC,EAAe/yC,IAAiBC,UAwBpC,SAASizC,IACZ,IAAMrpE,EAAWC,cAEjB,OAAOC,uBACH,SAACqH,EAAuBmF,GACpB1M,EAAS6oE,YAAS,CAAEthE,UAASmF,WAEjC,CAAC1M,IAKF,SAASspE,IACZ,IAAMtpE,EAAWC,cACjB,OAAOC,uBACH,SAACwM,GACG1M,EAAS8oE,YAAY,CAAEp8D,WAE3B,CAAC1M,IAKF,SAASupE,IACZ,IAAMt5D,EAAOpP,aAAe,SAACD,GAAD,OAAqBA,EAAMmoE,YAAYS,aACnE,OAAOloE,mBAAQ,kBAAM2O,EAAKrN,QAAO,SAAC6J,GAAD,OAAUA,EAAKhN,UAAO,CAACwQ,M,gJC3EtD4qB,EAASnB,oBAAH,sIASC+vC,EAAY7rE,UAAO8rE,IAAV,wCAAG9rE,CAAH,4EACFi9B,GACN,qBAAG77B,QACJ,qBAAGA,QAGE,gBAAG+5B,EAAH,EAAGA,OAAH,EAAWh7B,MAAX,cAAuBg7B,QAAvB,IAAuBA,IAAU,oBAI7C4wC,EAAmBjwC,oBAAH,6I,GASK97B,UAAOC,IAAV,wCAAGD,CAAH,mbASH+rE,GAGX,cAAG5rE,MAAH,MAAe,gBACf,cAAGA,MAAH,MAAe,gBACf,cAAGA,MAAH,MAAe,gB,0BCpCV,SAASwnD,EAAT,GAAkE,IAAD,IAA/CvmD,YAA+C,MAAxC,OAAwC,EAAhC+5B,EAAgC,EAAhCA,OAAW7vB,EAAqB,iBAC5E,OACI,cAACugE,EAAD,yBACIxqE,MAAO,CAAE0K,QAAS,SAClBg5C,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACN7jD,KAAMA,EACN+5B,OAAQA,GACJ7vB,GAPR,aASI,sBACI45C,EAAE,6HACF1G,YAAY,MACZwtB,cAAc,QACdC,eAAe,e,wCCvB/B,IAAInnE,EAAM,CACT,aAAc,CACb,IACA,KAGF,SAASonE,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEvnE,EAAKqnE,GAC9B,OAAO18C,QAAQ68C,UAAUj9C,MAAK,WAC7B,IAAI7H,EAAI,IAAI5kB,MAAM,uBAAyBupE,EAAM,KAEjD,MADA3kD,EAAE2oC,KAAO,mBACH3oC,KAIR,IAAI+kD,EAAMznE,EAAIqnE,GAAM54D,EAAKg5D,EAAI,GAC7B,OAAOH,EAAoB5kD,EAAE+kD,EAAI,IAAIl9C,MAAK,WACzC,OAAO+8C,EAAoB3lE,EAAE8M,EAAI,MAGnC24D,EAAoBtoE,KAAO,WAC1B,OAAOD,OAAOC,KAAKkB,IAEpBonE,EAAoB34D,GAAK,IACzBi5D,EAAOC,QAAUP,G,wZCdXQ,EAAO1sE,kBAAO2sE,UAAV,uCAAG3sE,CAAH,ycAQK,gBAAGsI,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,UAC9B,gBAAGD,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGhB,gBAAGE,EAAH,EAAGA,cAAH,cAAuBA,QAAvB,IAAuBA,IAAiB,UA+BhD7G,EAAgB1B,kBAAO0sE,GAAV,uCAAG1sE,CAAH,qSACF,cAAGG,MAAH,MAAe,oBAIP,cAAGA,MAAH,OAAei4C,YAAO,IAAMC,OAAOC,YAAO,kBAC9C,cAAGn4C,MAAH,OAAei4C,YAAO,IAAMC,OAAOC,YAAO,kBAI1C,cAAGn4C,MAAH,OAAei4C,YAAO,IAAMC,OAAOC,YAAO,kBAItC,cAAGn4C,MAAH,OAAei4C,YAAO,GAAKC,OAAOC,YAAO,kBAC7C,cAAGn4C,MAAH,OAAei4C,YAAO,GAAKC,OAAOC,YAAO,kBAIzC,cAAGn4C,MAAH,IAAU0tC,EAAV,EAAUA,iBAAkBxS,EAA5B,EAA4BA,SAA5B,OAA4CwS,GAAoBxS,EAAW,iBAAgD,6BACtI,cAAGl7B,MAAH,MAAe,kBAQnBysE,EAAc5sE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,2UACA,cAAGG,MAAH,MAAe,oBAC1B,kCAAQ,WAKW,gBAAGk7B,EAAH,EAAGA,SAAH,EAAal7B,MAAb,OAA0Bk7B,GAAY+c,YAAO,IAAMC,OAAOC,YAAO,kBACrE,gBAAGjd,EAAH,EAAGA,SAAH,EAAal7B,MAAb,OAA0Bk7B,GAAY+c,YAAO,IAAMC,OAAOC,YAAO,kBAIjE,gBAAGjd,EAAH,EAAGA,SAAH,EAAal7B,MAAb,OAA0Bk7B,GAAY+c,YAAO,IAAMC,OAAOC,YAAO,kBAI7D,gBAAGjd,EAAH,EAAGA,SAAH,EAAal7B,MAAb,OAA0Bk7B,GAAY+c,YAAO,IAAMC,OAAOC,YAAO,kBACrE,gBAAGjd,EAAH,EAAGA,SAAH,EAAal7B,MAAb,OAA0Bk7B,GAAY+c,YAAO,IAAMC,OAAOC,YAAO,kBAQ7D,kCAAQ,aAQ3BmN,EAAazlD,kBAAO0sE,GAAV,uCAAG1sE,CAAH,iIACC,cAAGG,MAAH,MAAe,oBAC1B,cAAGA,MAAH,MAAe,kBAKA,cAAGA,MAAH,SAAUk7B,UAA4B+c,YAAO,IAAMC,OAAOC,YAAO,kBAIjE,cAAGn4C,MAAH,SAAUk7B,UAA4B+c,YAAO,GAAKC,OAAOC,YAAO,2BAI/Eu0B,EAAkB7sE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,+TACJ,cAAGG,MAAH,MAAe,qBAC1B,cAAGA,MAAH,MAAe,oBAIb,gBAAGmI,EAAH,EAAGA,QAAH,OAAkBA,GAAoB,UAGrB,cAAGnI,MAAH,MAAe,qBACnB,cAAGA,MAAH,MAAe,qBAIf,cAAGA,MAAH,MAAe,qBAIX,cAAGA,MAAH,MAAe,qBACnB,cAAGA,MAAH,MAAe,qBAa9B2sE,EAAiB9sE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,gLACH,kCAAQ,yBACnB,cAAGG,MAAH,MAAe,kBAGI,cAAGA,MAAH,MAAe,gBAIf,cAAGA,MAAH,MAAe,gBAIf,cAAGA,MAAH,MAAe,gBASlC4sE,EAAc/sE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,0OAoDlBgtE,GA1BoBhtE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,uMA0BMA,kBAAO0sE,GAAV,uCAAG1sE,CAAH,wGACF,cAAGG,MAAH,MAAe,gBAC1B,cAAGA,MAAH,MAAe,kBAKA,cAAGA,MAAH,MAAe,6BAC1B,cAAGA,MAAH,MAAe,mBAK1B8sE,EAAmBjtE,kBAAO0sE,GAAV,uCAAG1sE,CAAH,kWA2Bf,SAASktE,EAAT,GAAuI,IAA5G9wB,EAA2G,EAA3GA,UAAWvO,EAAgG,EAAhGA,iBAAqBviC,EAA2E,iBACzI,OAAI8wC,EACO,cAAC4wB,EAAD,eAA0B1hE,IAE1B,cAAC5J,EAAD,2BAAmB4J,GAAnB,IAAyBuiC,iBAAkBA,KAInD,SAASs/B,EAAT,GAA6E,IAAtDhsE,EAAqD,EAArDA,MAAUmK,EAA2C,iBAC/E,OAAInK,EACO,cAAC8rE,EAAD,eAAsB3hE,IAEtB,cAAC5J,EAAD,eAAmB4J,IA0BXtL,kBAAO8sE,GAAV,wCAAG9sE,CAAH,wCAEA,cAAGG,MAAH,MAAe,oBAGpBH,UAAOC,IAAV,wCAAGD,CAAH,2HAIY,cAAGG,MAAH,MAAe,oBAMfH,UAAOC,IAAV,wCAAGD,CAAH,sEAQGA,kBAAOotE,KAAV,wCAAGptE,CAAH,iB,ocCvTjB21C,E,sICPE03B,E,kDACF,WAAY34B,EAAwByb,EAAqB51B,GAAiB,IAAD,8BACrE,cAAMma,IAD0Byb,OAAqC,EAAhB51B,OAAgB,E,mCADlD33B,QAYrB0qE,E,aAYF,WAAYprE,EAAiB2R,EAAa05D,GAA2B,IAAD,gCAXpDtvB,YAAoB,EAWgC,KAVpD/7C,aAUoD,OATpD2R,SASoD,OARpD25D,UAQoD,OAPpD19D,UAOoD,OANpDy9D,qBAMoD,OAJ5DE,OAAS,EAImD,KAH5DC,eAAuD,KAGK,KAF5DC,MAAqB,GAEuC,KAUpDC,WAVoD,gCAUvC,+HAEnBD,EAAQ,EAAKA,MACnB,EAAKA,MAAQ,GACb,EAAKD,eAAiB,KAJG,kBAOJh5C,MAAM,EAAK7gB,IAAK,CAC7BsqC,OAAQ,OACR0vB,QAAS,CAAE,eAAgB,mBAAoBC,OAAQ,oBACvDp2C,KAAMksC,KAAKjb,UAAUglB,EAAM7oE,KAAI,SAAC+J,GAAD,OAAUA,EAAKqvC,cAV7B,OAOrB37C,EAPqB,8DAarBorE,EAAMI,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAIprE,MAAM,iCAb1B,8BAiBpBL,EAAS+xC,GAjBW,wBAkBrBq5B,EAAMI,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAIX,EAAJ,UAAoB9qE,EAAS0rE,OAA7B,aAAwC1rE,EAAS2rE,aAAe,UAlBhF,sDAwBR3rE,EAASqyB,OAxBD,QAwBrBA,EAxBqB,iEA0BrB+4C,EAAMI,SAAQ,mBAAgBC,EAAhB,EAAGA,QAAoB,IAAIprE,MAAM,qCA1B1B,2BA6BnBurE,EAAQR,EAAMpoE,QAAoC,SAACC,EAAM6N,GAE3D,OADA7N,EAAK6N,EAAQ6qC,QAAQ3qC,IAAMF,EACpB7N,IACR,IAhCsB,cAiCJovB,GAjCI,IAiCzB,2BAAWjvB,EAAgB,UAKnBwoE,EAAMxoE,EAAO4N,IAHb+4D,EAFmB,EAEnBA,QACA0B,EAHmB,EAGnBA,OACW7vB,EAJQ,EAInBD,QAAWC,OAEX,UAAWx4C,EACXqoE,EAAO,IAAIX,EAAJ,OAAiB1nE,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAQxE,aAAzB,aAAiB,EAAeuzC,QAAhC,OAAyC/uC,QAAzC,IAAyCA,GAAzC,UAAyCA,EAAQxE,aAAjD,aAAyC,EAAegvD,KAAxD,OAA8DxqD,QAA9D,IAA8DA,GAA9D,UAA8DA,EAAQxE,aAAtE,aAA8D,EAAeo5B,OAC7E,WAAY50B,GAAU2mE,EAC7BA,EAAQ3mE,EAAOA,QAEfqoE,EAAO,IAAIX,EAAJ,mDAA6DlvB,EAA7D,cAAiF,KAAOx4C,IA5C9E,+FAVuC,KA2DpDyoE,UAAY,SACxBlwB,EAMAhT,GAEA,EAAKgT,QAAQA,EAAQC,OAAQD,EAAQE,QAChC/uB,MAAK,SAAC1pB,GAAD,OAAYulC,EAAS,KAAM,CAAEmjC,QAAS,MAAO96D,GAAI2qC,EAAQ3qC,GAAI5N,cAClE4pB,OAAM,SAACpuB,GAAD,OAAW+pC,EAAS/pC,EAAO,UAtE0B,KAyEpD+8C,QAzEoD,iDAyE1C,WACtBC,EACAC,GAFsB,sFAIA,kBAAXD,EAJW,yCAKX,EAAKD,QAAQC,EAAOA,OAAQA,EAAOC,SALxB,UAOP,gBAAXD,EAPkB,qDAQN,EAAKj8C,QAAQgE,SAAS,MARhB,cAUhBooE,EAAU,IAAI7+C,SAAQ,SAAC68C,EAAS0B,GAClC,EAAKL,MAAMv1D,KAAK,CACZ8lC,QAAS,CACLmwB,QAAS,MACT96D,GAAI,EAAKk6D,SACTtvB,SACAC,UAEJkuB,UACA0B,cAGR,EAAKN,eAAL,UAAsB,EAAKA,sBAA3B,QAA6C9wD,WAAW,EAAKgxD,WAAY,EAAKL,iBAtBxD,kBAuBfe,GAvBe,2CAzE0C,wDAChEtsD,KAAK9f,QAAUA,EACf8f,KAAKnO,IAAMA,EACX,IAAMiY,EAAS,IAAIqQ,IAAItoB,GACvBmO,KAAKwrD,KAAO1hD,EAAO0hD,KACnBxrD,KAAKlS,KAAOgc,EAAOwQ,SAEnBta,KAAKurD,gBAAL,OAAuBA,QAAvB,IAAuBA,IAAmB,MA6FrCgB,EAAb,kDAII,cAAkE,IAAD,EAAnDv7D,EAAmD,EAAnDA,KAAMw7D,EAA6C,EAA7CA,eAA6C,2BAC7D/9D,YAAU+9D,GAA+C,IAA7B7qE,OAAOC,KAAKoP,GAAM3M,OAAc,sDAC5D,cAAM,CAAEooE,kBAAmB9qE,OAAOC,KAAKoP,GAAMlO,KAAI,SAACggC,GAAD,OAAep0B,OAAOo0B,SAL1DooB,eAGgD,IAFzDwhB,oBAEyD,EAI7D,EAAKA,eAAiBF,GAAkB99D,OAAO/M,OAAOC,KAAKoP,GAAM,IACjE,EAAKk6C,UAAYvpD,OAAOC,KAAKoP,GAAMzN,QAA+C,SAACmuB,EAAaxxB,GAE5F,OADAwxB,EAAYhjB,OAAOxO,IAAY,IAAIorE,EAAgB58D,OAAOxO,GAAU8Q,EAAKtC,OAAOxO,KACzEwxB,IACR,IAR0D,EAJrE,0CAeI,WACI,OAAO1R,KAAKkrC,UAAUlrC,KAAK0sD,kBAhBnC,uEAmBI,iHACW,CACH5sC,SAAU9f,KAAKkrC,UAAUlrC,KAAK0sD,gBAC9BxsE,QAAS8f,KAAK0sD,eACdvsE,QAAS,OAJjB,gDAnBJ,gIA2BI,iHACW6f,KAAKkrC,UAAUlrC,KAAK0sD,iBAD/B,gDA3BJ,+HA+BI,iHACW1sD,KAAK0sD,gBADhB,gDA/BJ,+HAmCI,iHACW,MADX,2CAnCJ,8EAuCI,gBAvCJ,GAAsCC,qB,0BD/HhCC,GAA2C,mBAC5C,GAAK/5D,IAAcgT,aAAa,IAAIM,QADQ,cAE5C,IAAMtT,IAAcgT,aAAa,KAAKM,QAFM,GAKpCga,EAAU,IAAIosC,EAAiB,CACxCv7D,KAAM47D,EACNJ,eAAgB,KAKb,SAAS54B,IAAmC,IAAD,EAC9C,OAAQD,EAAc,UAAGA,SAAH,QAAqB9T,YAAWM,EAAQL,UAG3D,IAAM9R,EAAW,IAAI6+C,IAAkB,CAC1CJ,kBAAmB/sC,MAGVvS,EAAa,IAAI2/C,mBAEjBC,EAAkB,IAAIC,IAAuB,CACtDC,IAAKL,EACLH,kBAAmB/sC,IACnBwtC,QAAQ,IAOCC,EAAb,kDAEI,WAAYxhE,GAA2B,uCAC7B,CAAE8gE,kBAAmB9gE,EAAO8gE,oBAH1C,6FAMI,+GACUW,EAAWptD,KAAKqtD,WAD1B,SAGgBrtD,KAAKstD,aAHrB,uCAIc,IAAI1sE,MAAM,2BAJxB,uBAOqCwsE,EAASlxB,QAAQ,CAC9CC,OAAQ,wBARhB,cAOUltB,EAPV,OAWU9uB,EAAUm+C,qBAAWrvB,EAAS,IAE9B6Q,EAAW,IAAIE,IAAaotC,GAbtC,UAe8BttC,EAAS+T,aAfvC,wBAeY3zC,EAfZ,EAeYA,QAGR4/B,EAASA,SAAShR,GAAG,mBAAmB,SAACG,GAEjC9uB,IAAY8uB,EAAS,IACrBV,aAAaM,QAAQ,cAAe,IACpChC,OAAOoB,SAASC,UACW,IAApBe,EAAS5qB,QAChBkqB,aAAaM,QAAQ,cAAe,OAK5CiR,EAASA,SAAShR,GAAG,gBAAgB,SAACy+C,GAE9BA,IAAUrtE,EACV2sB,OAAOoB,SAASC,SAEhBK,aAAaM,QAAQ,cAAe,OAlChD,kBAuCWpB,QAAQ68C,QAAQ,CAAExqC,SAAUA,EAASA,SAAU5/B,UAASC,aAvCnE,iDANJ,8EAgDI,cAhDJ,sBAmDI,WAA2B,IAAD,IACtB,iBACK0sB,OAAe8B,YADpB,SAEK,UAAC9B,OAAekB,gBAAhB,eAA0By/C,SAAW3gD,OAAekB,WAtDjE,yEA0DI,gHAC8B/N,KAAK0M,WADnC,uBACYvsB,EADZ,EACYA,QADZ,kBAEWstB,QAAQ68C,QAAR,OAAgBnqE,QAAhB,IAAgBA,IAAW,OAFtC,gDA1DJ,+HA+DI,gHAC8B6f,KAAK0M,WADnC,mBACYxsB,EADZ,EACYA,QADZ,sBAGc,IAAIU,MAAM,iBAHxB,gCAKW6sB,QAAQ68C,QAAQpqE,IAL3B,gDA/DJ,gIAuEI,gHAC+B8f,KAAK0M,WADpC,uBACYoT,EADZ,EACYA,SADZ,kBAEWrS,QAAQ68C,QAAQxqC,IAF3B,gDAvEJ,+HA4EI,mHACa9f,KAAKqtD,YADlB,gDA5EJ,0HAgFI,wFACIrtD,KAAKytD,aADT,gDAhFJ,mFA2FI,SAAgBC,GACZ,OAAOA,EAAWzrB,eAAe,UAAYyrB,EAAW/pE,OAAS+pE,IA5FzE,2EAgGI,yGAEUh/C,EAAU7B,QAEH8B,KAJjB,0CAKe,GALf,gCASqBD,EAAQC,KAAKg/C,KAAK,gBAAgBtgD,MAAK,SAACqgD,GACjD,OAAI,EAAKE,gBAAgBF,GAAYrpE,OAAS,KAV1D,kGAiBe,GAjBf,yDAhGJ,2DAAyCsoE,qBAuH5B9+C,EAAgB,IAAIs/C,EAAoB,CACjDV,kBAAmB,CAAC,GAAI,Q,+aEvJhBoB,E,QAQL,SAASC,EACZC,EACAvsE,GACqC,IAAD,EACpC,EAA6BvB,cAArBE,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QACXgF,EAAuB,OAAf6oE,QAAe,IAAfA,GAAA,UAAAA,EAAiBroE,gBAAjB,SAA2BC,QAAUooE,EAAgBroE,cAAWnD,EACxEyrE,ECxBH,SAA2B9oE,EAAem1D,EAAgB74D,GAC7D,IAAM6gE,EAAWsB,YAAgB,OAACz+D,QAAD,IAACA,OAAD,EAACA,EAAO7B,SAAS,GAE5CwvC,EAASnxC,mBAAQ,iBAAM,CAAC24D,EAAO74D,KAAU,CAAC64D,EAAO74D,IACjDysE,EAAY/8C,YAAoBmxC,EAAU,YAAaxvB,GAAQlvC,OAE/DuqE,EAAgB31D,YAAY01D,GAE5BE,EAAazsE,mBAAQ,WACvB,OAAKwsE,IAEAD,GAAaC,EAAsBA,EAFbD,IAK5B,CAACA,EAAW/oE,EAAOm1D,EAAO74D,IAE7B,OAAOE,mBACH,kBAAOwD,GAASipE,EAAavqE,IAAeC,cAAcqB,EAAOipE,EAAWjqE,iBAAc3B,IAC1F,CAAC2C,EAAOipE,IDMaC,CAAkBlpE,EAAD,OAAQ/E,QAAR,IAAQA,SAAWoC,EAAWf,GAClE6sE,EAAkB/sE,YAAqB,OAAC4D,QAAD,IAACA,OAAD,EAACA,EAAO7B,QAAS7B,GASxD8sE,GANWrtE,aAAe,SAACD,GAC7B,OAAKA,EAAMmoE,YAAYoF,SAASC,QACzBxtE,EAAMmoE,YAAYoF,SAASE,SAAW,GAAMztE,EAAMmoE,YAAYoF,SAASC,QAD9B,MAKf9sE,mBAAQ,WACzC,OAAKqsE,GAAoBvsE,EACrBusE,EAAgBroE,SAASI,SAAiB+nE,EAAca,SAEvDV,EAGEA,EAAiBltD,SAASitD,GAC3BM,EACIR,EAAcc,QACdd,EAAce,aAClBf,EAAca,SAPUb,EAAcgB,QAHHhB,EAAcgB,UAWxD,CAACd,EAAiBC,EAAkBK,EAAiB7sE,KAElD4mE,EAAgBzE,YAAgB,OAACz+D,QAAD,IAACA,OAAD,EAACA,EAAO7B,SACxCxC,EAAiBb,cAEjB8uE,EAAUxuE,sBAAW,gCAAC,mGACpBguE,IAAkBT,EAAce,aADZ,uBAEpBl+D,QAAQvR,MAAM,oCAFM,6BAKnBe,EALmB,uBAMpBwQ,QAAQvR,MAAM,cANM,6BAUnB+F,EAVmB,uBAWpBwL,QAAQvR,MAAM,YAXM,6BAenBipE,EAfmB,wBAgBpB13D,QAAQvR,MAAM,yBAhBM,8BAoBnB4uE,EApBmB,wBAqBpBr9D,QAAQvR,MAAM,6BArBM,8BAyBnBqC,EAzBmB,wBA0BpBkP,QAAQvR,MAAM,cA1BM,kCA8BpB4vE,GAAW,EA9BS,UA+BG3G,EAAc4G,YAAYF,QAAQttE,EAASilC,KAAYlZ,OAAM,WAGpF,OADAwhD,GAAW,EACJ3G,EAAc4G,YAAYF,QAAQttE,EAASusE,EAAgB52D,SAASjT,eAlCvD,eA+BlB+qE,EA/BkB,yBAqCjB7G,EACF0G,QAAQttE,EAASutE,EAAWhB,EAAgB52D,SAASjT,WAAauiC,IAAY,CAC3EyoC,SAAUnrD,YAAmB7jB,EAAS+uE,KAEzC5hD,MAAK,SAAC9sB,GACHM,EAAeN,EAAU,CACrBC,QAAS,mBAAgButE,EAAgBroE,SAASkf,QAAU,oBAC5DnkB,SAAU,CAAEc,aAAc2D,EAAM7B,QAAS7B,QAASA,QAGzD+rB,OAAM,SAACpuB,GACJuR,QAAQ2vB,MAAM,0BAA2BlhC,OAhDzB,4CAmDzB,CAACmvE,EAAeppE,EAAOkjE,EAAe2F,EAAiBvsE,EAASX,EAAgBX,IAEnF,MAAO,CAACouE,EAAeQ,GAIpB,SAASK,EACZ93D,EACAgvD,GAEA,IAAQnmE,EAAYD,cAAZC,QACFkvE,EAAsBlvE,EAAUgZ,IAAsBhZ,QAAWqC,EAKvE,OAAOurE,EAJiBpsE,mBACpB,kBAAO2V,GAASA,EAAMc,YAAYzS,SAASC,QAAU0R,EAAM0nC,gBAAgBsnB,QAAmB9jE,IAC9F,CAAC8U,EAAOgvD,IAIRnmE,GAAWmX,aAAiBg4D,IAAUD,OAAmC7sE,I,SA9GrEsrE,K,kBAAAA,E,4BAAAA,E,kBAAAA,E,qBAAAA,M,sCEhBZ,mJAGe,SAASt1D,EAAe7U,GAGnC,IAAMsF,EAAMsc,mBAUZ,OAPA5K,qBAAU,WACFhX,GAASsF,EAAIqI,UAAY3N,IACzBsF,EAAIqI,QAAU3N,KAEnB,CAACA,IAGGsF,EAAIqI,QAGR,SAASo2C,EAA4B/jD,GAGxC,IAAMsF,EAAMsc,mBAUZ,OAPA5K,qBAAU,WACFhX,EAAMW,OAAS,IACf2E,EAAIqI,QAAU3N,KAEnB,CAACA,IAGGsF,EAAIqI,QAGR,SAASjN,EAA6BV,GAGzC,IAAMsF,EAAMsc,mBAUZ,OAPA5K,qBAAU,WACFhX,GAAuC,IAA9B/B,OAAOC,KAAK8B,GAAOW,SAC5B2E,EAAIqI,QAAU3N,KAEnB,CAACA,IAGGsF,EAAIqI,QAGR,SAASi+D,EAA8B5rE,GAG1C,IAAMsF,EAAMsc,mBAUZ,OAPA5K,qBAAU,WACFhX,EAAMW,OAAS,IAAMX,EAAM+tB,OAAM,SAACq8B,GAAD,OAAaA,EAAG3uD,WACjD6J,EAAIqI,QAAU3N,KAEnB,CAACA,IAGGsF,EAAIqI,U,wGCzDHs6B,E,wBAJ2C,eAClD54B,IAAQC,IAAM,IAgBZ,SAAS04B,EAAgBxrC,EAAiBq4B,EAActb,GAC3D,IAAMsyD,EAAM,UAAM18D,IAAcgT,aAAa3lB,GAASkmB,kBAEtD,OAAQnJ,GACJ,KAAK0uB,EAAiB8Q,YAClB,MAAM,GAAN,OAAU8yB,EAAV,eAAuBh3C,GAE3B,KAAKoT,EAAiB6jC,MAClB,MAAM,GAAN,OAAUD,EAAV,kBAA0Bh3C,GAE9B,KAAKoT,EAAiB8jC,MAClB,MAAM,GAAN,OAAUF,EAAV,kBAA0Bh3C,GAE9B,KAAKoT,EAAiBC,QAClB,MAAM,GAAN,OAAU2jC,EAAV,oBAA4Bh3C,GAChC,QACI,MAAM,GAAN,OAAUg3C,K,SA7BV5jC,K,0BAAAA,E,cAAAA,E,kBAAAA,E,eAAAA,M,6TCDN+jC,EAA2B,IAAIxnD,IAAQ,GAAI,KAC3CynD,EAAqB,IAAIznD,IAAQ,GAAI,K,8DCiBpC,SAAS0nD,IACZ,OAAO3uE,aAAe,SAACD,GAAD,OAAWA,EAAMyf,QAGpC,SAASovD,IAMZ,IAAMzvE,EAAWC,cAETH,EAAYD,cAAZC,QAIJA,GAAWA,KAAW2S,IAAcgT,cAC3BhT,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,OAGvE,IAAMkrD,EAAsBxvE,uBACxB,SAACu7D,EAAcn2D,GAEXtF,EACIqpC,YAAe,CACXoyB,QACAhzB,WAAYnjC,EAASC,QAAUD,EAASrC,QAAUqC,EAASI,SAAW+M,IAAcgT,aAAa3lB,GAAW6S,IAAQC,KAAKkT,sBAAsBtB,OAAS,QAIpK,CAACxkB,IAqBL,MAAO,CACH2vE,eAnBmBzvE,uBAAY,WAC/BF,EAASspC,iBACV,CAACtpC,IAkBA0vE,sBACA7zD,YAjBgB3b,uBAChB,SAACu7D,EAAcD,GACXx7D,EAAS0vB,YAAU,CAAE+rC,QAAOD,kBAEhC,CAACx7D,IAcD4vE,kBAXsB1vE,uBACtB,SAAC0jC,GACG5jC,EAASwpC,YAAa,CAAE5F,iBAE5B,CAAC5jC,KAYF,SAASg9D,EAAmC15D,EAAgBgC,GAC/D,GAAKhC,GAAUgC,EAGf,IACI,IAAMuqE,EAAmBC,qBAAWxsE,EAAOgC,EAASif,UAAUzgB,WAC9D,GAAyB,MAArB+rE,EACA,OAAOrsE,IAAeC,cAAc6B,EAAU1B,IAAKC,OAAOgsE,IAEhE,MAAO9wE,GAELuR,QAAQ2vB,MAAR,yCAAgD38B,EAAhD,KAA0DvE,IAMlE,IAAMgxE,EAAuD,CACzD,8CAA8C,EAC9C,8CAA8C,EAC9C,8CAA8C,GAI3C,SAASC,IASb,IAAD,YAiDMC,EAKe,EAIwC,EAzDnDlwE,EAAYF,cAAZE,QAER,EAMIyvE,IALArT,EADJ,EACIA,iBACAX,EAFJ,EAEIA,WAC6B0U,EAHjC,EAGK1gD,IAAM2gD,OAAU1nC,WACa2nC,EAJlC,EAIK5gD,IAAM6gD,QAAW5nC,WAClB7E,EALJ,EAKIA,UAIEia,EAAgBwqB,YAAY6H,GAC5BpyB,EAAiBuqB,YAAY+H,GAE7BE,EAAkBzlD,YAAM,OAAC+Y,QAAD,IAACA,SAAazhC,GACtCmkD,EAAiB,UAAkB,OAAd1iB,EAAqB7jC,EAAUuwE,EAAgBrtE,eAAnD,QAA+D,KAEhFstE,EAAwBnrE,YAAmB,OAACrF,QAAD,IAACA,SAAWoC,EAAW,QACpE07C,QADoE,IACpEA,SAAiB17C,EADmD,OAEpE27C,QAFoE,IAEpEA,SAAkB37C,IAGhBquE,EAAqBrU,IAAqB3sC,IAAM2gD,MAChDM,EAAezT,EAAexB,EAAD,UAAcgV,EAAY3yB,EAAgBC,SAA1C,aAA6D37C,GAS1FuuE,EAAqBj6D,YAAsB+5D,EAAYC,OAAetuE,EAA5B,OAAuC27C,QAAvC,IAAuCA,SAAkB37C,GACnGwuE,EAAsBv4D,YAAsB,OAACylC,QAAD,IAACA,SAAiB17C,EAAYquE,OAA2BruE,EAAfsuE,GAGtFG,EAAO,UAAIJ,EAAYE,EAAqBC,SAArC,aAA6DxuE,EAEpEq6D,GAAgB,mBACjBhtC,IAAM2gD,MAAQI,EAAsB,IADnB,cAEjB/gD,IAAM6gD,OAASE,EAAsB,IAFpB,GAKhBlrE,GAA2C,mBAC5CmqB,IAAM2gD,MADsC,OAC9BtyB,QAD8B,IAC9BA,SAAiB17C,GADa,cAE5CqtB,IAAM6gD,OAFsC,OAE7BvyB,QAF6B,IAE7BA,SAAkB37C,GAFW,IAM5CpC,IACDkwE,EAAa,yBAGZQ,KACDR,EAAU,UAAGA,SAAH,QAAiB,0BAG1B5qE,EAAWmqB,IAAM2gD,QAAW9qE,EAAWmqB,IAAM6gD,UAC9CJ,EAAU,UAAGA,SAAH,QAAiB,yBAG/B,IAQM,EAPmB,EADnBY,EAAcluE,YAAU2jD,GACzBA,GAAOuqB,EAIJd,EAAwBc,KAIxBZ,EAAU,UAAGA,SAAH,QAAiB,4BAP/BA,EAAU,UAAGA,SAAH,QAAiB,2BAW/B,IAAMa,EAAY,UAAGF,EAAQ35D,aAAX,aAAoB9U,EAChC8jE,EDxLK,SACXhvD,GAEA,IAAM+uD,EAA2B1kE,mBAAQ,WACrC,OAAK2V,EACEq4D,EADYC,IAEpB,CAACt4D,IACJ,OAAO8uD,YAAoCC,GCiLnB+K,CAAyBD,GAGjD,EAA8B,CAACtU,EAAiBhtC,IAAM2gD,OAAxB,OAAgCW,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAcnyB,gBAAgBsnB,IAArF+K,EAAP,KAAkBt6D,EAAlB,KAMA,OAJIs6D,GAAat6D,GAAYs6D,EAAUtwD,SAAShK,KAC5Cu5D,EAAa,oCAAiBv5D,EAASpR,SAASkf,UAG7C,CACHnf,aACAm3D,mBACAiU,eACAR,aACAgB,aAAS9uE,EACT+uE,aAAcN,EACdE,eACA7K,mBAIR,SAASkL,EAA8BC,EAAetxE,GAClD,IAAI4oC,EAMJ,GAJI5oC,GAAWA,KAAW2S,IAAcgT,eACpCijB,EAAcj2B,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,QAGpD,kBAAb4sD,EAAuB,CAC9B,IAAM94D,EAAQ3V,YAAUyuE,GACxB,GAAI94D,EAAO,OAAOA,EAClB,GAAI84D,EAAS5nD,gBAAkBkf,EAAa,OAAOA,EAEvD,MAAO,GAWX,IAAMqL,EAAiB,qFACjBs9B,EAAgB,sBAWf,SAASC,EAA2BC,EAAoBzxE,GAA6B,IAAD,EACnF+9C,EAAgBszB,EAA8BI,EAAS1zB,cAAe/9C,GACtEg+C,EAAiBqzB,EAA8BI,EAASzzB,eAAgBh+C,GACtD,KAAlB+9C,GAA2C,KAAnBC,EAEpBh+C,GAAWA,KAAW2S,IAAcgT,eACpCo4B,EAAgBprC,IAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,QAEvEq5B,IAAkBC,IAEzBA,EAAiB,IAGrB,IAjCkCszB,EAiC5BxtC,EAtBV,SAA4BA,GACxB,MAAyB,kBAAdA,EAA+B,KAC1BjhC,YAAUihC,KAEtBmQ,EAAe73B,KAAK0nB,IACpBytC,EAAcn1D,KAAK0nB,GADoBA,EAEpC,MAgBW4tC,CAAmBD,EAAS3tC,WAE9C,OAAO,EAAP,iBACKpU,IAAM2gD,MAAQ,CACX1nC,WAAYoV,IAFpB,cAIKruB,IAAM6gD,OAAS,CACZ5nC,WAAYqV,IALpB,2BAlC2B,kBADOszB,EA0CWG,EAASE,cAzCdC,MAAMn9C,WAAW68C,IAAwB,GAAXA,GAkCtE,iCA/BJ,SAA2CA,GACvC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAAStsD,cAA6B0K,IAAM6gD,OAAS7gD,IAAM2gD,MAsC5EwB,CAAkCJ,EAASK,aARjE,0BASIhuC,GATJ,EAcG,SAASiuC,IAGZ,IAAQ/xE,EAAYD,cAAZC,QACFE,EAAWC,cACXsxE,EAAW33D,cACjB,EACInS,qBADJ,mBAAOlE,EAAP,KAAeuuE,EAAf,KAwBA,OArBAx3D,qBAAU,WACN,GAAKxa,EAAL,CACA,IAAM4pB,EAAS4nD,EAA2BC,EAAUzxE,GAEpDE,EACIupC,YAAiB,CACbiyB,WAAY9xC,EAAO8xC,WACnBC,MAAO/xC,EAAOyyC,iBACd+T,gBAAiBxmD,EAAO8F,IAAM2gD,OAAO1nC,WACrC2nC,iBAAkB1mD,EAAO8F,IAAM6gD,QAAQ5nC,WACvC7E,UAAWla,EAAOka,aAI1BkuC,EAAU,CACN5B,gBAAiBxmD,EAAO8F,IAAM2gD,OAAO1nC,WACrC2nC,iBAAkB1mD,EAAO8F,IAAM6gD,QAAQ5nC,gBAG5C,CAACzoC,EAAUF,IAEPyD,I,0ICpSCyR,E,gGAFN+8D,EAAuB,IAAIttE,IAAU6gC,GASpC,SAASxwB,EACZk9D,GAEA,IAAQlyE,EAAYD,cAAZC,QAEFmyE,EAAyC3wE,mBAAQ,WACnD,OAAO0wE,EAAStvE,KAAI,YAA6B,IAAD,mBAA1B0Q,EAA0B,KAAfC,EAAe,KAC5C,IAAKvT,IAAYsT,IAAcC,EAAW,OAAO,KAEjD,IAAMC,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAW/F,QACpBkG,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAWhG,QAC1B,IAAKiG,IAAWC,GAAUD,EAAOxF,OAAOyF,GAAS,OAAO,KACxD,MAAyBD,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBACA,MAAO,CADP,gBAGL,CAACxT,EAASkyE,IAEPE,EAAwC5wE,mBAAQ,WAClD,IAAM6wE,EAAsBryE,GAAW4Y,IAAsB5Y,GAE7D,OAAOmyE,EAAYvvE,KAAI,SAACY,GACpB,GAAK6uE,GAAwB7uE,EAC7B,OAAOqe,YAAmB,CACtB8nB,aAAc0oC,EACd7+D,OAAQhQ,EAAM,GACdiQ,OAAQjQ,EAAM,UAGvB,CAACxD,EAASmyE,IAEPG,EAAgBztE,YAA8ButE,EAAeH,EAAsB,eACnFM,EAAoBnD,YAA2BkD,GAE/CE,EAAiBhxE,mBAAQ,WAE3B,OAAK+wE,GAAsBD,GAA0C,IAAzBA,EAAcnuE,QAEtDmuE,EAAc/gD,OAAM,SAAAq8B,GAAE,OAAIA,EAAG3uD,WAAWszE,EAAkBhhD,OAAM,SAAAq8B,GAAE,OAAIA,EAAG3uD,SAAeszE,EAFbD,IAMhF,CAACF,EAAeE,IAEbG,EAAc5tE,YAA8ButE,EAAeH,EAAsB,aACjFS,EAAkBtD,YAA2BqD,GAE7CE,EAAenxE,mBAAQ,WAEzB,OAAKkxE,GAAoBD,GAAsC,IAAvBA,EAAYtuE,QAEhDsuE,EAAYlhD,OAAM,SAAAq8B,GAAE,OAAIA,EAAG3uD,WAAWyzE,EAAgBnhD,OAAM,SAAAq8B,GAAE,OAAIA,EAAG3uD,SAAeyzE,EAFfD,IAM1E,CAACL,EAAeK,IAEnB,OAAOjxE,mBAAQ,WACX,OAAO0wE,EAAStvE,KAAI,SAACgwE,EAAMllE,GAAW,IAAD,EACjC,YAAyBykE,EAAYzkE,UAArC,QAA+C,GAA/C,mBAAOK,EAAP,KAAeE,EAAf,KACA,IAAKF,IAAWE,EAAQ,MAAO,CAACiH,EAAUkC,QAAS,MAEnD,MAIIo7D,EAAe9kE,GAHPmlE,EADZ,EACIpvE,OACSqvE,EAFb,EAEI1tE,QACO2tE,EAHX,EAGIv6D,MAEJ,EAIIm6D,EAAajlE,GAHLiQ,EADZ,EACIla,OACSuvE,EAFb,EAEI5tE,QACO6tE,EAHX,EAGIz6D,MAGJ,IAAKu6D,IAAqBE,EAAgB,MAAO,CAAC/9D,EAAUkC,QAAS,MACrE,GAAI07D,GAAsBE,EAAkB,MAAO,CAAC99D,EAAUE,QAAS,MAEvE,IAAKy9D,IAAgBl1D,EAAW,MAAO,CAACzI,EAAU2nD,WAAY,MAE9D,IAAKgW,EAAYt7C,OAASs7C,EAAYt7C,MAAM27C,GAAG,GAAI,MAAO,CAACh+D,EAAU2nD,WAAY,MAEjF,IACI,MAAO,CAAC3nD,EAAUC,OAAQ,IAAI+J,IAAKnR,EAAQE,EAAQ4kE,EAAYr9D,IAAKq9D,EAAYt7C,MAAO5Z,EAAU,GAAIk1D,EAAYxkE,OACnH,MAAOpP,GACL,MAAO,CAACiW,EAAU2nD,WAAY,YAGvC,CAAC8V,EAAcT,EAAUM,EAAgBL,IAGzC,SAASxV,EACZrpD,EACAC,GAQA,OAAOyB,EAL0DxT,mBAC7D,iBAAM,CAAC,CAAC8R,EAAWC,MACnB,CAACD,EAAWC,KAGU,I,SAzGlB2B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,wXCdNi+D,EAAS,I,OAAIC,UAASzmD,OAAOpD,UAAU8pD,WACrCt2D,EAASo2D,EAAOG,YAAhBv2D,KAIKhQ,GAFYomE,EAAOI,YAEC,WAATx2D,GAA8B,WAATA,GCFvCy2D,EAA0C,iBAO5CnkC,IAAQokC,WAAWD,EAAqB,CACpCE,UAAW,CACPC,QAAS,OACTC,UAAU,KAGlBvkC,IAAQljC,IAAI,CACR0nE,aAAa,EACbC,kBAAoB/mE,EAEd,SAAU4f,QAAU,aAAcA,OAC9B,aACA,gBAHJ,YASdonD,IAAWN,WAvBY,CACnBO,MAAO,gB,kHCHLC,EAA8B,CAChC,6CACA,6CACA,6CACA,6CACA,8CAGW,SAASC,EAAT,GAA2D,IAAtC/xE,EAAqC,EAArCA,SACxBlC,EAAYF,cAAZE,QAER,OADyBuB,mBAAQ,kBAAMuQ,QAAQ9R,IAAmD,IAAxCg0E,EAAkB7xB,QAAQniD,MAAkB,CAACA,IAG/F,8BACI,4CAIL,mCAAGkC,I,mDCZRgyE,EAAwB,CAC1B,Q,OAASC,G,sDAGb,WAA+B/qD,GAA/B,mGAC+B,OAAO,YAA4BA,EAAnC,QAD/B,gBACYgrD,EADZ,EACYA,SACRC,IAAKC,eAAelrD,EAAQ,CAAE8qD,QAAS,kBAAMA,EAAQ9qD,MACrDirD,IAAKE,KAAKnrD,EAAQgrD,GAClBC,IAAK9nD,SAASnD,GAJlB,4C,sBAOO,SAASorD,EAAT,GAAkE,IAAtCtyE,EAAqC,EAArCA,SAC/BwnB,cACA,IAAMN,EAASa,cACf,EAA4BviB,oBAAS,GAArC,mBAAO+sE,EAAP,KAAeC,EAAf,KAaA,OAXAn6D,qBAAU,Y,4CACNo6D,CAAgBvrD,GACX8D,MAAK,WACFwnD,GAAU,MAEbtnD,OAAM,SAACpuB,GACJuR,QAAQvR,MAAM,4BAA6BoqB,EAAQpqB,QAE5D,CAACoqB,IAGCqrD,EAGD,cAAC,IAAD,CAAcG,2BAA2B,EAAOP,KAAMA,IAAtD,SACKnyE,IAJW,K,6BChCT,SAAS2yE,IAEpB,OAGJ,WACI,IAAM50E,EAAWC,cACT40E,EAAQj7D,cAARi7D,IAERv6D,qBAAU,WACa,kBAARu6D,IACC,KAARA,GAAoC,SAAtBA,EAAI/vD,eAClB9kB,EAASklE,YAAqB,CAAEF,gBAAgB,SAXxD8P,GACO,K,0ECNEC,EAAkBn3E,UAAOC,IAAV,wCAAGD,CAAH,iFAOfiuC,EAAcjuC,UAAOC,IAAV,wCAAGD,CAAH,8BAIXo3E,EAAmBp3E,UAAOC,IAAV,wCAAGD,CAAH,2NACb,cAAGG,MAAH,MAAe,gBAOpB,cAAGA,MAAH,MAAe,kBAEbk3E,EAA4Br3E,UAAOC,IAAV,wCAAGD,CAAH,uBCZjBs3E,E,kDACjB,WAAYhuE,GAAiB,IAAD,8BACxB,cAAMA,IACDtG,MAAQ,CAAE7B,MAAO,MAFE,E,qDAS5B,SAAkBA,EAAco2E,GAC5B7kE,QAAQ8nB,IAAIr5B,GACZowC,IAAQimC,UAAR,uCACOr2E,GACAo2E,GAFP,IAGIE,OAAO,O,oBAIf,WACI,IAAQt2E,EAAU6gB,KAAKhf,MAAf7B,MACR,OAAc,OAAVA,EAEI,cAACg2E,EAAD,UACI,cAAClpC,EAAD,UACI,eAAC,IAAD,CAAYjX,IAAK,KAAjB,UACI,cAACqgD,EAAD,UACI,cAAC,IAAKv2C,MAAN,CAAYnjB,SAAU,GAAIwZ,WAAY,IAAtC,SACI,mDAGR,cAACigD,EAAD,UACI,+BACI,cAAC,IAAKx2C,KAAN,CAAWjjB,SAAU,GAArB,SAA0Bxc,EAAMu2E,mBAQrD11D,KAAK1Y,MAAMjF,Y,uCAnCtB,SAAgClD,GAC5B,MAAO,CAAEA,a,GAP0B6c,IAAM25D,W,SCXlC,MAA0B,sC,uCCA1B,OAA0B,wCCA1B,OAA0B,iDCmB5BC,GAAmD,CAC5DC,SAAU,CACNvnD,UAAWN,KACXzlB,KAAM,WACNutE,QAASC,GACTvuD,YAAa,0BACb0S,KAAM,KACN7G,MAAO,UACP2iD,SAAS,GAEbC,SAAU,CACN3nD,UAAWN,KACXzlB,KAAM,WACNutE,QAASI,KACT1uD,YAAa,GACb0S,KAAM,KACN7G,MAAO,WAEX8iD,eAAgB,CACZ7nD,UAAWy+C,KACXxkE,KAAM,iBACNutE,QAASM,GACT5uD,YAAa,6BACb0S,KAAM,KACN7G,MAAO,YACPtoB,QAAQ,I,oGCtCD,SAASsrE,GAAW/uE,GAC/B,MCJW,WAA+E,IAArDkmB,EAAoD,uDAA1C,IAC/C,EAAgC3lB,oBAAS,GAAzC,mBAAOyuE,EAAP,KAAiBC,EAAjB,KAEMC,EAAal2E,uBAAY,SAAC+I,GAC5B,IAAMotE,EAAUC,KAAKrtE,GACrBktE,EAAYE,KACb,IAeH,OAbA/7D,qBAAU,WACN,GAAI47D,EAAU,CACV,IAAMK,EAAO/7D,YAAW,WACpB27D,GAAY,KACb/oD,GAEH,OAAO,WACH3S,aAAa87D,OAItB,CAACL,EAAUC,EAAa/oD,IAEpB,CAAC8oD,EAAUE,GDjBYI,GAA9B,mBAAON,EAAP,KAAiBO,EAAjB,KAEA,OACI,yBAAQr0E,UAAW,wCAAyCwK,QAAS,kBAAM6pE,EAAUvvE,EAAMwvE,SAA3F,UACKR,EACG,uBAAM9zE,UAAW,gBAAjB,UACI,cAAC,KAAD,CAAapD,KAAM,OAAQ+5B,OAAQ,mBACnC,sBAAM32B,UAAW,SAAjB,SACI,sCAIR,sBAAMA,UAAW,SAAjB,SACI,cAAC,KAAD,CAAMpD,KAAM,OAAQ+5B,OAAQ,qBAGpC,sBAAM32B,UAAW,aAAjB,SACK8zE,EAAW,GAAKhvE,EAAMjF,c,IExBnC00E,GAAOC,G,uCCUI,SAASC,GAAT,GAAkD,IAAD,IAA1Bt2E,EAA0B,EAA1BA,KAC1BT,EAAYD,cAAZC,QACFuB,EAAkBV,eAClBX,EAAWC,cAEXyB,EAAE,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAkBd,GACvBH,EAAO,OAAGsB,QAAH,IAAGA,OAAH,EAAGA,EAAItB,QACdlD,IAAU,OAACwE,QAAD,IAACA,KAAIT,SACf08B,GAAWzgC,GAAWwE,IAA8B,KAAvB,UAAAA,EAAGT,eAAH,eAAY4qE,SAA8C,qBAA9B,UAAOnqE,EAAGT,eAAV,aAAO,EAAY4qE,SAElF,OAAK/rE,EAGD,eAAC,IAAD,CACIg6B,KAAMwR,aAAgBxrC,EAASS,EAAMgrC,KAAiB8Q,aAD1D,UAGI,uBAAMj6C,UAAW,aAAjB,iBAAgChC,QAAhC,IAAgCA,IAAWG,EAA3C,aACA,sBAAK6B,UAAW,IAAhB,UACI,qBAAKA,UAAS,YAAOlF,EAAU,IAAMygC,EAAU,IAAM,IAAvC,eAAd,SACKzgC,EAAU,cAACqoD,GAAA,EAAD,IAAa5nB,EAAU,cAAC,KAAD,CAAa3+B,KAAK,SAAY,cAAC,KAAD,CAAUA,KAAK,WAEnF,qBAAKoD,UAAW,wBAAyBwK,QAAS,SAACwY,GAC/CA,EAAEqV,iBACFz6B,EAAS0G,aAAoB,CAAE5G,UAASS,WAF5C,SAII,cAAC,KAAD,CAAGvB,KAAM,eAfJ,KDlBzB,IAAIuiD,GAAY,CAAC,QAAS,WAE1B,SAASC,KAAiS,OAApRA,GAAWjgD,OAAOkgD,OAASlgD,OAAOkgD,OAAOv1C,OAAS,SAAUqQ,GAAU,IAAK,IAAIlZ,EAAI,EAAGA,EAAIq+C,UAAUz9C,OAAQZ,IAAK,CAAE,IAAIs+C,EAASD,UAAUr+C,GAAI,IAAK,IAAIqJ,KAAOi1C,EAAcpgD,OAAOqgD,UAAUC,eAAe9vC,KAAK4vC,EAAQj1C,KAAQ6P,EAAO7P,GAAOi1C,EAAOj1C,IAAY,OAAO6P,GAAkBilC,GAASM,MAAMliC,KAAM8hC,WAEtU,SAASK,GAAyBJ,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAAkEj1C,EAAKrJ,EAAnEkZ,EAEzF,SAAuColC,EAAQK,GAAY,GAAc,MAAVL,EAAgB,MAAO,GAAI,IAA2Dj1C,EAAKrJ,EAA5DkZ,EAAS,GAAQ0lC,EAAa1gD,OAAOC,KAAKmgD,GAAqB,IAAKt+C,EAAI,EAAGA,EAAI4+C,EAAWh+C,OAAQZ,IAAOqJ,EAAMu1C,EAAW5+C,GAAQ2+C,EAASE,QAAQx1C,IAAQ,IAAa6P,EAAO7P,GAAOi1C,EAAOj1C,IAAQ,OAAO6P,EAFxM4lC,CAA8BR,EAAQK,GAAuB,GAAIzgD,OAAO6gD,sBAAuB,CAAE,IAAIC,EAAmB9gD,OAAO6gD,sBAAsBT,GAAS,IAAKt+C,EAAI,EAAGA,EAAIg/C,EAAiBp+C,OAAQZ,IAAOqJ,EAAM21C,EAAiBh/C,GAAQ2+C,EAASE,QAAQx1C,IAAQ,GAAkBnL,OAAOqgD,UAAUU,qBAAqBvwC,KAAK4vC,EAAQj1C,KAAgB6P,EAAO7P,GAAOi1C,EAAOj1C,IAAU,OAAO6P,EAMne,SAASu6D,GAAKt0B,EAAMC,GAClB,IAAIt7B,EAAQq7B,EAAKr7B,MACbu7B,EAAUF,EAAKE,QACfx7C,EAAQ66C,GAAyBS,EAAMjB,IAE3C,OAAoB,gBAAoB,MAAOC,GAAS,CACtDqB,MAAO,6BACP58C,MAAO,GACPunC,OAAQ,GACRmV,QAAS,YACTC,KAAM,OACN7pB,OAAQ,eACRqjB,YAAa,EACbwtB,cAAe,QACfC,eAAgB,QAChBznE,UAAW,oBACXwG,IAAK65C,EACL,kBAAmBC,GAClBx7C,GAAQigB,EAAqB,gBAAoB,QAAS,CAC3DhW,GAAIuxC,GACHv7B,GAAS,KAAMwvD,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3EI,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,MACDN,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEG,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,OAIR,I,GAAIn0B,GAA0B,aAAiB+zB,I,IAChC,I,4BE5CFK,GAA2Bv5E,UAAOC,IAAV,wCAAGD,CAAH,4EAIb,cAAGG,MAAH,MAAe,gBAEjC,qBAAGA,MAAkBC,WAAWuB,UAA/B,KAAD,yDCHS,SAAS63E,KACpB,IAAMxuE,EAAMsc,mBAEJnlB,EAAYF,cAAZE,QAUR,OARAua,qBAAU,WACFva,GAAW6I,EAAIqI,UACfrI,EAAIqI,QAAQomE,UAAY,GACxBzuE,EAAIqI,QAAQqmE,YAAYC,KAAS,GAAInmE,SAASrR,EAAQ8Q,MAAM,EAAG,IAAK,SAEzE,CAAC9Q,IAGG,cAACo3E,GAAD,CAA0BvuE,IAAKA,I,gCCwH7BiwB,IApIYj7B,UAAOC,IAAV,wCAAGD,CAAH,0DAChB,qBAAGG,MAAkBugC,iBAGd,SAACp3B,GAAD,MAA4B,SAAhBA,EAAM+rB,MAAmB,cAAGl1B,MAAH,MAAe,mBAAoB,aAC/E,qBAAGA,MAAkBC,WAAW8M,WAA/B,QAAD,gDAIsBlN,UAAOC,IAAV,wCAAGD,CAAH,6JAmBDA,UAAOC,IAAV,wCAAGD,CAAH,+HAEG,cAAGG,MAAH,MAAe,gBAOLH,UAAOC,IAAV,wCAAGD,CAAH,iHACzB,qBAAGG,MAAkBugC,iBAId,cAAGvgC,MAAH,MAAe,kBAGlB,qBAAGA,MAAkBugC,iBAID1gC,UAAOC,IAAV,wCAAGD,CAAH,yBAErB,qBAAGG,MAAkBC,WAAW8M,WAA/B,KAAD,0DAEqBlN,UAAOC,IAAV,wCAAGD,CAAH,yEAWIA,UAAOC,IAAV,wCAAGD,CAAH,2LACnB,qBAAGG,MAAkBsgC,oBAWV,cAAGtgC,MAAH,MAAe,kBAGFH,UAAOC,IAAV,wCAAGD,CAAH,6OAsBAA,kBAAO88B,KAAV,wCAAG98B,CAAH,uFAEX,cAAGG,MAAH,MAAe,kBAQHH,UAAOC,IAAV,wCAAGD,CAAH,gFAUIA,kBAAO45E,IAAV,yCAAG55E,CAAH,uBAEL,cAAGG,MAAH,MAAe,kBAGPH,UAAOC,IAAV,yCAAGD,CAAH,qEAMIA,UAAOC,IAAV,yCAAGD,CAAH,4GAClB,qBAAGG,MAAkBsgC,oBAOT,gBAAGr/B,EAAH,EAAGA,KAAH,OAAeA,EAAOA,EAAO,KAAO,UACrC,gBAAGA,EAAH,EAAGA,KAAH,OAAeA,EAAOA,EAAO,KAAO,UAG/C,qBAAGjB,MAAkBC,WAAW8M,WAA/B,KAAD,4DAOO2sE,IAHyB75E,UAAOC,IAAV,yCAAGD,CAAH,UAC7B,qBAAGG,MAAkBsgC,oBAECzgC,kBAAO6sE,MAAV,yCAAG7sE,CAAH,6I,IAYOA,kBAAO65E,IAAV,yCAAG75E,CAAH,gBAChB,cAAGG,MAAH,MAAe,qBAIJH,kBAAOo7B,KAAV,yCAAGp7B,CAAH,yIACR,cAAGG,MAAH,MAAe,kBAUX,cAAGA,MAAH,MAAe,kBAGKH,UAAOc,KAAV,yCAAGd,CAAH,kFAG5B,qBAAGG,MAAkBugC,iBAMO1gC,UAAOC,IAAV,yCAAGD,CAAH,MACOA,UAAOC,IAAV,yCAAGD,CAAH,4FASHA,kBAAO88B,KAAV,yCAAG98B,CAAH,wLAShB,cAAGG,MAAH,MAAe,6BAEIH,UAAOC,IAAV,yCAAGD,CAAH,6CAChB,gBACTV,EADS,EACTA,QACAygC,EAFS,EAETA,QAFS,EAGT5/B,MAHS,OAINb,EAAU,kBAAoBygC,EAAU,gBAAkB,iBAInC//B,UAAOC,IAAV,yCAAGD,CAAH,4CAGd,cAAGG,MAAH,MAAe,iBAEAH,UAAOC,IAAV,yCAAGD,CAAH,6B,qDCnOV,SAAS85E,KACpB,MAA6BhT,eAA7B,mBAAOiT,EAAP,KAAmBjtD,EAAnB,KAEA,EAAkCjjB,oBAAS,GAA3C,mBAAOmwE,EAAP,KAAkBC,EAAlB,KAEAv9D,qBAAU,WACN,IAAMw9D,EAAOxyD,SAASyyD,gBAClBJ,EACAG,EAAKE,UAAUzoE,IAAI,cAEnBuoE,EAAKE,UAAUC,OAAO,gBAE3B,CAACN,IAOJ,OACI,uBAAOv1E,UAAW,iBAAkB81E,QAAQ,SAA5C,SACI,sBAAK91E,UAAS,iBAAYw1E,EAAY,UAAY,YAAlD,UACI,sBAAMx1E,UAAU,SAAhB,SAA0Bw1E,EAAY,oBAAsB,qBAC5D,sBAAKx1E,UAAU,QAAf,UACI,cAAC,KAAD,IACA,cAAC,KAAD,OAEJ,uBAAO+O,GAAG,SAAShJ,KAAK,SAAS0U,KAAK,WAAW8N,QAASitD,EAAWhrE,QAb7D,WAChBirE,GAAa,SAACM,GAAD,OAAgBA,KAC7BztD,YCAR,SAAS0tD,GAAmBt3E,GACxB,OACI,8BACKA,EAAa4B,KAAI,SAACnC,EAAM8C,GACrB,OACI,qBAAKjB,UAAW,SAAhB,SACI,cAACy0E,GAAD,CAAat2E,KAAMA,KADQ8C,QAiBpC,SAASg1E,GAAT,GAA0H,IAAhGC,EAA+F,EAA/FA,kBAAmBC,EAA4E,EAA5EA,oBAAqBC,EAAuD,EAAvDA,sBAAuBptD,EAAgC,EAAhCA,QACpG,EAAoDvrB,cAA5CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASmuB,EAA1B,EAA0BA,UAAWm/C,EAArC,EAAqCA,WAC/BrtE,EAAWC,cAejB,SAASw4E,IACL,OAAIvqD,IAAcN,KAEV,cAACiL,GAAD,CAAa75B,KAAM,GAAnB,SACI,cAACo4E,GAAD,MAIL,KAGX,IAAMsB,EAA+Bx4E,uBAAY,WACzCJ,GAASE,EAASyG,aAAqB,CAAE3G,eAC9C,CAACE,EAAUF,IAER64E,EAAoBz4E,uBAAY,WAC9BguB,aAAqB6+C,MACrBM,IAEHn/C,EAAkB3kB,UACpB,IAEH,OACI,qCACI,sBAAKnH,UAAW,QAAhB,UACI,sBAAKA,UAAW,4BAAhB,UACI,kCACA,sBAAKA,UAAU,SAAf,UACI,sBAAMA,UAAU,kCAAhB,SACI,cAAC,GAAD,MAEJ,sBAAMA,UAAW,0BAA2BwK,QAAS0rE,EAArD,SACI,cAAC,GAAD,YAIZ,sBAAKl2E,UAAW,kCAAhB,UACI,sBAAKA,UAAW,eAAhB,UAlDhB,WACI,IAAQurB,EAAalB,OAAbkB,SACFkuB,KAAgBluB,IAAYA,EAASkuB,YACrC1zC,EAAO5G,OAAOC,KAAKg0E,IACpB5yE,QAAO,SAAC8/B,GAAD,OAAO8yC,GAAkB9yC,GAAGxU,YAAcA,IAAcA,IAAcN,MAAYiuB,KAAsB,aAANnZ,OACzGhgC,KAAI,SAACggC,GAAD,OAAO8yC,GAAkB9yC,GAAGv6B,QAAM,GAC3C,OACI,qBAAK/F,UAAS,iBAAqB,aAAT+F,GAAuB,SAAjD,SACI,2DAAuBA,OA2CdywE,GACA1qD,IAAcN,KACX,cAAC6pD,GAAD,CAAc7qE,QAAS,kBAAM+rE,KAA7B,SACI,uCAEJ,QAER,qBAAKv2E,UAAW,iBAAkB+O,GAAG,8BAArC,SACKia,EACG,qCACKqtD,IACD,kCAAKrtD,QAGT,qCACKqtD,IACD,kCAAK14E,GAAWuiE,aAAeviE,WAI3C,qBAAKqC,UAAW,IAAhB,SACKgpB,EACG,qCACKrrB,GACG,cAAC,GAAD,CAAM22E,OAAQ32E,EAAd,SACI,yCAGPD,GAAWC,GACR,eAAC,IAAD,CAAc+5B,KAAMwR,aAAgBxrC,EAASsrB,EAASmgB,KAAiBC,SAAvE,UACI,cAAC,KAAD,CAAUxsC,KAAM,OAAQi0B,MAAM,mBAC9B,sBAAM7wB,UAAW,wBAAjB,SACI,mDAMhB,qCACKrC,GACG,cAAC,GAAD,CAAM22E,OAAQ32E,EAAd,SACI,yCAGPD,GAAWC,GACR,eAAC,IAAD,CAAc+5B,KAAMwR,aAAgBxrC,EAASC,EAASwrC,KAAiBC,SAAvE,UACI,cAAC,KAAD,CAAUxsC,KAAM,OAAQi0B,MAAM,mBAC9B,sBAAM7wB,UAAW,wBAAjB,SACI,2DAS7Bm2E,EAAoBt0E,QAAYu0E,EAAsBv0E,OACrD,eAAClC,GAAA,EAAD,CAAMG,QAAM,EAACF,QAAS,iBAAtB,UACI,sBAAKI,UAAW,2BAAhB,UACI,8CACA,wBAAQA,UAAW,+BAAgCwK,QAAS8rE,EAA5D,SACI,2CAGPN,GAAmBG,GACnBH,GAAmBI,MAGxB,cAACz2E,GAAA,EAAD,CAAMG,QAAM,EAACF,QAAS,iCAAtB,SACI,qE,mCCnJP2/B,IAdY/jC,UAAOC,IAAV,wCAAGD,CAAH,gFASIA,kBAAO45E,IAAV,wCAAG55E,CAAH,2BAKAA,UAAOC,IAAV,wCAAGD,CAAH,wCAChB,qBAAGG,MAAkBsgC,qBA0CZw6C,IArCYj7E,UAAOC,IAAV,wCAAGD,CAAH,8DAClB,qBAAGG,MAAkBugC,iBAIrB,qBAAGvgC,MAAkBC,WAAW8M,WAA/B,QAAD,gDAI0BlN,UAAOC,IAAV,wCAAGD,CAAH,oIAMvB,qBAAGG,MAAkBC,WAAW8M,WAA/B,QAAD,iDAEwBlN,UAAOC,IAAV,wCAAGD,CAAH,2JAoBCA,UAAOC,IAAV,wCAAGD,CAAH,qCAGnB,qBAAGG,MAAkBC,WAAW8M,WAA/B,QAAD,mFAiBEguE,IAZmBl7E,UAAOC,IAAV,wCAAGD,CAAH,4FAEX,cAAGG,MAAH,MAAe,kBAUTH,UAAOE,OAAV,wCAAGF,CAAH,qJACQ,cAAGG,MAAH,SAAUquB,OAAuB,aAAe,oBAO1C,cAAGruB,MAAH,MAAe,6BAGrB,cAClBA,MADkB,EAElBquB,OAFkB,MAGN,qBAEV2sD,GAAan7E,kBAAOk7E,IAAV,wCAAGl7E,CAAH,oHAqBHo7E,IAbiBp7E,UAAOC,IAAV,yCAAGD,CAAH,6CACvB,qBAAGG,MAAkBsgC,oBAIUzgC,kBAAOm7E,IAAV,yCAAGn7E,CAAH,8DAGlB,qBAAGM,UAA6B,UAAY,MAC5C,qBAAGA,UAA0B,mCAE9B,qBAAG+6B,SAA2B,MAAQ,OAExBr7B,UAAOC,IAAV,yCAAGD,CAAH,gJACpB,qBAAGG,MAAkBugC,iBAQD,cAAGvgC,MAAH,MAAe,oBAI1Bk7E,GAAgBr7E,UAAOC,IAAV,yCAAGD,CAAH,uEACf,cAAGG,MAAH,MAAe,mBAgBb86B,IAXaj7B,UAAOC,IAAV,yCAAGD,CAAH,mDACnB,qBAAGG,MAAkBugC,iBACd,SAACp3B,GAAD,MAA4B,SAAhBA,EAAM+rB,MAAmB,cAAGl1B,MAAH,MAAe,mBAAoB,cAAGA,MAAH,MAAe,mBAIzEH,UAAOC,IAAV,yCAAGD,CAAH,+CACX,cAAGG,MAAH,MAAe,kBAICH,UAAOC,IAAV,yCAAGD,CAAH,2FACpB,qBAAGG,MAAkBsgC,oBAKX,gBAAGr/B,EAAH,EAAGA,KAAH,OAAeA,EAAOA,EAAO,KAAO,UACrC,gBAAGA,EAAH,EAAGA,KAAH,OAAeA,EAAOA,EAAO,KAAO,UAE7C,qBAAGjB,MAAkBC,WAAW8M,WAA/B,KAAD,4DAMSouE,GAAiBt7E,UAAOC,IAAV,yCAAGD,CAAH,iFACvB,qBAAGG,MAAkBsgC,oBAQZ86C,GAAev7E,kBAAO2nD,MAAV,yCAAG3nD,CAAH,wBAGZw7E,GAAiBx7E,UAAOC,IAAV,yCAAGD,CAAH,iJACvB,qBAAGG,MAAkBugC,iBAKd,cAAGvgC,MAAH,SAAUgB,MAAqB,cAAgB,aACpC,cAAGhB,MAAH,SAAUgB,MAAqB,cAAgB,kBAMxDs6E,GAAaz7E,UAAOC,IAAV,yCAAGD,CAAH,wDACnB,qBAAGG,MAAkBugC,iBAIZg7C,GAAc17E,UAAOC,IAAV,yCAAGD,CAAH,oLAGb,cAAGG,MAAH,MAAe,kBACJ,cAAGA,MAAH,MAAe,gBAQb,cAAGA,MAAH,OAAei4C,aAAO,GAAKC,OAAOC,aAAO,gBAGpDqjC,GAAiB37E,UAAOC,IAAV,yCAAGD,CAAH,oDACvB,qBAAGG,MAAkBugC,iBAKK1gC,UAAOC,IAAV,yCAAGD,CAAH,yJASHo4C,aAAO,IAAM,YCjNtB,SAAShjB,GAAT,GAAkJ,IAAD,IAA/HyL,YAA+H,MAAxH,KAAwH,MAAlHvgC,iBAAkH,SAAhGc,EAAgG,EAAhGA,KAAgG,IAA1F4N,eAA0F,MAAhF,KAAgF,EAA1EqmB,EAA0E,EAA1EA,MAAOumD,EAAmE,EAAnEA,OAAmE,IAA3DC,iBAA2D,MAA/C,KAA+C,EAAzCC,EAAyC,EAAzCA,KAAyC,IAAnCttD,cAAmC,SAAnBjb,EAAmB,EAAnBA,GACnI5J,EACF,yBACInF,UAAW,6CACXnD,MAAO,CAAEksC,gBAAiB,gBAAiBlY,MAAO,oBAClD9hB,GAAIA,EACJvE,QAASA,EACT,iBAAgB1O,IAAckuB,EALlC,UAOI,sBAAKhqB,UAAW,oBAAhB,UACI,sBAAK6wB,MAAOA,EAAZ,UACK7G,EACG,cAAC6sD,GAAD,UACI,cAACD,GAAD,UACI,4BAIR,GAEHQ,KAEJC,GAAa,qBAAKr3E,UAAW,eAAhB,SAAiCq3E,OAEnD,cAAC,GAAD,CAAaz6E,KAAMA,EAAnB,SACI,qBAAK42C,IAAK8jC,EAAMhkC,IAAK,cAIjC,OAAIjX,EACO,cAAC,IAAD,CAAc3E,KAAM2E,EAApB,SAA2Bl3B,IAG/BA,ECnCI,SAASoyE,GAAT,GAA+G,IAAD,IAAvFzrD,EAAuF,EAAvFA,UAAuF,IAA5EnvB,aAA4E,SAA7D66E,EAA6D,EAA7DA,gBAAiBC,EAA4C,EAA5CA,cAAe/lC,EAA6B,EAA7BA,aACtFgmC,EAAU,UAAGrtD,cAAH,iBAAG,EAAQkB,gBAAX,aAAG,EAAkBkuB,WAErC,OACI,eAACq9B,GAAD,WACI,cAACE,GAAD,CAAgBr6E,MAAOA,EAAvB,SACI,cAACw6E,GAAD,UACKx6E,EACG,eAACs6E,GAAD,WACI,8BACI,6CAEJ,cAACC,GAAD,CACI1sE,QAAS,WACLgtE,GAAgB,GAChB1rD,GAAa2rD,EAAc3rD,IAHnC,SAMI,yCAIR,qCACI,cAACirD,GAAD,IACA,iDAKf53E,OAAOC,KAAKg0E,IAAmB9yE,KAAI,SAACgK,GACjC,IAAMqtE,EAASvE,GAAkB9oE,GACjC,GAAIqtE,EAAO7rD,YAAcA,EAAW,CAChC,GAAI6rD,EAAO7rD,YAAcN,KAAU,CAC/B,GAAIksD,GAA8B,aAAhBC,EAAO5xE,KACrB,OAAO,KAEX,IAAK2xE,GAA8B,aAAhBC,EAAO5xE,KACtB,OAAO,KAGf,OACI,cAAC6qB,GAAD,CACI7hB,GAAE,kBAAazE,GAEfxO,WAAW,EACX+0B,MAAO8mD,EAAO9mD,MACdumD,OAAQ1lC,EACR2lC,UAAWM,EAAO3yD,YAClBsyD,KAAMK,EAAOrE,SALRhpE,GASjB,OAAO,W,qCC9DjBstE,GAAoBp8E,kBAAO6sE,MAAV,wCAAG7sE,CAAH,+HACjB,qBAAGG,MAAkBugC,iBAYd27C,GAAkBr8E,kBAAOo8E,IAAV,wCAAGp8E,CAAH,8GACJ,cAAGG,MAAH,MAAe,iBACf,cAAGA,MAAH,MAAe,iBAC1B,qBAAGA,MAAkB29B,SAKN,cAAG39B,MAAH,OAAei4C,aAAO,GAAKC,OAAOC,aAAO,eAGxDgkC,GAAoBt8E,kBAAOo8E,IAAV,wCAAGp8E,CAAH,sKACN,cAAGG,MAAH,MAAe,oBACf,cAAGA,MAAH,MAAe,oBAQX,cAAGA,MAAH,OAAei4C,aAAO,IAAMC,OAAOC,aAAO,kBAC1C,cAAGn4C,MAAH,OAAei4C,aAAO,IAAMC,OAAOC,aAAO,kBAIhE,qBAAGn4C,MAAkBC,WAAWuB,UAA/B,QAAD,yDAIO46E,GAAsBv8E,kBAAOo8E,IAAV,wCAAGp8E,CAAH,qEACR,gBAAGV,EAAH,EAAGA,QAAH,EAAYa,MAAZ,OAAyBb,EAAU,kBAAoB,gBAClE,gBAAGA,EAAH,EAAGA,QAASa,EAAZ,EAAYA,MAAZ,OAAyBb,EAAUa,EAAM29B,MAAQ,kBAIxD,qBAAG39B,MAAkBC,WAAWuB,UAA/B,QAAD,kDAIOjB,GAAOV,UAAO8iC,EAAV,wCAAG9iC,CAAH,4JAUX,qBAAGG,MAAkBC,WAAWuB,UAA/B,QAAD,oDAIO66E,GAAcx8E,kBAAOy8E,MAAV,wCAAGz8E,CAAH,qE,gBCjEjB,SAAS08E,GAAT,GAAsE,IAAhDpsD,EAA+C,EAA/CA,UACzB,OAAIA,IAAcN,KACP,cAACwpD,GAAD,IAEPlpD,IAAcy+C,KACP,qBAAKvqE,UAAU,cAAcnD,MAAO,CAAEgH,MAAO,OAAQunC,OAAQ,QAAUoI,IAAK2kC,GAAkB7kC,IAAI,KAGtG,K,aCEJ,SAAe8kC,GAAtB,mC,wDAAO,WAAiC16E,GAAjC,0FACGwuB,EAAU7B,OADb,kBAIO6B,EAAQX,SAASmuB,QAAQ,CAC3BC,OAAQ,6BACRC,OAAQ,CACJ,CACIl8C,QAAS2S,KAAcgT,aAAa3lB,GAAS4lB,eAR1D,OAYC+G,OAAOoB,SAASC,SAZjB,mDAe0B,OAArB,KAAYigC,KAfjB,mDAiBez/B,QAjBf,IAiBeA,GAjBf,UAiBeA,EAASX,gBAjBxB,aAiBe,EAAmBmuB,QAAQ,CAC7BC,OAAQ,0BACRC,OAAQ,CACJ,CACIl8C,QAAS2S,KAAcgT,aAAa3lB,GAAS4lB,WAC7CC,UAAWlT,KAAcgT,aAAa3lB,GAAS6lB,UAC/CC,eAAgB,CACZzd,KAAMsK,KAAcgT,aAAa3lB,GAASgmB,sBAAsB3d,KAChEqc,OAAQ/R,KAAcgT,aAAa3lB,GAASgmB,sBAAsBtB,OAClED,SAAU9R,KAAcgT,aAAa3lB,GAASgmB,sBAAsBvB,UAExEk2D,kBAAmB,CAAChoE,KAAcgT,aAAa3lB,GAASkmB,kBACxD00D,QAAS,CAACjoE,KAAcgT,aAAa3lB,GAASimB,YA7BnE,6H,sBAyCA,SAAS40D,KACZ,MAAsC1uD,yBAA9BlsB,EAAR,EAAQA,QAASmuB,EAAjB,EAAiBA,UAAWnvB,EAA5B,EAA4BA,MACpBqsB,EAAYH,aAAU,OAAClrB,QAAD,IAACA,SAAWoC,GAAlCipB,QACFwvD,EAA2Bx4C,eAE3By4C,IAA0B1sD,aAAaC,QAAQ,eAE/ClxB,EAAU09E,EAAyBh4E,QAAO,SAAClB,GAAD,OAASA,EAAGT,WAASyB,KAAI,SAAChB,GAAD,OAAQA,EAAGnB,QAE9Eu6E,IAA2B59E,EAAQ+G,OAEnCq0E,EAAoBnP,eAE1B,EAAuC1hE,oBAAS,GAAhD,6BAEA,OAAI1H,EAEI,eAACo6E,GAAD,CAAqBhpE,GAAG,wBAAwBlS,MAAO,CAAEyrC,WAAY,gBAAiBzX,MAAO,eAAgB7sB,OAAQ,QAAUwG,QAAS0rE,EAAmBp7E,QAAS49E,EAApK,UACKA,EACG,eAACjmD,GAAA,EAAD,WACI,cAACv2B,GAAD,UACI,qDAAQpB,QAAR,IAAQA,OAAR,EAAQA,EAAS+G,YACb,IACR,cAACshD,GAAA,EAAD,CAAQxsB,OAAQ,qBAGpB,qCAC2B,KACvB,cAACz6B,GAAD,UAAO8sB,GAAWk3C,aAAeviE,EAAS,SAGhD+6E,GAA0B5sD,GAAa,cAACosD,GAAD,CAAYpsD,UAAWA,OAGjE2sD,EACA,6BACA97E,EAEH,eAACk7E,GAAD,CAAiBrtE,QAAS0rE,EAA1B,UACI,cAAC8B,GAAD,IACA,cAAC97E,GAAD,UAAOS,aAAiBsvB,0BAA0B,+BAAO,mBAAqB,qCAKlF,cAAC6rD,GAAD,CAAmB/oE,GAAG,iBAAiBvE,QAAS0rE,EAAmByC,OAAQh7E,EAA3E,SACI,cAACzB,GAAD,UACI,6C,iCC/Ed08E,GACO,UADPA,GAGO,UAHPA,GAIO,UASE,SAASC,GAAT,GAAiG,IAA1E1C,EAAyE,EAAzEA,oBAAqBC,EAAoD,EAApDA,sBAAuBptD,EAA6B,EAA7BA,QAG9E,EAA8Ea,yBAAtEG,EAAR,EAAQA,OAAQrsB,EAAhB,EAAgBA,QAASmuB,EAAzB,EAAyBA,UAAW5B,EAApC,EAAoCA,SAAUvtB,EAA9C,EAA8CA,MAAO65D,EAArD,EAAqDA,SAErD,GAFA,EAA+DyU,WAE3B5lE,mBAASuzE,KAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0C1zE,qBAA1C,mBAAO2zE,EAAP,KAAsBC,EAAtB,KACA,EAAwC5zE,qBAAxC,mBAAO6zE,EAAP,KAAqB1B,EAArB,KACA,EAAwCnyE,mBAAiB,IAAzD,mBAAOqsC,EAAP,KAAqBynC,EAArB,KACA,EAA4B9zE,oBAAS,GAArC,mBAAO+zE,EAAP,KAAeC,EAAf,KACA,EAA8Bh0E,oBAAS,GAAvC,mBAEMi0E,GAFN,UAEwBxlD,aAAaC,KAAiBizC,SAChDkP,EAAoBnP,eAEpBwS,EAAkBxjE,aAAYpY,GAGpCua,qBAAU,WACFva,IAAY47E,GAAmBD,GAC/BpD,MAEL,CAACv4E,EAAS47E,EAAiBrD,EAAmBoD,IAGjDphE,qBAAU,WACFohE,IACA9B,GAAgB,GAChBuB,EAAcH,OAEnB,CAACU,IAGJ,IAAME,EAAiBzjE,aAAYiU,GAC7ByvD,EAAoB1jE,aAAY+V,GACtC5T,qBAAU,WACFohE,IAAqBtvD,IAAWwvD,GAAoB1tD,GAAaA,IAAc2tD,IAAsB98E,IACrGo8E,EAAcH,MAEnB,CAACG,EAAe/uD,EAAQrtB,EAAOmvB,EAAWwtD,EAAiBE,EAAgBC,IAE9E,IAAMhC,EAAa,iDAAG,WAAO3rD,GAAP,iFACd/lB,EAAO,GACX5G,OAAOC,KAAKg0E,IAAmB9yE,KAAI,SAACgK,GAChC,OAAIwhB,IAAcsnD,GAAkB9oE,GAAKwhB,YAC7B/lB,EAAOqtE,GAAkB9oE,GAAKvE,SAK9CgnC,IAAQ7yB,MAAM,CACV8yB,SAAU,SACVC,OAAQ,gBACR3Q,MAAOv2B,IAGXkzE,EAAiBntD,GACjBitD,EAAcH,IAEV9sD,aAAqB0+C,OACrB1+C,EAAU4tD,2BAAwB35E,GAGtC+rB,GACI5B,EAAS4B,OAAW/rB,GAAW,GAC1B8qB,KADL,gCACU,wGAC0BiB,EAAU6tD,aADpC,eAGEZ,EAAcH,IAHhB,4CAML7tD,OAAM,SAACpuB,GACJuR,QAAQvR,MAAMA,GACVA,aAAiBsvB,2BACjBktD,EAAgB,+CAChB3B,GAAgB,GAChBhhB,EAAS75D,IACFA,aAAiBi9E,KACxBb,EAAcH,IAEdpB,GAAgB,MAGvBqC,SAAQ,WACLR,EAAUvtD,aAAqB6+C,SA3CzB,2CAAH,sDAgDnB,SAASmP,IACL,IAAMpC,EAAartD,OAAOkB,UAAYlB,OAAOkB,SAASkuB,WAEtD,OAAOt6C,OAAOC,KAAKg0E,IAAmB9yE,KAAI,SAACgK,GACvC,IAAMqtE,EAASvE,GAAkB9oE,GAEjC,GAAIG,YAEA,OAAK4f,OAAO0vD,MAAS1vD,OAAOkB,WAAYosD,EAAOpvE,OAkB3C5L,GAASA,aAAiBsvB,0BACnB,8BAAM,+CAGV,KApBC,cAAC2E,GAAD,CACIpmB,QAAS,WACLmtE,EAAO7rD,YAAcA,IAAc6rD,EAAOjgD,MAAQ+/C,EAAcE,EAAO7rD,YAE3E/c,GAAE,kBAAazE,GAEf0f,OAAQ2tD,EAAO7rD,WAAa6rD,EAAO7rD,YAAcA,EACjD+E,MAAO8mD,EAAO9mD,MACdwL,KAAMs7C,EAAOjgD,KACb0/C,OAAQO,EAAO5xE,KACfsxE,UAAW,KACXC,KAAMK,EAAOrE,SANRhpE,GAkBrB,IAAK0vE,YACD,OAAKrC,EAAOsC,YAA8B,aAAhBtC,EAAO5xE,KAiB1B,KAfC,cAAC6qB,GAAD,CACIpmB,QAAS,WACLmtE,EAAO7rD,YAAcA,IAAc6rD,EAAOjgD,MAAQ+/C,EAAcE,EAAO7rD,YAE3E/c,GAAE,kBAAazE,GAEf0f,OAAQ2tD,EAAO7rD,WAAa6rD,EAAO7rD,YAAcA,EACjD+E,MAAO8mD,EAAO9mD,MACdwL,KAAMs7C,EAAOjgD,KACb0/C,OAAQO,EAAO5xE,KACfsxE,UAAW,KACXC,KAAMK,EAAOrE,SANRhpE,GAcrB,GAAIqtE,EAAO7rD,YAAcN,KAAU,CAE/B,IAAMnB,OAAO0vD,OAAQ1vD,OAAOkB,SACxB,MAAoB,aAAhBosD,EAAO5xE,KACA,cAAC6qB,GAAD,CAAQ7hB,GAAE,kBAAazE,GAAiBumB,MAAO,UAAWumD,OAAQ,2CAAiCC,UAAW,KAAMh7C,KAAM,uBAAwBi7C,KAAM4C,MAArH5vE,GAEnC,KAIV,GAAoB,aAAhBqtE,EAAO5xE,OAAwB2xE,EACpC,OAAO,KAGN,GAAoB,aAAhBC,EAAO5xE,MAAuB2xE,EACnC,OAAO,KACJ,GAAoB,gBAAhBC,EAAO5xE,KACd,OAAO,8BAAM,2CAKrB,OACK0E,cACAktE,EAAOwC,YACJ,cAACvpD,GAAD,CACI7hB,GAAE,kBAAazE,GACfE,QAAS,WACLmtE,EAAO7rD,YAAcA,EAAYitD,EAAcH,KAAyBjB,EAAOjgD,MAAQ+/C,EAAcE,EAAO7rD,YAGhH9B,OAAQ2tD,EAAO7rD,YAAcA,EAC7B+E,MAAO8mD,EAAO9mD,MACdwL,KAAMs7C,EAAOjgD,KACb0/C,OAAQO,EAAO5xE,KACfsxE,UAAW,KACXC,KAAMK,EAAOrE,SANRhpE,MAmGzB,OACI,cAAC3B,GAAA,EAAD,CAAOH,OAAQ8wE,EAAiB1wE,UAAWstE,EAAmB7tE,WAAW,EAAOC,UAAW,GAA3F,SACI,cAACi3B,GAAD,UAvFA5iC,EAEI,sBAAKqD,UAAW,IAAhB,UACI,sBAAKA,UAAW,iBAAhB,UACKrD,aAAiBsvB,0BAA0B,wCAA+B,2CAE3E,qBAAKjsB,UAAW,0BAA2BwK,QAAS0rE,EAApD,SACI,cAAC,GAAD,SAGR,qBAAKl2E,UAAW,OAAhB,SACKrD,aAAiBsvB,0BACd,qCACI,oBAAIjsB,UAAW,OAAf,SACI,sCAAQo5E,EAAS,8DAA0D,uDAE9E3uE,YACG,4BAAI,8CAEH2uE,GACG,sBAAKp5E,UAAU,IAAInD,MAAO,CAAE21B,IAAK,QAAjC,UACI,wBAAQxyB,UAAW,0BAA2BnD,MAAO,CAAEg0B,MAAO,SAAWrmB,QAAS,kBAAM4tE,GAAkB7nE,KAAQC,MAAlH,SACK,gCAEL,wBAAQxQ,UAAW,0BAA2BnD,MAAO,CAAEg0B,MAAO,SAAWrmB,QAAS,kBAAM4tE,GAAkB7nE,KAAQ8F,QAAlH,SACK,uCAOrB,0EAMhB1Y,GAAWm7E,IAAeF,GAEtB,cAAC,GAAD,CACI1C,kBAAmBA,EACnBC,oBAAqBA,EACrBC,sBAAuBA,EACvBptD,QAASA,EACToxD,YAAa,kBAAMrB,EAAcH,OAKzC,sBAAK54E,UAAW,QAAhB,UACI,sBAAKA,UAAW,iBAAhB,UACK84E,IAAeF,GACZ,sBACI54E,UAAW,4BACXwK,QAAS,WACLgtE,GAAgB,GAChBuB,EAAcH,KAJtB,SAOI,gDACI,cAAC,KAAD,CAAWh8E,KAAM,OAAQoD,UAAW,gBAI5C,+BACI,2CAGR,qBAAKA,UAAW,0BAA2BwK,QAAS0rE,EAApD,SACI,cAAC,GAAD,SAIR,cAACv2E,GAAA,EAAD,CAAMG,QAAM,EAACF,QAAS,iBAAtB,SACKk5E,IAAeF,GACZ,cAACrB,GAAD,CAAazrD,UAAWktD,EAAer8E,MAAOu8E,EAAc1B,gBAAiBA,EAAiBC,cAAeA,EAAe/lC,aAAcA,IAE1I,cAAC+kC,GAAD,UAAaqD,eCxStB,SAASO,KACpB,MAA4BxwD,yBAApBG,EAAR,EAAQA,OAAQrsB,EAAhB,EAAgBA,QACVmsB,EAAiBD,uBAAaE,KAC5Bf,EAAYH,aAAU,OAAClrB,QAAD,IAACA,SAAWoC,GAAlCipB,QAEFwvD,EAA2Bx4C,eAE3BllC,EAAU09E,EAAyBh4E,QAAO,SAAClB,GAAD,OAASA,EAAGT,WAASyB,KAAI,SAAChB,GAAD,OAAQA,EAAGnB,QAC9Ey5C,EAAY4gC,EAAyBh4E,QAAO,SAAClB,GAAD,OAAQA,EAAGT,WAASyB,KAAI,SAAChB,GAAD,OAAQA,EAAGnB,QAErF,OAAK2rB,EAAeE,QAAWA,EAa3B,qCACI,cAACuuD,GAAD,IACA,cAACM,GAAD,CAAa7vD,QAAO,OAAEA,QAAF,IAAEA,SAAWjpB,EAAWo2E,oBAAqBr7E,EAASs7E,sBAAuBx+B,OAd9F,cAACkgC,GAAD,CACP/oE,GAAG,iBACH4pE,OAAQh7E,EACRk5B,UAAQ,EAHD,SAKP,cAAC36B,GAAD,UACI,yC,wBChBG,SAASo+E,KACpB,MAA6B78E,cAArBC,EAAR,EAAQA,QAAS6/B,EAAjB,EAAiBA,QAEX3a,EAAOE,iBAAuB,MAC9B5b,EAAO4sB,aAAaC,KAAiBwmD,kBACrCjyD,EAASw+C,aAAe/yC,KAAiBwmD,kBAC/C53D,aAAkBC,EAAM1b,EAAOohB,OAASvoB,GAExC,IAAMy6E,EAAO98E,EAAUy/B,KAAWz/B,QAAWqC,EAI7C,OAFAmO,QAAQ8nB,IAAIt4B,EAAS88E,EAAMj9C,GAEtB7/B,GAAY88E,GAASj9C,EAItB7/B,EAEI,sBAAKsC,UAAU,IAAf,UACI,qBAAKwzC,IAAKnjC,KAAcgT,aAAa3lB,GAASgmB,sBAAsBD,KAAM5f,MAAM,OAChF,qBAAK7D,UAAU,QAAQnD,MAAO,CAAE49E,WAAY,UAAY11D,MAAOy1D,EAAKl+C,MAApE,SACKk+C,EAAKl+C,WAMf,qBAAKvX,MAAOy1D,EAAKl+C,MAAjB,SAAyBk+C,EAAKl+C,QAd1B,K,+GCdTo1B,GAAkB,SAoLXgpB,IAnLcl/E,UAAOC,IAAV,uCAAGD,CAAH,iXAUG,qBAAGm/E,eAAuC,UAAY,SAErD,cACxBh/E,MADwB,SAExBg/E,eACoB,aAAe,kBAKjC,qBAAGh/E,MAAkBC,WAAWm9B,UAA/B,QAAD,sEAIA,qBAAGp9B,MAAkBC,WAAW8M,WAA/B,QAAD,sFAKA,qBAAG/M,MAAkBC,WAAWuB,UAA/B,QAAD,uFAIA,qBAAGxB,MAAkBC,WAAWC,eAA/B,QAAD,yDAIwBL,UAAOC,IAAV,uCAAGD,CAAH,qYAiCrB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,qDAIuB3B,UAAOC,IAAV,uCAAGD,CAAH,mFAUpB,qBAAGG,MAAkBC,WAAW8M,WAA/B,KAAD,yDAIqBlN,kBAAOi3B,MAAV,uCAAGj3B,CAAH,kcAmClB,qBAAGG,MAAkBC,WAAWm9B,UAA/B,KAAD,8GAOA,qBAAGp9B,MAAkBC,WAAW8M,WAA/B,KAAD,8RAiBA,qBAAG/M,MAAkBC,WAAWuB,UAA/B,KAAD,0PAcwB3B,UAAOC,IAAV,uCAAGD,CAAH,kLAcrB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,qDAIqB3B,kBAAOU,MAAV,uCAAGV,CAAH,wBAGlB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,yDAsIAy9E,IAlIqBp/E,UAAOC,IAAV,uCAAGD,CAAH,wBAGHA,UAAOiF,EAAV,uCAAGjF,CAAH,8aAqCZ,qBAAGG,MAAkBC,WAAWm9B,UAA/B,KAAD,kDAIA,qBAAGp9B,MAAkBC,WAAWuB,UAA/B,KAAD,2EAIA,qBAAGxB,MAAkBC,WAAWC,eAA/B,KAAD,iDAIkBL,UAAOC,IAAV,uCAAGD,CAAH,sFAMMA,UAAOC,IAAV,uCAAGD,CAAH,mIAUlB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,mDAIiB3B,UAAOC,IAAV,wCAAGD,CAAH,4HAWd,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,4EAKA,qBAAGxB,MAAkBC,WAAWC,eAA/B,KAAD,2EAMuBL,kBAAOq2D,KAASppD,MAAM,CAC/CipD,qBADsB,wCAAGl2D,CAAH,4WAGpB,qBAAGG,MAAkBugC,iBAerB,qBAAGvgC,MAAkBC,WAAWC,eAA/B,KAAD,uDAGE61D,GAMKA,IAGQ,cAAG/1D,MAAH,OAAei4C,aAAO,GAAKC,OAAOC,aAAO,gBAM1C/3C,cAAH,sGAGX,qBAAGJ,MAAkBC,WAAW8M,WAA/B,KAAD,uDAIA,qBAAG/M,MAAkBC,WAAWuB,UAA/B,KAAD,mIA+CO09E,IAxCkBr/E,kBAAO2I,MAAV,wCAAG3I,CAAH,gHACtBo/E,IAQwBp/E,UAAOC,IAAV,wCAAGD,CAAH,4GAOrB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,mDAIsB3B,UAAOc,KAAV,wCAAGd,CAAH,wBAGnB,qBAAGG,MAAkBC,WAAWuB,UAA/B,KAAD,qDAMyB3B,UAAOC,IAAV,wCAAGD,CAAH,uDAKtB,qBAAGG,MAAkBC,WAAW8M,WAA/B,KAAD,mDAMuBlN,UAAOC,IAAV,wCAAGD,CAAH,qDAKpB,qBAAGG,MAAkBC,WAAW8M,WAA/B,KAAD,oDAIOoyE,GAAsBt/E,kBAAO8B,IAAKo/B,OAAf,wCAAGlhC,CAAH,qFAGjB,gBAAGu/E,EAAH,EAAGA,QAAH,SAAYC,SAA2B,GAAMD,EAAU,EAAI,MAM7DE,GAAmBz/E,UAAOC,IAAV,wCAAGD,CAAH,wIAUvB0/E,GAAY5jD,oBAAH,yIAQFoB,GAAUl9B,UAAOC,IAAV,wCAAGD,CAAH,8TACH0/E,I,cCzZF,SAASC,KACpB,IAAQz9E,EAAYD,cAAZC,QAEF09E,EAAet9E,uBAAY,SAACuM,GAAD,OAAkB+tE,GAAkB/tE,KAAO,IAE5E,OACI,qBAAKrK,UAAU,mBAAf,SACI,qBAAIA,UAAU,oBAAd,UACI,oBAAIA,UAAS,iCAA4BtC,IAAY6S,KAAQC,IAAM,SAAW,GAAjE,KAAwEhG,QAAS,kBAAM4wE,EAAa7qE,KAAQC,MAAzH,SACI,mBAAG+nB,IAAK,sBAAuBpe,OAAQ,SAAUna,UAAU,0CAA3D,SACI,uBAAMA,UAAU,kCAAhB,UACI,sBAAMA,UAAW,OAAjB,SACI,qBAAK6D,MAAO,GAAI2vC,IAAKnjC,KAAcgT,aAAa9S,KAAQC,KAAKgT,eAAeC,SAEhF,+BAAO,qBAInB,oBAAIzjB,UAAS,iCAA4BtC,IAAY6S,KAAQ8F,MAAQ,SAAW,IAAM7L,QAAS,kBAAM4wE,EAAa7qE,KAAQ8F,QAA1H,SACI,mBAAGkiB,IAAK,sBAAuBpe,OAAQ,SAAUna,UAAU,0CAA3D,SACI,uBAAMA,UAAU,kCAAhB,UACI,sBAAMA,UAAW,OAAjB,SACI,qBAAK6D,MAAO,GAAI2vC,IAAKnjC,KAAcgT,aAAa9S,KAAQ8F,OAAOmN,eAAeC,SAElF,+BAAO,2BCZpB,SAAS43D,KAAU,IAAD,EAiBzBC,EAhBJ,EAA6B79E,cAArBE,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QAEX69E,EAAc,UAAGt7E,YAAetC,EAAU,CAACA,GAAW,WAAxC,aAAG,SAA2CA,QAA3C,IAA2CA,IAAW,IAEvE69E,EAAiBzlE,aAAYwlE,GAE7BE,EAAkBv8E,mBAAQ,WAC5B,OAAKq8E,GACMC,IAIZ,CAACD,IAEEG,EAAgB3uD,eAIlBrvB,IAAY2S,KAAcgT,aAAa3lB,GAAW,IAAIA,UACtD49E,EAAajrE,KAAcgT,aAAa3lB,GAAW,IAAIgmB,sBAAsBtB,QAGjF,IAAMu5D,EAAa79E,uBAAY,SAACklB,GAC5B,IAAM7I,EAAS6I,EAAE7I,OAAOyhE,QAEnBzhE,GAEL/B,YAAW,kBAAO+B,EAAOoO,SAAU,IAAQ,OAC5C,IAEH,OACI,sBAAKvoB,UAAW,iDAAhB,UACI,mBAAGA,UAAW,0CAA2C03B,KAAK,IAA9D,SACI,qBAAK8b,IAAKqoC,EAAMvoC,IAAI,gBAExB,sBAAKtzC,UAAW,gBAAhB,UACI,cAAC,IAAD,CAASA,UAAW,+BAAgC0xD,gBAAiB,8BAA+B3iD,GAAE,gBAAmBm1C,GAAI,QAA7H,SACI,iCAEJ,cAAC,IAAD,CACIlkD,UAAW,wCACX+O,GAAE,gBACFm1C,GAAI,QACJ77B,SAAU,SAACqmB,EAAD,OAAU5W,EAAV,EAAUA,SAAV,OACNroB,QAAQi/B,IAAU5W,EAAS0G,WAAW,SAAW1G,EAAS0G,WAAW,YAAc1G,EAAS0G,WAAW,cAAgB1G,EAAS0G,WAAW,UAE/IkzB,gBAAiB,8BAPrB,SASI,iCAEJ,eAAC,IAAD,CAAS1xD,UAAW,+BAAgC0xD,gBAAiB,8BAA+B3iD,GAAE,mBAAsBm1C,GAAI,WAAhI,UACI,+BACI,oCAEJ,sBAAMlkD,UAAW,8BAErB,cAAC,IAAD,CAASA,UAAW,+BAAgC0xD,gBAAiB,8BAA+B3iD,GAAE,gBAAmBm1C,GAAI,QAA7H,SACI,oCAIR,sBAAKlkD,UAAW,iCAAhB,UACKrC,GACG,qCACI,uBAAOoR,GAAG,cAAc0L,KAAK,WAAWza,UAAU,+BAClD,wBAAO81E,QAAQ,cAAcljD,KAAK,SAASjoB,SAAU,EAAG3K,UAAU,mCAAmC8yB,OAAQ6oD,EAA7G,UACI,cAACrB,GAAD,IACA,qBAAKt6E,UAAU,0BAA0BwK,QAAS,SAACwY,GAAD,OAAOA,EAAEqV,kBAA3D,SACI,cAAC,GAAD,SAIN36B,IAAY2S,KAAcgT,aAAa3lB,GAAW,IAAIA,SAAWC,GAAW49E,GAAmBG,EAC7F,eAAChB,GAAD,CAAa79E,MAAO,CAAEi/E,WAAY,GAAKC,GAAG,UAAUppD,WAAY,IAAhE,iBACK8oD,QADL,IACKA,OADL,EACKA,EAAiB5oD,QAAQ,GAD9B,KACoCpoB,aAAY6wE,KAEhD,QAGZ,cAAC,GAAD,IACA,qBAAKt7E,UAAU,yBAAf,SACI,cAAC,GAAD,Y,cC1FL,SAASg8E,GAAT,GAA8E,IAAlD79E,EAAiD,EAAjDA,KAAMo9B,EAA2C,EAA3CA,QAASv9B,EAAkC,EAAlCA,QAC9CN,EAAYD,cAAZC,QAER,OACI,sBAAKqR,GAAIwsB,EAAO,uDAA6Dv7B,UAAS,UAAK7B,EAAL,WAAtF,UACI,qBAAK6B,UAAW,OAAhB,SAAyBu7B,EAAU,cAAC,KAAD,CAAa1K,MAAO,eAAgBj0B,KAAM,WAAe,cAAC,KAAD,CAAai0B,MAAO,aAAcj0B,KAAM,aACpI,gCACI,qBAAKoD,UAAW,SAAhB,gBAA2BhC,QAA3B,IAA2BA,IAAW,eAAYG,EAAKsQ,MAAM,EAAG,GAAK,MAAQtQ,EAAKsQ,MAAM,GAAI,MAC3F/Q,GACG,cAAC,IAAD,CAAcg6B,KAAMwR,aAAgBxrC,EAASS,EAAMgrC,KAAiB8Q,aAAcp9C,MAAO,CAACg0B,MAAO,kBAAjG,SACI,mD,oBCTT,SAASorD,GAAT,GAAwE,IAe/EC,EAf4BC,EAAkD,EAAlDA,cAAeh3E,EAAmC,EAAnCA,QAASi3E,EAA0B,EAA1BA,OAClD1V,EAAcQ,eACdmV,EAAkBv+E,uBAAY,kBAAM4oE,EAAY0V,KAAS,CAACA,EAAQ1V,IAcxE,GAbAxuD,qBAAU,WACN,GAAsB,OAAlBikE,EAAJ,CAEA,IAAMnxD,EAAU5S,YAAW,WACvBikE,MACDF,GAEH,OAAO,WACH9jE,aAAa2S,OAElB,CAACmxD,EAAeE,IAGf,QAASl3E,EAAS,CAClB,MAEIA,EADAm3E,IAAOn+E,EADX,EACWA,KAAMo9B,EADjB,EACiBA,QAASv9B,EAD1B,EAC0BA,QAE1Bk+E,EAAe,cAACF,GAAD,CAAkB79E,KAAMA,EAAMo9B,QAASA,EAASv9B,QAASA,IAG5E,OACI,sBAAKgC,UAAW,6BAAhB,UACI,sBAAMA,UAAW,eAAgBwK,QAAS6xE,EAA1C,SACI,cAAC,KAAD,CAAG1lD,OAAQ,kBAEdulD,KCjCN,IAAMK,GAAqB/gF,UAAOC,IAAV,wCAAGD,CAAH,iGAInB,qBAAG4vC,UACH,qBAAGA,OAAuB,UAAY,KAC/B,qBAAGA,OAAuB,OAAS,KAClD,qBAAGzvC,MAAkBC,WAAWuB,UAA/B,QAAD,iDAISq/E,GAAmBhhF,UAAOC,IAAV,wCAAGD,CAAH,sJAWhBihF,GAAiB,wCAAoC3jD,IAAapwB,WAAa,EAA9D,+BAAsFowB,IAAapwB,WAAa,IAAhH,OAEjBg0E,GAAmBlhF,kBAAOwB,KAAV,wCAAGxB,CAAH,+GAEpB,qBAAGmhF,aAAmC,QAAU,UAMrD,qBAAGhhF,MAAkBC,WAAWuB,UAA/B,QAAD,+CAIAs/E,IACO,gBAAGE,EAAH,EAAGA,aAAH,SAAiBC,WAAuCD,EAAV,QAAmC,UAKjEnhF,kBAAO+3B,MAAV,wCAAG/3B,CAAH,mEASHA,UAAOC,IAAV,wCAAGD,CAAH,yHAQd,qBAAGG,MAAkBC,WAAWuB,UAA/B,QAAD,iHASqB3B,kBAAO8nC,MAAV,wCAAG9nC,CAAH,uBCpEP,SAASqhF,KAEpB,IAAMC,EAAe3V,eAEf4V,EAAmB7Y,eAGjBxmE,EAAYD,cAAZC,QACFs/E,EAAiBvtE,QAAQ/R,GAAWA,IAAY2S,KAAcgT,aAAa3lB,GAAW,IAAIA,SAEhG,OACI,qCACI,cAACg/E,GAAD,CAAkBlqD,IAAI,OAAOmqD,aAAcI,EAAkBH,UAAWI,EAAxE,SACKF,EAAax8E,KAAI,SAAC+J,GAAD,OACd,cAAC4xE,GAAD,CAA0B92E,QAASkF,EAAKlF,QAASi3E,OAAQ/xE,EAAKC,IAAK6xE,cAAe9xE,EAAK8xE,eAAvE9xE,EAAKC,UAG7B,cAACiyE,GAAD,CAAoBnxC,QAAoB,OAAZ0xC,QAAY,IAAZA,OAAA,EAAAA,EAAcj7E,QAAS,EAAI,cAAgB,EAAvE,SACI,cAAC26E,GAAD,UACKM,EACIruE,MAAM,GACN5C,UACAvL,KAAI,SAAC+J,GAAD,OACD,cAAC4xE,GAAD,CAA0B92E,QAASkF,EAAKlF,QAASi3E,OAAQ/xE,EAAKC,IAAK6xE,cAAe9xE,EAAK8xE,eAAvE9xE,EAAKC,eC7B1C,IAAM2yE,GAAiBzhF,UAAOC,IAAV,wCAAGD,CAAH,0EAMd0hF,GAAU1hF,UAAO2hF,GAAV,wCAAG3hF,CAAH,gBACT,cAAGG,MAAH,MAAe,uBCDX,SAASyhF,GAAT,GAAoE,IAAxCv9E,EAAuC,EAAvCA,SAC/BmqB,EAAWH,yBAAXG,OACR,EAAkFH,uBAAaE,KAA/EszD,EAAhB,EAAQrzD,OAA8BszD,EAAtC,EAA+B3gF,MAA+B4gF,EAA9D,EAAoDrzD,SAG9CszD,EAAavzD,cAanB,OAVA/R,qBAAU,YACFslE,GAAeH,GAAkBC,GAAiBtzD,GAClDuzD,EAAgB5/C,QAErB,CAAC6/C,EAAYH,EAAeC,EAAcC,EAAiBvzD,IAG9D2B,aAAqB6xD,GAGjBA,IAAexzD,GAAUszD,EAErB,cAACL,GAAD,UACI,cAACC,GAAD,UACI,iIAMTr9E,E,yBC7BI,SAAS49E,GAAT,GAAwF,IAAxChmE,EAAuC,EAAnDgU,SAAYhU,OACrD7Z,EAAWC,cAsBjB,OApBAqa,qBAAU,WACN,GAAKT,KACDA,EAAO5V,OAAS,GAApB,CAEA,IAKMlG,EALSgc,iBAAMF,EAAQ,CACzBG,aAAa,EACbC,mBAAmB,IAGFlc,MAEA,kBAAVA,IAEiB,UAAxBA,EAAM+mB,cACN9kB,EAAS4kE,YAAmB,CAAEJ,cAAc,KACb,SAAxBzmE,EAAM+mB,eACb9kB,EAAS4kE,YAAmB,CAAEJ,cAAc,SAEjD,CAACxkE,EAAU6Z,IAEP,K,OCzBCimE,G,mFAAAA,O,eAAAA,I,eAAAA,I,mBAAAA,I,eAAAA,I,oBAAAA,Q,KAuBZ,ICvBYC,GDuBN1xC,GAA0B,CAC5B8tB,iBAAkB3sC,KAAMksC,WACxBF,WAAY,GACZc,qBAAsB,GACtBF,oBAAqB,GACrBC,qBAAsB,GACtBO,WAAY,EACZmD,OAAQ,KACRE,OAAQ,GACRG,oBAAoB,EACpBE,kBAAgB,sBAAK9wC,KAAMksC,WAAa,IAAxB,gBAA6BlsC,KAAMosC,WAAa,IAAhD,IAChB4E,kBAAmB,GACnBE,YAAa,GAGFsf,gBAAyB3xC,IAAc,SAAC4xC,GAAD,OAClDA,EACKC,QAAQlwD,MAAkB,SAACpvB,EAAD,GAAyC,IAApBg8D,EAAmB,EAA9BujB,QAAWvjB,WAC5C,OAAO,2BACAh8D,GADP,IAEIg8D,kBAGPsjB,QAAQpwD,MAAgB,kBAAMue,MAC9B6xC,QAAQnwD,MAAc,SAACnvB,GACpB,OAAO,2BACAA,GADP,IAEIw7D,qBAAqB,EACrBC,sBAAsB,OAG7B6jB,QAAQvwD,MAAqB,SAAC/uB,EAAD,GAAyC,IAApB46D,EAAmB,EAA9B2kB,QAAW3kB,WAC/C,OAAO,2BACA56D,GADP,IAEI07D,qBAAsBd,OAG7B0kB,QAAQtwD,MAAoB,SAAChvB,EAAD,GAAyC,IAApB46D,EAAmB,EAA9B2kB,QAAW3kB,WAC9C,OAAO,2BACA56D,GADP,IAEIw7D,oBAAqBZ,OAG5B0kB,QAAQrwD,MAAqB,SAACjvB,EAAD,GAAyC,IAApB46D,EAAmB,EAA9B2kB,QAAW3kB,WAC/C,OAAO,2BACA56D,GADP,IAEIy7D,qBAAsBb,OAG7B0kB,QAAQxwD,MAAW,SAAC9uB,EAAD,GAA6D,IAAD,IAAlDu/E,QAAW1kB,EAAuC,EAAvCA,MAAOD,EAAgC,EAAhCA,WAC5C,OAD4E,EAApBF,aAGtC16D,EAAMu7D,iBACT,2BACAv7D,GADP,IAEIu7D,iBAAkBV,EAClBD,gBAYD,2BACA56D,GADP,IAEIu7D,iBAAkBV,EAClBD,kBAIX0kB,QAAQjwD,MAAsB,SAACrvB,EAAD,GAAqC,IAAhBm/D,EAAe,EAA1BogB,QAAWpgB,OAChD,OAAO,2BACAn/D,GADP,IAEIm/D,cAGPmgB,QAAQhwD,MAAuB,SAACtvB,EAAD,GAAqC,IAAhBq/D,EAAe,EAA1BkgB,QAAWlgB,OACjD,OAAO,2BACAr/D,GADP,IAEIq/D,cAGPigB,QAAQ/vD,MAAuB,SAACvvB,EAAD,GAAiD,IAA5Bw/D,EAA2B,EAAtC+f,QAAW/f,mBACjD,OAAO,2BACAx/D,GADP,IAEIw/D,0BAGP8f,QAAQ9vD,MAAqB,SAACxvB,EAAD,GAAgD,IAAD,IAArCu/E,QAAW1kB,EAA0B,EAA1BA,MAAOD,EAAmB,EAAnBA,WACtD,OAAO,2BACA56D,GADP,IAEI0/D,iBAAiB,2BACV1/D,EAAM0/D,kBADG,mBAEX7E,EAAQD,SAIpB0kB,QAAQ7vD,MAAsB,SAACzvB,EAAD,GAAyC,IAApB46D,EAAmB,EAA9B2kB,QAAW3kB,WAChD,OAAO,2BACA56D,GADP,IAEI4/D,kBAAmBhF,OAG1B0kB,QAAQ5vD,MAAmB,SAAC1vB,EAAD,GAA0C,IAArB8/D,EAAoB,EAA/Byf,QAAWzf,YAC7C,OAAO,2BACA9/D,GADP,IAEI8/D,sB,2BCtIJqf,O,iBAAAA,I,cAAAA,Q,YC2BL,SAASK,GAAT,GAA+H,IAAD,IAA3GC,EAA2G,EAA3GA,eAAgBC,EAA2F,EAA3FA,UAAWltE,EAAgF,EAAhFA,UAAWC,EAAqE,EAArEA,UAAWktE,EAA0D,EAA1DA,SAAUtoD,EAAgD,EAAhDA,IAAKuoD,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,YAChG3gF,EAAYD,cAAZC,QAEF4gF,EAAe17B,aAAa5xC,GAC5ButE,EAAgB37B,aAAa3xC,GAE7BitD,EAAmBD,eAEnBugB,GAAW,oBACZjuE,KAAQC,IAAMuiD,MADF,eAEZxiD,KAAQ8F,MAAQ28C,MAFJ,GAKXyrB,EAAQv/E,mBAAQ,WAClB,OAAOm/E,IAAgBV,GAAae,MACrC,CAACL,IAEEM,EAAUz/E,mBAAQ,WACpB,OAAO+R,GAAaA,EAAUhG,QAAQpK,UAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,UACvF,CAACoQ,EAAWvT,IAETkhF,EAAU1/E,mBAAQ,WACpB,OAAO8R,GAAaA,EAAU/F,QAAQpK,UAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,UACvF,CAACmQ,EAAWtT,IAEf,EAAiEygF,EAAS3iB,cAAnDt1B,EAAvB,EAAS7Y,KAAM+tC,OAAmCh1B,EAAlD,EAAoC/Y,KAAMguC,OAEpClsC,EAAWjwB,mBAAQ,WACrB,OAAO8R,GAAaC,GAAaD,EAAU/F,QAAQsS,YAAYtM,EAAUhG,WAC1E,CAAC+F,EAAWC,IAET4tE,EAAY3/E,mBAAQ,WACtB,OAAOiwB,EAAW+W,EAAH,OAAgBE,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYiW,WAC5C,CAACltB,EAAU+W,EAAYE,IAEpB04C,EAAa5/E,mBAAQ,WACvB,OAAOiwB,EAAWiX,EAAH,OAAgBF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYmW,WAC5C,CAACltB,EAAUiX,EAAYF,IAEpBy3B,EAASD,eAETqhB,EAAQ7/E,mBAAQ,WAClB,IAAM8/E,EAASd,EAEf,IAAKltE,IAAcC,IAAcktE,EAAU,OAAOa,EAMlD,GAJIhuE,GAAaC,GAAagtE,EAAep8E,QAAU,IACnDm9E,EAAO,GAAGj6D,MAAV,UAAqB/T,EAAUoR,OAA/B,cAA2CnR,EAAUmR,SAGrD+7D,EAASjlB,YAAa,CACtB,IAAM+lB,EAAW/gB,EAAiB1E,aAAjB,OAA+B+kB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAel/C,cAAc,IA8B7E,GA5BI8+C,EAASlpD,OAASgqD,GAAYhB,EAAep8E,QAAU,IACvDm9E,EAAO,GAAGj6D,MAAQ,6CAAqB/T,EAAUoR,OAA/B,EAA2Cq8D,EAAQ,IAAM,GAAzD,EACdA,EACMtvD,EACIgD,WAAWgsD,EAASlpD,MAAMoK,cAAc,IACxClN,aAAagsD,EAASlpD,MAAMonB,SAAShd,cAAc,IAAM4/C,GAAUpsD,QAAQ,IAC/E1D,EACAgD,WAAWgsD,EAASlpD,MAAMoK,cAAc,IACxClN,WAAWgsD,EAASlpD,MAAMonB,SAAShd,cAAc,IAPzC,EAQdo/C,EAAQ,GAAH,WAAYxtE,EAAUmR,WAG/B+7D,EAASlpD,QAAUgqD,GAAYhB,EAAep8E,QAAU,IACxDm9E,EAAO,GAAGj6D,MAAQ,0CAAqB/T,EAAUoR,OAA/B,EAA2C+M,EAAWgD,WAAWgsD,EAASlpD,MAAMoK,cAAc,IAAMlN,WAAWgsD,EAASlpD,MAAMonB,SAAShd,cAAc,IAArJ,EACdpuB,EAAUmR,UAIdy8D,GAAaC,GAAcb,EAAep8E,QAAU,IAChD87D,IAAW+f,GAAQwB,MAAwC,sDAAhCJ,EAAWz/C,cAAc,GACpD2/C,EAAO,GAAGj6D,MAAQ,uCAAW05D,GAASQ,EAAW,IAAM,GAArC,EACdR,GAASQ,IAAaN,IAAYE,EAAUx/C,cAAc,IAAM4/C,GAAUpsD,QAAQ,GAAGpkB,MAAM,GAAI,IAAMowE,EAAUx/C,cAAc,GAD/G,EAEZo/C,GAASQ,EAAW,IAAM,GAFd,EAEmBR,GAASQ,IAAaN,IAAYG,EAAWz/C,cAAc,IAAM4/C,GAAUpsD,QAAQ,GAAGpkB,MAAM,GAAI,GAAKqwE,EAAWz/C,cAAc,KAEnK2/C,EAAO,GAAGj6D,MAAQ,iCAItBu5D,GAAgBW,GAAYd,EAAShiB,cAAc7C,YAAc6kB,EAAShiB,cAAc3C,YAAc3jC,EAAK,CAC3G,IAGI3kB,EACAC,EAJEguE,EAAUhtD,WAAW0hB,OAAO3nC,OAAOiyE,EAAShiB,cAAc7C,WAAWj6B,cAAc,IAAIxM,QAAQ,KAC/FusD,EAAUjtD,WAAW0hB,OAAO3nC,OAAOiyE,EAAShiB,cAAc3C,WAAWn6B,cAAc,IAAIxM,QAAQ,KAKrG,GAAI4rD,EAAO,CACP,IAAMY,EAAYnzE,OAAOoyE,EAAaj/C,cAAc,IAAIxM,QAAQ,GAC1DysD,EAAYpzE,OAAO+yE,GAAUpsD,QAAQ,GAE3C3hB,EAAS0tE,EAAUO,EAAUhtD,YAAYgtD,GAAWE,GAAWxsD,QAAQ,IACvE1hB,EAASwtE,EAAUS,EAAUjtD,YAAYitD,GAAWE,GAAWzsD,QAAQ,IAEvEmsD,EAAO,GAAGj6D,MAAQ,2BAAgB7T,EAASC,SAE3CD,EAASiuE,EACThuE,EAASiuE,EAETJ,EAAO,GAAGj6D,MAAQ,iDAAyB/T,EAAUoR,OAAnC,EAAwDnR,EAAUmR,OAAlE,OAAelR,EAAf,OAA8CC,UAgBxE,GAZI0tE,GAAaC,GAAcb,EAAep8E,QAAU,IAChD87D,IAAW+f,GAAQwB,KACnBF,EAAO,GAAGj6D,MAAQ,uCAAW05D,EAAQ,IAAM,GAAzB,EACdA,GAASF,IAAkBI,IAAYE,EAAUx/C,cAAc,IAAMk/C,EAAcl/C,cAAc,IAAIxM,QAAQ,GAAGpkB,MAAM,GAAI,GAAKvC,OAAO2yE,EAAUx/C,cAAc,IAAIxM,QAAQ,GAD5J,EAEZ4rD,EAAQ,IAAM,GAFF,EAGdA,GAASF,IAAkBI,IAAYG,EAAWz/C,cAAc,IAAMk/C,EAAcl/C,cAAc,IAAIxM,QAAQ,GAAGpkB,MAAM,GAAI,GAAKvC,OAAO4yE,EAAWz/C,cAAc,IAAIxM,QAAQ,KAGhLmsD,EAAO,GAAGj6D,MAAQ,iCAItBu5D,GAAgBC,GAAiBJ,EAAShiB,cAAc7C,YAAc6kB,EAAShiB,cAAc3C,YAAc3jC,EAAK,CAChH,IAGI3kB,EACAC,EAJEguE,EAAUhtD,WAAW0hB,OAAO3nC,OAAOiyE,EAAShiB,cAAc7C,WAAWj6B,cAAc,IAAIxM,QAAQ,KAC/FusD,EAAUjtD,WAAW0hB,OAAO3nC,OAAOiyE,EAAShiB,cAAc3C,WAAWn6B,cAAc,IAAIxM,QAAQ,KAKrG,GAAI4rD,EAAO,CACP,IAAMY,EAAYnzE,OAAOoyE,EAAaj/C,cAAc,IAAIxM,QAAQ,GAC1DysD,EAAYpzE,OAAOqyE,EAAcl/C,cAAc,IAAIxM,QAAQ,GAEjE3hB,EAAS0tE,EAAUO,EAAUhtD,YAAYgtD,GAAWE,GAAWxsD,QAAQ,IACvE1hB,EAASwtE,EAAUS,EAAUjtD,YAAYitD,GAAWE,GAAWzsD,QAAQ,IAEvEmsD,EAAO,GAAGj6D,MAAQ,2BAAgB7T,EAASC,SAE3CD,EAASiuE,EACThuE,EAASiuE,EAETJ,EAAO,GAAGj6D,MAAQ,iDAAyB/T,EAAUoR,OAAnC,EAAwDnR,EAAUmR,OAAlE,OAAelR,EAAf,OAA8CC,IAK5E,OAAO6tE,IACR,CAACf,EAAgBC,EAAWltE,EAAWC,EAAWktE,EAAUM,EAAOvgB,EAAkBqgB,IAExF,OACI,qBAAKv+E,UAAU,UAAUnD,MAAO,CAAE0iF,eAAgB,iBAAlD,SACKC,gBACG,sBAAKx/E,UAAW,oBAAhB,UACI,qBACIA,UAAW,0BACXnD,MAAO,CACHyrC,WAAW,kCAAD,OAAqC,IAAMy2C,EAAMl9E,QAAWo8E,EAAep8E,OAAS,GAApF,+BACL,IAAMk9E,EAAMl9E,QAAWo8E,EAAep8E,OAAS,GAD1C,OAHlB,SAQI,sBAAK7B,UAAW,yBAAhB,UACKi+E,EAAep8E,OAAS,EAD7B,OACoCk9E,EAAMl9E,YAI9C,sBAAK7B,UAAW,OAAhB,UACI,oBAAInD,MAAO,CAAE49E,WAAY,eAAgBjzE,WAAY,UAAYxH,UAAW,SAA5E,mBACK++E,EAAMd,EAAep8E,eAD1B,aACK,EAA8BkjB,QAEnC,qBAAI/kB,UAAW,gBAAf,UACI,qCACC++E,EAAMd,EAAep8E,OAAS,GAAKk9E,EAAMd,EAAep8E,OAAS,GAAGkjB,MAAQ,yBAKzFg6D,EAAMz+E,KAAI,SAACgrD,EAAIrqD,GAAL,OACN,sBAEIjB,UAAS,+BAA0Bi+E,EAAep8E,OAAS,GAAKZ,IAAM40B,EAAM,YAAc,IAC1FrrB,QAAS,kBAAM4zE,EAAiB,CAAE5I,UAAWyI,EAAep8E,OAAS,GAAKZ,IAAM40B,EAAKnX,KAAMzd,EAAGo7B,KAAMivB,EAAGjvB,QAH3G,UAKI,qBAAKr8B,UAAS,2CAAsCiB,IAAMg9E,EAAep8E,QAAWg0B,EAAkB,GAAZ,UAA5E,YAA8FooD,EAAep8E,OAAS,GAAKZ,GAAK40B,EAAM,OAAS,GAA/I,KAAd,SACK50B,EAAI,IAET,qBAAKjB,UAAS,UAAKiB,IAAMg9E,EAAep8E,QAAWg0B,EAAkC,GAA5B,2BAAzD,SAA4Fy1B,EAAGvmC,UAP1F9jB,Q,6DCtKtB,SAASw+E,GAAT,GAgBe,IAAD,EAfjBv8E,EAeiB,EAfjBA,SACAqoC,EAciB,EAdjBA,cACArqC,EAaiB,EAbjBA,MACAg+B,EAYiB,EAZjBA,UACAwgD,EAWiB,EAXjBA,UACA3xC,EAUiB,EAVjBA,YACA4xC,EASiB,EATjBA,aACAC,EAQiB,EARjBA,cACAC,EAOiB,EAPjBA,YAEAv9B,GAKiB,EANjBzrB,SAMiB,EALjByrB,QACAw9B,EAIiB,EAJjBA,MACAnjF,EAGiB,EAHjBA,MACA0hF,EAEiB,EAFjBA,YACA0B,EACiB,EADjBA,OAEA,EAA6BtiF,cAArBE,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QAEXglD,EAAUn/C,YAAkB,OAAC5F,QAAD,IAACA,SAAWoC,EAAZ,OAAuBmD,QAAvB,IAAuBA,SAAYnD,GAC/DigF,EAAap9B,aAAY,OAAC1/C,QAAD,IAACA,SAAYnD,GAE5C,EAA0CsF,mBAAS,IAAnD,mBAAO46E,EAAP,KAAsBC,EAAtB,KACA,EAA8C76E,mBAAS,IAAvD,mBAAO86E,EAAP,KAAwBC,EAAxB,KAEM5B,GAAW,oBACZjuE,KAAQC,IAAMuiD,MADF,eAEZxiD,KAAQ8F,MAAQ28C,MAFJ,GAKXqtB,EAAW3qB,aAAakF,aAAe15D,EAAOgC,EAAYA,EAASI,SAAWJ,EAAS+H,QAAU/H,OAAYnD,IAAY,GACzHugF,EAAajsE,aAAsBumD,aAAe,IAAK4jB,EAAY9gF,GAAW6S,KAAQC,MAApD,OAA2DtN,QAA3D,IAA2DA,SAAYnD,GAEzGwgF,EAAgB39B,aAAY,OAAC1/C,QAAD,IAACA,SAAYnD,GACzCygF,EAAqB59B,aAAY,OAACrX,QAAD,IAACA,SAAiBxrC,GAEnDm+D,EAAmBD,eACnBG,EAAoBD,eAEpBsgB,EAAQv/E,mBAAQ,WAClB,OAAOm/E,IAAgBV,GAAae,MACrC,CAACL,IAEEoC,EAAe3iF,uBAAY,WAC7B,IAAY,OAARoF,QAAQ,IAARA,OAAA,EAAAA,EAAU+H,QAAQpK,WAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,QAKtE,GAAI49E,GAAS8B,EACTxyC,EAAY8F,QAAQosC,GAAiBM,EAAclhD,cAAc,KACjE+gD,EAAmBvsC,QAAQosC,GAAiBM,EAAclhD,cAAc,UACrE,GAAIo/C,GAASsB,GAAU3hB,GAAqBoiB,EAC/CzyC,EAAY8F,QAAQosC,GAAiB7hB,GAAqBoiB,EAAmBnhD,cAAc,KAC3F+gD,EAAmBvsC,QAAQosC,GAAiB7hB,GAAqBoiB,EAAmBnhD,cAAc,UAC/F,GAAIo/C,GAASvgB,EAAiB5E,YAAc4E,EAAiB1E,WAAY,CAC5E,IAAMknB,EAAkBX,EAAS7hB,EAAiB1E,WAAa0E,EAAiB5E,WAChFvrB,EAAY8F,QAAQosC,GAAiBS,IACrCN,EAAmBvsC,QAAQosC,GAAiBS,SACrCjC,GAASrgB,IAAsB2hB,GAAUS,GAChDzyC,EAAY8F,QAAQosC,GAAiB7hB,GAAqBoiB,EAAmBnhD,cAAc,KAC3F+gD,EAAmBvsC,QAAQosC,GAAiB7hB,GAAqBoiB,EAAmBnhD,cAAc,MAC1Fo/C,IACJ8B,EACAL,EAAiBrsC,QAAQssC,GAAmBI,EAAclhD,cAAc,KACjE0gD,GAAU7hB,EAAiB1E,WAClC0mB,EAAiBrsC,QAAQssC,GAAmBjiB,EAAiB1E,cACrDumB,GAAU7hB,EAAiB5E,YACnC4mB,EAAiBrsC,QAAQssC,GAAmBjiB,EAAiB5E,aAEjEvrB,EAAYoyC,SAzBZpyC,EAAYkyC,KA2BjB,CAACE,EAAiBF,EAAeK,EAAYD,EAAUE,EAAexyC,IAEzE71B,qBAAU,WACFhX,IACIq/E,EACAL,EAAiBrsC,QAAQ3yC,GAASq/E,EAAclhD,cAAc,KACvD0gD,GAAU7hB,EAAiB1E,WAClC0mB,EAAiBrsC,QAAQ3yC,GAASg9D,EAAiB1E,cAC3CumB,GAAU7hB,EAAiB5E,WACnC4mB,EAAiBrsC,QAAQ3yC,GAASg9D,EAAiB5E,aAC5C8E,GAAqBoiB,GAC5BN,EAAiBrsC,QAAQ3yC,GAASk9D,GAAqBoiB,EAAmBnhD,cAAc,KAG5F+gD,EAAmBl/E,MAExB,CAACk9D,EAAmBF,EAAkBqiB,EAAeC,EAAoBt/E,IAE5E,IAAM4hD,EAAgB5jD,mBAAQ,WAC1B,IAAKwjD,IAAYx/C,EAAU,OAAO,cAACigD,GAAA,EAAD,CAAQxsB,OAAQ,kBAElD,IAAMosB,EAEIlP,OADN4qC,GAASuB,EACI7tD,WAAW0hB,SAAS6O,EAAQrjB,cAAc,IAAM2gD,EAAW3gD,cAAc,IAAIxM,QAAQ,KACrFV,WAAW0hB,OAAO3nC,OAAOw2C,EAAQrjB,cAAc,IAAIxM,QAAQ,MAE5E,OAAIkwB,EAAS9yC,MAAM,KAAK,GAAGpO,OAAS,GAC1B,GAAN,OAAU48E,EAAQ,KAAO,IAAzB,OAA8B17B,EAASt0C,MAAM,EAAG,GAAhD,cAAwDgwE,EAAQ,GAAH,WAAYv7E,EAASkf,SAG3D,KAAtBsgC,EAAQ7vB,UACH,GAAN,OAAU4rD,EAAQ,KAAO,GAAzB,YAA+BA,EAAQ,GAAH,WAAYv7E,EAASkf,UAExDsgC,EAAQ7vB,UAAY,KACf,KAAN,OAAY4rD,EAAQ,KAAO,GAA3B,iBAAsCA,EAAQ,GAAH,WAAYv7E,EAASkf,SAG9D,GAAN,OAAUq8D,EAAQ,KAAO,IAAzB,OAA8B17B,GAA9B,OAAyC07B,EAAQ,GAAH,WAAYv7E,EAASkf,WACpE,CAACsgC,EAAS+7B,EAAOv/C,EAAWh8B,IAE/B,OACI,sBAAKlD,UAAU,sEAAf,UACKsiD,GACG,sBAAKtiD,UAAU,6DAAf,UACI,8BACI,oEAEJ,qBAAKA,UAAU,QAAf,SACI,0DAIZ,sBAAKA,UAAU,cAAcnD,MAAO,CAAE8jF,cAAer+B,EAAS,OAAS,SAAvE,UACI,qBAAKtiD,UAAU,0BAAf,SACI,cAAC2/B,GAAA,EAAD,CAAc/iC,KAAM,OAAQsG,SAAUA,MAE1C,sBAAKlD,UAAU,OAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,eAAhB,SACI,qCAEJ,+BAAO8iD,OAEX,8BACI,wBAAQt4C,QAASk1E,EAAW7oD,SAAUipD,GAAuC,OAAvB,OAAPp9B,QAAO,IAAPA,OAAA,EAAAA,EAASrjB,cAAc,IAAYr/B,UAAU,6BAA5F,SACI,qCAIZ,qBAAKA,UAAU,OAAf,SACK2/E,EACGE,EACI,yBAAQ7/E,UAAU,wCAAwC62B,UAAQ,EAAlE,UACI,cAACssB,GAAA,EAAD,CAAQtmD,MAAO,CAAE65B,YAAa,OAASC,OAAQ,iBAC/C,+BACI,yCAIR,wBAAQ32B,UAAU,iCAAiCwK,QAASo1E,EAA5D,SACI,yCAGS7/E,IAAjB4/E,EACA,sBAAK3/E,UAAU,qCAAf,UACI,+BACI,cAAC,KAAD,CAAOpD,KAAM,OAEjB,sBAAMoD,UAAU,SAASnD,MAAO,CAAEqrB,WAAY,OAA9C,SACI,wCAGR,UAGZ,sBAAKloB,UAAU,eAAf,UACKy+E,GACG,uBAAO3I,QAAO,wBAAY5yE,QAAZ,IAAYA,OAAZ,EAAYA,EAAUkf,QAAUpiB,UAAU,yBAAxD,eAIJ,cAAC,KAAD,CACIkB,MAAOu9E,EAAQwB,EAAgBE,EAC/BpxE,GAAE,wBAAY7L,QAAZ,IAAYA,OAAZ,EAAYA,EAAUkf,QACxByU,SAAUyrB,EACVxvB,OAAQ2tD,EACRhnE,YAAa,SAAC2pC,GAAD,OAAUq7B,EAAQyB,EAAiB98B,EAAIppC,QAAUomE,EAAmBh9B,EAAIppC,SACrFha,UAAS,mCAA8By+E,EAAQ,SAAW,GAAjD,gBACT/kE,YAAa,8BAGpB/c,GAAS,qBAAKqD,UAAU,iCAAf,SAAiDrD,O,qBCpMhE,SAASikF,GAAT,GAgBU,IAfb5vE,EAeY,EAfZA,UACAC,EAcY,EAdZA,UACA4vE,EAaY,EAbZA,YACAC,EAYY,EAZZA,YACAC,EAWY,EAXZA,cACAC,EAUY,EAVZA,eACAC,EASY,EATZA,cACAC,EAQY,EARZA,eACAC,EAOY,EAPZA,gBACAC,EAMY,EANZA,iBAMY,IALZC,yBAKY,aAJZC,yBAIY,SAHZzqD,EAGY,EAHZA,SACA4kC,EAEY,EAFZA,WACAC,EACY,EADZA,WAEM6lB,EAAUriF,mBAAQ,WACpB,MAAuB,MAAhB2hF,GAAuC,MAAhBC,IAC/B,CAACD,EAAaC,IACjB,EAA+Cz7E,oBAAS,GAAxD,mBAAOm8E,EAAP,KAA8BC,EAA9B,KACA,EAA8Cp8E,oBAAS,GAAvD,mBAAOq8E,EAAP,KAA6BC,EAA7B,KAGMC,EAAsB9jF,uBAAY,WAChC4jF,GACAC,GAAc,GAEdH,GACAC,GAAc,GAElBN,EAAgBJ,OACjB,CAACW,EAAsBX,EAAeI,IAEnCU,EAAuB/jF,uBAAY,WACrCsjF,EAAiBJ,OAClB,CAACA,EAAgBI,IAEpBlpE,qBAAU,WACDujD,KAEQulB,EAAe,KAEdvlB,GACVgmB,GAAc,MAGnB,CAACI,EAAsBb,EAAgBvlB,IAE1C,IAAMqmB,EAAsBhkF,uBAAY,WACpCqjF,EAAgBF,OACjB,CAACA,EAAeE,IAEnBjpE,qBAAU,WACDwjD,KAEQulB,EAAc,KAEbvlB,GACVimB,GAAc,MAGnB,CAACG,EAAqBb,EAAevlB,IAExC,IAAMqmB,EAAuBjkF,uBAAY,WACjC4jF,GACAC,GAAc,GAEdH,GACAC,GAAc,GAElBL,EAAiBF,OAClB,CAACM,EAAuB9lB,EAAYD,EAAYylB,EAAgBE,IAEnE,OACI,sBAAKphF,UAAW,+DAAhB,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,KAAD,CAAQnD,MAAO,CAAE0K,QAAS,QAASi5C,KAAM,gBAAkB5jD,KAAM,KACjE,sBAAMoD,UAAU,QAAhB,SACI,2CAGR,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,yBAAyBnD,MAAO,CAAEwM,QAASk4E,EAAU,MAAQ,KAA5E,UACI,qBAAKvhF,UAAU,2BAA2BnD,MAAO,CAAEgH,MAAM,GAAD,OAAKg9E,EAAL,KAAqBv4C,WAAY,UAAWlF,aAA+B,OAAhBy9C,EAAsB,MAAQ,iBACjJ,qBAAK7gF,UAAU,2BAA2BnD,MAAO,CAAEgH,MAAM,GAAD,OAAKi9E,EAAL,KAAqBx4C,WAAY,UAAWlF,aAA+B,OAAhB09C,EAAsB,MAAQ,sBAGzJ,sBAAK9gF,UAAU,OAAOnD,MAAO,CAAEwM,QAASk4E,EAAU,GAAM,KAAxD,UACI,sBAAKvhF,UAAU,cAAf,UACI,qBAAKnD,MAAO,CAAEgH,MAAO,OAAQunC,OAAQ,OAAQhI,aAAc,MAAO2F,gBAAiB,aACnF,qBAAK/oC,UAAU,QAAf,gBAAwBgR,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAWoR,SACnC,qBAAKpiB,UAAU,YAAf,mBAA+BkM,OAAO20E,GAAamB,YAAY,GAA/D,OACA,sBAAKhiF,UAAU,GAAf,UACI,wBAAQwK,QAASo3E,EAAqB/qD,SAAUwqD,GAAqBxqD,EAAU72B,UAAU,mBAAzF,eAGA,wBAAQwK,QAASs3E,EAAqBjrD,SAAU6qD,GAAwBJ,GAAqBzqD,EAAU72B,UAAU,mBAAjH,qBAKR,sBAAKA,UAAU,SAAf,UACI,qBAAKnD,MAAO,CAAEgH,MAAO,OAAQunC,OAAQ,OAAQhI,aAAc,MAAO2F,gBAAiB,aACnF,qBAAK/oC,UAAU,QAAf,gBAAwBiR,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAWmR,SACnC,qBAAKpiB,UAAU,YAAf,mBAA+BuhF,EAAU,GAAK,KAAOV,GAAamB,YAAY,GAA9E,OACA,sBAAKhiF,UAAU,GAAf,UACI,wBAAQwK,QAASq3E,EAAsBhrD,SAAU2qD,GAAyBH,GAAqBxqD,EAAU72B,UAAU,mBAAnH,eAGA,wBAAQwK,QAASu3E,EAAsBlrD,SAAUyqD,GAAqBzqD,EAAU72B,UAAU,mBAA1F,wBAMZ,mBAAGA,UAAW,cAAd,SACI,yEAEJ,mBAAGA,UAAW,eAAd,SACI,0D,wDCxIT,SAASiiF,GAAT,GAA8D,IAAzCl9D,EAAwC,EAAxCA,MAAOm9D,EAAiC,EAAjCA,YAAaxjE,EAAoB,EAApBA,KAC5C,OACI,sBAAK1e,UAAU,cAAf,UACI,cAACmiF,GAAA,EAAD,UACI,sDAAkBp9D,OAEtB,qBAAK/kB,UAAS,6BAAwBkiF,EAAc,OAAS,GAA/C,gBAAd,SAAgFA,EAAc,cAAC,KAAD,CAAOvrD,OAAQ,QAASqjB,YAAa,EAAGp9C,KAAM,KAAS8hB,IACrJ,qBAAK1e,UAAU,wBAAf,SAAwC+kB,OCgB7C,SAASq9D,GAAT,GAA8H,IAAD,QAArGpxE,EAAqG,EAArGA,UAAWC,EAA0F,EAA1FA,UAAWktE,EAA+E,EAA/EA,SAAU+D,EAAqE,EAArEA,YAAaG,EAAwD,EAAxDA,eAAgBhE,EAAwC,EAAxCA,YAAaiE,EAA2B,EAA3BA,SAC7F5kF,EAAYD,cAAZC,QAER,EAAyCq7D,eAAjCgB,EAAR,EAAQA,iBAAkBX,EAA1B,EAA0BA,WAE1B,EAA8EH,aAAwBklB,EAASjlB,aAAvGC,EAAR,EAAQA,cAAeI,EAAvB,EAAuBA,cAAeE,EAAtC,EAAsCA,iBAAkBC,EAAxD,EAAwDA,kBAGxD,EAA+Dx6D,mBAAQ,WACnE,OAAOi/E,EAASphE,QACjB,CAACohE,IAFmBv8C,EAAvB,EAASvU,KAAM+tC,OAAkCv5B,EAAjD,EAAmCxU,KAAMguC,OAIzC,EAAuFuB,aAAoB,OACvG5rD,QADuG,IACvGA,SAAajR,EAD0F,OAEvGkR,QAFuG,IAEvGA,SAAalR,EACbo+E,EAAS3jB,WACT54B,EACAC,EACAs8C,EAAShzE,MANL0xD,EAAR,EAAQA,kBAAmBK,EAA3B,EAA2BA,kBAAmBC,EAA9C,EAA8CA,kBAAmBC,EAAjE,EAAiEA,kBAU3DmlB,GAAgB,oBACjBxoB,EAAmBX,GADF,eAEjB+kB,EAAShkB,eAFQ,oBAESgkB,EAAShiB,cAAcgiB,EAAShkB,uBAFzC,aAES,EAAiD96B,cAAc,UAFxE,QAE8E,IAF9E,GAKhBmjD,GAAU,oBACXp1D,KAAMksC,WAAa5D,aAAayoB,EAAShiB,cAAc/uC,KAAMksC,aAAa,IAD/D,eAEXlsC,KAAMosC,WAAa9D,aAAayoB,EAAShiB,cAAc/uC,KAAMosC,aAAa,IAF/D,GAMVipB,EAA8D,CAACr1D,KAAMksC,WAAYlsC,KAAMosC,YAAYz4D,QAAO,SAACmuB,EAAamqC,GAC1H,OAAO,2BACAnqC,GADP,mBAEKmqC,EAAQ7yB,aAAe23C,EAAS/jB,iBAAiBf,QAEvD,IAEGqpB,EAAgE,CAACt1D,KAAMksC,WAAYlsC,KAAMosC,YAAYz4D,QAAO,SAACmuB,EAAamqC,GAAW,IAAD,IACtI,OAAO,2BACAnqC,GADP,mBAEKmqC,EAFL,UAEaopB,EAAWppB,UAFxB,aAEa,EAAmB32B,QAAnB,UAA2By7C,EAAShiB,cAAc9C,UAAlD,QAA4D,SAE1E,IAGH,EAAsCiS,aAClC6S,EAAShiB,cAAc/uC,KAAMksC,aAAesB,aAAe,yBAA0B5pD,GACrFtT,EAAUkZ,KAAuClZ,QAAWqC,GAFhE,mBAAO4iF,EAAP,KAAkBC,EAAlB,KAIA,EAAsCtX,aAClC6S,EAAShiB,cAAc/uC,KAAMosC,aAAeoB,aAAe,yBAA0B3pD,GACrFvT,EAAUkZ,KAAuClZ,QAAWqC,GAFhE,mBAAO8iF,EAAP,KAAkBC,EAAlB,KAKMC,EAAgB7jF,mBAAQ,WAC1B,GAAIyjF,IAActX,KAAcgB,QAEhC,OAAIsW,IAActX,KAAce,cAEzBuW,IAActX,KAAca,WACpC,CAACyW,IAEEK,EAAgB9jF,mBAAQ,WAC1B,GAAI2jF,IAAcxX,KAAcgB,QAEhC,OAAIwW,IAAcxX,KAAce,cAEzByW,IAAcxX,KAAca,WACpC,CAAC2W,IAEJ,EAAmC3jF,mBAAQ,WAAO,IAAD,EACvCyjD,EAAY,UAAGw7B,EAASlpD,aAAZ,aAAG,EAAgBoK,cAAc,GAE7C4jD,EAAO9E,EAAS1iB,WAAWp8B,cAAc,GACzC4jB,EAAQk7B,EAASziB,WAAWr8B,cAAc,GAGhD,GAAc,wDAAV4jB,GAA6E,4CAAVA,EAAqD,MAAO,CAAC,KAAM,MAE1I,IAAKN,EAAc,MAAO,CAAC,IAAK,KAEhC,IAAKsgC,IAAShgC,EAAO,MAAO,CAAC,IAAK,KAElC,IAAKggC,GAAQhgC,EAAO,MAAO,CAAC,IAAK,OAEjC,IAAKA,GAASggC,EAAM,MAAO,CAAC,MAAO,KAEnC,GAAI9E,EAAS7hB,iBACT,MAAO,CAAC,IAAK,OAGjB,GAAI6hB,EAAS5hB,iBACT,MAAO,CAAC,MAAO,KAGnB,GAAI0mB,GAAQhgC,GAASN,EAAc,CAC/B,IAAMugC,GAAavgC,GAAgBsgC,EAC7BE,GAAclgC,GAASN,EAEvBygC,GAAYF,IAAaC,EAEzBE,EAAyB,KAAZH,EAAmBE,EAChCE,EAA2B,KAAbH,EAAoBC,EAExC,OAAIjF,EAAS1jB,YACF,CAAC5mB,OAAOwvC,GAAWxvC,OAAOyvC,IAE1B,CAACzvC,OAAOyvC,GAAYzvC,OAAOwvC,IAI1C,MAAO,CAAC,IAAK,OACd,CAACryE,EAAWC,EAAWktE,IA1C1B,mBAAO0C,GAAP,KAAoBC,GAApB,KA4CMyC,GAAiBrkF,mBAAQ,WAC3B,IAA4B,IAAvBi/E,EAASrkB,WAA0C,IAAvBqkB,EAASrkB,YAAqBqkB,EAASzsC,cAAiB1gC,EAAzF,CAEA,IAAMwyE,EAAerF,EAASzsC,aAAazhC,MAAM,KAAK,GAEtD,OAAIe,EAAU/F,QAAQmX,SAAWohE,EAAqBrF,EAASzsC,kBAA/D,KAGD,CAACysC,EAAUntE,IAERyyE,GAAiBvkF,mBAAQ,WAC3B,IAA4B,IAAvBi/E,EAASrkB,WAA0C,IAAvBqkB,EAASrkB,YAAqBqkB,EAASzsC,cAAiBzgC,EAAzF,CAEA,IAAMuyE,EAAerF,EAASzsC,aAAazhC,MAAM,KAAK,GAEtD,OAAIgB,EAAUhG,QAAQmX,SAAWohE,EAAqBrF,EAASzsC,kBAA/D,KAGD,CAACysC,EAAUltE,IAERyyE,GAAUC,cACV/lF,GAAWC,cAEjBqa,qBAAU,WACN,OAAO,WACoB,QAAnBwrE,GAAQz2C,QACRrvC,GAASswB,aAAkB,CAAEowC,YAAagkB,SAKtD,IAAMzD,GAAY3/E,mBAAQ,WACtB,OAAOi/E,EAAS1jB,YAAc0jB,EAASziB,WAAWrf,SAAW8hC,EAAS1iB,aACvE,CAAC0iB,IAEEW,GAAa5/E,mBAAQ,WACvB,OAAOi/E,EAAS1jB,YAAc0jB,EAAS1iB,WAAWpf,SAAW8hC,EAASziB,aACvE,CAACyiB,IAEJ,OACI,sBAAKn+E,UAAU,MAAf,UACI,cAAC,GAAD,CAAW+kB,MAAO,uBAAkBm9D,YAAaA,EAAaxjE,KAAM2jE,EAAiB,EAAI,IACxFlE,EAAS5iB,cACN,qBAAKv7D,UAAU,kCAAf,SACI,0CAGR,sBAAKA,UAAU,gCAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,OAAOnD,MAAO,CAAEumC,aAAc,OAA7C,SACI,cAAC,GAAD,CACIlgC,SAAU8N,EACVu6B,cAAet6B,EACf/P,MAAOqhF,EAAiBn1D,KAAMksC,YAC9Bp6B,UAAWsjD,EAAWp1D,KAAMksC,YAC5BvrB,YAAaorB,EACbumB,UAAW,0BAAMvmB,EAAa,oBAACspB,EAAWr1D,KAAMksC,mBAAlB,aAAC,EAA8BpW,iBAA/B,QAA4C,KAC1Ey8B,aAAcoD,EACdlD,YAAa8C,IAActX,KAAcc,QACzCyT,cAAegD,EACf/rD,UAAU,EACVyrB,OAAQ67B,EAAS7hB,iBACjBwjB,QAAS4C,EAAat1D,KAAMksC,YAC5B38D,MAAO4mF,GACPlF,YAAaA,EACb0B,QAAQ,MAGhB,8BACI,cAAC,GAAD,CACI78E,SAAU+N,EACVs6B,cAAev6B,EACf9P,MAAOqhF,EAAiBn1D,KAAMosC,YAC9Bt6B,UAAWsjD,EAAWp1D,KAAMosC,YAC5BzrB,YAAawrB,EACbmmB,UAAW,0BAAMnmB,EAAa,oBAACkpB,EAAWr1D,KAAMosC,mBAAlB,aAAC,EAA8BtW,iBAA/B,QAA4C,KAC1Ey8B,aAAcqD,EACdnD,YAAagD,IAAcxX,KAAcc,QACzCyT,cAAekD,EACfjsD,UAAU,EACVyrB,OAAQ67B,EAAS5hB,iBACjBujB,QAAS4C,EAAat1D,KAAMosC,YAC5B78D,MAAO8mF,GACPpF,YAAaA,EACb0B,QAAQ,SAIpB,qBAAK//E,UAAU,wDAAf,SACI,cAAC,GAAD,CACIgR,UAAWA,EACXC,UAAWA,EACX4vE,YAAaA,GACbC,YAAaA,GACbC,cAAe5C,EAAS1jB,YAAc2C,EAAoBP,EAC1DmkB,eAAgB7C,EAAS1jB,YAAcyC,EAAoBC,EAC3D8jB,cAAe9C,EAAS1jB,YAAc0C,EAAoBD,EAC1DgkB,eAAgB/C,EAAS1jB,YAAcoC,EAAoBO,EAC3DkkB,kBAAmBnD,EAAS7iB,aAAajuC,KAAMguC,OAC/CgmB,kBAAmBlD,EAAS7iB,aAAajuC,KAAMguC,OAC/C8lB,gBAAiB1nB,EACjB2nB,iBAAkB1nB,EAClB+B,WAAU,OAAEojB,SAAF,IAAEA,QAAF,EAAEA,GAAWx/C,cAAc,GACrCq8B,WAAU,OAAEojB,SAAF,IAAEA,QAAF,EAAEA,GAAYz/C,cAAc,GACtCxI,UAAU,Y,OClP3B,SAAS+sD,GAAT,GAAoE,IAA/C1wE,EAA8C,EAA9CA,IAAKq4C,EAAyC,EAAzCA,IAAK2N,EAAoC,EAApCA,YAClC,OADsE,EAAvBp2D,QAGvC,qBAAK9C,UAAU,uCAAuCnD,MAAO,CAAEiH,QAAS,eAAxE,SACI,cAACq/C,GAAA,EAAD,CAAQxsB,OAAQ,oBAKxB,sBAAK32B,UAAU,2CAAf,UACI,qBAAKA,UAAU,4BAAf,SAA4Ck5D,EAAc,kBAAc,8BACxE,sBAAKl5D,UAAU,IAAf,UACI,qBAAKA,UAAS,2BAAsBurD,GAAO,UAA3C,SACI,+BAAOr4C,MAEVq4C,GACG,qBAAKvrD,UAAU,kBAAf,SACI,+BAAOurD,Y,qBCXxB,SAASs4B,GAAT,GAA6E,IAArD79D,EAAoD,EAApDA,MAAO89D,EAA6C,EAA7CA,2BAClC,OACI,8BACI,sBAAK9jF,UAAW,iCAAhB,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,KAAD,CAAMnD,MAAO,CAAE0K,QAAS,SAAWi5C,KAAM,QAAS5jD,KAAM,KACxD,sBAAMoD,UAAU,QAAhB,SACI,6CAGPgmB,EACG,qBAAKhmB,UAAU,OAAf,SACI,oBAAIA,UAAU,YAAd,SACKgmB,EAAM1lB,KAAI,SAAC+hD,EAAM/3C,GAAP,OACP,oBAActK,UAAU,iBAAxB,SACI,cAAC+jF,GAAD,CAAaD,2BAA4BA,EAA4BzhC,KAAMA,KADtE/3C,UAOrB,qBAAKtK,UAAU,OAAf,SACI,cAACmjD,GAAA,EAAD,CAAQxsB,OAAQ,yBAQxC,SAASotD,GAAT,GAAsJ,IAA/H1hC,EAA8H,EAA9HA,KAAMyhC,EAAwH,EAAxHA,2BACnB5yE,EAAS27B,aAASwV,EAAK,IACvBlxC,EAAS07B,aAASwV,EAAK,IAErB3kD,EAAYD,cAAZC,QAER,IAAKwT,IAAWC,EAAQ,OAAO,wBAE/B,MAAyBD,EAAOqM,YAAYpM,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOzF,EAAP,KAAeE,EAAf,KAEMq4E,EAAS3zE,KAAcgT,aAAa3lB,GAAW6S,KAAQC,KAAKkT,sBAAsB7iB,QAExF,OACI,sBAAK2J,QAAS,kBAAMs5E,EAA2B,CAACr4E,EAAO5K,QAAQ6hB,cAAe/W,EAAO9K,QAAQ6hB,iBAAiB1iB,UAAS,2BAAvH,UACI,sBAAMA,UAAU,qBAAhB,SACI,cAAC2/B,GAAA,EAAD,CAAcz8B,SAAUuI,EAA2B7O,KAAM,WAE7D,+BAAO6O,EAAO5K,QAAQ6hB,gBAAkBshE,EAAS3zE,KAAcgT,aAAa3lB,GAAW6S,KAAQC,KAAKkT,sBAAsBtB,OAAS3W,EAAO2W,SAC1I,sBAAMpiB,UAAU,qBAAhB,eACA,sBAAMA,UAAU,qBAAhB,SACI,cAAC2/B,GAAA,EAAD,CAAcz8B,SAAUyI,EAA2B/O,KAAM,WAE7D,+BAAO+O,EAAO9K,QAAQ6hB,gBAAkBshE,EAAS3zE,KAAcgT,aAAa3lB,GAAW6S,KAAQC,KAAKkT,sBAAsBtB,OAASzW,EAAOyW,Y,+BCjD/I,SAAS6hE,GAAT,GAAgG,IAA3EC,EAA0E,EAA1EA,qBAAsBhhF,EAAoD,EAApDA,SAAUqoC,EAA0C,EAA1CA,cAAe8yC,EAA2B,EAA3BA,YACvE,EAAyCh5E,oBAAS,GAAlD,mBAAO8+E,EAAP,KAAoBC,EAApB,KAEQzmF,EAAYF,cAAZE,QAEF+kD,EAAUn/C,YAAkB,OAAC5F,QAAD,IAACA,SAAWoC,EAAZ,OAAuBmD,QAAvB,IAAuBA,SAAYnD,GAC/DigF,EAAap9B,aAAY,OAAC1/C,QAAD,IAACA,SAAYnD,GAEtC8iD,EAAsB/kD,uBAAY,WACpCsmF,GAAkB,KACnB,CAACA,IAEErhC,EAAW7jD,mBAAQ,WACrB,OAAIm/E,IAAgBV,GAAae,KACzBh8B,GAAWs9B,EACJ7tD,WAAWjmB,SAAO,OAACw2C,QAAD,IAACA,OAAD,EAACA,EAASrjB,cAAc,KAAM2gD,EAAW3gD,cAAc,IAAIxM,QAAQ,IAGhG6vB,EACOvwB,WAAWuwB,EAAQrjB,cAAc,IAGrC,MACR,CAACg/C,EAAa37B,EAASs9B,IAE1B,OACI,sBAAKhgF,UAAU,oCAAoCwK,QAAS,kBAAM45E,GAAkB,IAApF,UACKD,GACG,cAACjsC,GAAA,EAAD,CACI1vC,OAAQ27E,EACRv7E,UAAWi6C,EACXvX,iBAAkB44C,EAClBr6C,iBAAkB3mC,EAClBkpC,sBAAuBb,EACvBc,iBAAiB,EACjBZ,oBAAoB,EACpBa,iBAAiB,IAGzB,sBAAKtsC,UAAU,SAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC2/B,GAAA,EAAD,CAAc/iC,KAAM,OAAQsG,SAAUA,MAE1C,sBAAKlD,UAAW,gBAAhB,UACKkD,GACG,qBAAKlD,UAAU,wBAAf,SACI,oCAGR,wCAASq+E,IAAgBV,GAAae,KAAOx7E,EAAW,IAAM,GAA9D,YAAoEA,EAAW6/C,EAAW,+BAGlG,qBAAK/iD,UAAU,sBAAf,SACI,yBAAQA,UAAU,6CAA6CwK,QAAS,kBAAM45E,GAAkB,IAAhG,UACI,+BAAOlhF,EAAWA,EAASkf,OAAS,mBACpC,sBAAMpiB,UAAU,mCAAhB,SACI,cAAC,KAAD,CAAcA,UAAU,QAAQpD,KAAM,e,2EC3CvD,SAASynF,GAAT,GAUU,IATblvD,EASY,EATZA,aACAC,EAQY,EARZA,cACA+oD,EAOY,EAPZA,SACA+D,EAMY,EANZA,YACA7D,EAKY,EALZA,YACAiG,EAIY,EAJZA,mBACAC,EAGY,EAHZA,sBACAC,EAEY,EAFZA,sBACAV,EACY,EADZA,2BAEMJ,EAAUC,cAERjmF,EAAYD,cAAZC,QAER,EAAwB2H,qBAAxB,mBAAO+lD,EAAP,KAAaq5B,EAAb,KAEA,EC9CG,WAEH,IAAQxjE,EAAeD,eAAfC,WAER,EAAwC5b,qBAAxC,mBAAOq/E,EAAP,KAAqBC,EAArB,KACA,EAAsDt/E,oBAAkB,GAAxE,mBAAOu/E,EAAP,KAA4BC,EAA5B,KAL+B,sDAO/B,gHAIQA,GAAuB,GAJ/B,SAMwD5jE,EAAWV,MAA+B,CACtFA,MAAOukE,eACPxkE,YAAa,iBARzB,mBAMwBpV,EANxB,EAMgB6qB,KAAQ7qB,OANxB,EAMiCvO,MANjC,iDAeQgoF,EAAgBz5E,EAAM5K,KAAI,gBAAGmL,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAX,MAAwB,CAACF,EAAOsD,GAAG2T,cAAe/W,EAAOoD,GAAG2T,mBAf9F,kDAkBQxU,QAAQvR,MAAM,qBAAd,MAlBR,QAqBIkoF,GAAuB,GArB3B,2DAP+B,sBA+B/B,MAAO,CACHE,kBAAmB,CAAEL,eAAcE,sBAAqBI,oBAhC7B,6CDgD3BC,GAFJ,IACIF,kBAAqBL,EADzB,EACyBA,aAAmCM,GAD5D,EACuCJ,oBADvC,EAC4DI,qBAG5D9sE,qBAAU,WACNsY,aAAc9yB,GAAW6S,KAAQC,KAAKqa,KAAK45D,GAC3CO,MACD,CAACtnF,IAEJ,IAAMwnF,EAAYhmF,mBAAQ,WACtB,OAAIi/E,EAAS7jB,YAAc1nD,KAAUkC,SAAWqpE,EAAS7jB,YAAc1nD,KAAUE,QAAgB,cAACqwC,GAAA,EAAD,CAAQxsB,OAAO,YAE5GwnD,EAASjlB,YAAoB,mBAE1B,qBAAKilB,EAAS3jB,WAAa,KAAO3nC,QAAQ,OAClD,CAACsrD,IAEEgH,EAAYjmF,mBAAQ,WACtB,IAAKksD,IAASj2B,IAAiBC,IAAkB13B,EAAS,OAAO,cAACylD,GAAA,EAAD,CAAQxsB,OAAO,YAEhF,IAAMyuD,EAAc7lE,aAAmB,CACnC8nB,aAAc/wB,KAAsB5Y,GACpCwT,OAAQikB,EAAalqB,QACrBkG,OAAQikB,EAAcnqB,UACvByX,cAEH,OAAO0oC,EAAKg6B,GAAL,UAAuBh6B,EAAKg6B,GAAavyD,QAAQ,GAAjD,cAA6D9yB,IACrE,CAACo1B,EAAcC,EAAeg2B,IAUjC,OARAlzC,qBAAU,WACN,OAAO,WACoB,QAAnBwrE,EAAQz2C,QACRy2C,EAAQ9vE,KAAK,YAGtB,IAGC,sBAAK5T,UAAU,0BAAf,UACI,cAAC,GAAD,CAAW+kB,MAAO,gBAAiBm9D,YAAaA,EAAaxjE,KAAM,IACnE,sBAAK1e,UAAU,0CAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,GAAD,CAAWkD,SAAUiyB,EAAcoW,cAAenW,EAAe8uD,qBAAsBK,EAAuBlG,YAAaA,IAC3H,sBAAKr+E,UAAS,2BAAsBm1B,GAAgBC,EAAgB,WAAa,GAAnE,+DAAd,UACKD,GAAgBC,GACb,qBAAKp1B,UAAU,sBAAsBwK,QAAS85E,EAA9C,SACI,sBAAKzgF,MAAM,KAAKunC,OAAO,KAAKmV,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACI,sBACIC,EAAE,2VACFF,KAAK,YAET,sBACIE,EAAE,iWACFF,KAAK,mBAKlBrrB,IAAiBC,IAAkB,cAAC,KAAD,CAAMx4B,KAAM,QAEtD,cAAC,GAAD,CAAWsG,SAAUkyB,EAAemW,cAAepW,EAAc+uD,qBAAsBM,EAAuBnG,YAAaA,OAG/H,qBAAKr+E,UAAU,OAAf,SACKm1B,GAAgBC,GACb,cAAC,GAAD,CACIliB,IAAKgyE,EACL35B,IAAK45B,EACLriF,QAASq7E,EAAS7jB,YAAc1nD,KAAUE,SAAWqrE,EAAS7jB,YAAc1nD,KAAUkC,QACtFokD,YAAailB,EAASjlB,mBAKtC,qBAAKl5D,UAAU,sEAAf,SACI,cAAC,GAAD,CAAc8jF,2BAA4BA,EAA4B99D,MAAO0+D,Y,IExG5FW,G,iBAOE,SAASC,GAAT,GAA4J,IAApIC,EAAmI,EAAnIA,iBAAkBC,EAAiH,EAAjHA,aAAcC,EAAmG,EAAnGA,2BAA4Bv/C,EAAuE,EAAvEA,WAAYjR,EAA2D,EAA3DA,MAAOmR,EAAoD,EAApDA,WAAYs/C,EAAwC,EAAxCA,UAAW/pB,EAA6B,EAA7BA,WAC3HgqB,EAASzmF,mBAAQ,WACnB,OAAIqmF,EACO,CACH,CACI9qE,KAAMijE,GAAQkI,OACd7gE,MAAO,qBACP8K,IAAK,KACLxT,IAAK,KACLwpE,KAAMR,GAAcS,SACpBC,OAAQV,GAAc10E,OAI3B,CACH,CACI8J,KAAMijE,GAAQwB,KACdn6D,MAAO,oBACP8K,IAAK,EACLxT,IAAK0iD,IACL8mB,KAAMR,GAAcS,SACpBC,OAAQV,GAAcS,UAE1B,CACIrrE,KAAMijE,GAAQsI,KACdjhE,MAAO,cACP8K,IAAK,GACLxT,IAAK,IACLwpE,KAAMR,GAAc50E,IACpBs1E,OAAQV,GAAc50E,KAE1B,CACIgK,KAAMijE,GAAQuI,OACdlhE,MAAO,gBACP8K,IAAK,GACLxT,IAAK,IACLwpE,KAAMR,GAAc30E,OACpBq1E,OAAQV,GAAc30E,QAE1B,CACI+J,KAAMijE,GAAQwI,KACdnhE,MAAO,gBACP8K,IAAK,IACLxT,IAAK,IACLwpE,KAAMR,GAAc10E,KACpBo1E,OAAQV,GAAc10E,SAG/B,CAAC40E,IAEEM,EAAO3mF,mBAAQ,WACjB,GAAKknC,GAAeF,GAAejR,EAAnC,CAEA,IAAMkxD,EAAe,KAAQlxD,GAASmR,EAAc,IAC9CggD,EAAe55E,KAAK67B,IAAI,KAAQpT,GAASiR,EAAc,KAEvDmgD,GAAgBngD,GAAcjR,IAAUmR,EAAa,EAAI+/C,EAAeC,EAAeD,EAAeC,EAE5G,OAAIC,EAAe,IACR,EACAA,EAAe,IACd,GAAKA,GAAgB,IAAM,EAC5BA,EAAe,IACd,GAAKA,GAAgB,GAAK,EAC3BA,EAAe,IACd,GAAKA,GAAgB,GAAK,EAC3BA,EAAe,KACd,IAAMA,GAAgB,GAAK,EAE5B,KAEZ,CAACpxD,EAAOiR,EAAYE,IAEjBkgD,EAAQpnF,mBAAQ,WAClB,IAAMgsB,EAAa,GACbjb,EAAK,OAAG41E,QAAH,IAAGA,OAAH,EAAGA,EAAMnkF,WAAWuO,MAAM,KAErC,GAAKA,EAAL,CAEA,IAAK,IAAIhP,EAAI,EAAGA,EAAI,EAAGA,IACfA,GAAKgP,EAAM,GACXib,EAAItX,KAAK,KACF3S,KAAOgP,EAAM,GACpBib,EAAItX,KAAmC,IAA9Bue,WAAW,KAAOliB,EAAM,KAEjCib,EAAItX,KAAK,GAIjB,OAAOsX,KACR,CAAC26D,IAEJ,OACI,sBAAK7lF,UAAW,+DAAhB,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,KAAD,CAAQnD,MAAO,CAAE0K,QAAS,QAASmD,UAAW,iBAAmB9N,KAAM,KACvE,sBAAMoD,UAAU,QAAhB,SACI,6CAGP2lF,EAAOrlF,KAAI,SAACimF,EAAOtlF,GAAR,OACR,qBAAKjB,UAAU,MAAf,SACI,wBACIA,UAAS,gCAA2BwlF,IAAiBe,EAAM9rE,KAAO,SAAW,GAApE,UACTjQ,QAAS,WACLi7E,EAA2Bc,GACvBf,GAAgBe,EAAM9rE,KACtBgrE,EAA2B,MAE3BA,EAA2Bc,IAPvC,SAYI,8BAAMA,EAAMxhE,SAFP9jB,IAXaA,MAiB7BqlF,IAAUZ,IAAcH,GACrB,sBAAKvlF,UAAS,qCAAgC27D,GAAc,QAA5D,UACI,sBAAK37D,UAAU,UAAf,UACI,+BACI,kCAEJ,qBAAKA,UAAU,mBAAf,SACK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGM,KAAI,SAACkmF,EAAGvlF,GAAJ,OACjB,qBAAajB,UAAU,wBAAwBnD,MAAO,CAAEyrC,WAAY,oBAApE,SACI,qBAAatoC,UAAU,gCAAgCnD,MAAO,CAAEomF,KAAK,gBAAD,OAAkBqD,EAAMrlF,GAAxB,QAA1DA,IADJA,WAMtB,sBAAKjB,UAAU,IAAf,UACI,+BACI,oCAEJ,qBAAKA,UAAU,mBAAf,SACK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGM,KAAI,SAACkmF,EAAGvlF,GAAJ,OACjB,qBAAajB,UAAU,wBAAwBnD,MAAO,CAAEyrC,WAAY,oBAApE,SACI,qBAAatoC,UAAU,gCAAgCnD,MAAO,CAAEomF,KAAK,gBAAD,OAAkBqD,EAAMrlF,GAAxB,QAA1DA,IADJA,kB,SAjJrCokF,O,uBAAAA,I,aAAAA,I,mBAAAA,I,gBAAAA,Q,YCkCE,SAASoB,GAAT,GAiBa,IAAD,QAhBfvgD,EAgBe,EAhBfA,WACAE,EAee,EAffA,WACAqzB,EAce,EAdfA,iBACAC,EAae,EAbfA,kBACAmD,EAYe,EAZfA,kBACAK,EAWe,EAXfA,kBACAC,EAUe,EAVfA,kBACAC,EASe,EATfA,kBACApsD,EAQe,EARfA,UACAC,EAOe,EAPfA,UACAy1E,EAMe,EANfA,QACA7vD,EAKe,EALfA,SACA8vD,EAIe,EAJfA,cACAC,EAGe,EAHfA,aACAvI,EAEe,EAFfA,YACAF,EACe,EADfA,SAEMjtE,EAAM,iBAAIF,QAAJ,IAAIA,SAAajR,SAAjB,aAAG,EAA0BkL,QACnCkG,EAAM,iBAAIF,QAAJ,IAAIA,SAAalR,SAAjB,aAAG,EAA0BkL,QAEnCwzE,EAAQv/E,mBAAQ,kBAAMm/E,IAAgBV,GAAae,MAAK,CAACL,IACzDwI,EAAoBnxB,aACtBkF,aACIujB,EAASlpD,MAASkpD,EAAS1jB,YAAcvuD,OAAOiyE,EAASlpD,MAAMonB,SAAShd,cAAc,IAAIxM,QAAQ,GAAK3mB,OAAOiyE,EAASlpD,MAAMoK,cAAc,IAAIxM,QAAQ,QAAM9yB,EADnJ,OAEVkR,QAFU,IAEVA,SAAalR,IAEjB,GAGE+mF,EAAqBpxB,aACvBkF,aACIujB,EAASlpD,MAASkpD,EAAS1jB,YAAcvuD,OAAOiyE,EAASlpD,MAAMonB,SAAShd,cAAc,IAAIxM,QAAQ,GAAK3mB,OAAOiyE,EAASlpD,MAAMoK,cAAc,IAAIxM,QAAQ,QAAM9yB,EADnJ,OAEViR,QAFU,IAEVA,SAAajR,IAEjB,GAGEm+D,EAAmBD,eACnBG,EAAoBD,eAEpBhvC,EAAWjwB,mBAAQ,WACrB,OAAOgS,GAAUC,GAAUD,EAAOqM,YAAYpM,KAC/C,CAACD,EAAQC,IAEN0tE,EAAY3/E,mBAAQ,WACtB,OAAOiwB,EAAW+W,EAAH,OAAgBE,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYiW,WAC5C,CAACltB,EAAU+W,EAAYE,IAEpB04C,EAAa5/E,mBAAQ,WACvB,OAAOiwB,EAAWiX,EAAH,OAAgBF,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYmW,WAC5C,CAACltB,EAAUiX,EAAYF,IAEpByc,EAAezjD,mBAAQ,WACzB,GAAKi/E,EAASlpD,MAAd,CAEA,IAEI8xD,EAFEC,EAAiBv3E,QAAQyuD,EAAiB5E,YAAc4E,EAAiB1E,YAqB/E,OAjBKilB,EAQGuI,EACAD,EAAS50D,WAAW+rC,EAAiB5E,YAC9ButB,EACPE,EAAS50D,WAAW00D,EAAkBxnD,cAAc,IAC7CynD,IACPC,EAAS50D,WAAW20D,EAAmBznD,cAAc,KAZzD0nD,EACItI,GAASoI,EACH10D,WAAU,OAAC00D,QAAD,IAACA,OAAD,EAACA,EAAmBxnD,cAAc,IAC5C8+C,EAAS1jB,YACTtoC,WAAWgsD,EAASlpD,MAAMonB,SAAShd,cAAc,IACjDlN,WAAWgsD,EAASlpD,MAAMoK,cAAc,IAWlDnzB,OAAO66E,IAAW,KACZ,KAAN,OAAYtI,IAAUoI,GAAqBG,GAAkB,KAAO,GAApE,iBAA+EvI,IAAUoI,GAAqBG,GAAkB,GAAjD,kBAA0D/1E,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAWmR,SAE9I,GAAN,OAAUq8D,IAAUoI,GAAqBG,GAAkB,KAAO,IAAlE,OAAuED,GAAvE,OAAgFtI,IAAUoI,GAAqBG,GAAkB,GAAjD,kBAA0D/1E,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAWmR,YAE1J,CAAC+7D,EAASlpD,MAAOwpD,EAAOvgB,EAAkBE,EAAmByoB,IAEhE,OACI,sBAAK7mF,UAAU,kBAAf,UACI,qBAAKA,UAAS,qBAAwBnD,MAAO,CAAEoqF,MAAOL,EAAe,EAAI,GAAzE,SACI,cAACM,GAAD,CACIhmF,MAAOi9E,EAAS7iB,aAAajuC,KAAM+tC,OAAS,IAArC,iBAA2CyjB,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAWx/C,cAAc,UAApE,QAA0E,GACjF5lB,YAAaggD,EACb51D,MAAM,OACNsjF,UAAWh4D,EAAW0tC,EAAoBO,EAC1CgqB,UAAWj4D,EAAW+tC,EAAoBC,EAC1CkkB,kBAAmBlD,EAAS7iB,aAAajuC,KAAM+tC,OAC/CkmB,kBAAmBnD,EAAS7iB,aAAajuC,KAAM+tC,OAC/C9+B,MAAOuiD,EAAS,iBAAM5tE,QAAN,IAAMA,OAAN,EAAMA,EAAWmR,QAAW,IAC5ClR,OAAM,OAAEF,QAAF,IAAEA,SAAajR,EACrBoR,OAAM,OAAEF,QAAF,IAAEA,SAAalR,EACrBsnF,aAAclJ,EAASlpD,MACvB4B,SAAUA,EACV9R,MAAO,mBACPs5D,YAAaA,MAGpBF,EAASlpD,OACN,sBAAKj1B,UAAU,gCAAgCnD,MAAO,CAAEoqF,MAAOL,EAAe,EAAID,EAAgB,EAAI,GAAtG,UACI,qBAAK3mF,UAAU,kBAAkBnD,MAAO,CAAE49E,WAAY,UAAtD,SACKiM,EAAU,2CAAY11E,QAAZ,IAAYA,OAAZ,EAAYA,EAAWoR,OAAvB,EAAoCq8D,EAAQ,MAAH,OAAWxtE,QAAX,IAAWA,OAAX,EAAWA,EAAWmR,SAAiB,2CAAYpR,QAAZ,IAAYA,OAAZ,EAAYA,EAAWoR,OAAvB,EAAoCq8D,EAAQ,MAAH,OAAWxtE,QAAX,IAAWA,OAAX,EAAWA,EAAWmR,WAE9J,qBAAKpiB,UAAU,yBAAf,mBAA4C2iD,GAAgB,0BAGpE,qBAAK3iD,UAAU,qBAAqBnD,MAAO,CAAEoqF,MAAON,EAAgB,EAAI,GAAxE,SACI,cAACO,GAAD,CACIhmF,MAAOi9E,EAAS7iB,aAAajuC,KAAMguC,OAAS,SAArC,iBAA2CyjB,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAYz/C,cAAc,UAArE,QAA2E,GAClF5lB,YAAaigD,EACbytB,UAAWh4D,EAAWguC,EAAoBD,EAC1CkqB,UAAWj4D,EAAWiuC,EAAoBP,EAC1CykB,kBAAmBnD,EAAS7iB,aAAajuC,KAAMguC,OAC/CgmB,kBAAmBlD,EAAS7iB,aAAajuC,KAAMguC,OAC/C/+B,MAAOwiD,EAAU,iBAAM7tE,QAAN,IAAMA,OAAN,EAAMA,EAAWmR,QAAW,IAC7ClR,OAAM,OAAEF,QAAF,IAAEA,SAAajR,EACrBoR,OAAM,OAAEF,QAAF,IAAEA,SAAalR,EACrBsnF,aAAclJ,EAASlpD,MACvB4B,SAAUA,EACV9R,MAAO,mBACPs5D,YAAaA,SAOjC,SAAS6I,GAAT,GAegB,IAAD,EAdXhmF,EAcW,EAdXA,MACAimF,EAaW,EAbXA,UACAC,EAYW,EAZXA,UAYW,IAXX/F,yBAWW,SAVXnwE,EAUW,EAVXA,OACAC,EASW,EATXA,OASW,IARXmwE,yBAQW,SANXh/B,GAMW,EAPXz+C,MAOW,EANXy+C,QACA7oC,EAKW,EALXA,YAEAod,GAGW,EAJXwwD,aAIW,EAHXxwD,UACA9R,EAEW,EAFXA,MACAs5D,EACW,EADXA,YAEA,EAA0Ch5E,mBAAS,IAAnD,mBAAO46E,EAAP,KAAsBC,EAAtB,KACA,EAA8C76E,mBAAS,IAAvD,mBAAO86E,EAAP,KAAwBC,EAAxB,KAEQ1iF,EAAYD,cAAZC,QAEFE,EAAWC,cAEX4gF,EAAQv/E,mBAAQ,WAClB,OAAOm/E,IAAgBV,GAAae,MACrC,CAACL,IAEEG,GAAW,oBACZjuE,KAAQC,IAAMuiD,MADF,eAEZxiD,KAAQ8F,MAAQ28C,MAFJ,GAKXqtB,EAAW3qB,aAAakF,aAAyB,WAAV15D,GAA2B,MAAVA,OAAgBnB,EAAYmM,OAAOhL,GAAO2xB,QAAQ,GAAI1hB,IAAS,GACvHmvE,EAAajsE,aAAsBumD,aAAe,IAAK4jB,EAAY9gF,GAAW6S,KAAQC,MAAOW,GAC7Fm2E,EAAY1kC,aAAY,OAAC1xC,QAAD,IAACA,SAAUnR,GACnCwnF,EAAY3kC,aAAY,OAACzxC,QAAD,IAACA,SAAUpR,GAEnCm+D,EAAmBD,eACnBG,EAAoBD,eAEpBsiB,EAAe3iF,uBAAY,WAKgB,IAAD,EAJxC2gF,GAAS8I,GACC,OAANp2E,QAAM,IAANA,OAAA,EAAAA,EAAQlG,QAAQpK,WAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,QAChE4Y,EAAYwmE,GAERK,GAAcA,EAAWzrE,OACzB4E,EAAYo6B,QAAQosC,IAAgB,UAACK,EAAWzrE,aAAZ,aAAC,EAAkBe,aAAaypB,cAAc,MAClF+gD,EAAmBvsC,QAAQosC,GAAiBsH,EAAUloD,cAAc,OAEpE5lB,EAAYwmE,GACZG,EAAmBH,IAGpBxB,GAASvgB,EAAiB1E,YACvB,OAANroD,QAAM,IAANA,OAAA,EAAAA,EAAQlG,QAAQpK,WAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,QAChE4Y,EAAYwmE,IAEZxmE,EAAYo6B,QAAQosC,GAAiB/hB,EAAiB1E,aACtD4mB,EAAmBvsC,QAAQosC,GAAiB/hB,EAAiB1E,cAE1DilB,GAASrgB,GAAqBkpB,GAC3B,OAANn2E,QAAM,IAANA,OAAA,EAAAA,EAAQlG,QAAQpK,WAAY29E,EAAY9gF,GAAW6S,KAAQC,KAAK3P,QAChE4Y,EAAYwmE,IAEZxmE,EAAYo6B,QAAQosC,GAAiB7hB,GAAqBkpB,EAAUjoD,cAAc,KAClF+gD,EAAmBvsC,QAAQosC,GAAiB7hB,GAAqBkpB,EAAUjoD,cAAc,MAErFo/C,IACJ8I,EACArH,EAAiBrsC,QAAQssC,GAAmBoH,EAAUloD,cAAc,KAC7D6+B,EAAiB1E,YACxB0mB,EAAiBrsC,QAAQssC,GAAmBjiB,EAAiB1E,aAEjE//C,EAAY0mE,MAEjB,CAACA,EAAiBF,EAAeK,EAAYD,EAAUkH,EAAW9tE,IAG/D+tE,EAAkB1pF,uBAAY,WAChC2b,EAAY0tE,OACb,CAACA,EAAW1tE,IAETguE,EAAkB3pF,uBAAY,WAChC2b,EAAY2tE,OACb,CAACA,EAAW3tE,IAsBf,OApBAvB,qBAAU,WACN,GAAIhX,EAAO,CAEP,GADAk/E,EAAmBl/E,GACL,WAAVA,EAEA,YADAg/E,EAAiBh/E,GAGjBqmF,EACArH,EAAiBrsC,QAAQ3yC,GAASqmF,EAAUloD,cAAc,KACnD6+B,EAAiB1E,WACxB0mB,EAAiBrsC,QAAQ3yC,GAASg9D,EAAiB1E,aAC5C4E,GAAqBkpB,GAC5BpH,EAAiBrsC,QAAQ3yC,GAASk9D,GAAqBkpB,EAAUjoD,cAAc,SAElE,KAAVn+B,IACPk/E,EAAmB,IACnBF,EAAiB,OAEtB,CAACqH,EAAWnpB,EAAmBF,EAAkBh9D,IAGhD,gCACI,sBAAKlB,UAAU,eAAf,UACI,8BAAM+kB,IACN,sBAAK/kB,UAAU,OAAf,UACI,wBAAQwK,QAASg9E,EAAiB3wD,SAAUwqD,GAAqBxqD,EAAU72B,UAAU,mBAArF,eAGA,wBAAQwK,QAASi9E,EAAiB5wD,SAAUyqD,GAAqBzqD,EAAU72B,UAAU,mBAArF,qBAKR,sBAAKA,UAAU,eAAf,UACKy+E,GAAS4B,GACN,uBAAOvK,QAAS/wD,EAAO/kB,UAAU,mBAAjC,eAIJ,cAAC,KAAD,CACIkB,MAAOu9E,EAAQwB,EAAgBE,EAC/BpxE,GAAIgW,EACJ+N,OAAQ2tD,EACRzgF,UAAS,sBAAiBy+E,GAAS4B,EAAW,SAAW,IACzDxpD,SAAUA,GAAYyrB,EACtB7oC,YAAa,SAAC2pC,GACVq7B,EAAQyB,EAAiB98B,EAAIppC,QAAUomE,EAAmBh9B,EAAIppC,QAC9Dpc,EAASiwB,aAAqB,CAAE8vC,OAAQ,SAE5CjkD,YAAY,e,wCCjUnBguE,GAAelsF,UAAOC,IAAV,uCAAGD,CAAH,oEAOZmsF,GAAOnsF,UAAO8P,KAAV,uCAAG9P,CAAH,qDAEH,qBAAGglD,KAAkB,mBAAqB,aAE5C,qBAAGA,KAAkB,iCAAmC,4BAIvDonC,GAAcpsF,UAAOwsC,EAAV,uCAAGxsC,CAAH,8GAaXqsF,GAAarsF,UAAOwsC,EAAV,uCAAGxsC,CAAH,2CACR,qBAAGssF,QAAyB,IAAM,OAGpCC,GAAoBvsF,UAAOwsF,KAAV,uCAAGxsF,CAAH,eAClB,cAAGG,MAAH,MAAe,sBAEdiL,GAAUpL,UAAOqL,KAAV,uCAAGrL,CAAH,oFAQPysF,GAAazsF,UAAO0sF,KAAV,uCAAG1sF,CAAH,sF,IASAA,UAAOC,IAAV,uCAAGD,CAAH,wHAEgB,qBAAGo6C,MAAkBl0C,cAOnClG,kBAAOylD,MAAV,uCAAGzlD,CAAH,+HAWQA,UAAOwsF,KAAV,uCAAGxsF,CAAH,uB,mBCrEX2sF,GAAO,SAAC,GAAD,IAChBC,EADgB,EAChBA,OACAC,EAFgB,EAEhBA,OACAC,EAHgB,EAGhBA,OACAC,EAJgB,EAIhBA,OACAC,EALgB,EAKhBA,OACAhoC,EANgB,EAMhBA,KACA69B,EAPgB,EAOhBA,YAPgB,OAiBhBn/E,mBACI,wBACI,cAACyoF,GAAD,CACInnC,KAAMA,EACNE,EAAC,UACG+nC,eACKC,MAAMC,MACN/kD,GAAE,SAAC8c,GAAD,OAAgB2nC,EAAOE,EAAO7nC,OAChCk0B,IAAG,SAACl0B,GAAD,OAAgB4nC,EAAOE,EAAO9nC,OACjCkoC,GAAGN,EAAO,GAJfG,CAImBL,EAAO5nF,QAAO,SAACkgD,GAAD,OAAOgD,KAAQ2kC,EAAOE,EAAO7nC,IAAK,EAAGmoC,uBALzE,aAKwH9oF,MAIjI,CAACygD,EAAM4nC,EAAQC,EAAQE,EAAQD,EAAQE,EAAQnK,KCjCjDyK,GAAO,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,cAMZ,OAAO,mBAAGviF,IALM,SAACwiF,GACbA,GAAQC,aAAOD,GAAMr5E,KAAKo5E,OAOrBG,GAAa,SAAC,GAAwH,IAAtHb,EAAqH,EAArHA,OAAQc,EAA6G,EAA7GA,YAA6G,IAAhGljF,cAAgG,MAAvF,EAAuF,EAU9I,OATAiS,qBAAU,cAOP,CAACmwE,EAAQpiF,EAAQkjF,IAEbjqF,mBACH,kBACI,cAAC0oF,GAAD,CAAal9E,UAAS,uBAAkBy+E,EAAcljF,EAAhC,KAAtB,SACI,cAAC,GAAD,CAAM8iF,cAAeK,aAAWf,GAAQtrE,MAAM,GAAGssE,cAAc,SAGvE,CAACF,EAAaljF,EAAQoiF,KClBxBiB,GAAU,SAAC7oF,EAAqBkM,EAAqB07E,GAEvD,IAAMkB,EAAQ9oF,EAAEH,KAAI,SAACsjC,GAAD,OAAOykD,EAAOzkD,GAAG/Q,QAAQ,MACvC22D,EAAQ78E,EAAErM,KAAI,SAACsjC,GAAD,OAAOykD,EAAOzkD,GAAG/Q,QAAQ,MAC7C,OAAO02D,EAAMt6D,OAAM,SAACkB,EAAGlvB,GAAJ,OAAUkvB,IAAMq5D,EAAMvoF,OAGhCwoF,GAAQ,SAAC,GAkBf,IAjBH16E,EAiBE,EAjBFA,GACAs5E,EAgBE,EAhBFA,OACAqB,EAeE,EAfFA,YACAC,EAcE,EAdFA,gBACAC,EAaE,EAbFA,YACAC,EAYE,EAZFA,eACAhB,EAWE,EAXFA,WACAM,EAUE,EAVFA,YAWMW,EAAWhnE,iBAA2B,MACtCinE,EAAgBjnE,iBAA0C,MAGhE,EAAgDzd,mBAAkCukF,GAAlF,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAAoC5kF,oBAAS,GAA7C,mBAAO6kF,EAAP,KAAmBC,EAAnB,KACA,EAAgC9kF,oBAAS,GAAzC,mBAAO21E,EAAP,KAAiBoP,EAAjB,KAEMC,EAAsBt0E,aAAY6zE,GAElCU,EAAUxsF,uBACZ,YAAuD,IAApD2c,EAAmD,EAAnDA,KAAM8vE,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAChB,GAAKD,EAKL,GAAqB,IAAjBA,EAAU,IAAYA,EAAU,KAAO1B,EAA3C,CAKA,IAAM4B,EAAUF,EAA+BjqF,IAAI+nF,EAAOhsC,QAG7C,QAAT5hC,GAAkB6uE,GAAQM,EAAaa,EAAQpC,IAC/CwB,EAAeY,EAAQD,GAG3BP,EAAoBQ,QAXhBR,EAAoB,WALpBA,EAAoB,QAkB5B,CAAC5B,EAAQuB,EAAaC,IAK1B3xE,qBAAU,WAEN+xE,EAAoBL,KACrB,CAACA,IAGJ1xE,qBAAU,WACD4xE,EAASj7E,UAEdk7E,EAAcl7E,QAAU67E,eACnBC,OAAO,CAGJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAEPC,WAAW,IACXpqF,QAAO,kBAAMkpF,KACbp9D,GAAG,YAAag+D,GAErBP,EAAcl7E,QAAQo6E,aAAOa,EAASj7E,UAElCw7E,GAAuBf,GAAQM,EAAaS,EAAqBhC,IACjEY,aAAOa,EAASj7E,SAEXc,KAAKo6E,EAAcl7E,QAAQg8E,KAAajB,EAAYtpF,IAAI+nF,IAGjEY,aAAOa,EAASj7E,SAASi8E,UAAU,cAAcC,KAAK,SAAU,QAAQA,KAAK,OAAQ,WAEtF,CAACnB,EAAaU,EAASv7E,EAAIo6E,EAAaN,EAAYa,EAAaW,EAAqBhC,IAGzFnwE,qBAAU,WACD4xE,EAASj7E,SAAYk7E,EAAcl7E,SAExCk7E,EAAcl7E,QAAQg8E,KAAK5B,aAAOa,EAASj7E,SAAiB+6E,EAAYtpF,IAAI+nF,MAC7E,CAACuB,EAAavB,IAGjBnwE,qBAAU,WACNiyE,GAAc,GACd,IAAMn/D,EAAU5S,YAAW,kBAAM+xE,GAAc,KAAQ,MACvD,OAAO,kBAAM9xE,aAAa2S,MAC3B,CAACg/D,IAGJ,IAAMgB,EAAiBhB,GAAoB3B,EAAO2B,EAAiB,IAlHtC,GAmHvBiB,EAAiBjB,GAAoB3B,EAAO2B,EAAiB,IAAMnB,EAnH5C,GAqHvBqC,EAAgBlB,IAAqB3B,EAAO2B,EAAiB,IAAM,GAAK3B,EAAO2B,EAAiB,IAAM,GACtGmB,EAAgBnB,IAAqB3B,EAAO2B,EAAiB,IAAMnB,GAAcR,EAAO2B,EAAiB,IAAMnB,GAE/GuC,EAAmBpB,GAAoB3B,EAAO2B,EAAiB,KAAO,GAAK3B,EAAO2B,EAAiB,KAAOnB,EAC1GwC,EAAmBrB,GAAoB3B,EAAO2B,EAAiB,KAAO,GAAK3B,EAAO2B,EAAiB,KAAOnB,EAEhH,OAAO3pF,mBACH,kBACI,qCACI,iCACI,iCAAgB6P,GAAE,UAAKA,EAAL,uBAA8B4lE,GAAG,KAAKC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAA/E,UACI,yBACA,sBAAM7uE,OAAO,SAGjB,iCAAgB8I,GAAG,gBAAgB4lE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAA9D,UACI,sBAAM7uE,OAAO,KAAKqlF,UAAU,6BAC5B,sBAAMrlF,OAAO,OAAOqlF,UAAU,6BAIlC,0BAAUv8E,GAAE,UAAKA,EAAL,eAAZ,SACI,sBAAM60B,EAAE,IAAIn6B,EAAE,IAAI5F,MAAOglF,EAAYz9C,OAAQ+9C,SAIrD,qPAUCa,GACG,qCAEI,mBAAGlhD,OAAQ,UAAWp+B,UAAS,oBAAe8B,KAAK6P,IAAI,EAAGgsE,EAAO2B,EAAiB,KAAnD,QAA/B,SACI,qBAAKnmF,MAAOwkF,EAAO2B,EAAiB,IAAM3B,EAAO2B,EAAiB,IAAlE,SACI,sBAAMrzD,OAAO,mBAAmBqjB,YAAY,IAAI26B,GAAG,IAAIE,GAAIwT,EAAO2B,EAAiB,IAAKpV,GAAIuU,EAAarU,GAAIqU,QAIpHiC,EACG,oBAAGtiD,OAAQ,UAAWp+B,UAAS,oBAAe8B,KAAK6P,IAAI,EAAGgsE,EAAO2B,EAAiB,KAAO,EAA1D,aAAgEb,EAAc,EAA9E,oBAA2F6B,EAAiB,KAAO,IAAnH,QAA/B,UACI,mBAAGnuF,MAAO,CAAE0uF,WAAY,OAAQ5K,cAAe,QAA/C,SACI,sBAAMhM,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,IAAKqU,EAAc,GAAIxyD,OAAO,mBAAmBqjB,YAAY,QAG5F,eAAC6tC,GAAD,CAAYC,SAAS,EAAMp9E,UAAS,sBAAgC,GAAdy+E,EAAlB,oBAA8C6B,EAAiB,IAAM,KAArE,QAApC,UACI,cAACjD,GAAD,CAAmBt+E,EAAE,IAAIm6B,EAAE,KAAKwH,OAAO,KAAKvnC,MAAM,KAAK2nF,GAAG,MAC1D,cAAC5kF,GAAD,CAAS6C,EAAE,IAAIm6B,EAAE,MAAMl5B,UAAS,eAAkB+gF,iBAAiB,SAAnE,SACK9B,EAAgB,IAAKK,EAAiB,YAInD,KAGHqB,EACG,oBAAGviD,OAAQ,UAAWp+B,UAAS,oBAAe29E,EAAO2B,EAAiB,IAAM,EAA7C,aAAmDb,EAAc,EAAjE,oBAA8E8B,EAAiB,KAAO,IAAtG,QAA/B,UACI,mBAAGpuF,MAAO,CAAE0uF,WAAY,OAAQ5K,cAAe,QAA/C,SACI,sBAAMhM,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,IAAKqU,EAAc,GAAIxyD,OAAO,mBAAmBqjB,YAAY,QAG5F,eAAC6tC,GAAD,CAAYn9E,UAAS,sBAAgC,GAAdy+E,EAAlB,oBAA8C8B,EAAiB,KAAO,IAAtE,QAAiFnD,SAAS,EAA/G,UACI,cAACC,GAAD,CAAmBt+E,EAAE,IAAIm6B,EAAE,KAAKwH,OAAO,KAAKvnC,MAAM,KAAK2nF,GAAG,MAC1D,cAAC5kF,GAAD,CAAS6C,EAAE,IAAIm6B,EAAE,KAAK6nD,iBAAiB,SAAvC,SACK9B,EAAgB,IAAKK,EAAiB,YAInD,KAEJ,mBAAGlhD,OAAQ,UAAWtiC,IAAKsjF,EAAU4B,SAAQ,eAAU38E,EAAV,gBAA4B3H,aAAc,kBAAMgjF,GAAY,IAAO/iF,aAAc,kBAAM+iF,GAAY,cAKhK,CAACT,EAAiB0B,EAAkBJ,EAAgBD,EAAgBhQ,EAAUjsE,EAAIo6E,EAAaN,EAAYmB,EAAkBmB,EAAejB,EAAYgB,EAAeE,EAAkB/C,KCvMpLsD,GAAO,SAAC,GAAD,IAAGzqF,EAAH,EAAGA,MAAOmnF,EAAV,EAAUA,OAAQc,EAAlB,EAAkBA,YAAlB,OAChBjqF,mBACI,kBACI,qCACI,cAAC+oF,GAAD,CAAYtT,GAAI0T,EAAOnnF,GAAQ0zE,GAAG,IAAIC,GAAIwT,EAAOnnF,GAAQ4zE,GAAIqU,EAAc,IAC3E,sBAAMvlD,EAAGykD,EAAOnnF,GAAS,GAAIuI,EAAG,EAAG5F,MAAO,GAAIunC,OAAQ,GAAIoV,KAAM,mBAAoBgrC,GAAI,IACxF,sBAAMhrC,KAAM,QAASrnC,SAAU,EAAGyqB,EAAGykD,EAAOnnF,GAAS,GAAIuI,EAAG,GAA5D,SACI,6CAIZ,CAACvI,EAAOmnF,EAAQc,KCVT,SAASyC,GAAT,GAgBX,IAfAtkB,EAeD,EAfCA,IACA+gB,EAcD,EAdCA,OACAwD,EAaD,EAbCA,QACAhoF,EAYD,EAZCA,MACAunC,EAWD,EAXCA,OAEA0gD,GASD,EAVCC,UAUD,EATCD,YAUME,EAAelpE,mBAErB,EAA0C5jB,mBACtC,iBAAM,CACF,kBACIooE,GACA0kB,EAAan9E,SACbo6E,aAAO3hB,GACF2kB,aACAt8E,KAAKq8E,EAAan9E,QAAQq9E,QAAS,IAC5C,kBACI5kB,GACA0kB,EAAan9E,SACbo6E,aAAO3hB,GACF2kB,aACAt8E,KAAKq8E,EAAan9E,QAAQq9E,QAAS,KAC5C,kBACI5kB,GACA0kB,EAAan9E,SACbo6E,aAAO3hB,GACF2kB,aACAt8E,KAAKq8E,EAAan9E,QAAQs9E,QAAS,IAC5C,kBACI7kB,GACA0kB,EAAan9E,SACbo6E,aAAO3hB,GACF2kB,aACAt8E,KAAKq8E,EAAan9E,QAAQs9E,QAAS,QAEhD,CAAC7kB,EAAK0kB,IA3BV,mBAA+BtF,GAA/B,qBAiDA,OAnBAxuE,qBAAU,WACDovD,IAEL0kB,EAAan9E,QAAUu9E,eAClBC,YAAY,CAACP,EAAWj8D,IAAKi8D,EAAWzvE,MACxCsuE,OAAO,CACJ,CAAC,EAAG,GACJ,CAAC9mF,EAAOunC,KAEX9e,GAAG,QAAQ,gBAAG5hB,EAAH,EAAGA,UAAH,OAAiDmhF,EAAQnhF,MAEzEu+E,aAAO3hB,GAAgB33D,KAAKq8E,EAAan9E,YAC1C,CAACu8B,EAAQvnC,EAAOgoF,EAASvkB,EAAK+gB,EAAQ2D,EAAcF,EAAYA,EAAWzvE,IAAKyvE,EAAWj8D,MAE9F3X,qBAAU,WAENwuE,MACD,CAACA,EAASoF,IAEN,wBCjEJ,IAAMQ,GAAY,SAAC5rC,GAAD,OAAmBA,EAAE6rC,QACjCC,GAAY,SAAC9rC,GAAD,OAAmBA,EAAE+rC,iBAEvC,SAASC,GAAT,GAY4B,IAAD,IAX9B39E,UAW8B,MAXzB,2BAWyB,MAV9BgnB,KAAQqyD,EAUsB,EAVtBA,OAAQv5E,EAUc,EAVdA,QAChB1I,EAS8B,EAT9BA,OAS8B,IAR9BwmF,WAAc9oF,EAQgB,EARhBA,MAAOunC,EAQS,EARTA,OACrBwhD,EAO8B,EAP9BA,QAO8B,IAN9BlD,mBAM8B,SAL9BmD,EAK8B,EAL9BA,YACAC,EAI8B,EAJ9BA,YACAC,EAG8B,EAH9BA,oBACAjB,EAE8B,EAF9BA,WACAzN,EAC8B,EAD9BA,YAEM2O,EAAUlqE,iBAA8B,MAE9C,EAAwBzd,mBAA+B,MAAvD,mBAAO+mF,EAAP,KAAaP,EAAb,KAEA,EAAkC3sF,mBAAQ,iBAAM,CAACksC,EAASwhD,EAAQK,IAAML,EAAQ5pC,OAAQn/C,EAAQ+oF,EAAQ3J,KAAO2J,EAAQ3pC,SAAQ,CAACp/C,EAAOunC,EAAQwhD,IAA/I,mBAAOzD,EAAP,KAAoBN,EAApB,KAIA,GAFkB3pF,mBAAQ,kBAAMkpF,EAAOrnF,QAAO,SAACyzC,EAAK8W,GAAN,OAAcA,EAAGihC,OAAS/3C,EAAM8W,EAAGihC,OAAS/3C,IAAM,KAAI,CAAC4zC,IAE1ElpF,mBAAQ,WAE/B,IAAMguF,EAAS,CACX7E,OAAQ8E,eACHC,OAAO,CAACv+E,EAAUi9E,EAAWuB,WAAYx+E,EAAUi9E,EAAWwB,aAC9D/G,MAAM,CAAC,EAAGsC,IACfP,OAAQ6E,eACHC,OAAO,CAAC,EAAG/wE,aAAI+rE,EAAQoE,MACvBjG,MAAM,CAAC4C,EAAa,KAG7B,GAAIiD,EAAM,CACN,IAAMmB,EAAYnB,EAAKoB,SAASN,EAAO7E,QACvC6E,EAAO7E,OAAO+E,OAAOG,EAAUH,UAGnC,OAAOF,IACR,CAAC7O,EAAaxvE,EAASi9E,EAAWuB,WAAYvB,EAAWwB,WAAYzE,EAAYT,EAAQe,EAAaiD,KAjBjG/D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAqChB,OAlBApwE,qBAAU,WAEN2zE,EAAQ,QACT,CAACC,EAAYzN,IAEhBnmE,qBAAU,cAOP,CAAC20E,EAAah+E,EAASk+E,EAAqB1E,EAAQhK,IAEvDnmE,qBAAU,WACN+wE,aAAO,qBAAqB8B,KAAK,YAAa,qBAC/C,IAGC,qCACC,cAACa,GAAD,CACOtkB,IAAK0lB,EAAQn+E,QACbw5E,OAAQA,EACRwD,QAASA,EACThoF,MAAOglF,EACPz9C,OAEIA,EAEJ2gD,WAAW,EACXD,WAAYA,IAEhB,sBAAKjoF,MAAM,OAAOunC,OAAO,OAAOmV,QAAO,cAAS18C,EAAT,YAAkBunC,GAAzD,UACI,iCACI,0BAAUr8B,GAAE,UAAKA,EAAL,eAAZ,SACI,sBAAM60B,EAAE,IAAIn6B,EAAE,IAAI5F,MAAOglF,EAAYz9C,OAAQA,MAGjD,iCAAgBr8B,GAAG,2BAA2B4lE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAzE,UACI,sBAAM7uE,OAAO,KAAKqlF,UAAU,4BAC5B,sBAAMrlF,OAAO,OAAOqlF,UAAU,6BAEjCuB,GAEG,sBAAM99E,GAAE,UAAKA,EAAL,oBAAR,SACI,sBAAMyxC,KAAK,QAAQ5c,EAAGykD,EAAOwE,EAAY,IAAKpjF,EAAE,IAAI5F,MAAOwkF,EAAOwE,EAAY,IAAMxE,EAAOwE,EAAY,IAAKzhD,OAAQ+9C,SAKhI,oBAAGz+E,UAAS,oBAAekiF,EAAQ3J,KAAvB,YAA+B2J,EAAQK,IAAvC,KAAZ,UACI,oBAAGvB,SAAQ,eAAU38E,EAAV,gBAAX,UACI,cAAC,GAAD,CAAMsvE,YAAaA,EAAa+J,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQ+D,GAAW9D,OAAQgE,KAE1GK,GAEG,mBAAGY,KAAI,eAAU1+E,EAAV,qBAAP,SACI,cAAC,GAAD,CAAMsvE,YAAaA,EAAa+J,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQ+D,GAAW9D,OAAQgE,GAAWhsC,KAAMr6C,EAAOsiF,KAAK8B,cAIhJ,cAAC,GAAD,CAAMrpF,MAAO2N,EAASw5E,OAAQA,EAAQc,YAAaA,IAEnD,cAAC,GAAD,CAAYd,OAAQA,EAAQc,YAAaA,OAG7C,cAAC,GAAD,CACIp6E,GAAIA,EACJs5E,OAAQA,EACRqB,YAAaA,EACbC,gBAAiBmD,EACjBlD,YAAW,OAAEiD,QAAF,IAAEA,IAAgBxE,EAAO+E,SACpCvE,WAAYA,EACZM,YAAaA,EACbU,eAAgBkD,a,gCCrHzB,SAASW,GACpBjiF,EACAE,EACAgiF,EACAC,EACAC,EACAC,GAQA,IANA,IAAIC,EAAoC,eACjCJ,GAIHK,EAAkC,GAC7B/sF,EAAI4sF,GAASC,EAAY,GAAK,GAAIA,EAAY7sF,EAAI2sF,EAAe/rF,OAASZ,GAAK,EAAG6sF,EAAY7sF,IAAMA,IAAK,CAC9G,IAAMgtF,EAAU/hF,OAAO0hF,EAAe3sF,GAAGgtF,SACnCC,EAAsC,CACxCC,gBAAiBJ,EAAsBI,gBACvCF,UACA/uE,aAAc1d,KAAKC,OAAOmsF,EAAe3sF,GAAGie,cAC5CqtE,OAAQ13D,aAAYppB,EAAQE,EAAQsiF,GAASp7D,QAvB9B,IA8Bfi7D,EACAI,EAAqBC,gBAAkB3sF,KAAK2L,IACxC4gF,EAAsBI,gBACtB3sF,KAAKC,OAAOmsF,EAAe3sF,GAAGie,gBAE1B4uE,GAAatsF,KAAKwL,SAAS+gF,EAAsB7uE,aAAc1d,KAAKC,OAAO,MAEnFysF,EAAqBC,gBAAkB3sF,KAAKqa,SACxCkyE,EAAsBI,gBACtBJ,EAAsB7uE,eAI9B8uE,EAAep6E,KAAKs6E,GACpBH,EAAwBG,EAO5B,OAJKJ,IACDE,EAAiBA,EAAeniF,WAG7BmiF,E,aCmDCI,GAwOAC,GA8CAC,GA+MAC,GAgOAC,GAgMAC,GAsNAC,GAuJAC,GAwHAC,GAiKAC,GA+OAC,GA2OAC,GAuFAC,GAwVAC,GAqHAC,GA4NAC,GAkKAC,GAyYAC,GAuSAC,GAsUAC,GAivBAC,GAuxBAC,GAgQAC,GAkMAC,GAyQAC,GAqPAC,GAsLAC,GA+LAC,GAmIAC,GAuCAC,G,oBCt8NNC,IAA0C,sBAC3C3/E,KAAQC,IAAMH,KAAc4P,SAAS1P,KAAQC,KAAKkQ,SADP,gBAE3CnQ,KAAQ8F,MAAQhG,KAAc4P,SAAS1P,KAAQ8F,OAAOqK,SAFX,IAKnCyvE,GAAMC,aAAU,CACzBC,YAAa,UACbC,UA+DA,iDAAO,sHAASptE,EAAT,EAASA,SAAUumC,EAAnB,EAAmBA,UAAe8mC,EAAlC,EAAkCA,SAAlC,SAEO7yF,EAAW6yF,IAAwB5pB,YAAYjpE,QAE/C8yF,EAAc9yF,EAAUwyF,GAAmBxyF,QAAWqC,EAJ7D,yCAOY,CACHpD,MAAO,CACHoJ,KAAM,qBACNmqC,QAAQ,oCAAD,OAAsCxyC,EAAtC,uBACPw1E,MAAO,MAXpB,uBAiBiB,IAAIud,iBAAcD,GAAa92C,QAAQx2B,EAAUumC,GAjBlE,+BAkBW,GAlBX,mBAiBK1zB,KAjBL,KAkBK26D,KAlBL,8CAqBK,gBAAiBC,gBArBtB,wBAsBa5qF,EAtBb,KAsBaA,KAAMmqC,EAtBnB,KAsBmBA,QAASgjC,EAtB5B,KAsB4BA,MAAOx5B,EAtBnC,KAsBmCA,QAAS37C,EAtB5C,KAsB4CA,SAtB5C,kBAuBY,CAAEpB,MAAO,CAAEoJ,OAAMmqC,UAASgjC,SAASwd,KAAM,CAAEh3C,UAAS37C,cAvBhE,6EAAP,wDA9DA6yF,UAAW,SAAC/S,GAAD,MAAc,CACrBgT,WAAYhT,EAAQt9D,MAAM,CACtBA,MAAO,gBAAG6kE,EAAH,EAAGA,YAAH,IAAgBxvD,YAAhB,MAAuB,EAAvB,QAAgC,CACnC1S,SAAU0yC,eAAF,2UAURnM,UAAW,CACP27B,cACAxvD,YAIZk7D,oBAAqBjT,EAAQt9D,MAAM,CAC/BA,MAAO,gBAAG9U,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAX,MAAyB,CAC5BuX,SAAU0yC,eAAF,yzBA2BRnM,UAAW,CACPh+C,SACAE,mB,SDwCRyiF,K,YAAAA,E,kBAAAA,E,QAAAA,E,gBAAAA,E,kBAAAA,E,0BAAAA,E,sBAAAA,E,yCAAAA,Q,cAwOAC,K,gBAAAA,E,wBAAAA,E,oBAAAA,E,kBAAAA,E,QAAAA,E,gBAAAA,E,wBAAAA,E,4BAAAA,E,YAAAA,E,sBAAAA,E,sBAAAA,E,kCAAAA,E,oCAAAA,E,yBAAAA,Q,cA8CAC,K,QAAAA,E,+BAAAA,Q,cA+MAC,K,gBAAAA,E,kBAAAA,E,kBAAAA,E,sBAAAA,E,QAAAA,E,oBAAAA,E,gBAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,+CAAAA,Q,cAgOAC,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,QAAAA,E,oBAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,+CAAAA,Q,cAgMAC,K,sBAAAA,E,kDAAAA,E,gCAAAA,E,QAAAA,E,4BAAAA,E,sBAAAA,E,kCAAAA,E,cAAAA,E,YAAAA,E,0BAAAA,E,0BAAAA,E,sBAAAA,E,0CAAAA,E,uCAAAA,Q,cAsNAC,K,0BAAAA,E,kCAAAA,E,oCAAAA,E,kBAAAA,E,QAAAA,E,wBAAAA,E,gCAAAA,E,kCAAAA,E,YAAAA,E,gBAAAA,E,wBAAAA,E,0BAAAA,E,sBAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,2BAAAA,Q,cAuJAC,K,QAAAA,E,cAAAA,E,sBAAAA,E,gCAAAA,E,4BAAAA,E,8CAAAA,E,gEAAAA,E,0CAAAA,E,4DAAAA,E,oCAAAA,E,gCAAAA,E,kBAAAA,E,yCAAAA,Q,cAwHAC,K,4BAAAA,E,gBAAAA,E,UAAAA,E,QAAAA,E,gBAAAA,E,gBAAAA,E,YAAAA,E,oBAAAA,E,uBAAAA,Q,cAiKAC,K,kBAAAA,E,0BAAAA,E,kBAAAA,E,0BAAAA,E,sBAAAA,E,QAAAA,E,oBAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,gBAAAA,E,sBAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,+CAAAA,Q,cA+OAC,K,0BAAAA,E,oCAAAA,E,wCAAAA,E,kBAAAA,E,gCAAAA,E,QAAAA,E,wBAAAA,E,gCAAAA,E,kCAAAA,E,YAAAA,E,gBAAAA,E,0BAAAA,E,sBAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,0CAAAA,E,0CAAAA,E,2CAAAA,Q,cA2OAC,K,gBAAAA,E,kBAAAA,E,kBAAAA,E,sBAAAA,E,QAAAA,E,oBAAAA,E,gBAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,gBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,+CAAAA,Q,cAuFAC,K,UAAAA,E,aAAAA,Q,cAwVAC,K,cAAAA,E,YAAAA,E,4CAAAA,E,4CAAAA,E,wBAAAA,E,wBAAAA,E,kBAAAA,E,YAAAA,E,QAAAA,E,sBAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,YAAAA,E,0BAAAA,E,0BAAAA,E,gBAAAA,E,kBAAAA,E,wCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAqHAC,K,UAAAA,E,QAAAA,E,YAAAA,E,uBAAAA,Q,cA4NAC,K,cAAAA,E,4CAAAA,E,4CAAAA,E,kBAAAA,E,YAAAA,E,QAAAA,E,sBAAAA,E,UAAAA,E,YAAAA,E,kCAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,YAAAA,E,0BAAAA,E,0BAAAA,E,gBAAAA,E,kBAAAA,E,wCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAkKAC,K,QAAAA,E,sBAAAA,E,sBAAAA,E,8DAAAA,E,8DAAAA,E,wDAAAA,E,gEAAAA,E,4DAAAA,E,kEAAAA,E,kEAAAA,E,sCAAAA,E,4BAAAA,E,oDAAAA,E,gDAAAA,E,oEAAAA,E,8CAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,4DAAAA,E,gDAAAA,E,gDAAAA,E,0CAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,8DAAAA,E,8DAAAA,E,wDAAAA,E,gEAAAA,E,4DAAAA,E,kEAAAA,E,kEAAAA,E,sCAAAA,E,4BAAAA,E,oDAAAA,E,gDAAAA,E,oEAAAA,E,8CAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,4DAAAA,E,gDAAAA,E,gDAAAA,E,2CAAAA,Q,cAyYAC,K,cAAAA,E,0CAAAA,E,0CAAAA,E,oCAAAA,E,oBAAAA,E,8BAAAA,E,8BAAAA,E,4CAAAA,E,wCAAAA,E,UAAAA,E,4CAAAA,E,4CAAAA,E,wBAAAA,E,wBAAAA,E,kBAAAA,E,QAAAA,E,sBAAAA,E,gDAAAA,E,cAAAA,E,oCAAAA,E,0BAAAA,E,4BAAAA,E,sBAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,0BAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,gBAAAA,E,0BAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,8CAAAA,E,gDAAAA,E,gDAAAA,E,0CAAAA,E,4DAAAA,E,kBAAAA,E,oCAAAA,E,wCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAuSAC,K,0BAAAA,E,0CAAAA,E,0CAAAA,E,kCAAAA,E,kCAAAA,E,oDAAAA,E,oDAAAA,E,QAAAA,E,sBAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,oBAAAA,E,4DAAAA,E,4DAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,sEAAAA,E,sEAAAA,E,0BAAAA,E,wCAAAA,E,gCAAAA,E,wCAAAA,E,wCAAAA,E,oDAAAA,E,oDAAAA,E,sBAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,8CAAAA,E,kCAAAA,E,mCAAAA,Q,cAsUAC,K,0CAAAA,E,0CAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,oDAAAA,E,oDAAAA,E,QAAAA,E,sBAAAA,E,cAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,sBAAAA,E,8DAAAA,E,8DAAAA,E,wDAAAA,E,gEAAAA,E,4DAAAA,E,kEAAAA,E,kEAAAA,E,sCAAAA,E,4BAAAA,E,oDAAAA,E,gDAAAA,E,oEAAAA,E,8CAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,4DAAAA,E,gDAAAA,E,gDAAAA,E,0CAAAA,E,sBAAAA,E,8DAAAA,E,8DAAAA,E,wDAAAA,E,gEAAAA,E,4DAAAA,E,kEAAAA,E,kEAAAA,E,sCAAAA,E,4BAAAA,E,oDAAAA,E,gDAAAA,E,oEAAAA,E,8CAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,4DAAAA,E,gDAAAA,E,gDAAAA,E,0CAAAA,E,gBAAAA,E,sBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,gBAAAA,E,sBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,8CAAAA,E,kCAAAA,E,mCAAAA,Q,cAivBAC,K,gBAAAA,E,QAAAA,E,cAAAA,E,+BAAAA,Q,cAuxBAC,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,QAAAA,E,sBAAAA,E,oBAAAA,E,gBAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,cAAAA,E,sBAAAA,E,gBAAAA,E,YAAAA,E,sBAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,gBAAAA,E,kCAAAA,E,0CAAAA,E,gCAAAA,E,sBAAAA,E,0BAAAA,E,oCAAAA,E,8BAAAA,E,wCAAAA,E,kDAAAA,E,wDAAAA,E,0EAAAA,E,gCAAAA,E,sDAAAA,E,8BAAAA,E,oCAAAA,E,0BAAAA,E,kDAAAA,E,4CAAAA,E,4CAAAA,E,gCAAAA,E,+CAAAA,Q,cAgQAC,K,YAAAA,E,8CAAAA,E,8CAAAA,E,kBAAAA,E,QAAAA,E,gCAAAA,E,4BAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,sDAAAA,E,kDAAAA,E,wDAAAA,E,wDAAAA,E,4BAAAA,E,kBAAAA,E,0CAAAA,E,sCAAAA,E,0DAAAA,E,oCAAAA,E,0BAAAA,E,0BAAAA,E,4BAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAkMAC,K,kBAAAA,E,QAAAA,E,gCAAAA,E,4BAAAA,E,kCAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,YAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,sDAAAA,E,kDAAAA,E,wDAAAA,E,wDAAAA,E,4BAAAA,E,kBAAAA,E,0CAAAA,E,sCAAAA,E,0DAAAA,E,oCAAAA,E,0BAAAA,E,0BAAAA,E,4BAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAyQAC,K,0CAAAA,E,0CAAAA,E,oCAAAA,E,4CAAAA,E,wCAAAA,E,8CAAAA,E,8CAAAA,E,kBAAAA,E,QAAAA,E,gCAAAA,E,4BAAAA,E,gDAAAA,E,YAAAA,E,0BAAAA,E,oDAAAA,E,oDAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,sDAAAA,E,kDAAAA,E,oBAAAA,E,sDAAAA,E,sDAAAA,E,kCAAAA,E,kCAAAA,E,4BAAAA,E,kBAAAA,E,gCAAAA,E,0DAAAA,E,8CAAAA,E,gCAAAA,E,sBAAAA,E,oCAAAA,E,oCAAAA,E,wDAAAA,E,0DAAAA,E,0DAAAA,E,oDAAAA,E,sEAAAA,E,4BAAAA,E,8CAAAA,E,kDAAAA,E,sCAAAA,E,sCAAAA,E,gCAAAA,E,gBAAAA,E,gBAAAA,E,kBAAAA,E,wCAAAA,E,4BAAAA,E,4BAAAA,E,uBAAAA,Q,cAqPAC,K,cAAAA,E,YAAAA,E,kBAAAA,E,YAAAA,E,QAAAA,E,UAAAA,E,YAAAA,E,oBAAAA,E,cAAAA,E,gCAAAA,E,wCAAAA,E,8BAAAA,E,oBAAAA,E,wBAAAA,E,kCAAAA,E,4BAAAA,E,sCAAAA,E,gDAAAA,E,sDAAAA,E,wEAAAA,E,8BAAAA,E,oDAAAA,E,4BAAAA,E,kCAAAA,E,oCAAAA,E,0CAAAA,E,wCAAAA,E,gBAAAA,E,uBAAAA,Q,cAsLAC,K,cAAAA,E,kBAAAA,E,YAAAA,E,QAAAA,E,UAAAA,E,YAAAA,E,kCAAAA,E,oBAAAA,E,cAAAA,E,gCAAAA,E,wCAAAA,E,8BAAAA,E,oBAAAA,E,wBAAAA,E,kCAAAA,E,4BAAAA,E,sCAAAA,E,gDAAAA,E,sDAAAA,E,wEAAAA,E,8BAAAA,E,oDAAAA,E,4BAAAA,E,kCAAAA,E,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","file":"static/js/main.5f7c7866.chunk.js","sourcesContent":["import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n    pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n    fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n    rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n    pending: createAction('lists/fetchTokenList/pending'),\n    fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n    rejected: createAction('lists/fetchTokenList/rejected')\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\n","import { transparentize } from \"polished\";\nimport { ReactNode } from \"react\";\n\nimport { AlertTriangle } from \"react-feather\";\nimport styled, { css } from \"styled-components/macro\";\nimport { Text } from \"rebass\";\nimport { AutoColumn } from \"../Column\";\nimport { ButtonPrimary } from \"../Button\";\nimport { TYPE } from \"../../theme\";\n\nexport const Wrapper = styled.div`\n    position: relative;\n    padding: 16px 40px 30px 40px;\n`;\n\nexport const ArrowWrapper = styled.button<{ clickable: boolean }>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    border-radius: 12px;\n    height: 42px;\n    width: 35px;\n    position: relative;\n    margin-top: -32px;\n    margin-bottom: -14px;\n    left: calc(50% - 11px);\n    background-color: var(--primary-weak);\n    opacity: 0.5;\n    border: none;\n    z-index: 2;\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n  margin-top: 0px;\n  margin-bottom: 5px;\n  `}\n\n    ${({ clickable }) =>\n        clickable\n            ? css`\n                  :hover {\n                      cursor: pointer;\n                      opacity: 0.8;\n                  }\n              `\n            : null}\n`;\n\nexport const SectionBreak = styled.div`\n    height: 1px;\n    width: 100%;\n    background-color: ${({ theme }) => \"var(--bg3)\"};\n`;\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n    color: ${({ theme, severity }) => (severity === 3 || severity === 4 ? \"var(--red1)\" : severity === 2 ? \"var(--yellow2)\" : severity === 1 ? \"var(--text1)\" : \"var(--text1)\")};\n`;\n\nexport const TruncatedText = styled(Text)`\n    text-overflow: ellipsis;\n    max-width: 220px;\n    overflow: hidden;\n    text-align: right;\n`;\n\n// styles\nexport const Dots = styled.span`\n    &::after {\n        display: inline-block;\n        animation: ellipsis 1.25s infinite;\n        content: \".\";\n        width: 1em;\n        text-align: left;\n    }\n\n    @keyframes ellipsis {\n        0% {\n            content: \".\";\n        }\n        33% {\n            content: \"..\";\n        }\n        66% {\n            content: \"...\";\n        }\n    }\n`;\n\nconst SwapCallbackErrorInner = styled.div`\n    background-color: ${({ theme }) => transparentize(0.9, \"var(--red1)\")};\n    border-radius: 1rem;\n    display: flex;\n    align-items: center;\n    font-size: 0.825rem;\n    width: 100%;\n    margin-top: 1rem;\n    color: ${({ theme }) => \"var(--red1)\"};\n    z-index: -1;\n\n    p {\n        padding: 0;\n        margin: 0;\n        font-weight: 500;\n    }\n`;\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n    background-color: ${({ theme }) => transparentize(0.9, \"var(--red1)\")};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 12px;\n    border-radius: 12px;\n    min-width: 48px;\n    height: 48px;\n`;\n\nexport function SwapCallbackError({ error }: { error: ReactNode }) {\n    return (\n        <SwapCallbackErrorInner>\n            <SwapCallbackErrorInnerAlertTriangle>\n                <AlertTriangle size={24} />\n            </SwapCallbackErrorInnerAlertTriangle>\n            <p style={{ wordBreak: \"break-word\" }}>{error}</p>\n        </SwapCallbackErrorInner>\n    );\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n    background-color: ${({ theme }) => transparentize(0.95, \"var(--primary2)\")};\n    color: ${({ theme }) => \"var(--primary-text1)\"};\n    padding: 0.5rem;\n    border-radius: 12px;\n    margin-top: 8px;\n`;\n\n//BetterTradeLink\nexport const ResponsiveButton = styled(ButtonPrimary)`\n    width: fit-content;\n    padding: 0.2rem 0.5rem;\n    word-break: keep-all;\n    height: 24px;\n    margin-left: 0.75rem;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 4px;\n    border-radius: 8px;\n  `};\n`;\n\n//SwapHeader\nexport const StyledSwapHeader = styled.div`\n    padding: 30px 40px 16px 40px;\n    width: 100%;\n    color: ${({ theme }) => \"var(--text2)\"};\n`;\n\n//SwapModalHeader\nexport const SwapModalHeaderArrowWrapper = styled.div`\n    padding: 4px;\n    border-radius: 12px;\n    height: 32px;\n    width: 32px;\n    position: relative;\n    margin-top: -18px;\n    margin-bottom: -18px;\n    left: calc(50% - 16px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({ theme }) => \"var(--bg1)\"};\n    border: 4px solid;\n    border-color: ${({ theme }) => \"var(--bg0)\"};\n    z-index: 2;\n`;\n\n//TradePrice\nexport const StyledPriceContainer = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    font-size: 0.875rem;\n    font-weight: 400;\n    background-color: transparent;\n    border: none;\n    height: 24px;\n    cursor: pointer;\n`;\n\n//UnsuportedCurrencyFoter\nexport const DetailsFooter = styled.div<{ show: boolean }>`\n    padding-top: calc(16px + 2rem);\n    padding-bottom: 20px;\n    margin-top: -2rem;\n    width: 100%;\n    max-width: 400px;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n    color: ${({ theme }) => \"var(--text2)\"};\n    background-color: ${({ theme }) => \"var(--advanced-bg)\"};\n    z-index: -1;\n\n    transform: ${({ show }) => (show ? \"translateY(0%)\" : \"translateY(-100%)\")};\n    transition: transform 300ms ease-in-out;\n    text-align: center;\n`;\nexport const AddressText = styled(TYPE.blue)`\n    font-size: 12px;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n`}\n`;\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n    response: TransactionResponse,\n    customData?: { summary?: string; approval?: { tokenAddress: string; spender: string }; claim?: { recipient: string } }\n) => void {\n    const { chainId, account } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n\n    return useCallback(\n        (\n            response: TransactionResponse,\n            {\n                summary,\n                approval,\n                claim\n            }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {}\n        ) => {\n            if (!account) return\n            if (!chainId) return\n\n            const { hash } = response\n            if (!hash) {\n                throw Error('No transaction hash found.')\n            }\n            dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n        },\n        [dispatch, chainId, account]\n    )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n    const { chainId } = useActiveWeb3React()\n\n    const state = useAppSelector((state) => state.transactions)\n\n    return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n    const transactions = useAllTransactions()\n\n    if (!transactionHash || !transactions[transactionHash]) return false\n\n    return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n    return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n    const allTransactions = useAllTransactions()\n    return useMemo(\n        () =>\n            typeof tokenAddress === 'string' &&\n            typeof spender === 'string' &&\n            Object.keys(allTransactions).some((hash) => {\n                const tx = allTransactions[hash]\n                if (!tx) return false\n                if (tx.receipt) {\n                    return false\n                } else {\n                    const approval = tx.approval\n                    if (!approval) return false\n                    return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n                }\n            }),\n        [allTransactions, spender, tokenAddress]\n    )\n}\n\n// watch for submissions to claim\n// return null if not done loading, return undefined if not found\nexport function useUserHasSubmittedClaim(account?: string): {\n    claimSubmitted: boolean\n    claimTxn: TransactionDetails | undefined\n} {\n    const allTransactions = useAllTransactions()\n\n    // get the txn if it has been submitted\n    const claimTxn = useMemo(() => {\n        const txnIndex = Object.keys(allTransactions).find((hash) => {\n            const tx = allTransactions[hash]\n            return tx.claim && tx.claim.recipient === account\n        })\n        return txnIndex && allTransactions[txnIndex] ? allTransactions[txnIndex] : undefined\n    }, [account, allTransactions])\n\n    return { claimSubmitted: Boolean(claimTxn), claimTxn }\n}\n","import React, { useMemo } from 'react'\nimport './index.scss'\n\ninterface CardProps {\n    classes?: string\n    children?: any\n    isDark?: boolean\n}\n\nconst Card = ({ classes, children, isDark }: CardProps) => {\n    const theme = useMemo(() => isDark ? 'dark' : isDark === undefined ? '' : 'light', [isDark])\n    return (\n        <div className={`card-wrapper ${theme} ${classes}`}>\n            {children}\n        </div>\n    )\n}\n\nexport default Card\n","import { Currency, CurrencyAmount, Ether, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { useMemo } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useMulticall2Contract } from '../../hooks/useContract'\nimport { isAddress } from '../../utils'\nimport { useMultipleContractSingleData, useSingleContractMultipleData } from '../multicall/hooks'\nimport { Interface } from '@ethersproject/abi'\nimport ERC20ABI from 'abis/erc20.json'\nimport { Erc20Interface } from 'abis/types/Erc20'\nimport usePrevious, { usePreviousNonEmptyObject } from 'hooks/usePrevious'\n\n/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */\nexport function useETHBalances(uncheckedAddresses?: (string | undefined)[]): {\n    [address: string]: CurrencyAmount<Currency> | undefined\n} {\n    const { chainId } = useActiveWeb3React()\n    const multicallContract = useMulticall2Contract()\n\n    const addresses: string[] = useMemo(\n        () =>\n            uncheckedAddresses\n                ? uncheckedAddresses\n                    .map(isAddress)\n                    .filter((a): a is string => a !== false)\n                    .sort()\n                : [],\n        [uncheckedAddresses]\n    )\n\n    const results = useSingleContractMultipleData(\n        multicallContract,\n        'getEthBalance',\n        addresses.map((address) => [address])\n    )\n\n    const balances = useMemo(\n        () =>\n            addresses.reduce<{ [address: string]: CurrencyAmount<Currency> }>((memo, address, i) => {\n                const value = results?.[i]?.result?.[0]\n                if (value && chainId)\n                    memo[address] = CurrencyAmount.fromRawAmount(Ether.onChain(chainId), JSBI.BigInt(value.toString()))\n                return memo\n            }, {}),\n        [addresses, chainId, results]\n    )\n\n    const prevBalances = usePreviousNonEmptyObject(balances)\n\n    return useMemo(() => {\n\n        if (!prevBalances) return {}\n\n        if (Object.keys(balances).length === 0 && Object.keys(prevBalances).length !== 0) return prevBalances\n\n        return balances\n\n    }, [balances])\n\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n    address?: string,\n    tokens?: (Token | undefined)[]\n): [{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }, boolean] {\n    const validatedTokens: Token[] = useMemo(\n        () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n        [tokens]\n    )\n\n    const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n    const ERC20Interface = new Interface(ERC20ABI) as Erc20Interface\n    const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20Interface, 'balanceOf', [address], {\n        gasRequired: 100_000\n    })\n\n    const _balances = useMemo(\n        () =>\n            address && validatedTokens.length > 0\n                ? validatedTokens.reduce<{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }>((memo, token, i) => {\n                    const value = balances?.[i]?.result?.[0]\n                    const amount = value ? JSBI.BigInt(value.toString()) : undefined\n                    if (amount) {\n                        memo[token.address] = CurrencyAmount.fromRawAmount(token, amount)\n                    }\n                    return memo\n                }, {})\n                : {},\n        [address, validatedTokens, balances]\n    )\n    const prevBalances = usePreviousNonEmptyObject(_balances)\n\n    const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [_balances])\n\n    return useMemo(() => {\n\n        if (!prevBalances) return [_balances, anyLoading]\n\n        if (Object.keys(_balances).length === 0 && Object.keys(_balances).length !== 0) return [prevBalances, anyLoading]\n\n        return [_balances, anyLoading]\n\n    }, [anyLoading, _balances])\n\n}\n\nexport function useTokenBalances(\n    address?: string,\n    tokens?: (Token | undefined)[]\n): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\n    return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): CurrencyAmount<Token> | undefined {\n    const tokenBalances = useTokenBalances(account, [token])\n    if (!token) return undefined\n    return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n    account?: string,\n    currencies?: (Currency | undefined)[]\n): (CurrencyAmount<Currency> | undefined)[] {\n    const tokens = useMemo(\n        () => currencies?.filter((currency): currency is Token => currency?.isToken ?? false) ?? [],\n        [currencies]\n    )\n\n    const tokenBalances = useTokenBalances(account, tokens)\n    const containsETH: boolean = useMemo(() => currencies?.some((currency) => currency?.isNative) ?? false, [currencies])\n    const ethBalance = useETHBalances(containsETH ? [account] : [])\n\n    return useMemo(\n        () =>\n            currencies?.map((currency) => {\n                if (!account || !currency) return undefined\n                if (currency.isToken) return tokenBalances[currency.address]\n                if (currency.isNative) return ethBalance[account]\n                return undefined\n            }) ?? [],\n        [account, currencies, ethBalance, tokenBalances]\n    )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount<Currency> | undefined {\n    return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\n    const { account } = useActiveWeb3React()\n    const allTokens = useAllTokens()\n    const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n    const balances = useTokenBalances(account ?? undefined, allTokensArray)\n    return balances ?? {}\n}\n","import styled from \"styled-components/macro\";\nimport { Box } from \"rebass/styled-components\";\n\nconst Card = styled(Box)<{ width?: string; padding?: string; border?: string; $borderRadius?: string }>`\n    width: ${({ width }) => width ?? \"100%\"};\n    padding: ${({ padding }) => padding ?? \"1rem\"};\n    border-radius: ${({ $borderRadius }) => $borderRadius ?? \"16px\"};\n    border: ${({ border }) => border};\n`;\nexport default Card;\n\nexport const LightCard = styled(Card)`\n    background-color: ${({}) => \"#2f567b\"};\n    color: white;\n`;\n\nexport const LightGreyCard = styled(Card)`\n    background-color: ${({}) => \"rgba(60, 97, 126, 0.5)\"};\n`;\n\nexport const GreyCard = styled(Card)`\n    background-color: ${({}) => \"rgba(60, 97, 126, 0.5)\"};\n`;\n\nexport const DarkGreyCard = styled(Card)`\n    background-color: ${({}) => \"rgba(60, 97, 126, 0.5)\"};\n`;\n\nexport const DarkCard = styled(Card)`\n    background-color: ${({}) => \"rgba(60, 97, 126, 0.5)\"};\n`;\n\nexport const OutlineCard = styled(Card)`\n    // border: 1px solid ${({ theme }) => \"var(--bg3)\"};\n    background-color: ${({}) => \"rgba(60, 97, 126, 0.5)\"};\n`;\n\nexport const YellowCard = styled(Card)`\n    background-color: rgba(243, 132, 30, 0.05);\n    color: ${({ theme }) => \"var(--yellow3)\"};\n    font-weight: 500;\n`;\n\nexport const BlueCard = styled(Card)`\n    background-color: ${({ theme }) => \"var(--primary4)\"};\n    color: ${({ theme }) => \"var(--blue2)\"};\n    border-radius: 12px;\n`;\n\nexport const GreyBadge = styled(Card)`\n    width: fit-content;\n    border-radius: 8px;\n    background: ${({ theme }) => \"var(--bg3)\"};\n    color: ${({ theme }) => \"var(--text1)\"};\n    padding: 4px 6px;\n    font-weight: 400;\n`;\n","import { createAction } from '@reduxjs/toolkit'\nimport { TradeType } from '@uniswap/sdk-core'\n\nexport interface SerializableTransactionReceipt {\n    to: string\n    from: string\n    contractAddress: string\n    transactionIndex: number\n    blockHash: string\n    transactionHash: string\n    blockNumber: number\n    status?: number\n}\n\n/**\n * Be careful adding to this enum, always assign a unique value (typescript will not prevent duplicate values).\n * These values is persisted in state and if you change the value it will cause errors\n */\nexport enum TransactionType {\n    APPROVAL = 0,\n    SWAP = 1,\n    DEPOSIT_LIQUIDITY_STAKING = 2,\n    WITHDRAW_LIQUIDITY_STAKING = 3,\n    CLAIM = 4,\n    VOTE = 5,\n    DELEGATE = 6,\n    WRAP = 7,\n    CREATE_V3_POOL = 8,\n    ADD_LIQUIDITY_V3_POOL = 9,\n    ADD_LIQUIDITY_V2_POOL = 10,\n    MIGRATE_LIQUIDITY_V3 = 11,\n    COLLECT_FEES = 12,\n    REMOVE_LIQUIDITY_V3 = 13,\n    SUBMIT_PROPOSAL = 14,\n}\n\nexport interface BaseTransactionInfo {\n    type: TransactionType\n}\n\nexport interface DelegateTransactionInfo extends BaseTransactionInfo {\n    type: TransactionType.DELEGATE\n    delegatee: string\n}\n\nexport interface ApproveTransactionInfo extends BaseTransactionInfo {\n    type: TransactionType.APPROVAL\n    tokenAddress: string\n    spender: string\n}\n\ninterface BaseSwapTransactionInfo extends BaseTransactionInfo {\n    type: TransactionType.SWAP\n    tradeType: TradeType\n    inputCurrencyId: string\n    outputCurrencyId: string\n}\n\nexport interface ExactInputSwapTransactionInfo extends BaseSwapTransactionInfo {\n    tradeType: TradeType.EXACT_INPUT\n    inputCurrencyAmountRaw: string\n    expectedOutputCurrencyAmountRaw: string\n    minimumOutputCurrencyAmountRaw: string\n}\n\nexport interface ExactOutputSwapTransactionInfo extends BaseSwapTransactionInfo {\n    tradeType: TradeType.EXACT_OUTPUT\n    outputCurrencyAmountRaw: string\n    expectedInputCurrencyAmountRaw: string\n    maximumInputCurrencyAmountRaw: string\n}\n\nexport interface DepositLiquidityStakingTransactionInfo {\n    type: TransactionType.DEPOSIT_LIQUIDITY_STAKING\n    token0Address: string\n    token1Address: string\n}\n\nexport interface WithdrawLiquidityStakingTransactionInfo {\n    type: TransactionType.WITHDRAW_LIQUIDITY_STAKING\n    token0Address: string\n    token1Address: string\n}\n\nexport interface WrapTransactionInfo {\n    type: TransactionType.WRAP\n    unwrapped: boolean\n    currencyAmountRaw: string\n}\n\nexport interface ClaimTransactionInfo {\n    type: TransactionType.CLAIM\n    recipient: string\n    uniAmountRaw?: string\n}\n\nexport interface CreateV3PoolTransactionInfo {\n    type: TransactionType.CREATE_V3_POOL\n    baseCurrencyId: string\n    quoteCurrencyId: string\n}\n\nexport interface AddLiquidityV3PoolTransactionInfo {\n    type: TransactionType.ADD_LIQUIDITY_V3_POOL\n    createPool: boolean\n    baseCurrencyId: string\n    quoteCurrencyId: string\n    feeAmount: number\n    expectedAmountBaseRaw: string\n    expectedAmountQuoteRaw: string\n}\n\nexport interface AddLiquidityV2PoolTransactionInfo {\n    type: TransactionType.ADD_LIQUIDITY_V2_POOL\n    baseCurrencyId: string\n    quoteCurrencyId: string\n    expectedAmountBaseRaw: string\n    expectedAmountQuoteRaw: string\n}\n\nexport interface MigrateV2LiquidityToV3TransactionInfo {\n    type: TransactionType.MIGRATE_LIQUIDITY_V3\n    baseCurrencyId: string\n    quoteCurrencyId: string\n    isFork: boolean\n}\n\nexport interface CollectFeesTransactionInfo {\n    type: TransactionType.COLLECT_FEES\n    currencyId0: string\n    currencyId1: string\n}\n\nexport interface RemoveLiquidityV3TransactionInfo {\n    type: TransactionType.REMOVE_LIQUIDITY_V3\n    baseCurrencyId: string\n    quoteCurrencyId: string\n    expectedAmountBaseRaw: string\n    expectedAmountQuoteRaw: string\n}\n\nexport interface SubmitProposalTransactionInfo {\n    type: TransactionType.SUBMIT_PROPOSAL\n}\n\nexport type TransactionInfo =\n    | ApproveTransactionInfo\n    | ExactOutputSwapTransactionInfo\n    | ExactInputSwapTransactionInfo\n    | ClaimTransactionInfo\n    | DelegateTransactionInfo\n    | DepositLiquidityStakingTransactionInfo\n    | WithdrawLiquidityStakingTransactionInfo\n    | WrapTransactionInfo\n    | CreateV3PoolTransactionInfo\n    | AddLiquidityV3PoolTransactionInfo\n    | AddLiquidityV2PoolTransactionInfo\n    | MigrateV2LiquidityToV3TransactionInfo\n    | CollectFeesTransactionInfo\n    | RemoveLiquidityV3TransactionInfo\n    | SubmitProposalTransactionInfo\n\nexport const addTransaction = createAction<{ chainId: number; hash: string; approval: any, summary: any, claim: any, from: string; info?: TransactionInfo }>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: number }>('transactions/clearAllTransactions')\nexport const clearOneTransaction = createAction<{ chainId: number; hash: string }>('transactions/clearOneTransaction')\nexport const finalizeTransaction = createAction<{ chainId: number; hash: string; receipt: SerializableTransactionReceipt }>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{ chainId: number; hash: string; blockNumber: number }>('transactions/checkedTransaction')\n","import { IS_ON_APP_URL } from './misc'\n\nconst AAVE_LIST = 'tokenlist.aave.eth'\nconst BA_LIST = 'https://raw.githubusercontent.com/The-Blockchain-Association/sec-notice-list/master/ba-sec-list.json'\nconst CMC_ALL_LIST = 'defi.cmc.eth'\nconst CMC_STABLECOIN = 'stablecoin.cmc.eth'\nconst COINGECKO_LIST = 'https://tokens.coingecko.com/uniswap/all.json'\nconst COMPOUND_LIST = 'https://raw.githubusercontent.com/compound-finance/token-list/master/compound.tokenlist.json'\nconst GEMINI_LIST = 'https://www.gemini.com/uniswap/manifest.json'\nconst KLEROS_LIST = 't2crtokens.eth'\nexport const OPTIMISM_LIST = 'https://static.optimism.io/optimism.tokenlist.json'\nconst ROLL_LIST = 'https://app.tryroll.com/tokens.json'\nconst SET_LIST = 'https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json'\nconst WRAPPED_LIST = 'wrapped.tokensoft.eth'\n\n// only load blocked list if on app url\nexport const UNSUPPORTED_LIST_URLS: string[] = IS_ON_APP_URL ? [BA_LIST] : []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n    // COMPOUND_LIST,\n    // AAVE_LIST,\n    // CMC_ALL_LIST,\n    // CMC_STABLECOIN,\n    // WRAPPED_LIST,\n    // SET_LIST,\n    // ROLL_LIST,\n    // COINGECKO_LIST,\n    // KLEROS_LIST,\n    // OPTIMISM_LIST,\n    // GEMINI_LIST,\n    ...UNSUPPORTED_LIST_URLS // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [\n    // GEMINI_LIST\n]\n","import styled from 'styled-components/macro'\nimport { transparentize } from 'polished'\n\nexport const PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: var(--panel1);\n  border: 1px solid var(--primary-weak);\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: var(--text1);\n  border-radius: 8px;\n`\nexport const ReferenceElement = styled.div`\n  display: inline-block;\n`\nexport const Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid var(--primary-weak);\n    transform: rotate(45deg);\n    background: var(--panel1);\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n","import { Placement } from '@popperjs/core'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport useInterval from '../../hooks/useInterval'\nimport Portal from '@reach/portal'\nimport { Arrow, PopoverContainer, ReferenceElement } from './styled'\n\nexport interface PopoverProps {\n    content: React.ReactNode\n    show: boolean\n    children?: React.ReactNode\n    placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n    const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n    const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n    const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n    const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n        placement,\n        strategy: 'fixed',\n        modifiers: [\n            { name: 'offset', options: { offset: [8, 8] } },\n            { name: 'arrow', options: { element: arrowElement } }\n        ]\n    })\n    const updateCallback = useCallback(() => {\n        update && update()\n    }, [update])\n    useInterval(updateCallback, show ? 100 : null)\n\n    return (\n        <>\n            <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n            <Portal>\n                <PopoverContainer show={show} ref={setPopperElement as any}\n                                  style={styles.popper} {...attributes.popper}>\n                    {content}\n                    <Arrow\n                        className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n                        ref={setArrowElement as any}\n                        style={styles.arrow}\n                        {...attributes.arrow}\n                    />\n                </PopoverContainer>\n            </Portal>\n        </>\n    )\n}\n","import styled from 'styled-components/macro'\n\nexport const TooltipContainer = styled.div`\n  width: 256px;\n  padding: 0.6rem 1rem;\n  font-weight: 400;\n  word-break: break-word;\n  color: var(--text1);\n`\n","import { ReactNode, useCallback, useState } from 'react'\nimport Popover, { PopoverProps } from '../Popover'\nimport { TooltipContainer } from './styled'\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n    text: ReactNode\n}\n\ninterface TooltipContentProps extends Omit<PopoverProps, 'content'> {\n    content: ReactNode\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n    return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nfunction TooltipContent({ content, ...rest }: TooltipContentProps) {\n    return <Popover content={<TooltipContainer>{content}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n    const [show, setShow] = useState(false)\n    const open = useCallback(() => setShow(true), [setShow])\n    const close = useCallback(() => setShow(false), [setShow])\n    return (\n        <Tooltip {...rest} show={show}>\n            <div onMouseEnter={open} onMouseLeave={close}>\n                {children}\n            </div>\n        </Tooltip>\n    )\n}\n\nexport function MouseoverTooltipContent({\n    content,\n    children,\n    ...rest\n}: Omit<TooltipContentProps, 'show'>) {\n    const [show, setShow] = useState(false)\n    const open = useCallback(() => setShow(true), [setShow])\n    const close = useCallback(() => setShow(false), [setShow])\n    return (\n        <TooltipContent {...rest} show={show} content={content}>\n            <div\n                style={{ display: 'inline-block', lineHeight: 0, padding: '0.25rem' }}\n                onMouseEnter={open}\n                onMouseLeave={close}\n            >\n                {children}\n            </div>\n        </TooltipContent>\n    )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Call } from './utils'\n\nexport interface ListenerOptions {\n    // how often this data should be fetched, by default 1\n    readonly blocksPerFetch: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options: ListenerOptions }>(\n    'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options: ListenerOptions }>(\n    'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n    'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n    chainId: number\n    calls: Call[]\n    fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n    chainId: number\n    blockNumber: number\n    results: {\n        [callKey: string]: string | null\n    }\n}>('multicall/updateMulticallResults')\n","import { animated } from \"react-spring\";\nimport { DialogContent, DialogOverlay } from \"@reach/dialog\";\nimport styled, { css } from \"styled-components/macro\";\nimport { transparentize } from \"polished\";\nimport React from \"react\";\n\nconst AnimatedDialogOverlay = animated(DialogOverlay);\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n    &[data-reach-dialog-overlay] {\n        z-index: 99;\n        background-color: transparent;\n        overflow: hidden;\n\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        background-color: ${({ theme }) => \"var(--modal-bg)\"};\n    }\n`;\n\nconst AnimatedDialogContent = animated(DialogContent);\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => <AnimatedDialogContent {...rest} />).attrs({\n    \"aria-label\": \"dialog\",\n})`\n    overflow-y: auto;\n\n    &[data-reach-dialog-content] {\n        margin: 0 0 2rem 0;\n        background-color: var(--panel0);\n        color: var(--text1);\n        // -webkit-backdrop-filter: blur(6px);\n        // backdrop-filter: blur(6px);\n        box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n        width: 60vw;\n        overflow-y: clip;\n        overflow-x: hidden;\n        padding: 1rem;\n\n        align-self: ${({ mobile }) => (mobile ? \"flex-end\" : \"center\")};\n\n        max-width: 750px;\n        ${({ maxHeight }) =>\n            maxHeight &&\n            css`\n                max-height: ${maxHeight}vh;\n            `}\n        ${({ minHeight }) =>\n            minHeight &&\n            css`\n                min-height: ${minHeight}vh;\n            `}\n        display: flex;\n        border-radius: 20px;\n        ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n        ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${\n          mobile &&\n          css`\n              width: 100vw;\n              border-radius: 20px 20px 0 0;\n              padding-bottom: 3rem;\n              padding-top: 1rem;\n              overflow-y: auto;\n          `\n      }\n    `}\n    }\n`;\n","import React from \"react\";\nimport { useSpring, useTransition } from \"react-spring\";\nimport { isMobile } from \"react-device-detect\";\nimport { useGesture } from \"react-use-gesture\";\nimport { StyledDialogContent, StyledDialogOverlay } from \"./styled\";\n\ninterface ModalProps {\n    isOpen: boolean;\n    onDismiss: () => void;\n    minHeight?: number | false;\n    maxHeight?: number;\n    initialFocusRef?: React.RefObject<any>;\n    dangerouslyBypassFocusLock?: boolean;\n    children?: React.ReactNode;\n    onHide?: () => void;\n    fitContent?: boolean;\n}\n\nexport default function Modal({ isOpen, onDismiss, minHeight = false, maxHeight = 90, initialFocusRef, dangerouslyBypassFocusLock, children, fitContent, onHide }: ModalProps) {\n    const fadeTransition = useTransition(isOpen, null, {\n        config: { duration: 200 },\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    });\n\n    const [{ y }, set] = useSpring(() => ({\n        y: 0,\n        config: { mass: 1, tension: 210, friction: 20 },\n    }));\n    const bind = useGesture({\n        onDrag: (state) => {\n            set({\n                y: state.down ? state.movement[1] : 0,\n            });\n            if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n                onDismiss();\n            }\n        },\n    });\n\n    return (\n        <>\n            {fadeTransition.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <StyledDialogOverlay\n                            key={key}\n                            style={props}\n                            onDismiss={onDismiss}\n                            initialFocusRef={initialFocusRef}\n                            dangerouslyBypassFocusLock={dangerouslyBypassFocusLock}\n                            unstable_lockFocusAcrossFrames={false}\n                            onClick={onHide}\n                        >\n                            <StyledDialogContent\n                                {...(isMobile\n                                    ? {\n                                          ...bind(),\n                                          style: { transform: `translateY(-3rem)` },\n                                      }\n                                    : {\n                                          style: { width: fitContent ? \"unset\" : \"700px\" },\n                                      })}\n                                aria-label=\"dialog content\"\n                                minHeight={minHeight}\n                                maxHeight={maxHeight}\n                                mobile={isMobile}\n                            >\n                                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                                {children}\n                            </StyledDialogContent>\n                        </StyledDialogOverlay>\n                    )\n            )}\n        </>\n    );\n}\n","import { pack } from '@ethersproject/solidity'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { Pool } from '../entities/pool'\nimport { Route } from '../entities/route'\n\n/**\n * Converts a route to a hex encoded path\n * @param route the v3 path to convert to an encoded path\n * @param exactOutput whether the route should be encoded in reverse, for making exact output swaps\n */\nexport function encodeRouteToPath(route: Route<Currency, Currency>, exactOutput: boolean): string {\n    const firstInputToken: Token = route.input.wrapped\n\n    const { path, types } = route.pools.reduce(\n        (\n            {\n                inputToken,\n                path,\n                types\n            }: { inputToken: Token; path: (string | number)[]; types: string[] },\n            pool: Pool,\n            index\n        ): { inputToken: Token; path: (string | number)[]; types: string[] } => {\n            const outputToken: Token = pool.token0.equals(inputToken) ? pool.token1 : pool.token0\n            if (index === 0) {\n                return {\n                    inputToken: outputToken,\n                    types: ['address', 'address'],\n                    path: [inputToken.address, outputToken.address]\n                }\n            } else {\n                return {\n                    inputToken: outputToken,\n                    types: [...types, 'address'],\n                    path: [...path, outputToken.address]\n                }\n            }\n        },\n        { inputToken: firstInputToken, path: [], types: [] }\n    )\n\n    return exactOutput ? pack(types.reverse(), path.reverse()) : pack(types, path)\n}\n","import invariant from 'tiny-invariant'\nimport { TickMath } from './tickMath'\n\n/**\n * Returns the closest tick that is nearest a given tick and usable for the given tick spacing\n * @param tick the target tick\n * @param tickSpacing the spacing of the pool\n */\nexport function nearestUsableTick(tick: number, tickSpacing: number) {\n    invariant(Number.isInteger(tick) && Number.isInteger(tickSpacing), 'INTEGERS')\n    invariant(tickSpacing > 0, 'TICK_SPACING')\n    invariant(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK, 'TICK_BOUND')\n    const rounded = Math.round(tick / tickSpacing) * tickSpacing\n    if (rounded < TickMath.MIN_TICK) return rounded + tickSpacing\n    else if (rounded > TickMath.MAX_TICK) return rounded - tickSpacing\n    else return rounded\n}\n","import JSBI from 'jsbi'\nimport { ONE, ZERO } from '../internalConstants'\n\nexport abstract class FullMath {\n    /**\n     * Cannot be constructed.\n     */\n\n    public static mulDivRoundingUp(a: JSBI, b: JSBI, denominator: JSBI): JSBI {\n        const product = JSBI.multiply(a, b)\n        let result = JSBI.divide(product, denominator)\n        if (JSBI.notEqual(JSBI.remainder(product, denominator), ZERO)) result = JSBI.add(result, ONE)\n        return result\n    }\n}\n","import { DEFAULT_LIST_OF_LISTS } from './../constants/lists'\n\nconst DEFAULT_LIST_PRIORITIES = DEFAULT_LIST_OF_LISTS.reduce<{ [listUrl: string]: number }>((memo, listUrl, index) => {\n    memo[listUrl] = index + 1\n    return memo\n}, {})\n\n// use ordering of default list of lists to assign priority\nexport default function sortByListPriority(urlA: string, urlB: string) {\n    if (DEFAULT_LIST_PRIORITIES[urlA] && DEFAULT_LIST_PRIORITIES[urlB]) {\n        return DEFAULT_LIST_PRIORITIES[urlA] - DEFAULT_LIST_PRIORITIES[urlB]\n    }\n    return 0\n}\n","import DEFAULT_TOKEN_LIST from '@uniswap/default-token-list'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useAppSelector } from 'state/hooks'\nimport sortByListPriority from 'utils/listSort'\nimport { AppState } from '../index'\nimport { WrappedTokenInfo } from './wrappedTokenInfo'\n\nexport type TokenAddressMap = Readonly<{\n    [chainId: number]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }>\n}>\n\ntype Mutable<T> = {\n    -readonly [P in keyof T]: Mutable<T[P]>\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n    typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nfunction listToTokenMap(list: TokenList): TokenAddressMap {\n    const result = listCache?.get(list)\n    if (result) return result\n\n    const map = list.tokens.reduce<Mutable<TokenAddressMap>>((tokenMap, tokenInfo) => {\n        const token = new WrappedTokenInfo(tokenInfo, list)\n        if (tokenMap[token.chainId]?.[token.address] !== undefined) {\n            console.error(`Duplicate token! ${token.address}`)\n            return tokenMap\n        }\n        if (!tokenMap[token.chainId]) tokenMap[token.chainId] = {}\n        tokenMap[token.chainId][token.address] = {\n            token,\n            list\n        }\n        return tokenMap\n    }, {}) as TokenAddressMap\n    listCache?.set(list, map)\n    return map\n}\n\nconst TRANSFORMED_DEFAULT_TOKEN_LIST = listToTokenMap(DEFAULT_TOKEN_LIST)\n\nexport function useAllLists(): AppState['lists']['byUrl'] {\n    return useAppSelector((state) => state.lists.byUrl)\n}\n\n/**\n * Combine the tokens in map2 with the tokens on map1, where tokens on map1 take precedence\n * @param map1 the base token map\n * @param map2 the map of additioanl tokens to add to the base map\n */\nexport function combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n    const chainIds = Object.keys(\n        Object.keys(map1)\n            .concat(Object.keys(map2))\n            .reduce<{ [chainId: string]: true }>((memo, value) => {\n                memo[value] = true\n                return memo\n            }, {})\n    ).map((id) => parseInt(id))\n\n    return chainIds.reduce<Mutable<TokenAddressMap>>((memo, chainId) => {\n        memo[chainId] = {\n            ...map2[chainId],\n            // map1 takes precedence\n            ...map1[chainId]\n        }\n        return memo\n    }, {}) as TokenAddressMap\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n    const lists = useAllLists()\n    return useMemo(() => {\n        if (!urls) return {}\n        return (\n            urls\n                .slice()\n                // sort by priority so top priority goes last\n                .sort(sortByListPriority)\n                .reduce((allTokens, currentUrl) => {\n                    const current = lists[currentUrl]?.current\n                    if (!current) return allTokens\n                    try {\n                        return combineMaps(allTokens, listToTokenMap(current))\n                    } catch (error) {\n                        console.error('Could not show token list due to error', error)\n                        return allTokens\n                    }\n                }, {})\n        )\n    }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n    return useAppSelector((state) => state.lists.activeListUrls)\n}\n\nexport function useInactiveListUrls(): string[] {\n    const lists = useAllLists()\n    const allActiveListUrls = useActiveListUrls()\n    return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n    const activeListUrls = useActiveListUrls()\n    return useCombinedTokenMapFromUrls(activeListUrls)\n    // combineMaps(activeTokens, TRANSFORMED_DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and add\n\nexport function useIsListActive(url: string): boolean {\n    const activeListUrls = useActiveListUrls()\n    return Boolean(activeListUrls?.includes(url))\n}\n","export interface Call {\n    address: string\n    callData: string\n    gasRequired?: number\n}\n\nexport function toCallKey(call: Call): string {\n    let key = `${call.address}-${call.callData}`\n    if (call.gasRequired) {\n        if (!Number.isSafeInteger(call.gasRequired)) {\n            throw new Error(`Invalid number: ${call.gasRequired}`)\n        }\n        key += `-${call.gasRequired}`\n    }\n    return key\n}\n\nexport function parseCallKey(callKey: string): Call {\n    const pcs = callKey.split('-')\n    if (![2, 3].includes(pcs.length)) {\n        throw new Error(`Invalid call key: ${callKey}`)\n    }\n    return {\n        address: pcs[0],\n        callData: pcs[1],\n        ...(pcs[2] ? { gasRequired: Number.parseInt(pcs[2]) } : {})\n    }\n}\n","import AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n\nexport const POOL_INIT_CODE_HASH = AlgebraConfig.V3_CONTRACTS[ChainId.BNB].POOL_INIT_CODE_HASH\n\n/**\n * The default factory enabled fee amounts, denominated in hundredths of bips.\n */\nexport enum FeeAmount {\n    LOW = 500,\n    MEDIUM = 500,\n    HIGH = 500\n}\n\n/**\n * The default factory tick spacings by fee amount.\n */\nexport const TICK_SPACINGS: { [amount in FeeAmount]: number } = {\n    [FeeAmount.LOW]: 60,\n    [FeeAmount.MEDIUM]: 60,\n    [FeeAmount.HIGH]: 60\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { Pool } from 'lib/src'\nimport { useMemo } from 'react'\nimport { useAllCurrencyCombinations } from './useAllCurrencyCombinations'\nimport { PoolState, usePools } from './usePools'\n\n/**\n * Returns all the existing pools that should be considered for swapping between an input currency and an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useV3SwapPools(\n    currencyIn?: Currency,\n    currencyOut?: Currency\n): {\n    pools: Pool[]\n    loading: boolean\n} {\n\n    const allCurrencyCombinations = useAllCurrencyCombinations(currencyIn, currencyOut)\n\n    // const allCurrencyCombinationsWithAllFees: [Token, Token, FeeAmount][] = useMemo(\n    //   () =>\n    //     allCurrencyCombinations\n    //   [allCurrencyCombinations]\n    // )\n\n\n    const pools = usePools(allCurrencyCombinations)\n\n    return useMemo(() => {\n        return {\n            pools: pools\n                .filter((tuple): tuple is [PoolState.EXISTS, Pool] => {\n                    return tuple[0] === PoolState.EXISTS && tuple[1] !== null\n                })\n                .map(([, pool]) => pool),\n            loading: pools.some(([state]) => state === PoolState.LOADING)\n        }\n    }, [pools])\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants/routing'\nimport { useActiveWeb3React } from './web3'\n\nexport function useAllCurrencyCombinations(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n    const { chainId } = useActiveWeb3React()\n\n    const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n    const bases: Token[] = useMemo(() => {\n        if (!chainId) return []\n\n        const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n        const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n        const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n        return [...common, ...additionalA, ...additionalB]\n    }, [chainId, tokenA, tokenB])\n\n    const basePairs: [Token, Token][] = useMemo(\n        () =>\n            bases\n                .flatMap((base): [Token, Token][] => bases.map((otherBase) => [base, otherBase]))\n                .filter(([t0, t1]) => !t0.equals(t1)),\n        [bases]\n    )\n\n    return useMemo(\n        () =>\n            tokenA && tokenB\n                ? [\n                    // the direct pair\n                    [tokenA, tokenB] as [Token, Token],\n                    // token A against all bases\n                    ...bases.map((base): [Token, Token] => [tokenA, base]),\n                    // token B against all bases\n                    ...bases.map((base): [Token, Token] => [tokenB, base]),\n                    // each base against all bases\n                    ...basePairs\n                ]\n                    // filter out invalid pairs comprised of the same asset (e.g. WETH<>WETH)\n                    .filter(([t0, t1]) => !t0.equals(t1))\n                    // filter out duplicate pairs\n                    .filter(([t0, t1], i, otherPairs) => {\n                        // find the first index in the array at which there are the same 2 tokens as the current\n                        const firstIndexInOtherPairs = otherPairs.findIndex(([t0Other, t1Other]) => {\n                            return (t0.equals(t0Other) && t1.equals(t1Other)) || (t0.equals(t1Other) && t1.equals(t0Other))\n                        })\n                        // only accept the first occurrence of the same 2 tokens\n                        return firstIndexInOtherPairs === i\n                    })\n                    // optionally filter out some pairs for tokens with custom bases defined\n                    .filter(([tokenA, tokenB]) => {\n                        if (!chainId) return true\n                        const customBases = CUSTOM_BASES[chainId]\n\n                        const customBasesA: Token[] | undefined = customBases?.[tokenA.address]\n                        const customBasesB: Token[] | undefined = customBases?.[tokenB.address]\n\n                        if (!customBasesA && !customBasesB) return true\n\n                        if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n                        if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n                        return true\n                    })\n                : [],\n        [tokenA, tokenB, bases, basePairs, chainId]\n    )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { Pool, Route } from 'lib/src'\nimport { useMemo } from 'react'\nimport { useUserSingleHopOnly } from '../state/user/hooks'\nimport { useActiveWeb3React } from './web3'\nimport { useV3SwapPools } from './useV3SwapPools'\n\n/**\n * Returns true if poolA is equivalent to poolB\n * @param poolA one of the two pools\n * @param poolB the other pool\n */\nfunction poolEquals(poolA: Pool, poolB: Pool): boolean {\n    return (\n        poolA === poolB ||\n        (poolA.token0.equals(poolB.token0) && poolA.token1.equals(poolB.token1) && poolA.fee === poolB.fee)\n    )\n}\n\nfunction computeAllRoutes(\n    currencyIn: Currency,\n    currencyOut: Currency,\n    pools: Pool[],\n    chainId: number,\n    currentPath: Pool[] = [],\n    allPaths: Route<Currency, Currency>[] = [],\n    startCurrencyIn: Currency = currencyIn,\n    maxHops = 2\n): Route<Currency, Currency>[] {\n    const tokenIn = currencyIn?.wrapped\n    const tokenOut = currencyOut?.wrapped\n\n    if (!tokenIn || !tokenOut) throw new Error('Missing tokenIn/tokenOut')\n\n    for (const pool of pools) {\n        if (!pool.involvesToken(tokenIn) || currentPath.find((pathPool) => poolEquals(pool, pathPool))) continue\n\n        const outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0\n        if (outputToken.equals(tokenOut)) {\n            allPaths.push(new Route([...currentPath, pool], startCurrencyIn, currencyOut))\n        } else if (maxHops > 1) {\n            computeAllRoutes(\n                outputToken,\n                currencyOut,\n                pools,\n                chainId,\n                [...currentPath, pool],\n                allPaths,\n                startCurrencyIn,\n                maxHops - 1\n            )\n        }\n    }\n\n    return allPaths\n}\n\n/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useAllV3Routes(\n    currencyIn?: Currency,\n    currencyOut?: Currency\n): { loading: boolean; routes: Route<Currency, Currency>[] } {\n    const { chainId } = useActiveWeb3React()\n    const { pools, loading: poolsLoading } = useV3SwapPools(currencyIn, currencyOut)\n\n    const [singleHopOnly] = useUserSingleHopOnly()\n\n    return useMemo(() => {\n        if (poolsLoading || !chainId || !pools || !currencyIn || !currencyOut) return {\n            loading: true,\n            routes: []\n        }\n\n        //Hack\n        // const singleIfWrapped = (currencyIn.isNative || currencyOut.isNative)\n        const singleIfWrapped = false\n\n        const routes = computeAllRoutes(currencyIn, currencyOut, pools, chainId, [], [], currencyIn, (singleHopOnly || singleIfWrapped) ? 1 : 3)\n\n        return { loading: false, routes }\n    }, [chainId, currencyIn, currencyOut, pools, poolsLoading, singleHopOnly])\n}\n","import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { encodeRouteToPath, Route, Trade } from 'lib/src'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSingleContractMultipleData } from '../state/multicall/hooks'\nimport { useAllV3Routes } from './useAllV3Routes'\nimport { useV3Quoter } from './useContract'\nimport { useActiveWeb3React } from './web3'\nimport usePrevious from './usePrevious'\n\nexport enum V3TradeState {\n    LOADING,\n    INVALID,\n    NO_ROUTE_FOUND,\n    VALID,\n    SYNCING,\n}\n\nconst DEFAULT_GAS_QUOTE = 2_000_000\n\n/**\n * Returns the best v3 trade for a desired exact input swap\n * @param amountIn the amount to swap in\n * @param currencyOut the desired output currency\n */\nexport function useBestV3TradeExactIn(\n    amountIn?: CurrencyAmount<Currency>,\n    currencyOut?: Currency\n): { state: V3TradeState; trade: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null } {\n    const { chainId } = useActiveWeb3React()\n    const quoter = useV3Quoter()\n\n    const { routes, loading: routesLoading } = useAllV3Routes(amountIn?.currency, currencyOut)\n\n    const quoteExactInInputs = useMemo(() => {\n        return routes.map((route) => [\n            encodeRouteToPath(route, false),\n            amountIn ? `0x${amountIn.quotient.toString(16)}` : undefined\n        ])\n    }, [amountIn, routes])\n\n    const quotesResults = useSingleContractMultipleData(quoter, 'quoteExactInput', quoteExactInInputs, {\n        gasRequired: chainId ? DEFAULT_GAS_QUOTE : undefined\n    })\n\n    const trade = useMemo(() => {\n        if (!amountIn || !currencyOut) {\n            return {\n                state: V3TradeState.INVALID,\n                trade: null\n            }\n        }\n\n        if (routesLoading || quotesResults.some(({ loading }) => loading)) {\n            return {\n                state: V3TradeState.LOADING,\n                trade: null\n            }\n        }\n\n        const { bestRoute, amountOut } = quotesResults.reduce(\n            (currentBest: { bestRoute: Route<Currency, Currency> | null; amountOut: BigNumber | null }, { result }, i) => {\n                if (!result) return currentBest\n\n                if (currentBest.amountOut === null) {\n                    return {\n                        bestRoute: routes[i],\n                        amountOut: result.amountOut\n                    }\n                } else if (currentBest.amountOut.lt(result.amountOut)) {\n                    return {\n                        bestRoute: routes[i],\n                        amountOut: result.amountOut\n                    }\n                }\n\n                return currentBest\n            },\n            {\n                bestRoute: null,\n                amountOut: null\n            }\n        )\n\n        if (!bestRoute || !amountOut) {\n            return {\n                state: V3TradeState.NO_ROUTE_FOUND,\n                trade: null\n            }\n        }\n\n        const isSyncing = quotesResults.some(({ syncing }) => syncing)\n\n        return {\n            state: isSyncing ? V3TradeState.SYNCING : V3TradeState.VALID,\n            trade: Trade.createUncheckedTrade({\n                route: bestRoute,\n                tradeType: TradeType.EXACT_INPUT,\n                inputAmount: amountIn,\n                outputAmount: CurrencyAmount.fromRawAmount(currencyOut, amountOut.toString())\n            })\n        }\n    }, [amountIn, currencyOut, quotesResults, routes, routesLoading])\n\n    const prevTrade = usePrevious(trade.trade ? trade : undefined)\n\n    return useMemo(() => {\n        if (!prevTrade) return trade\n\n        if (!trade.trade && prevTrade.trade) return prevTrade\n\n        return trade\n    }, [trade])\n\n}\n\n/**\n * Returns the best v3 trade for a desired exact output swap\n * @param currencyIn the desired input currency\n * @param amountOut the amount to swap out\n */\nexport function useBestV3TradeExactOut(\n    currencyIn?: Currency,\n    amountOut?: CurrencyAmount<Currency>\n): { state: V3TradeState; trade: Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null } {\n    const { chainId } = useActiveWeb3React()\n    const quoter = useV3Quoter()\n\n    const { routes, loading: routesLoading } = useAllV3Routes(currencyIn, amountOut?.currency)\n\n    const quoteExactOutInputs = useMemo(() => {\n        return routes.map((route) => [\n            encodeRouteToPath(route, true),\n            amountOut ? `0x${amountOut.quotient.toString(16)}` : undefined\n        ])\n    }, [amountOut, routes])\n\n    const quotesResults = useSingleContractMultipleData(quoter, 'quoteExactOutput', quoteExactOutInputs, {\n        gasRequired: chainId ? DEFAULT_GAS_QUOTE : undefined\n    })\n\n    const trade = useMemo(() => {\n        if (!amountOut || !currencyIn || quotesResults.some(({ valid }) => !valid)) {\n            return {\n                state: V3TradeState.INVALID,\n                trade: null\n            }\n        }\n\n        if (routesLoading || quotesResults.some(({ loading }) => loading)) {\n            return {\n                state: V3TradeState.LOADING,\n                trade: null\n            }\n        }\n\n        const { bestRoute, amountIn } = quotesResults.reduce(\n            (currentBest: { bestRoute: Route<Currency, Currency> | null; amountIn: BigNumber | null }, { result }, i) => {\n                if (!result) return currentBest\n\n\n                if (currentBest.amountIn === null) {\n                    return {\n                        bestRoute: routes[i],\n                        amountIn: result.amountIn\n                    }\n                } else if (currentBest.amountIn.gt(result.amountIn)) {\n                    return {\n                        bestRoute: routes[i],\n                        amountIn: result.amountIn\n                    }\n                }\n\n                return currentBest\n            },\n            {\n                bestRoute: null,\n                amountIn: null\n            }\n        )\n\n        if (!bestRoute || !amountIn) {\n            return {\n                state: V3TradeState.NO_ROUTE_FOUND,\n                trade: null\n            }\n        }\n\n        const isSyncing = quotesResults.some(({ syncing }) => syncing)\n\n        return {\n            state: isSyncing ? V3TradeState.SYNCING : V3TradeState.VALID,\n            trade: Trade.createUncheckedTrade({\n                route: bestRoute,\n                tradeType: TradeType.EXACT_OUTPUT,\n                inputAmount: CurrencyAmount.fromRawAmount(currencyIn, amountIn.toString()),\n                outputAmount: amountOut\n            })\n        }\n    }, [amountOut, currencyIn, quotesResults, routes, routesLoading])\n\n    const prevTrade = usePrevious(trade.trade ? trade : undefined)\n\n    return useMemo(() => {\n\n        if (!prevTrade) return trade\n\n        if (!trade.trade && prevTrade.trade) return prevTrade\n\n        return trade\n\n    }, [trade])\n}\n","import AlgebraConfig from \"algebra.config\"\n\ntype AddressMap = { [chainId: number]: string }\n\nexport const ChainId = {\n    BNB: 56,\n    PULSE: 369\n}\n\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].FACTORY_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].FACTORY_ADDRESS\n}\n\nexport const POOL_DEPLOYER_ADDRESS: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].POOL_DEPLOYER_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].POOL_DEPLOYER_ADDRESS\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].QUOTER_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].QUOTER_ADDRESS,\n}\n\nexport const SWAP_ROUTER_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].SWAP_ROUTER_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].SWAP_ROUTER_ADDRESS,\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].NONFUNGIBLE_POSITION_MANAGER_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].NONFUNGIBLE_POSITION_MANAGER_ADDRESS,\n}\n\nexport const MULTICALL_ADDRESS: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].MULTICALL_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].MULTICALL_ADDRESS,\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].MIGRATOR_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].MIGRATOR_ADDRESS,\n}\n\nexport const FINITE_FARMING: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].LIMIT_FARMING_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].LIMIT_FARMING_ADDRESS,\n}\n\nexport const INFINITE_FARMING_ADDRESS: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].ETERNAL_FARMING_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].ETERNAL_FARMING_ADDRESS\n}\n\nexport const FARMING_CENTER: AddressMap = {\n    [ChainId.BNB]: AlgebraConfig.V3_CONTRACTS[ChainId.BNB].FARMING_CENTER_ADDRESS,\n    [ChainId.PULSE]: AlgebraConfig.V3_CONTRACTS[ChainId.PULSE].FARMING_CENTER_ADDRESS,\n}\n\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: '0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32',\n    [ChainId.PULSE]: '0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32',\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n    [ChainId.BNB]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    [ChainId.PULSE]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n    const { search } = useLocation()\n    return useMemo(\n        () => (search && search.length > 1 ? parse(search, {\n            parseArrays: false,\n            ignoreQueryPrefix: true\n        }) : {}),\n        [search]\n    )\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n    useEffect(() => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value)\n        }, delay)\n\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n        return () => {\n            clearTimeout(handler)\n        }\n    }, [value, delay])\n\n    return debouncedValue\n}\n","// a list of tokens by chain\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { DEFAULT_TOKENS_BNB, TOKENS_FOR_MULTIHOP_BNB, DEFAULT_TOKENS_PULSE, TOKENS_FOR_MULTIHOP_PULSE, ExtendedEther, WMATIC_EXTENDED } from './tokens'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"./addresses\"\n\ntype ChainTokenList = {\n    readonly [chainId: number]: Token[]\n}\n\ntype ChainCurrencyList = {\n    readonly [chainId: number]: Currency[]\n}\n\nconst WETH_ONLY: ChainTokenList = Object.fromEntries(\n    Object.entries(WMATIC_EXTENDED).map(([key, value]) => [key, [value]])\n)\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n    ...WETH_ONLY,\n    [ChainId.BNB]: [...WETH_ONLY[ChainId.BNB], ...TOKENS_FOR_MULTIHOP_BNB],\n    [ChainId.PULSE]: [...WETH_ONLY[ChainId.PULSE], ...TOKENS_FOR_MULTIHOP_PULSE],\n}\nexport const ADDITIONAL_BASES: { [chainId: number]: { [tokenAddress: string]: Token[] } } = {}\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId: number]: { [tokenAddress: string]: Token[] } } = {}\n\n/**\n * Shows up in the currency select for swap and add liquidity\n */\nexport const COMMON_BASES: ChainCurrencyList = {\n    [ChainId.BNB]: [\n        ExtendedEther.onChain(ChainId.BNB),\n        ...DEFAULT_TOKENS_BNB,\n    ],\n    [ChainId.PULSE]: [\n        ExtendedEther.onChain(ChainId.PULSE),\n        ...DEFAULT_TOKENS_PULSE\n    ]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n    ...WETH_ONLY,\n    [ChainId.BNB]: [...WETH_ONLY[ChainId.BNB], ...TOKENS_FOR_MULTIHOP_BNB],\n    [ChainId.PULSE]: [...WETH_ONLY[ChainId.PULSE], ...TOKENS_FOR_MULTIHOP_PULSE],\n}\nexport const PINNED_PAIRS: { readonly [chainId: number]: [Token, Token][] } = {\n}\n","import styled from 'styled-components/macro'\n\nexport const StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? 'var(--red1)' : 'var(--text1)')};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => 'var(--bg1)'};\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\n  text-align: ${({ align }) => align ? align : 'right'};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => 'var(--text4)'};\n    opacity: 1;\n  }\n`\n","import { t } from \"@lingui/macro\";\nimport React from \"react\";\nimport { escapeRegExp } from \"../../utils\";\nimport { StyledInput } from \"./styled\";\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\ninterface InputProps {\n    value: string | number;\n    onUserInput: (input: string) => void;\n    error?: boolean;\n    fontSize?: string;\n    align?: \"right\" | \"left\";\n    prependSymbol?: string | undefined;\n}\n\nexport const Input = React.memo(function InnerInput({ value, onUserInput, placeholder, prependSymbol, ...rest }: InputProps & Omit<React.HTMLProps<HTMLInputElement>, \"ref\" | \"onChange\" | \"as\">) {\n    const enforcer = (nextUserInput: string) => {\n        if (nextUserInput === \"\" || inputRegex.test(escapeRegExp(nextUserInput.trim()))) {\n            onUserInput(nextUserInput);\n        }\n    };\n\n    return (\n        <StyledInput\n            {...rest}\n            value={prependSymbol && value ? prependSymbol + value : value}\n            onChange={(event) => {\n                if (prependSymbol) {\n                    const value = event.target.value;\n\n                    // cut off prepended symbol\n                    const formattedValue = value.toString().includes(prependSymbol) ? value.toString().slice(1, value.toString().length + 1) : value;\n\n                    // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n                    enforcer(formattedValue.replace(/,/g, \".\"));\n                } else {\n                    enforcer(event.target.value.replace(/,/g, \".\"));\n                }\n            }}\n            // universal input options\n            inputMode=\"decimal\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            // text-specific options\n            type=\"text\"\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            placeholder={placeholder || t`Enter an amount`}\n            minLength={1}\n            maxLength={79}\n            spellCheck=\"false\"\n        />\n    );\n});\nexport default Input;\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n    return /^0x0*$/.test(hexNumberString)\n}\n","import JSBI from 'jsbi'\nimport { FeeAmount } from '../constants'\nimport { NEGATIVE_ONE, ZERO } from '../internalConstants'\nimport { FullMath } from './fullMath'\nimport { SqrtPriceMath } from './sqrtPriceMath'\n\nconst MAX_FEE = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(6))\n\nexport abstract class SwapMath {\n    /**\n     * Cannot be constructed.\n     */\n\n    public static computeSwapStep(\n        sqrtRatioCurrentX96: JSBI,\n        sqrtRatioTargetX96: JSBI,\n        liquidity: JSBI,\n        amountRemaining: JSBI,\n        feePips: FeeAmount\n    ): [JSBI, JSBI, JSBI, JSBI] {\n        const returnValues: Partial<{\n            sqrtRatioNextX96: JSBI\n            amountIn: JSBI\n            amountOut: JSBI\n            feeAmount: JSBI\n        }> = {}\n\n        const zeroForOne = JSBI.greaterThanOrEqual(sqrtRatioCurrentX96, sqrtRatioTargetX96)\n        const exactIn = JSBI.greaterThanOrEqual(amountRemaining, ZERO)\n\n        if (exactIn) {\n            const amountRemainingLessFee = JSBI.divide(\n                JSBI.multiply(amountRemaining, JSBI.subtract(MAX_FEE, JSBI.BigInt(feePips))),\n                MAX_FEE\n            )\n            returnValues.amountIn = zeroForOne\n                ? SqrtPriceMath.getAmount0Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, true)\n                : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, true)\n            if (JSBI.greaterThanOrEqual(amountRemainingLessFee, returnValues.amountIn!)) {\n                returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96\n            } else {\n                returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromInput(\n                    sqrtRatioCurrentX96,\n                    liquidity,\n                    amountRemainingLessFee,\n                    zeroForOne\n                )\n            }\n        } else {\n            returnValues.amountOut = zeroForOne\n                ? SqrtPriceMath.getAmount1Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, false)\n                : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, false)\n            if (JSBI.greaterThanOrEqual(JSBI.multiply(amountRemaining, NEGATIVE_ONE), returnValues.amountOut)) {\n                returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96\n            } else {\n                returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromOutput(\n                    sqrtRatioCurrentX96,\n                    liquidity,\n                    JSBI.multiply(amountRemaining, NEGATIVE_ONE),\n                    zeroForOne\n                )\n            }\n        }\n\n        const max = JSBI.equal(sqrtRatioTargetX96, returnValues.sqrtRatioNextX96)\n\n        if (zeroForOne) {\n            returnValues.amountIn =\n                max && exactIn\n                    ? returnValues.amountIn\n                    : SqrtPriceMath.getAmount0Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, true)\n            returnValues.amountOut =\n                max && !exactIn\n                    ? returnValues.amountOut\n                    : SqrtPriceMath.getAmount1Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, false)\n        } else {\n            returnValues.amountIn =\n                max && exactIn\n                    ? returnValues.amountIn\n                    : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, true)\n            returnValues.amountOut =\n                max && !exactIn\n                    ? returnValues.amountOut\n                    : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, false)\n        }\n\n        if (!exactIn && JSBI.greaterThan(returnValues.amountOut!, JSBI.multiply(amountRemaining, NEGATIVE_ONE))) {\n            returnValues.amountOut = JSBI.multiply(amountRemaining, NEGATIVE_ONE)\n        }\n\n        if (exactIn && JSBI.notEqual(returnValues.sqrtRatioNextX96, sqrtRatioTargetX96)) {\n            // we didn't reach the target, so take the remainder of the maximum input as fee\n            returnValues.feeAmount = JSBI.subtract(amountRemaining, returnValues.amountIn!)\n        } else {\n            returnValues.feeAmount = FullMath.mulDivRoundingUp(\n                returnValues.amountIn!,\n                JSBI.BigInt(feePips),\n                JSBI.subtract(MAX_FEE, JSBI.BigInt(feePips))\n            )\n        }\n\n        return [returnValues.sqrtRatioNextX96!, returnValues.amountIn!, returnValues.amountOut!, returnValues.feeAmount!]\n    }\n}\n","import { BigintIsh, CurrencyAmount, Price, Token } from '@uniswap/sdk-core'\nimport { POOL_DEPLOYER_ADDRESS } from \"constants/addresses\"\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { FeeAmount } from '../constants'\nimport { NEGATIVE_ONE, ONE, Q192, ZERO } from '../internalConstants'\nimport { computePoolAddress } from '../utils/computePoolAddress'\nimport { LiquidityMath } from '../utils/liquidityMath'\nimport { SwapMath } from '../utils/swapMath'\nimport { TickMath } from '../utils/tickMath'\nimport { Tick, TickConstructorArgs } from './tick'\nimport { NoTickDataProvider, TickDataProvider } from './tickDataProvider'\nimport { TickListDataProvider } from './tickListDataProvider'\nimport AlgebraConfig from \"algebra.config\"\n\ninterface StepComputations {\n    sqrtPriceStartX96: JSBI\n    tickNext: number\n    initialized: boolean\n    sqrtPriceNextX96: JSBI\n    amountIn: JSBI\n    amountOut: JSBI\n    feeAmount: JSBI\n}\n\n/**\n * By default, pools will not allow operations that require ticks.\n */\nconst NO_TICK_DATA_PROVIDER_DEFAULT = new NoTickDataProvider()\n\n/**\n * Represents a V3 pool\n */\nexport class Pool {\n    public readonly token0: Token\n    public readonly token1: Token\n    public readonly fee: FeeAmount\n    public readonly sqrtRatioX96: JSBI\n    public readonly liquidity: JSBI\n    public readonly tickCurrent: number\n    public readonly tickDataProvider: TickDataProvider\n\n    /**\n     * Construct a pool\n     * @param tokenA One of the tokens in the pool\n     * @param tokenB The other token in the pool\n     * @param fee The fee in hundredths of a bips of the input amount of every swap that is collected by the pool\n     * @param sqrtRatioX96 The sqrt of the current ratio of amounts of token1 to token0\n     * @param liquidity The current value of in range liquidity\n     * @param tickCurrent The current tick of the pool\n     * @param ticks The current state of the pool ticks or a data provider that can return tick data\n     */\n    public constructor(\n        tokenA: Token,\n        tokenB: Token,\n        fee: FeeAmount,\n        sqrtRatioX96: BigintIsh,\n        liquidity: BigintIsh,\n        tickCurrent: number,\n        ticks: TickDataProvider | (Tick | TickConstructorArgs)[] = NO_TICK_DATA_PROVIDER_DEFAULT\n    ) {\n        invariant(Number.isInteger(fee) && fee < 1_000_000, 'FEE')\n\n        const tickCurrentSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent)\n        const nextTickSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent + 1)\n        invariant(\n            JSBI.greaterThanOrEqual(JSBI.BigInt(sqrtRatioX96), tickCurrentSqrtRatioX96) &&\n            JSBI.lessThanOrEqual(JSBI.BigInt(sqrtRatioX96), nextTickSqrtRatioX96),\n            'PRICE_BOUNDS'\n        )\n            // always create a copy of the list since we want the pool's tick list to be immutable\n            ;[this.token0, this.token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n        this.fee = fee\n        this.sqrtRatioX96 = JSBI.BigInt(sqrtRatioX96)\n        this.liquidity = JSBI.BigInt(liquidity)\n        this.tickCurrent = tickCurrent\n        this.tickDataProvider = Array.isArray(ticks) ? new TickListDataProvider(ticks, 60) : ticks\n    }\n\n    private _token0Price?: Price<Token, Token>\n\n    /**\n     * Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0\n     */\n    public get token0Price(): Price<Token, Token> {\n        return (\n            this._token0Price ??\n            (this._token0Price = new Price(\n                this.token0,\n                this.token1,\n                Q192,\n                JSBI.multiply(this.sqrtRatioX96, this.sqrtRatioX96)\n            ))\n        )\n    }\n\n    private _token1Price?: Price<Token, Token>\n\n    /**\n     * Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1\n     */\n    public get token1Price(): Price<Token, Token> {\n        return (\n            this._token1Price ??\n            (this._token1Price = new Price(\n                this.token1,\n                this.token0,\n                JSBI.multiply(this.sqrtRatioX96, this.sqrtRatioX96),\n                Q192\n            ))\n        )\n    }\n\n    /**\n     * Returns the chain ID of the tokens in the pool.\n     */\n    public get chainId(): number {\n        return this.token0.chainId\n    }\n\n    public get tickSpacing(): number {\n        return 60\n    }\n\n    public static getAddress(tokenA: Token, tokenB: Token, fee: FeeAmount, initCodeHashManualOverride?: string): string {\n        return computePoolAddress({\n            factoryAddress: POOL_DEPLOYER_ADDRESS[tokenA.chainId],\n            fee,\n            tokenA,\n            tokenB,\n            initCodeHashManualOverride\n        })\n    }\n\n    /**\n     * Returns true if the token is either token0 or token1\n     * @param token The token to check\n     * @returns True if token is either token0 or token\n     */\n    public involvesToken(token: Token): boolean {\n        return token.equals(this.token0) || token.equals(this.token1)\n    }\n\n    /**\n     * Return the price of the given token in terms of the other token in the pool.\n     * @param token The token to return price of\n     * @returns The price of the given token, in terms of the other.\n     */\n    public priceOf(token: Token): Price<Token, Token> {\n        invariant(this.involvesToken(token), 'TOKEN')\n        return token.equals(this.token0) ? this.token0Price : this.token1Price\n    }\n\n    /**\n     * Given an input amount of a token, return the computed output amount, and a pool with state updated after the trade\n     * @param inputAmount The input amount for which to quote the output amount\n     * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit\n     * @returns The output amount and the pool with updated state\n     */\n    public async getOutputAmount(\n        inputAmount: CurrencyAmount<Token>,\n        sqrtPriceLimitX96?: JSBI\n    ): Promise<[CurrencyAmount<Token>, Pool]> {\n        invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n\n        const zeroForOne = inputAmount.currency.equals(this.token0)\n\n        const {\n            amountCalculated: outputAmount,\n            sqrtRatioX96,\n            liquidity,\n            tickCurrent\n        } = await this.swap(\n            zeroForOne,\n            inputAmount.quotient,\n            sqrtPriceLimitX96\n        )\n        const outputToken = zeroForOne ? this.token1 : this.token0\n        return [\n            CurrencyAmount.fromRawAmount(outputToken, JSBI.multiply(outputAmount, NEGATIVE_ONE)),\n            new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)\n        ]\n    }\n\n    /**\n     * Given a desired output amount of a token, return the computed input amount and a pool with state updated after the trade\n     * @param outputAmount the output amount for which to quote the input amount\n     * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\n     * @returns The input amount and the pool with updated state\n     */\n    public async getInputAmount(\n        outputAmount: CurrencyAmount<Token>,\n        sqrtPriceLimitX96?: JSBI\n    ): Promise<[CurrencyAmount<Token>, Pool]> {\n        invariant(outputAmount.currency.isToken && this.involvesToken(outputAmount.currency), 'TOKEN')\n\n        const zeroForOne = outputAmount.currency.equals(this.token1)\n\n        const {\n            amountCalculated: inputAmount,\n            sqrtRatioX96,\n            liquidity,\n            tickCurrent\n        } = await this.swap(\n            zeroForOne,\n            JSBI.multiply(outputAmount.quotient, NEGATIVE_ONE),\n            sqrtPriceLimitX96\n        )\n        const inputToken = zeroForOne ? this.token0 : this.token1\n        return [\n            CurrencyAmount.fromRawAmount(inputToken, inputAmount),\n            new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)\n        ]\n    }\n\n    /**\n     * Executes a swap\n     * @param zeroForOne Whether the amount in is token0 or token1\n     * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n     * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\n     * @returns amountCalculated\n     * @returns sqrtRatioX96\n     * @returns liquidity\n     * @returns tickCurrent\n     */\n    private async swap(\n        zeroForOne: boolean,\n        amountSpecified: JSBI,\n        sqrtPriceLimitX96?: JSBI\n    ): Promise<{ amountCalculated: JSBI; sqrtRatioX96: JSBI; liquidity: JSBI; tickCurrent: number }> {\n        if (!sqrtPriceLimitX96)\n            sqrtPriceLimitX96 = zeroForOne\n                ? JSBI.add(TickMath.MIN_SQRT_RATIO, ONE)\n                : JSBI.subtract(TickMath.MAX_SQRT_RATIO, ONE)\n\n        if (zeroForOne) {\n            invariant(JSBI.greaterThan(sqrtPriceLimitX96, TickMath.MIN_SQRT_RATIO), 'RATIO_MIN')\n            invariant(JSBI.lessThan(sqrtPriceLimitX96, this.sqrtRatioX96), 'RATIO_CURRENT')\n        } else {\n            invariant(JSBI.lessThan(sqrtPriceLimitX96, TickMath.MAX_SQRT_RATIO), 'RATIO_MAX')\n            invariant(JSBI.greaterThan(sqrtPriceLimitX96, this.sqrtRatioX96), 'RATIO_CURRENT')\n        }\n\n        const exactInput = JSBI.greaterThanOrEqual(amountSpecified, ZERO)\n\n        // keep track of swap state\n\n        const state = {\n            amountSpecifiedRemaining: amountSpecified,\n            amountCalculated: ZERO,\n            sqrtPriceX96: this.sqrtRatioX96,\n            tick: this.tickCurrent,\n            liquidity: this.liquidity\n        }\n\n        // start swap while loop\n        while (JSBI.notEqual(state.amountSpecifiedRemaining, ZERO) && state.sqrtPriceX96 != sqrtPriceLimitX96) {\n            const step: Partial<StepComputations> = {}\n            step.sqrtPriceStartX96 = state.sqrtPriceX96\n\n                // because each iteration of the while loop rounds, we can't optimize this code (relative to the smart contract)\n                // by simply traversing to the next available tick, we instead need to exactly replicate\n                // tickBitmap.nextInitializedTickWithinOneWord\n                ;[step.tickNext, step.initialized] = await this.tickDataProvider.nextInitializedTickWithinOneWord(\n                    state.tick,\n                    zeroForOne,\n                    this.tickSpacing\n                )\n\n            if (step.tickNext < TickMath.MIN_TICK) {\n                step.tickNext = TickMath.MIN_TICK\n            } else if (step.tickNext > TickMath.MAX_TICK) {\n                step.tickNext = TickMath.MAX_TICK\n            }\n\n            step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.tickNext)\n                ;[state.sqrtPriceX96, step.amountIn, step.amountOut, step.feeAmount] = SwapMath.computeSwapStep(\n                    state.sqrtPriceX96,\n                    (zeroForOne\n                        ? JSBI.lessThan(step.sqrtPriceNextX96, sqrtPriceLimitX96)\n                        : JSBI.greaterThan(step.sqrtPriceNextX96, sqrtPriceLimitX96))\n                        ? sqrtPriceLimitX96\n                        : step.sqrtPriceNextX96,\n                    state.liquidity,\n                    state.amountSpecifiedRemaining,\n                    this.fee\n                )\n\n            if (exactInput) {\n                state.amountSpecifiedRemaining = JSBI.subtract(\n                    state.amountSpecifiedRemaining,\n                    JSBI.add(step.amountIn, step.feeAmount)\n                )\n                state.amountCalculated = JSBI.subtract(state.amountCalculated, step.amountOut)\n            } else {\n                state.amountSpecifiedRemaining = JSBI.add(state.amountSpecifiedRemaining, step.amountOut)\n                state.amountCalculated = JSBI.add(state.amountCalculated, JSBI.add(step.amountIn, step.feeAmount))\n            }\n\n            // TODO\n            if (JSBI.equal(state.sqrtPriceX96, step.sqrtPriceNextX96)) {\n                // if the tick is initialized, run the tick transition\n                if (step.initialized) {\n                    let liquidityNet = JSBI.BigInt((await this.tickDataProvider.getTick(step.tickNext)).liquidityNet)\n                    // if we're moving leftward, we interpret liquidityNet as the opposite sign\n                    // safe because liquidityNet cannot be type(int128).min\n                    if (zeroForOne) liquidityNet = JSBI.multiply(liquidityNet, NEGATIVE_ONE)\n\n                    state.liquidity = LiquidityMath.addDelta(state.liquidity, liquidityNet)\n                }\n\n                state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext\n            } else if (state.sqrtPriceX96 != step.sqrtPriceStartX96) {\n                // recompute unless we're on a lower tick boundary (i.e. already transitioned ticks), and haven't moved\n                state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96)\n            }\n        }\n\n        return {\n            amountCalculated: state.amountCalculated,\n            sqrtRatioX96: state.sqrtPriceX96,\n            liquidity: state.liquidity,\n            tickCurrent: state.tick\n        }\n    }\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { ExtendedEther, WMATIC_EXTENDED } from '../constants/tokens'\nimport { supportedChainId } from './supportedChainId'\n\nexport function unwrappedToken(currency: Currency): Currency {\n    if (currency.isNative) return currency\n    const formattedChainId = supportedChainId(currency.chainId)\n    if (formattedChainId && currency.equals(WMATIC_EXTENDED[formattedChainId]))\n        return ExtendedEther.onChain(currency.chainId)\n    return currency\n}\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\nimport AlgebraConfig from 'algebra.config'\nimport { ChainId } from \"constants/addresses\"\n\nexport const healthClient = new ApolloClient({\n    uri: 'https://api.thegraph.com/index-node/graphql',\n    cache: new InMemoryCache()\n})\n\nexport const blockClientBNB = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.BNB].blocklyticsURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n\nexport const clientBNB = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.BNB].infoURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n\nexport const farmingClientBNB = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.BNB].farmingURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n\nexport const blockClientPulse = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.PULSE].blocklyticsURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n\nexport const clientPulse = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.PULSE].infoURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n\nexport const farmingClientPulse = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.PULSE].farmingURL,\n    cache: new InMemoryCache(),\n    queryDeduplication: true,\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'no-cache'\n        },\n        query: {\n            fetchPolicy: 'no-cache',\n            errorPolicy: 'all'\n        }\n    }\n})\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport { blockClientBNB, clientBNB, farmingClientBNB, blockClientPulse, clientPulse, farmingClientPulse } from '../../apollo/client'\nimport { useActiveWeb3React } from '../web3'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport function useBlockClient(): ApolloClient<NormalizedCacheObject> {\n    const { chainId } = useActiveWeb3React()\n    switch (chainId) {\n        case ChainId.BNB:\n            return blockClientBNB\n        case ChainId.PULSE:\n            return blockClientPulse\n        default:\n            return blockClientBNB\n    }\n}\n\nexport function useDataClient(): ApolloClient<NormalizedCacheObject> {\n    const { chainId } = useActiveWeb3React()\n    switch (chainId) {\n        case ChainId.BNB:\n            return clientBNB\n        case ChainId.PULSE:\n            return clientPulse\n        default:\n            return clientBNB\n    }\n}\n\nexport function useFarmingClient(): ApolloClient<NormalizedCacheObject> {\n    const { chainId } = useActiveWeb3React()\n    switch (chainId) {\n        case ChainId.BNB:\n            return farmingClientBNB\n        case ChainId.PULSE:\n            return farmingClientPulse\n        default:\n            return farmingClientBNB\n    }\n}\n\n\nexport function useClients(): {\n    dataClient: ApolloClient<NormalizedCacheObject>\n    farmingClient: ApolloClient<NormalizedCacheObject>\n    blockClient: ApolloClient<NormalizedCacheObject>\n} {\n    const dataClient = useDataClient()\n    const farmingClient = useFarmingClient()\n    const blockClient = useBlockClient()\n\n    return {\n        dataClient,\n        farmingClient,\n        blockClient,\n    }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\n// add 20% (except on optimism)\nexport function calculateGasMargin(chainId: number, value: BigNumber, swap?: boolean): BigNumber {\n\n    if (swap) {\n        return value.mul(BigNumber.from(10000 + 2000)).div(BigNumber.from(10000))\n    }\n\n    return value.mul(BigNumber.from(10000 + 2000)).div(BigNumber.from(10000))\n\n    // return chainId === SupportedChainId.OPTIMISM || chainId === SupportedChainId.OPTIMISTIC_ || chainId === SupportedChainId.KOVAN\n    //   ? value\n    //   : value.mul(BigNumber.from(10000 + 2000)).div(BigNumber.from(10000))\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useAppSelector } from 'state/hooks'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n    const ttl = useAppSelector((state) => state.user.userDeadline)\n    const blockTimestamp = useCurrentBlockTimestamp()\n    return useMemo(() => {\n        if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n        return undefined\n    }, [blockTimestamp, ttl])\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { Tags, TokenInfo } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { isAddress } from '../../utils'\n\ntype TagDetails = Tags[keyof Tags]\n\ninterface TagInfo extends TagDetails {\n    id: string\n}\n\n/**\n * Token instances created from token info on a token list.\n */\nexport class WrappedTokenInfo implements Token {\n    public readonly isNative: false = false\n    public readonly isToken: true = true\n    public readonly list: TokenList\n\n    public readonly tokenInfo: TokenInfo\n    private _checksummedAddress: string | null = null\n\n    constructor(tokenInfo: TokenInfo, list: TokenList) {\n        this.tokenInfo = tokenInfo\n        this.list = list\n    }\n\n    public get address(): string {\n        if (this._checksummedAddress) return this._checksummedAddress\n        const checksummedAddress = isAddress(this.tokenInfo.address)\n        if (!checksummedAddress) throw new Error(`Invalid token address: ${this.tokenInfo.address}`)\n        return (this._checksummedAddress = checksummedAddress)\n    }\n\n    public get chainId(): number {\n        return this.tokenInfo.chainId\n    }\n\n    public get decimals(): number {\n        return this.tokenInfo.decimals\n    }\n\n    public get name(): string {\n        return this.tokenInfo.name\n    }\n\n    public get symbol(): string {\n        return this.tokenInfo.symbol\n    }\n\n    public get logoURI(): string | undefined {\n        return this.tokenInfo.logoURI\n    }\n\n    private _tags: TagInfo[] | null = null\n    public get tags(): TagInfo[] {\n        if (this._tags !== null) return this._tags\n        if (!this.tokenInfo.tags) return (this._tags = [])\n        const listTags = this.list.tags\n        if (!listTags) return (this._tags = [])\n\n        return (this._tags = this.tokenInfo.tags.map((tagId) => {\n            return {\n                ...listTags[tagId],\n                id: tagId\n            }\n        }))\n    }\n\n    public get wrapped(): Token {\n        return this\n    }\n\n    equals(other: Currency): boolean {\n        return other.chainId === this.chainId && other.isToken && other.address.toLowerCase() === this.address.toLowerCase()\n    }\n\n    sortsBefore(other: Token): boolean {\n        if (this.equals(other)) throw new Error('Addresses should not be equal')\n        return this.address.toLowerCase() < other.address.toLowerCase()\n    }\n}\n","import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n    node: RefObject<T | undefined>,\n    handler: undefined | (() => void)\n) {\n    const handlerRef = useRef<undefined | (() => void)>(handler)\n    useEffect(() => {\n        handlerRef.current = handler\n    }, [handler])\n\n    useEffect(() => {\n        const handleClickOutside = (e: MouseEvent) => {\n            if (node.current?.contains(e.target as Node) ?? false) {\n                return\n            }\n            if (handlerRef.current) handlerRef.current()\n        }\n\n        document.addEventListener('mousedown', handleClickOutside)\n\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside)\n        }\n    }, [node])\n}\n","export default {\n\n    CHAIN_PARAMS: {\n        [56]: {\n            chainId: 56,\n            chainIdHex: \"0x38\",\n            chainName: \"BNB Chain\",\n            nativeCurrency: { name: 'Wrapped BNB', symbol: 'WBNB', decimals: 18, logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7192.png' },\n            wrappedNativeCurrency: { name: \"BNB\", symbol: \"BNB\", decimals: 18, address: \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\", logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7192.png' },\n            rpcURL: \"https://bsc-dataseed.binance.org/\",\n            blockExplorerURL: \"https://bscscan.com\",\n        },\n        [369]: {\n            chainId: 369,\n            chainIdHex: \"0x171\",\n            chainName: \"PulseChain\",\n            nativeCurrency: { name: 'Wrapped PLS', symbol: 'WPLS', decimals: 18, logo: 'https://pulsechain.com/img/favicon128.png' },\n            wrappedNativeCurrency: { name: \"PLS\", symbol: \"PLS\", decimals: 18, address: \"0xa1077a294dde1b09bb078844df40758a5d0f9a27\", logo: 'https://pulsechain.com/img/favicon128.png' },\n            rpcURL: \"https://rpc.pulsechain.com/\",\n            blockExplorerURL: \"https://scan.pulsechain.com\",\n        }\n    },\n\n    // Token addresses should be in lowercase\n    DEFAULT_TOKEN_LIST: {\n        [56]:\n        {\n            // Tokens, which would be displayed on the top of Token Selector Modal\n            defaultTokens: {\n                [\"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\"]: { name: \"Wrapped BNB\", symbol: \"WBNB\", decimals: 18 },\n                [\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"]: { name: \"Binance USD\", symbol: \"BUSD\", decimals: 18 },\n                [\"0x2ab0e9e4ee70fff1fb9d67031e44f6410170d00e\"]: { name: \"XEN Crypto\", symbol: \"XEN\", decimals: 18 },\n                [\"0x55d398326f99059ff775485246999027b3197955\"]: { name: \"USDT\", symbol: \"USDT\", decimals: 18 },\n                [\"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"]: { name: \"USDC\", symbol: \"USDC\", decimals: 18 },\n                [\"0x20f663cea80face82acdfa3aae6862d246ce0333\"]: { name: \"Drip Network\", symbol: \"DRIP\", decimals: 18 },\n                [\"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c\"]: { name: \"Bitcoin\", symbol: \"BTC\", decimals: 18 },\n                [\"0x2170ed0880ac9a755fd29b2688956bd959f933f8\"]: { name: \"Etherium\", symbol: \"ETH\", decimals: 18 },\n                [\"0xf418af970bc08ae22fd3148de612a61807a138cb\"]: { name: \"LitX token\", symbol: \"LitX\", decimals: 18 },\n            },\n            // Tokens, which would be used for creating multihop routes\n            tokensForMultihop: {\n                [\"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\"]: { name: \"Wrapped BNB\", symbol: \"WBNB\", decimals: 18 },\n                [\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"]: { name: \"Binance USD\", symbol: \"BUSD\", decimals: 18 },\n                [\"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"]: { name: \"USDC\", symbol: \"USDC\", decimals: 18 },\n                [\"0x55d398326f99059ff775485246999027b3197955\"]: { name: \"USDT\", symbol: \"USDT\", decimals: 18 },\n            },\n            tokensLogos: {\n                [\"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/7192.png',\n                [\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/4687.png',\n                [\"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\n                [\"0x20f663cea80face82acdfa3aae6862d246ce0333\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/11093.png',\n                [\"0x55d398326f99059ff775485246999027b3197955\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\n                [\"0x2ab0e9e4ee70fff1fb9d67031e44f6410170d00e\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/22118.png',\n                [\"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\n                [\"0x2170ed0880ac9a755fd29b2688956bd959f933f8\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\n                [\"0xf418af970bc08ae22fd3148de612a61807a138cb\"]: 'https://i.ibb.co/nrtkD72/L-6.png',\n                \n            },\n            stableTokens: {\n                [\"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"]: { name: \"USDC\", symbol: \"USDC\", decimals: 18 },\n                [\"0x55d398326f99059ff775485246999027b3197955\"]: { name: \"USDT\", symbol: \"USDT\", decimals: 18 },\n                [\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"]: { name: \"Binance USD\", symbol: \"BUSD\", decimals: 18 },\n            },\n            stableTokenForUSDPrice: { address: \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\", name: \"USDC\", symbol: \"USDC\", decimals: 18 },\n            // Real tokens and their possible fake names. Used for token launch safety\n            filterForScamTokens: {\n                tokensForCheck: {\n                    [\"DD\"]: \"0x582daef1f36d6009f64b74519cfd612a8467be18\",\n                    [\"DC\"]: \"0x7b4328c127b85369d9f82ca0503b000d09cf9180\"\n                },\n                possibleFakeNames: [\n                    {\n                        names: ['Doge Dragon', 'DogeDragon', 'Dragon Doge', 'DragonDoge'],\n                        realAddress: \"0x582daef1f36d6009f64b74519cfd612a8467be18\"\n                    },\n                    {\n                        names: ['Dogechain Token', 'DogeChain Token', 'Dogechain', 'DogeChain'],\n                        realAddresses: \"0x7b4328c127b85369d9f82ca0503b000d09cf9180\"\n                    }\n                ]\n            }\n        },\n        [369]: {\n            defaultTokens: {\n                [\"0xa1077a294dde1b09bb078844df40758a5d0f9a27\"]: { name: \"Wrapped PLS\", symbol: \"WPLS\", decimals: 18 },\n                [\"0x15d38573d2feeb82e7ad5187ab8c1d52810b1f07\"]: { name: \"USD Coin from Ethereum\", symbol: \"USDC\", decimals: 6 },\n                [\"0x95b303987a60c71504d99aa1b13b4da07b0790ab\"]: { name: \"PulseX\", symbol: \"PulseX\", decimals: 18 },\n                [\"0xefd766ccb38eaf1dfd701853bfce31359239f305\"]: { name: \"DAI\", symbol: \"DAI\", decimals: 18 },\n                [\"0x2fa878ab3f87cc1c9737fc071108f904c0b0c95d\"]: { name: \"INC\", symbol: \"INC\", decimals: 18 },\n                [\"0x57fde0a71132198bbec939b98976993d8d89d225\"]: { name: \"HEX from Etherium\", symbol: \"HEX\", decimals: 8 },\n                [\"0x0cb6f5a34ad42ec934882a05265a7d5f59b51a2f\"]: { name: \"USDT from Etherium\", symbol: \"USDT\", decimals: 6 },\n                [\"0xb17d901469b9208b17d916112988a3fed19b5ca1\"]: { name: \"WBTC from Etherium\", symbol: \"WBTC\", decimals: 8 },\n                [\"0x02dcdd04e3f455d838cd1249292c58f3b79e3c3c\"]: { name: \"WETH from Etherium\", symbol: \"WETH\", decimals: 18 },\n                [\"0x8a7fdca264e87b6da72d000f22186b4403081a2a\"]: { name: \"pXEN\", symbol: \"pXEN\", decimals: 18 },\n                \n            },\n            tokensForMultihop: {\n                [\"0xa1077a294dde1b09bb078844df40758a5d0f9a27\"]: { name: \"Wrapped PLS\", symbol: \"WPLS\", decimals: 18 },\n                [\"0x15d38573d2feeb82e7ad5187ab8c1d52810b1f07\"]: { name: \"USD Coin from Ethereum\", symbol: \"USDC\", decimals: 6 },\n            },\n            tokensLogos: {\n                [\"0xa1077a294dde1b09bb078844df40758a5d0f9a27\"]: 'https://pulsechain.com/img/favicon128.png',\n                [\"0x15d38573d2feeb82e7ad5187ab8c1d52810b1f07\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png',\n                [\"0x95b303987a60c71504d99aa1b13b4da07b0790ab\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/25417.png',\n                [\"0xefd766ccb38eaf1dfd701853bfce31359239f305\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/4943.png',\n                [\"0x2fa878ab3f87cc1c9737fc071108f904c0b0c95d\"]: 'https://tokens.app.pulsex.com/images/tokens/0x2fa878Ab3F87CC1C9737Fc071108F904c0B0C95d.png',\n                [\"0x57fde0a71132198bbec939b98976993d8d89d225\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/5015.png',\n                [\"0x0cb6f5a34ad42ec934882a05265a7d5f59b51a2f\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/825.png',\n                [\"0xb17d901469b9208b17d916112988a3fed19b5ca1\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',\n                [\"0x02dcdd04e3f455d838cd1249292c58f3b79e3c3c\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',\n                [\"0x8a7fdca264e87b6da72d000f22186b4403081a2a\"]: 'https://s2.coinmarketcap.com/static/img/coins/64x64/22118.png',\n            },\n            stableTokens: {\n                [\"0x0cb6f5a34ad42ec934882a05265a7d5f59b51a2f\"]: { name: \"USDT from Etherium\", symbol: \"USDT\", decimals: 6 },\n                [\"0x15d38573d2feeb82e7ad5187ab8c1d52810b1f07\"]: { name: \"USD Coin from Ethereum\", symbol: \"USDC\", decimals: 6 },\n                [\"0xefd766ccb38eaf1dfd701853bfce31359239f305\"]: { name: \"DAI\", symbol: \"DAI\", decimals: 18 },\n            },\n            stableTokenForUSDPrice: { address: \"0x15d38573d2feeb82e7ad5187ab8c1d52810b1f07\", name: \"USD Coin from Ethereum\", symbol: \"USDC\", decimals: 6 },\n            filterForScamTokens: {\n                tokensForCheck: {\n                    [\"DD\"]: \"0x582daef1f36d6009f64b74519cfd612a8467be18\",\n                    [\"DC\"]: \"0x7b4328c127b85369d9f82ca0503b000d09cf9180\"\n                },\n                possibleFakeNames: [\n                    {\n                        names: ['Doge Dragon', 'DogeDragon', 'Dragon Doge', 'DragonDoge'],\n                        realAddress: \"0x582daef1f36d6009f64b74519cfd612a8467be18\"\n                    },\n                    {\n                        names: ['Dogechain Token', 'DogeChain Token', 'Dogechain', 'DogeChain'],\n                        realAddresses: \"0x7b4328c127b85369d9f82ca0503b000d09cf9180\"\n                    }\n                ]\n            }\n        }\n    },\n\n    V3_CONTRACTS: {\n        [56]: {\n            POOL_DEPLOYER_ADDRESS: \"0x8056C4A71B4A281881DbC1c3531227B27B954f2E\",\n            FACTORY_ADDRESS: \"0xbBC7F5605c9CB341D9C41E46Ae6cEb30511BDfcF\",\n            QUOTER_ADDRESS: \"0x7d6A6969cAD95372bf9067B15FefD7b9f466B99e\",\n            SWAP_ROUTER_ADDRESS: \"0xa239202842957Bd9D59189184D54e8992270753d\",\n            NONFUNGIBLE_POSITION_MANAGER_ADDRESS: \"0x97D39f7BD3659ec149a6833b478dABa929C4d4b3\",\n            MULTICALL_ADDRESS: \"0x23F8a7E04E05d7d5C5Be5e46941668e59a3ab8D8\",\n            MIGRATOR_ADDRESS: \"0x60A5D6AbDc43bbE157B437CBCAb414a3db1a9ef5\",\n            FARMING_CENTER_ADDRESS: \"0x2Fc2355e92819dc5E925DBf9A036A14b4C7D6092\",\n            LIMIT_FARMING_ADDRESS: \"0x3A49c7aa647b635E2f97C2FEb20f830e852Fd3f7\",\n            ETERNAL_FARMING_ADDRESS: \"0x5EB0AE7477960aA59Fdd8cD1299866E7322587a1\",\n            POOL_INIT_CODE_HASH: \"0x6ec6c9c8091d160c0aa74b2b14ba9c1717e95093bd3ac085cee99a49aab294a4\"\n        },\n        [369]: {\n            POOL_DEPLOYER_ADDRESS: \"0xaB52548fd4e7546116Dc664431004b1ed703d615\",\n            FACTORY_ADDRESS: \"0x24398b6ea5434339934D999E431807B1C157b4Fd\",\n            QUOTER_ADDRESS: \"0x96008faF3D5c5361900aF0290156f4eDaC443336\",\n            SWAP_ROUTER_ADDRESS: \"0x63e82cf4E45aFa17F1869c5d35CC7518Baf8bdB0\",\n            NONFUNGIBLE_POSITION_MANAGER_ADDRESS: \"0x233ddC67C7ce558d05CAeD93aF073a2829B6625e\",\n            MULTICALL_ADDRESS: \"0xF6170A5053543D467C0c5FA280FC2302068a3347\",\n            MIGRATOR_ADDRESS: \"0xA6385C54F175215491cBc9Ef5fc52F01C300B768\",\n            FARMING_CENTER_ADDRESS: \"0x97D39f7BD3659ec149a6833b478dABa929C4d4b3\",\n            LIMIT_FARMING_ADDRESS: \"0x68F9451501909C4d464b432dCb5B7D1e25B37b3e\",\n            ETERNAL_FARMING_ADDRESS: \"0x1F59aCd715CFd13dE06537bBb15B07919A68D1e4\",\n            POOL_INIT_CODE_HASH: \"0x6ec6c9c8091d160c0aa74b2b14ba9c1717e95093bd3ac085cee99a49aab294a4\"\n        }\n    },\n\n    SUBGRAPH: {\n        [56]: {\n            infoURL: \"https://api.thegraph.com/subgraphs/name/iliaazhel/litx-v1-1\",\n            farmingURL: \"https://api.thegraph.com/subgraphs/name/iliaazhel/litx-v1-1-farming\",\n            blocklyticsURL: \"https://api.thegraph.com/subgraphs/name/iliaazhel/bsc-blocks\"\n        },\n        [369]: {\n            infoURL: \"https://api.algebra.finance/pulse-graph/subgraphs/name/cryptoalgebra/litx-analytics\",\n            farmingURL: \"https://api.algebra.finance/pulse-graph/subgraphs/name/cryptoalgebra/litx-farmings\",\n            blocklyticsURL: \"https://api.algebra.finance/pulse-graph/subgraphs/name/cryptoalgebra/pulse-blocks\"\n        }\n    },\n\n    API: {\n        [56]: {\n            eternalFarmsAPR: \"https://api.algebra.finance/api/APR/eternalFarmings/?network=binance-litx\",\n            limitFarmsAPR: \"https://api.algebra.finance/api/APR/limitFarmings\",\n            eternalFarmsTVL: \"https://api.algebra.finance/api/TVL/eternalFarmings/?network=binance-litx\",\n            limitFarmsTVL: \"https://api.algebra.finance/api/TVL/limitFarmings\",\n            poolsAPR: \"https://api.algebra.finance/api/APR/pools/?network=binance-litx\"\n        },\n        [369]: {\n            eternalFarmsAPR: \"https://api.algebra.finance/api/APR/eternalFarmings/?network=pulse-litx\",\n            limitFarmsAPR: \"https://api.algebra.finance/api/APR/limitFarmings/\",\n            eternalFarmsTVL: \"https://api.algebra.finance/api/TVL/eternalFarmings/?network=pulse-litx\",\n            limitFarmsTVL: \"https://api.algebra.finance/api/TVL/limitFarmings/\",\n            poolsAPR: \"https://api.algebra.finance/api/APR/pools/?network=pulse-litx\"\n        }\n    },\n\n    MISC: {\n        [56]: {\n            title: \"LitX BNB Chain\",\n            description: \"Swap and provide liquidity on LitX BNB\",\n            appURL: \"\"\n        },\n        [369]: {\n            title: 'LitX PulseChain',\n            description: \"Swap and provide liquidity on LitX Pulse\",\n            appURL: \"\"\n        }\n    },\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, sqrt } from '@uniswap/sdk-core'\n\n/**\n * Returns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0\n * @param amount1 The numerator amount i.e., the amount of token1\n * @param amount0 The denominator amount i.e., the amount of token0\n * @returns The sqrt ratio\n */\n\nexport function encodeSqrtRatioX96(amount1: BigintIsh, amount0: BigintIsh): JSBI {\n    const numerator = JSBI.leftShift(JSBI.BigInt(amount1), JSBI.BigInt(192))\n    const denominator = JSBI.BigInt(amount0)\n    const ratioX192 = JSBI.divide(numerator, denominator)\n    return sqrt(ratioX192)\n}\n","import JSBI from 'jsbi'\nimport { Currency, CurrencyAmount, Fraction, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM, BLOCKED_PRICE_IMPACT_NON_EXPERT } from '../constants/misc'\n\nconst THIRTY_BIPS_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(THIRTY_BIPS_FEE)\n\n// computes realized lp fee as a percent\nexport function computeRealizedLPFeePercent(\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>\n): Percent {\n    let percent: Percent\n    if (trade instanceof V2Trade) {\n        // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n        // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n        percent = ONE_HUNDRED_PERCENT.subtract(\n            trade.route.pairs.reduce<Percent>(\n                (currentFee: Percent): Percent => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n                ONE_HUNDRED_PERCENT\n            )\n        )\n    } else {\n        percent = ONE_HUNDRED_PERCENT.subtract(\n            trade.route.pools.reduce<Percent>(\n                (currentFee: Percent, pool): Percent =>\n                    currentFee.multiply(ONE_HUNDRED_PERCENT.subtract(new Fraction(pool.fee, 1_000_000))),\n                ONE_HUNDRED_PERCENT\n            )\n        )\n    }\n\n    return new Percent(percent.numerator, percent.denominator)\n}\n\n// computes price breakdown for the trade\nexport function computeRealizedLPFeeAmount(\n    trade?: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | null\n): CurrencyAmount<Currency> | undefined {\n    if (trade) {\n        const realizedLPFee = computeRealizedLPFeePercent(trade)\n\n        // the amount of the input that accrues to LPs\n        return CurrencyAmount.fromRawAmount(trade.inputAmount.currency, trade.inputAmount.multiply(realizedLPFee).quotient)\n    }\n\n    return undefined\n}\n\nconst IMPACT_TIERS = [\n    BLOCKED_PRICE_IMPACT_NON_EXPERT,\n    ALLOWED_PRICE_IMPACT_HIGH,\n    ALLOWED_PRICE_IMPACT_MEDIUM,\n    ALLOWED_PRICE_IMPACT_LOW\n]\n\ntype WarningSeverity = 0 | 1 | 2 | 3 | 4\n\nexport function warningSeverity(priceImpact: Percent | undefined): WarningSeverity {\n    if (!priceImpact) return 4\n    let impact: WarningSeverity = IMPACT_TIERS.length as WarningSeverity\n    for (const impactLevel of IMPACT_TIERS) {\n        if (impactLevel.lessThan(priceImpact)) return impact\n        impact--\n    }\n    return 0\n}\n","import { DEFAULT_LOCALE, SUPPORTED_LOCALES, SupportedLocale } from 'constants/locales'\nimport { useEffect, useMemo } from 'react'\nimport { useUserLocale, useUserLocaleManager } from 'state/user/hooks'\nimport useParsedQueryString from './useParsedQueryString'\n\n/**\n * Given a locale string (e.g. from user agent), return the best match for corresponding SupportedLocale\n * @param maybeSupportedLocale the fuzzy locale identifier\n */\nfunction parseLocale(maybeSupportedLocale: string): SupportedLocale | undefined {\n    const lowerMaybeSupportedLocale = maybeSupportedLocale.toLowerCase()\n    return SUPPORTED_LOCALES.find(\n        (locale) => locale.toLowerCase() === lowerMaybeSupportedLocale || locale.split('-')[0] === lowerMaybeSupportedLocale\n    )\n}\n\n/**\n * Returns the supported locale read from the user agent (navigator)\n */\nexport function navigatorLocale(): SupportedLocale | undefined {\n    if (!navigator.language) return undefined\n\n    const [language, region] = navigator.language.split('-')\n\n    if (region) {\n        return parseLocale(`${language}-${region.toUpperCase()}`) ?? parseLocale(language)\n    }\n\n    return parseLocale(language)\n}\n\nexport function useSetLocaleFromUrl() {\n    const parsed = useParsedQueryString()\n    const [userLocale, setUserLocale] = useUserLocaleManager()\n\n    useEffect(() => {\n        const urlLocale = typeof parsed.lng === 'string' ? parseLocale(parsed.lng) : undefined\n        if (urlLocale && urlLocale !== userLocale) {\n            setUserLocale(urlLocale)\n        }\n    }, [parsed.lng, setUserLocale, userLocale])\n}\n\n/**\n * Returns the currently active locale, from a combination of user agent, query string, and user settings stored in redux\n */\nexport function useActiveLocale(): SupportedLocale {\n    const userLocale = useUserLocale()\n\n    return useMemo(() => {\n        return userLocale ?? navigatorLocale() ?? DEFAULT_LOCALE\n    }, [userLocale])\n}\n","import styled from 'styled-components/macro'\n\nexport const QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  width: 18px;\n  height: 18px;\n  border: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  font-size: 12px;\n  background-color: var(--primary-hover);\n  color: white;\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\nexport const QuestionMark = styled.span`\n  font-size: 14px;\n`\n","import { ReactNode, useCallback, useState } from 'react'\nimport Tooltip from '../Tooltip'\nimport { QuestionMark, QuestionWrapper } from './styled'\n\nexport default function QuestionHelper({ text }: { text: ReactNode; size?: number }) {\n    const [show, setShow] = useState<boolean>(false)\n\n    const open = useCallback(() => setShow(true), [setShow])\n    const close = useCallback(() => setShow(false), [setShow])\n\n    return (\n        <span style={{ marginLeft: 4, display: 'flex', alignItems: 'center' }}>\n      <Tooltip text={text} show={show}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <QuestionMark>?</QuestionMark>\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n    )\n}\n","import { Trans } from '@lingui/macro'\nimport { ReactNode } from 'react'\nimport './index.scss'\n\ninterface ToggleProps {\n    id?: string\n    isActive: boolean\n    toggle: () => void\n    checked?: ReactNode\n    unchecked?: ReactNode\n}\n\nexport default function Toggle({ id, isActive, toggle, checked = <Trans>On</Trans>, unchecked = <Trans>Off</Trans> }: ToggleProps) {\n    return (\n        <button className={'toggle-button f br-12'} id={id} onClick={toggle}>\n            <span className={'br-8 c-w hover-op trans-op'} data-isactive={isActive}>\n                {checked}\n            </span>\n            <span className={'br-8 c-w hover-op trans-op'} data-isactive={!isActive}>\n                {unchecked}\n            </span>\n        </button>\n    )\n}\n","import { isAddress } from '../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n    loading: boolean\n    address: string | null\n    name: string | null\n} {\n    const validated = isAddress(nameOrAddress)\n    const reverseLookup = useENSName(validated ? validated : undefined)\n    const lookup = useENSAddress(nameOrAddress)\n\n    return {\n        loading: reverseLookup.loading || lookup.loading,\n        address: validated ? validated : lookup.address,\n        name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\n    }\n}\n","import { readableColor } from \"polished\";\nimport { PropsWithChildren } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components/macro\";\nimport { Color } from \"theme/styled\";\n\nexport enum BadgeVariant {\n    DEFAULT = \"DEFAULT\",\n    NEGATIVE = \"NEGATIVE\",\n    POSITIVE = \"POSITIVE\",\n    PRIMARY = \"PRIMARY\",\n    WARNING = \"WARNING\",\n    WARNING_OUTLINE = \"WARNING_OUTLINE\",\n}\n\ninterface BadgeProps {\n    variant?: BadgeVariant;\n}\n\nfunction pickBackgroundColor(variant: BadgeVariant | undefined, theme: DefaultTheme): Color {\n    switch (variant) {\n        case BadgeVariant.NEGATIVE:\n            return \"var(--error)\";\n        case BadgeVariant.POSITIVE:\n            return \"#02365e\";\n        case BadgeVariant.PRIMARY:\n            return \"#02365e\";\n        case BadgeVariant.WARNING:\n            return \"var(--warning)\";\n        case BadgeVariant.WARNING_OUTLINE:\n            return \"transparent\";\n        default:\n            return \"#aaa7ff\";\n    }\n}\n\nfunction pickBorder(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n    switch (variant) {\n        case BadgeVariant.WARNING_OUTLINE:\n            return `1px solid ${\"var(--warning)\"}`;\n        default:\n            return \"unset\";\n    }\n}\n\nfunction pickFontColor(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n    switch (variant) {\n        case BadgeVariant.NEGATIVE:\n            return \"var(--error)\";\n        case BadgeVariant.POSITIVE:\n            return \"var(--success)\";\n        case BadgeVariant.WARNING:\n            return \"var(--black)\";\n        case BadgeVariant.WARNING_OUTLINE:\n            return \"var(--black)\";\n        default:\n            return \"var(--bg2)\";\n    }\n}\n\nconst Badge = styled.div<PropsWithChildren<BadgeProps>>`\n    align-items: center;\n    background-color: ${({ theme, variant }) => pickBackgroundColor(variant, theme)};\n    border: ${({ theme, variant }) => pickBorder(variant, theme)};\n    border-radius: 0.5rem;\n    color: ${({ theme, variant }) => pickFontColor(variant, theme)};\n    display: inline-flex;\n    padding: 4px 6px;\n    justify-content: center;\n    font-weight: 500;\n    user-select: none;\n    cursor: default;\n`;\n\nexport default Badge;\n","export const SUPPORTED_LOCALES = [\n    'en-US',\n] as const\nexport type SupportedLocale = typeof SUPPORTED_LOCALES[number]\n\nexport const DEFAULT_LOCALE: SupportedLocale = 'en-US'\n\nexport const LOCALE_LABEL: { [locale in SupportedLocale]: string } = {\n    'en-US': 'English',\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useAppDispatch, useAppSelector } from \"state/hooks\"\nimport { toggleOntoWrongChainModal } from \"state/user/actions\"\nimport { gnosisSafe, injected, ontoconnector, OntoWalletConnector } from '../connectors'\nimport { NetworkContextName } from '../constants/misc'\nimport { OntoWindow } from '../models/types/global'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> {\n    const context = useWeb3React<Web3Provider>()\n    const contextNetwork = useWeb3React<Web3Provider>(NetworkContextName)\n    return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n\n    const { activate, active } = useWeb3React()\n    const [tried, setTried] = useState(false)\n\n    // gnosisSafe.isSafeApp() races a timeout against postMessage, so it delays pageload if we are not in a safe app;\n    // if we are not embedded in an iframe, it is not worth checking\n    const [triedSafe, setTriedSafe] = useState(!(window.parent !== window))\n    const [triedOnto, setTriedOnto] = useState(false)\n\n    // first, try connecting to a gnosis safe\n    useEffect(() => {\n        if (!triedSafe) {\n            gnosisSafe.isSafeApp().then((loadedInSafe) => {\n                if (loadedInSafe) {\n                    activate(gnosisSafe, undefined, true).catch(() => {\n                        setTriedSafe(true)\n                    })\n                } else {\n                    setTriedSafe(true)\n                }\n            })\n        }\n    }, [activate, setTriedSafe, triedSafe])\n\n    useEffect(() => {\n        if (!active && triedSafe && !triedOnto) {\n\n            const timeout = new Promise((res, rej) => setTimeout(rej, 8000))\n            const isAuthorized = ontoconnector.isAuthorized()\n\n            Promise.race([isAuthorized, timeout]).then(isAuthorized => {\n\n                if (isAuthorized) {\n                    activate(ontoconnector, undefined, true).catch(() => {\n                        setTriedOnto(true)\n                    })\n                } else {\n                    if (isMobile && window.ethereum) {\n                        activate(injected, undefined, true).catch(() => {\n                            setTriedOnto(true)\n                        })\n                    } else {\n                        setTriedOnto(true)\n                    }\n                }\n            }).catch(e => window.location.reload())\n\n        } else {\n            setTriedOnto(true)\n        }\n    }, [activate, setTriedSafe, triedOnto])\n\n    // then, if that fails, try connecting to an injected connector\n    //@ts-ignore\n    useEffect(async () => {\n        if (!active && triedSafe && triedOnto) {\n\n            const timeout = new Promise((res, rej) => setTimeout(rej, 8000))\n            const isAuthorized = injected.isAuthorized()\n\n            Promise.race([isAuthorized, timeout]).then(isAuthorized => {\n\n                if (isAuthorized) {\n                    activate(injected, undefined, true).catch((e) => {\n                        setTried(true)\n                    })\n                } else {\n                    if (isMobile && window.ethereum) {\n                        activate(injected, undefined, true).catch(() => {\n                            setTried(true)\n                        })\n                    } else {\n                        setTried(true)\n                    }\n                }\n            }).catch(e => window.location.reload())\n\n        }\n    }, [activate, active, triedSafe, triedOnto])\n\n    // wait until we get confirmation of a connection to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true)\n            setTriedOnto(true)\n        }\n    }, [active])\n\n    return tried && triedOnto\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate, connector } = useWeb3React()\n\n    const ontoWrongChain = !!localStorage.getItem('ontoWarning')\n\n    useEffect(() => {\n        if (!error) return\n\n        if (error instanceof UnsupportedChainIdError) {\n            const _window = window as unknown as OntoWindow\n            if (_window.onto && _window.onto.selectedAddress !== '') {\n                localStorage.setItem('ontoWarning', 'true')\n                window.location.reload()\n            }\n        }\n\n    }, [error, ontoWrongChain])\n\n    useEffect(() => {\n        const ethereum = window.ethereum\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch((error) => {\n                    console.error('Failed to activate after chain changed', error)\n                })\n            }\n\n            const handleAccountsChanged = (accounts: string[]) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    localStorage.setItem('ontoWarning', '')\n                    activate(injected, undefined, true).catch((error) => {\n                        console.error('Failed to activate after accounts changed', error)\n                    })\n                }\n            }\n\n            ethereum.on('chainChanged', handleChainChanged)\n            ethereum.on('accountsChanged', handleAccountsChanged)\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged)\n                    ethereum.removeListener('accountsChanged', handleAccountsChanged)\n                }\n            }\n\n        }\n        return undefined\n    }, [active, error, suppress, activate])\n\n}\n","import { useBlockNumber } from '../state/application/hooks'\nimport { useActiveWeb3React } from './web3'\n\nimport useInterval from './useInterval'\nimport { useState } from 'react'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\nimport ms from 'ms.macro'\n\nconst DEFAULT_MS_BEFORE_WARNING = ms`5m`\nconst NETWORK_HEALTH_CHECK_MS = ms`10s`\n\nconst useMachineTimeMs = (updateInterval: number): number => {\n    const [now, setNow] = useState(Date.now())\n\n    useInterval(() => {\n        setNow(Date.now())\n    }, updateInterval)\n    return now\n}\n\nexport function useIsNetworkFailed() {\n\n    const machineTime = useMachineTimeMs(NETWORK_HEALTH_CHECK_MS)\n    const blockTime = useCurrentBlockTimestamp()\n\n    const warning = Boolean(!!blockTime && machineTime - blockTime.mul(1000).toNumber() > DEFAULT_MS_BEFORE_WARNING)\n\n    return warning\n}\n\nexport function useIsNetworkFailedImmediate() {\n    const machineTime = useMachineTimeMs(ms`1s`)\n    const blockTime = useCurrentBlockTimestamp()\n\n    const warning = Boolean(!!blockTime && machineTime - blockTime.mul(1000).toNumber())\n\n    return !warning\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Presets } from './reducer';\n\nexport enum Field {\n    CURRENCY_A = 'CURRENCY_A',\n    CURRENCY_B = 'CURRENCY_B'\n}\n\nexport enum Bound {\n    LOWER = 'LOWER',\n    UPPER = 'UPPER',\n}\n\nexport const typeInput =\n    createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mintV3/typeInputMint')\nexport const typeStartPriceInput = createAction<{ typedValue: string }>('mintV3/typeStartPriceInput')\nexport const typeLeftRangeInput = createAction<{ typedValue: string }>('mintV3/typeLeftRangeInput')\nexport const typeRightRangeInput = createAction<{ typedValue: string }>('mintV3/typeRightRangeInput')\nexport const resetMintState = createAction<void>('mintV3/resetMintState')\nexport const setFullRange = createAction<void>('mintV3/setFullRange')\nexport const updateDynamicFee = createAction<{ dynamicFee: number }>('mintV3/updateDynamicFee')\nexport const updateSelectedPreset = createAction<{ preset: Presets | null }>('mintV3/updateSelectedPreset')\nexport const setAddLiquidityTxHash = createAction<{ txHash: string }>('mintV3/setAddLiquidityTxHash')\nexport const setShowNewestPosition = createAction<{ showNewestPosition: boolean }>('mintV3/setShowNewestPosition')\nexport const setInitialUSDPrices = createAction<{ field: Field, typedValue: string }>('mintV3/setInitialUSDPrices')\nexport const setInitialTokenPrice = createAction<{ typedValue: string }>('mintV3/setInitialTokenPrice')\nexport const updateCurrentStep = createAction<{ currentStep: number }>('mintV3/setCurrentStep')","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n    const debouncedAddress = useDebounce(address, 200)\n    const ensNodeArgument = useMemo(() => {\n        if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n        try {\n            return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n        } catch (error) {\n            return [undefined]\n        }\n    }, [debouncedAddress])\n    const registrarContract = useENSRegistrarContract(false)\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n    const resolverAddressResult = resolverAddress.result?.[0]\n    const resolverContract = useENSResolverContract(\n        resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n        false\n    )\n    const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n    const changed = debouncedAddress !== address\n    return {\n        ENSName: changed ? null : name.result?.[0] ?? null,\n        loading: changed || resolverAddress.loading || name.loading\n    }\n}\n","export default __webpack_public_path__ + \"static/media/metamask-logo.6d9734d3.svg\";","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ZERO } from '../internalConstants'\nimport { isSorted } from './isSorted'\nimport { Tick } from '../entities/tick'\n\nfunction tickComparator(a: Tick, b: Tick) {\n    return a.index - b.index\n}\n\n/**\n * Utility methods for interacting with sorted lists of ticks\n */\nexport abstract class TickList {\n    /**\n     * Cannot be constructed\n     */\n\n    public static validateList(ticks: Tick[], tickSpacing: number) {\n        invariant(tickSpacing > 0, 'TICK_SPACING_NONZERO')\n        // ensure ticks are spaced appropriately\n        invariant(\n            ticks.every(({ index }) => index % tickSpacing === 0),\n            'TICK_SPACING'\n        )\n\n        // ensure tick liquidity deltas sum to 0\n        invariant(\n            JSBI.equal(\n                ticks.reduce((accumulator, { liquidityNet }) => JSBI.add(accumulator, liquidityNet), ZERO),\n                ZERO\n            ),\n            'ZERO_NET'\n        )\n\n        invariant(isSorted(ticks, tickComparator), 'SORTED')\n    }\n\n    public static isBelowSmallest(ticks: readonly Tick[], tick: number): boolean {\n        invariant(ticks.length > 0, 'LENGTH')\n        return tick < ticks[0].index\n    }\n\n    public static isAtOrAboveLargest(ticks: readonly Tick[], tick: number): boolean {\n        invariant(ticks.length > 0, 'LENGTH')\n        return tick >= ticks[ticks.length - 1].index\n    }\n\n    public static getTick(ticks: readonly Tick[], index: number): Tick {\n        const tick = ticks[this.binarySearch(ticks, index)]\n        invariant(tick.index === index, 'NOT_CONTAINED')\n        return tick\n    }\n\n    public static nextInitializedTick(ticks: readonly Tick[], tick: number, lte: boolean): Tick {\n        if (lte) {\n            invariant(!TickList.isBelowSmallest(ticks, tick), 'BELOW_SMALLEST')\n            if (TickList.isAtOrAboveLargest(ticks, tick)) {\n                return ticks[ticks.length - 1]\n            }\n            const index = this.binarySearch(ticks, tick)\n            return ticks[index]\n        } else {\n            invariant(!this.isAtOrAboveLargest(ticks, tick), 'AT_OR_ABOVE_LARGEST')\n            if (this.isBelowSmallest(ticks, tick)) {\n                return ticks[0]\n            }\n            const index = this.binarySearch(ticks, tick)\n            return ticks[index + 1]\n        }\n    }\n\n    public static nextInitializedTickWithinOneWord(\n        ticks: readonly Tick[],\n        tick: number,\n        lte: boolean,\n        tickSpacing: number\n    ): [number, boolean] {\n        const compressed = Math.floor(tick / tickSpacing) // matches rounding in the code\n\n        if (lte) {\n            const wordPos = compressed >> 8\n            const minimum = (wordPos << 8) * tickSpacing\n\n            if (TickList.isBelowSmallest(ticks, tick)) {\n                return [minimum, false]\n            }\n\n            const index = TickList.nextInitializedTick(ticks, tick, lte).index\n            const nextInitializedTick = Math.max(minimum, index)\n            return [nextInitializedTick, nextInitializedTick === index]\n        } else {\n            const wordPos = (compressed + 1) >> 8\n            const maximum = ((wordPos + 1) << 8) * tickSpacing - 1\n\n            if (this.isAtOrAboveLargest(ticks, tick)) {\n                return [maximum, false]\n            }\n\n            const index = this.nextInitializedTick(ticks, tick, lte).index\n            const nextInitializedTick = Math.min(maximum, index)\n            return [nextInitializedTick, nextInitializedTick === index]\n        }\n    }\n\n    /**\n     * Finds the largest tick in the list of ticks that is less than or equal to tick\n     * @param ticks list of ticks\n     * @param tick tick to find the largest tick that is less than or equal to tick\n     * @private\n     */\n    private static binarySearch(ticks: readonly Tick[], tick: number): number {\n        invariant(!this.isBelowSmallest(ticks, tick), 'BELOW_SMALLEST')\n\n        let l = 0\n        let r = ticks.length - 1\n        let i\n        while (true) {\n            i = Math.floor((l + r) / 2)\n\n            if (ticks[i].index <= tick && (i === ticks.length - 1 || ticks[i + 1].index > tick)) {\n                return i\n            }\n\n            if (ticks[i].index < tick) {\n                l = i + 1\n            } else {\n                r = i - 1\n            }\n        }\n    }\n}\n","import AlgebraConfig from \"algebra.config\"\n\nexport async function fetchEternalFarmAPR(chainId: number) {\n\n    const apiURL = AlgebraConfig.API[chainId].eternalFarmsAPR\n\n    try {\n        return await fetch(apiURL).then(v => v.json())\n\n    } catch (error: any) {\n        return {}\n    }\n\n}\n\nexport async function fetchLimitFarmAPR(chainId: number) {\n\n    const apiURL = AlgebraConfig.API[chainId].limitFarmsAPR\n\n    try {\n        return await fetch(apiURL).then(v => v.json())\n\n    } catch (error: any) {\n        return {}\n    }\n\n}\n\nexport async function fetchLimitFarmTVL(chainId: number) {\n\n    const apiURL = AlgebraConfig.API[chainId].limitFarmsTVL\n\n    try {\n        return await fetch(apiURL).then(v => v.json())\n\n    } catch (error: any) {\n        return {}\n    }\n\n}\n\nexport async function fetchEternalFarmTVL(chainId: number) {\n\n    const apiURL = AlgebraConfig.API[chainId].eternalFarmsTVL\n\n    try {\n        return await fetch(apiURL).then(v => v.json())\n\n    } catch (error: any) {\n        return {}\n    }\n\n}\n\nexport async function fetchPoolsAPR(chainId: number) {\n    const apiURL = AlgebraConfig.API[chainId].poolsAPR\n\n    try {\n        return await fetch(apiURL).then(v => v.json())\n\n    } catch (error: any) {\n        return {}\n    }\n\n}\n","import { t, Trans } from \"@lingui/macro\";\nimport { useState } from \"react\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport QuestionHelper from \"../QuestionHelper\";\nimport { TYPE } from \"../../theme\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { DEFAULT_DEADLINE_FROM_NOW } from \"constants/misc\";\nimport { useSetUserSlippageTolerance, useUserSlippageTolerance, useUserTransactionTTL } from \"state/user/hooks\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { Input, Option, OptionCustom, SlippageEmojiContainer } from \"./styled\";\n\nenum SlippageError {\n    InvalidInput = \"InvalidInput\",\n}\n\nenum DeadlineError {\n    InvalidInput = \"InvalidInput\",\n}\n\ninterface TransactionSettingsProps {\n    placeholderSlippage: Percent; // varies according to the context in which the settings dialog is placed\n}\n\nexport default function TransactionSettings({ placeholderSlippage }: TransactionSettingsProps) {\n    const { chainId } = useActiveWeb3React();\n\n    const userSlippageTolerance = useUserSlippageTolerance();\n    const setUserSlippageTolerance = useSetUserSlippageTolerance();\n\n    const [deadline, setDeadline] = useUserTransactionTTL();\n\n    const [slippageInput, setSlippageInput] = useState(\"\");\n    const [slippageError, setSlippageError] = useState<SlippageError | false>(false);\n\n    const [deadlineInput, setDeadlineInput] = useState(\"\");\n    const [deadlineError, setDeadlineError] = useState<DeadlineError | false>(false);\n\n    function parseSlippageInput(value: string) {\n        // populate what the user typed and clear the error\n        setSlippageInput(value);\n        setSlippageError(false);\n\n        if (value.length === 0) {\n            setUserSlippageTolerance(\"auto\");\n        } else {\n            const parsed = Math.floor(Number.parseFloat(value) * 100);\n\n            if (!Number.isInteger(parsed) || parsed < 0 || parsed > 5000) {\n                setUserSlippageTolerance(\"auto\");\n                if (value !== \".\") {\n                    setSlippageError(SlippageError.InvalidInput);\n                }\n            } else {\n                setUserSlippageTolerance(new Percent(parsed, 10_000));\n            }\n        }\n    }\n\n    const tooLow = userSlippageTolerance !== \"auto\" && userSlippageTolerance.lessThan(new Percent(5, 10_000));\n    const tooHigh = userSlippageTolerance !== \"auto\" && userSlippageTolerance.greaterThan(new Percent(1, 100));\n\n    function parseCustomDeadline(value: string) {\n        // populate what the user typed and clear the error\n        setDeadlineInput(value);\n        setDeadlineError(false);\n\n        if (value.length === 0) {\n            setDeadline(DEFAULT_DEADLINE_FROM_NOW);\n        } else {\n            try {\n                const parsed: number = Math.floor(Number.parseFloat(value) * 60);\n                if (!Number.isInteger(parsed) || parsed < 60 || parsed > 180 * 60) {\n                    setDeadlineError(DeadlineError.InvalidInput);\n                } else {\n                    setDeadline(parsed);\n                }\n            } catch (error) {\n                setDeadlineError(DeadlineError.InvalidInput);\n                throw new Error(\"Transaction Deadline\" + error);\n            }\n        }\n    }\n\n    const showCustomDeadlineRow = Boolean(chainId);\n\n    return (\n        <AutoColumn gap=\"md\">\n            <AutoColumn gap=\"sm\">\n                <RowFixed>\n                    <TYPE.black fontWeight={400} fontSize={14} color={\"var(--text1)\"}>\n                        <Trans>Slippage tolerance</Trans>\n                    </TYPE.black>\n                    <QuestionHelper text={<Trans>Your transaction will revert if the price changes unfavorably by more than this percentage.</Trans>} />\n                </RowFixed>\n                <RowBetween>\n                    <Option\n                        onClick={() => {\n                            parseSlippageInput(\"\");\n                        }}\n                        active={userSlippageTolerance === \"auto\"}\n                    >\n                        <Trans>Auto</Trans>\n                    </Option>\n                    <OptionCustom active={userSlippageTolerance !== \"auto\"} warning={!!slippageError} tabIndex={-1}>\n                        <div className={\"flex-s-between c-p\"}>\n                            {tooLow || tooHigh ? (\n                                <SlippageEmojiContainer>\n                                    <span role=\"img\" aria-label=\"warning\">\n                                        ⚠️\n                                    </span>\n                                </SlippageEmojiContainer>\n                            ) : null}\n                            <Input\n                                placeholder={placeholderSlippage.toFixed(2)}\n                                value={slippageInput.length > 0 ? slippageInput : userSlippageTolerance === \"auto\" ? \"\" : userSlippageTolerance.toFixed(2)}\n                                onChange={(e) => parseSlippageInput(e.target.value)}\n                                onBlur={() => {\n                                    setSlippageInput(\"\");\n                                    setSlippageError(false);\n                                }}\n                                color={slippageError ? \"red\" : \"\"}\n                            />\n                            %\n                        </div>\n                    </OptionCustom>\n                </RowBetween>\n                {slippageError || tooLow || tooHigh ? (\n                    <RowBetween\n                        style={{\n                            fontSize: \"14px\",\n                            paddingTop: \"7px\",\n                            color: slippageError ? \"red\" : \"#F3841E\",\n                        }}\n                    >\n                        {slippageError ? <Trans>Enter a valid slippage percentage</Trans> : tooLow ? <Trans>Your transaction may fail</Trans> : <Trans>Your transaction may be frontrun</Trans>}\n                    </RowBetween>\n                ) : null}\n            </AutoColumn>\n\n            {showCustomDeadlineRow && (\n                <AutoColumn gap=\"sm\">\n                    <RowFixed>\n                        <TYPE.black fontSize={14} fontWeight={400} color={\"var(--text1)\"}>\n                            <Trans>Transaction deadline</Trans>\n                        </TYPE.black>\n                        <QuestionHelper text={t`Your transaction will revert if it is pending for more than this period of time.`} />\n                    </RowFixed>\n                    <RowFixed>\n                        <OptionCustom style={{ width: \"80px\" }} warning={!!deadlineError} tabIndex={-1}>\n                            <Input\n                                placeholder={(DEFAULT_DEADLINE_FROM_NOW / 60).toString()}\n                                value={deadlineInput.length > 0 ? deadlineInput : deadline === DEFAULT_DEADLINE_FROM_NOW ? \"\" : (deadline / 60).toString()}\n                                onChange={(e) => parseCustomDeadline(e.target.value)}\n                                onBlur={() => {\n                                    setDeadlineInput(\"\");\n                                    setDeadlineError(false);\n                                }}\n                                color={deadlineError ? \"red\" : \"\"}\n                            />\n                        </OptionCustom>\n                        <TYPE.body style={{ paddingLeft: \"8px\", color: \"var(--text1)\" }} fontSize={14}>\n                            <Trans>minutes</Trans>\n                        </TYPE.body>\n                    </RowFixed>\n                </AutoColumn>\n            )}\n        </AutoColumn>\n    );\n}\n","import styled from 'styled-components/macro'\nimport { darken } from 'polished'\n\nconst FancyButton = styled.button`\n    align-items: center;\n    color: black;\n    height: 2rem;\n    border-radius: 36px;\n    font-size: 1rem;\n    width: auto;\n    min-width: 3.5rem;\n    border: 1px solid var(--primary);\n    outline: none;\n    background: transparent;\n    :focus {\n        border: 1px solid var(--primary);\n    }\n`\nexport const Option = styled(FancyButton) <{ active: boolean }>`\n    margin-right: 8px;\n    background-color: var(--primary);\n    border-radius: 12px;\n    border: 1px solid var(--primary);\n\n    :hover {\n        background-color: var(--primary-hover);\n        border: 1px solid var(--primary-hover);\n        cursor: pointer;\n    }\n   color: white;\n`\nexport const Input = styled.input`\n    background: transparent;\n    font-size: 16px;\n    width: auto;\n    outline: none;\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n\n    color: ${({ theme, color }) => (color === 'red' ? 'var(--red1)' : 'var(--text1)')};\n    text-align: right;\n`\nexport const OptionCustom = styled(FancyButton) <{ active?: boolean; warning?: boolean }>`\n    height: 2rem;\n    position: relative;\n    padding: 0 0.75rem;\n    flex: 1;\n    border: ${({ theme, active, warning }) =>\n        active ? `1px solid ${warning ? 'var(--red1)' : 'var(--primary)'}` : warning && `1px solid ${'var(--red1)'}`};\n\n    input {\n        width: 100%;\n        height: 100%;\n        border: 0;\n        background: transparent;\n        border-radius: 2rem;\n    }\n`\nexport const SlippageEmojiContainer = styled.span`\n    color: #f3841e;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `}\n`\n","import styled from 'styled-components/macro'\nimport { Settings, X } from 'react-feather'\n\nexport const StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: var(--icon);\n  }\n\n  :hover {\n    opacity: 0.7;\n  }\n`\nexport const StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: var(--text1);\n  }\n`\nexport const StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  border-radius: 0.5rem;\n  height: 20px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n  }\n`\nexport const EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0;\n  font-size: 14px;\n`\nexport const StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\nexport const MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: var(--panel1);\n  border: 1px solid var(--border1);\n  color: var(--text1);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 2rem;\n  right: 0;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n  `};\n\n  user-select: none;\n`\nexport const Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background: var(--primary);\n`\nexport const ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: #b3e6ff;\n  border-radius: 20px;\n`\n","import { t, Trans } from \"@lingui/macro\";\nimport { useRef, useState } from \"react\";\nimport { Text } from \"rebass\";\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\";\nimport { ApplicationModal } from \"../../state/application/actions\";\nimport { useModalOpen, useToggleSettingsMenu } from \"../../state/application/hooks\";\nimport { useExpertModeManager, useUserSingleHopOnly } from \"../../state/user/hooks\";\nimport { TYPE } from \"../../theme\";\nimport { ButtonError } from \"../Button\";\nimport { AutoColumn } from \"../Column\";\nimport Modal from \"../Modal\";\nimport QuestionHelper from \"../QuestionHelper\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport Toggle from \"../Toggle\";\nimport TransactionSettings from \"../TransactionSettings\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { Break, EmojiWrapper, MenuFlyout, ModalContentWrapper, StyledCloseIcon, StyledMenu, StyledMenuButton, StyledMenuIcon } from \"./styled\";\n\nexport default function SettingsTab({ placeholderSlippage }: { placeholderSlippage: Percent }) {\n    const node = useRef<HTMLDivElement>();\n    const open = useModalOpen(ApplicationModal.SETTINGS);\n    const toggle = useToggleSettingsMenu();\n\n    const [expertMode, toggleExpertMode] = useExpertModeManager();\n    const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly();\n\n    // show confirmation view before turning on\n    const [showConfirmation, setShowConfirmation] = useState(false);\n\n    useOnClickOutside(node, open ? toggle : undefined);\n\n    return (\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n        <StyledMenu ref={node as any}>\n            <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\n                <div>\n                    <AutoColumn gap=\"lg\">\n                        <RowBetween style={{ padding: \"0 2rem\" }}>\n                            <div />\n                            <Text fontWeight={500} fontSize={20}>\n                                <Trans>Are you sure?</Trans>\n                            </Text>\n                            <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\n                        </RowBetween>\n                        <Break />\n                        <AutoColumn gap=\"lg\" style={{ padding: \"0 2rem\" }}>\n                            <Text fontWeight={500} fontSize={20}>\n                                <Trans>Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result in bad rates and lost funds.</Trans>\n                            </Text>\n                            <Text fontWeight={600} fontSize={20}>\n                                <Trans>ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.</Trans>\n                            </Text>\n                            <ButtonError\n                                error={true}\n                                padding={\"12px\"}\n                                onClick={() => {\n                                    const confirmWord = t`confirm`;\n                                    if (window.prompt(t`Please type the word \"${confirmWord}\" to enable expert mode.`) === confirmWord) {\n                                        toggleExpertMode();\n                                        setShowConfirmation(false);\n                                    }\n                                }}\n                            >\n                                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\n                                    <Trans>Turn On Expert Mode</Trans>\n                                </Text>\n                            </ButtonError>\n                        </AutoColumn>\n                    </AutoColumn>\n                </div>\n            </Modal>\n            <StyledMenuButton onClick={toggle} id=\"open-settings-dialog-button\">\n                <StyledMenuIcon />\n                {expertMode ? (\n                    <EmojiWrapper>\n                        <span role=\"img\" aria-label=\"wizard-icon\">\n                            😎\n                        </span>\n                    </EmojiWrapper>\n                ) : null}\n            </StyledMenuButton>\n            {open && (\n                <MenuFlyout>\n                    <AutoColumn gap=\"md\" style={{ padding: \"1rem\" }}>\n                        <Text fontWeight={600} fontSize={14}>\n                            <Trans>Transaction Settings</Trans>\n                        </Text>\n                        <TransactionSettings placeholderSlippage={placeholderSlippage} />\n                        <Text fontWeight={600} fontSize={14}>\n                            <Trans>Interface Settings</Trans>\n                        </Text>\n                        <RowBetween>\n                            <RowFixed>\n                                <TYPE.black fontWeight={400} fontSize={14} color={\"var(--text1)\"}>\n                                    <Trans>Expert Mode</Trans>\n                                </TYPE.black>\n                                <QuestionHelper text={<Trans>Allow high price impact trades and skip the confirm screen. Use at your own risk.</Trans>} />\n                            </RowFixed>\n                            <Toggle\n                                id=\"toggle-expert-mode-button\"\n                                isActive={expertMode}\n                                toggle={\n                                    expertMode\n                                        ? () => {\n                                              toggleExpertMode();\n                                              setShowConfirmation(false);\n                                          }\n                                        : () => {\n                                              toggle();\n                                              setShowConfirmation(true);\n                                          }\n                                }\n                            />\n                        </RowBetween>\n                        <RowBetween>\n                            <RowFixed>\n                                <TYPE.black fontWeight={400} fontSize={14} color={\"var(--text1)\"}>\n                                    <Trans>Multihops</Trans>\n                                </TYPE.black>\n                                <QuestionHelper text={<Trans>Allows swap between multiple pools.</Trans>} />\n                            </RowFixed>\n                            <Toggle\n                                id=\"toggle-disable-multihop-button\"\n                                isActive={!singleHopOnly}\n                                toggle={() => {\n                                    setSingleHopOnly(!singleHopOnly);\n                                }}\n                            />\n                        </RowBetween>\n                    </AutoColumn>\n                </MenuFlyout>\n            )}\n        </StyledMenu>\n    );\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { BigintIsh } from '@uniswap/sdk-core'\nimport { TickMath } from '../utils'\n\nexport interface TickConstructorArgs {\n    index: number\n    liquidityGross: BigintIsh\n    liquidityNet: BigintIsh\n}\n\nexport class Tick {\n    public readonly index: number\n    public readonly liquidityGross: JSBI\n    public readonly liquidityNet: JSBI\n\n    constructor({ index, liquidityGross, liquidityNet }: TickConstructorArgs) {\n        invariant(index >= TickMath.MIN_TICK && index <= TickMath.MAX_TICK, 'TICK')\n        this.index = index\n        this.liquidityGross = JSBI.BigInt(liquidityGross)\n        this.liquidityNet = JSBI.BigInt(liquidityNet)\n    }\n}\n","import { Price, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { Q192 } from '../internalConstants'\nimport { encodeSqrtRatioX96 } from './encodeSqrtRatioX96'\nimport { TickMath } from './tickMath'\n\n/**\n * Returns a price object corresponding to the input tick and the base/quote token\n * Inputs must be tokens because the address order is used to interpret the price represented by the tick\n * @param baseToken the base token of the price\n * @param quoteToken the quote token of the price\n * @param tick the tick for which to return the price\n */\nexport function tickToPrice(baseToken: Token, quoteToken: Token, tick: number): Price<Token, Token> {\n    const sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick)\n\n    const ratioX192 = JSBI.multiply(sqrtRatioX96, sqrtRatioX96)\n\n    return baseToken.sortsBefore(quoteToken)\n        ? new Price(baseToken, quoteToken, Q192, ratioX192)\n        : new Price(baseToken, quoteToken, ratioX192, Q192)\n}\n\n/**\n * Returns the first tick for which the given price is greater than or equal to the tick price\n * @param price for which to return the closest tick that represents a price less than or equal to the input price,\n * i.e. the price of the returned tick is less than or equal to the input price\n */\nexport function priceToClosestTick(price: Price<Token, Token>): number {\n    const sorted = price.baseCurrency.sortsBefore(price.quoteCurrency)\n\n    const sqrtRatioX96 = sorted\n        ? encodeSqrtRatioX96(price.numerator, price.denominator)\n        : encodeSqrtRatioX96(price.denominator, price.numerator)\n\n    let tick = TickMath.getTickAtSqrtRatio(sqrtRatioX96)\n    const nextTickPrice = tickToPrice(price.baseCurrency, price.quoteCurrency, tick + 1)\n    if (sorted) {\n        if (!price.lessThan(nextTickPrice)) {\n            tick++\n        }\n    } else {\n        if (!price.greaterThan(nextTickPrice)) {\n            tick++\n        }\n    }\n    return tick\n}\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport dayjs from 'dayjs'\n\n/**\n * Used to get large amounts of data when\n * @param query\n * @param localClient\n * @param vars - any variables that are passed in every query\n * @param values - the keys that are used as the values to map over if\n * @param skipCount - amount of entities to skip per query\n */\nexport async function splitQuery<Type>(\n    query: any,\n    client: ApolloClient<NormalizedCacheObject>,\n    vars: any[],\n    values: any[],\n    skipCount = 1000\n) {\n    let fetchedData = {}\n    let allFound = false\n    let skip = 0\n    try {\n        while (!allFound) {\n            let end = values.length\n            if (skip + skipCount < values.length) {\n                end = skip + skipCount\n            }\n            const sliced = values.slice(skip, end)\n            const result = await client.query<Type>({\n                query: query(...vars, sliced),\n                fetchPolicy: 'network-only'\n            })\n            fetchedData = {\n                ...fetchedData,\n                ...result.data\n            }\n            if (Object.keys(result.data).length < skipCount || skip + skipCount > values.length) {\n                allFound = true\n            } else {\n                skip += skipCount\n            }\n        }\n        return fetchedData\n    } catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nexport function useDeltaTimestamps(): [number, number, number, number] {\n    const utcCurrentTime = dayjs()\n    const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n    const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n    const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n    const tMonth = utcCurrentTime.subtract(1, 'month').startOf('minute').unix()\n    return [t1, t2, tWeek, tMonth]\n}\n","import AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nconst EXPLORER_HOSTNAMES: { [hostname: string]: true } = {\n    [AlgebraConfig.MISC[ChainId.BNB].appURL]: true\n}\n\n/**\n * Returns the anonymized version of the given href, i.e. one that does not leak user information\n * @param href the link to anonymize, i.e. remove any personal data from\n * @return string anonymized version of the given href\n */\nexport function anonymizeLink(href: string): string {\n    try {\n        const url = new URL(href)\n        if (EXPLORER_HOSTNAMES[url.hostname]) {\n            const pathPieces = url.pathname.split('/')\n\n            const anonymizedPath = pathPieces.map((pc) => (/0x[a-fA-F0-9]+/.test(pc) ? '***' : pc)).join('/')\n\n            return `${url.protocol}//${url.hostname}${anonymizedPath}`\n        }\n        return href\n    } catch (error) {\n        return href\n    }\n}\n","import React, { HTMLProps } from \"react\";\nimport { ArrowLeft, ExternalLink as LinkIconFeather, Trash, X } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components/macro\";\nimport { anonymizeLink } from \"../utils/anonymizeLink\";\n\nexport const ButtonText = styled.button`\n    outline: none;\n    border: none;\n    font-size: inherit;\n    padding: 0;\n    margin: 0;\n    background: none;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.7;\n    }\n\n    :focus {\n        text-decoration: underline;\n    }\n`;\n\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\n    cursor: pointer;\n`;\n\n// for wrapper react feather icons\nexport const IconWrapper = styled.div<{ stroke?: string; size?: string; marginRight?: string; marginLeft?: string }>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: ${({ size }) => size ?? \"20px\"};\n    height: ${({ size }) => size ?? \"20px\"};\n    margin-right: ${({ marginRight }) => marginRight ?? 0};\n    margin-left: ${({ marginLeft }) => marginLeft ?? 0};\n\n    & > * {\n        stroke: ${({ theme, stroke }) => stroke ?? \"var(--blue1)\"};\n    }\n`;\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n    border: none;\n    text-decoration: none;\n    background: none;\n\n    cursor: ${({ disabled }) => (disabled ? \"default\" : \"pointer\")};\n    color: ${({ theme, disabled }) => (disabled ? \"var(--text2)\" : \"var(--primary)\")};\n    font-weight: 500;\n\n    :hover {\n        text-decoration: ${({ disabled }) => (disabled ? null : \"underline\")};\n    }\n\n    :focus {\n        outline: none;\n        text-decoration: ${({ disabled }) => (disabled ? null : \"underline\")};\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n    text-decoration: none;\n    cursor: pointer;\n    // color: ${({ theme }) => \"var(--primary)\"};\n    color: #f9ff47;\n    font-weight: 500;\n\n    :hover {\n        text-decoration: underline;\n    }\n\n    :focus {\n        outline: none;\n        text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nconst StyledLink = styled.a`\n    text-decoration: none;\n    cursor: pointer;\n    color: ${({ theme }) => \"var(--primary)\"};\n    font-weight: 500;\n\n    :hover {\n        // text-decoration: underline;\n    }\n\n    :focus {\n        outline: none;\n        // text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nconst LinkIconWrapper = styled.a`\n    text-decoration: none;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n\n    :hover {\n        text-decoration: none;\n        opacity: 0.7;\n    }\n\n    :focus {\n        outline: none;\n        text-decoration: none;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nconst LinkIcon = styled(LinkIconFeather)`\n    height: 16px;\n    width: 18px;\n    margin-left: 10px;\n    stroke: ${({ theme }) => \"var(--blue1)\"};\n`;\n\nexport const TrashIcon = styled(Trash)`\n    height: 16px;\n    width: 18px;\n    margin-left: 10px;\n    stroke: ${({ theme }) => \"var(--text3)\"};\n\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n\n    :hover {\n        opacity: 0.7;\n    }\n`;\n\nconst rotateImg = keyframes`\n    0% {\n        transform: perspective(1000px) rotateY(0deg);\n    }\n\n    100% {\n        transform: perspective(1000px) rotateY(360deg);\n    }\n`;\n\nexport const UniTokenAnimated = styled.img`\n    animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n    padding: 2rem 0 0 0;\n    filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`;\n\nfunction handleClickExternalLink(event: React.MouseEvent<HTMLAnchorElement>) {\n    const { target, href } = event.currentTarget;\n\n    const anonymizedHref = anonymizeLink(href);\n\n    // don't prevent default, don't redirect if it's a new tab\n    if (target === \"_blank\" || event.ctrlKey || event.metaKey) {\n        // ReactGA.outboundLink({ label: anonymizedHref }, () => {\n        //   window.location.href = anonymizedHref\n        // })\n    } else {\n        event.preventDefault();\n        // ReactGA.outboundLink({ label: anonymizedHref }, () => {\n        //   window.location.href = anonymizedHref\n        // })\n    }\n}\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({ target = \"_blank\", href, rel = \"noopener noreferrer\", ...rest }: Omit<HTMLProps<HTMLAnchorElement>, \"as\" | \"ref\" | \"onClick\"> & { href: string }) {\n    return <a className={\"flex-s-between fs-085\"} target={target} rel={rel} href={href} onClick={handleClickExternalLink} {...rest} />;\n}\n\nexport function ExternalLinkIcon({ target = \"_blank\", href, rel = \"noopener noreferrer\", ...rest }: Omit<HTMLProps<HTMLAnchorElement>, \"as\" | \"ref\" | \"onClick\"> & { href: string }) {\n    return (\n        <LinkIconWrapper target={target} rel={rel} href={href} onClick={handleClickExternalLink} {...rest}>\n            <LinkIcon />\n        </LinkIconWrapper>\n    );\n}\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nconst Spinner = styled.img`\n    animation: 2s ${rotate} linear infinite;\n    width: 16px;\n    height: 16px;\n`;\n\nconst BackArrowLink = styled(StyledInternalLink)`\n    color: ${({ theme }) => \"var(--text1)\"};\n`;\n\nexport function BackArrow({ to }: { to: string }) {\n    return (\n        <BackArrowLink to={to}>\n            <ArrowLeft />\n        </BackArrowLink>\n    );\n}\n\nexport const CustomLightSpinner = styled(Spinner)<{ size: string }>`\n    height: ${({ size }) => size};\n    width: ${({ size }) => size};\n`;\n\nexport const HideMedium = styled.span`\n    display: block;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`;\n\nexport const HideSmall = styled.span`\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`;\n\nexport const HideExtraSmall = styled.span`\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`;\n\nexport const MediumOnly = styled.span`\n    display: none;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: block;\n  `};\n`;\n\nexport const SmallOnly = styled.span`\n    display: none;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: block;\n  `};\n`;\n\nexport const ExtraSmallOnly = styled.span`\n    display: none;\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: block;\n  `};\n`;\n","import React, { useMemo } from \"react\";\nimport { Text, TextProps as TextPropsOriginal } from \"rebass\";\nimport styled, { createGlobalStyle, css, DefaultTheme, ThemeProvider as StyledComponentsThemeProvider } from \"styled-components/macro\";\nimport { useIsDarkMode } from \"../state/user/hooks\";\nimport { Colors } from \"./styled\";\n\nexport * from \"./components\";\n\ntype TextProps = Omit<TextPropsOriginal, \"css\">;\n\nexport const MEDIA_WIDTHS = {\n    upToExtraSmall: 500,\n    upToSmall: 720,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n    (accumulator as any)[size] = (a: any, b: any, c: any) => css`\n        @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n            ${css(a, b, c)}\n        }\n    `;\n    return accumulator;\n}, {}) as any;\n\nconst white = \"#FFFFFF\";\nconst black = \"#000000\";\n\nfunction colors(darkMode: boolean): Colors {\n    return {\n        // base\n        white,\n        black,\n\n        // text\n        text1: darkMode ? \"#000000\" : \"#000000\",\n        text2: darkMode ? \"#FFFFFF\" : \"#565A69\",\n        text3: darkMode ? \"#8F96AC\" : \"#6E727D\",\n        text4: darkMode ? \"#B2B9D2\" : \"#C3C5CB\",\n        text5: darkMode ? \"#0d0a25\" : \"#EDEEF2\",\n\n        // backgrounds / greys\n        bg0: darkMode ? \"rgba(0, 0, 0)\" : \"#FFF\",\n        bg1: darkMode ? \"#1E292F\" : \"#F7F8FA\",\n        bg2: darkMode ? \"#0d0a25\" : \"#EDEEF2\",\n        bg3: darkMode ? \"#0d0a25\" : \"#CED0D9\",\n        bg4: darkMode ? \"#565A69\" : \"#888D9B\",\n        bg5: darkMode ? \"#6C7284\" : \"#888D9B\",\n        bg6: darkMode ? \"#1A2028\" : \"#6C7284\",\n\n        //specialty colors\n        modalBG: darkMode ? \"rgba(0,0,0,.425)\" : \"rgba(0,0,0,0.8)\",\n        advancedBG: darkMode ? \"rgba(0,0,0,0.1)\" : \"rgba(255,255,255,0.7)\",\n\n        //primary colors\n        primary1: darkMode ? \"#5d32ed\" : \"#E8006F\",\n        primary2: darkMode ? \"#3680E7\" : \"#FF8CC3\",\n        primary3: darkMode ? \"#4D8FEA\" : \"#FF99C9\",\n        primary4: darkMode ? \"#376bad70\" : \"#F6DDE8\",\n        primary5: darkMode ? \"#400f29\" : \"#FDEAF1\",\n\n        // color text\n        primaryText1: darkMode ? \"#ed1185\" : \"#D50066\",\n\n        // secondary colors\n        secondary1: darkMode ? \"#5d32ed\" : \"#E8006F\",\n        secondary2: darkMode ? \"#17000b26\" : \"#F6DDE8\",\n        secondary3: darkMode ? \"#17000b26\" : \"#FDEAF1\",\n\n        // other\n        red1: darkMode ? \"#FF4343\" : \"#DA2D2B\",\n        red2: darkMode ? \"#F82D3A\" : \"#DF1F38\",\n        red3: \"#D60000\",\n        green1: darkMode ? \"#8EFFBE\" : \"#007D35\",\n        yellow1: \"#E3A507\",\n        yellow2: \"#FF8F00\",\n        yellow3: \"#F3B71E\",\n        blue1: darkMode ? \"#2172E5\" : \"#0068FC\",\n        blue2: darkMode ? \"#5199FF\" : \"#0068FC\",\n        error: darkMode ? \"#FD4040\" : \"#DF1F38\",\n        success: darkMode ? \"#27AE60\" : \"#007D35\",\n        warning: \"#FF8F00\",\n\n        // dont wanna forget these blue yet\n        blue4: darkMode ? \"#400f29\" : \"#C4D9F8\",\n        // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n\n        winterBackground: \"rgba(91, 183, 255, 0.7)\",\n        winterMainButton: \"#D536C8\",\n        winterDisabledButton: \"#A42A9A\",\n    };\n}\n\nfunction theme(darkMode: boolean): DefaultTheme {\n    return {\n        ...colors(darkMode),\n\n        grids: {\n            sm: 8,\n            md: 12,\n            lg: 24,\n        },\n\n        //shadows\n        shadow1: darkMode ? \"#000\" : \"#2F80ED\",\n\n        // media queries\n\n        mediaWidth: mediaWidthTemplates,\n\n        // css snippets\n        flexColumnNoWrap: css`\n            display: flex;\n            flex-flow: column nowrap;\n        `,\n        flexRowNoWrap: css`\n            display: flex;\n            flex-flow: row nowrap;\n        `,\n    };\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n    const darkMode = useIsDarkMode();\n\n    const themeObject = useMemo(() => theme(darkMode), [darkMode]);\n\n    return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>;\n}\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n    // color: ${({ color, theme }) => (theme as any)[color]};\n    color: black;\n`;\n\nexport const TYPE = {\n    main(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"var(--text1)\"} {...props} />;\n    },\n    link(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"primary1\"} {...props} />;\n    },\n    label(props: TextProps) {\n        return <TextWrapper fontWeight={600} color={\"var(--text1)\"} {...props} />;\n    },\n    black(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"black\"} {...props} />;\n    },\n    white(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"white\"} {...props} />;\n    },\n    body(props: TextProps) {\n        return <TextWrapper fontWeight={400} fontSize={16} color={\"var(--text1)\"} {...props} />;\n    },\n    largeHeader(props: TextProps) {\n        return <TextWrapper fontWeight={600} fontSize={24} {...props} />;\n    },\n    mediumHeader(props: TextProps) {\n        return <TextWrapper fontWeight={500} fontSize={20} {...props} />;\n    },\n    subHeader(props: TextProps) {\n        return <TextWrapper fontWeight={400} fontSize={14} {...props} />;\n    },\n    small(props: TextProps) {\n        return <TextWrapper fontWeight={500} fontSize={11} {...props} />;\n    },\n    blue(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"text1\"} {...props} />;\n    },\n    yellow(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"yellow3\"} {...props} />;\n    },\n    darkGray(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"text3\"} {...props} />;\n    },\n    gray(props: TextProps) {\n        return <TextWrapper fontWeight={500} color={\"bg3\"} {...props} />;\n    },\n    italic(props: TextProps) {\n        return <TextWrapper fontWeight={500} fontSize={12} fontStyle={\"italic\"} color={\"text2\"} {...props} />;\n    },\n    error({ error, ...props }: { error: boolean } & TextProps) {\n        return <TextWrapper fontWeight={500} color={error ? \"red1\" : \"text2\"} {...props} />;\n    },\n};\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => \"var(--text1)\"};\n}\n\na {\n color: ${({ theme }) => \"var(--blue1)\"};\n}\n`;\n","import AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"./addresses\"\n\nexport const ALL_SUPPORTED_CHAIN_IDS: number[] = [\n    ChainId.BNB,\n    ChainId.PULSE\n]\n\nexport const L1_CHAIN_IDS = [] as const\n\nexport type SupportedL1ChainId = typeof L1_CHAIN_IDS[number]\n\nexport const L2_CHAIN_IDS = [] as const\n\nexport type SupportedL2ChainId = typeof L2_CHAIN_IDS[number]\n\ninterface L1ChainInfo {\n    readonly label: string\n}\n\ninterface L2ChainInfo extends L1ChainInfo {\n    readonly bridge: string\n    readonly logoUrl: string\n}\n\ntype ChainInfo = { readonly [chainId: number]: L1ChainInfo | L2ChainInfo } & {\n    readonly [chainId in SupportedL2ChainId]: L2ChainInfo\n} &\n    { readonly [chainId in SupportedL1ChainId]: L1ChainInfo }\n\nexport const CHAIN_INFO: ChainInfo = {\n    [ChainId.BNB]: {\n        label: AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].chainName\n    },\n    [ChainId.PULSE]: {\n        label: AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].chainName\n    }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport ms from 'ms.macro'\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nconst NETWORK_POLLING_INTERVALS: { [chainId: number]: number } = {\n    [ChainId.BNB]: ms`1s`,\n    [ChainId.PULSE]: ms`1s`\n}\n\nexport default function getLibrary(provider: any): Web3Provider {\n    const library = new Web3Provider(\n        provider,\n        typeof provider.chainId === 'number'\n            ? provider.chainId\n            : typeof provider.chainId === 'string'\n                ? parseInt(provider.chainId)\n                : 'any'\n    )\n    library.pollingInterval = 15_000\n    library.detectNetwork().then((network) => {\n        const networkPollingInterval = NETWORK_POLLING_INTERVALS[network.chainId]\n        if (networkPollingInterval) {\n            console.debug('Setting polling interval', networkPollingInterval)\n            library.pollingInterval = networkPollingInterval\n        }\n    })\n\n    return library\n}\n","import { TokenInfo } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { isAddress } from '../../utils'\nimport { Token } from '@uniswap/sdk-core'\n\nconst alwaysTrue = () => true\n\n/**\n * Create a filter function to apply to a token for whether it matches a particular search query\n * @param search the search query to apply to the token\n */\nexport function createTokenFilterFunction<T extends Token | TokenInfo>(search: string): (tokens: T) => boolean {\n    const searchingAddress = isAddress(search)\n\n    if (searchingAddress) {\n        const lower = searchingAddress.toLowerCase()\n        return (t: T) => ('isToken' in t ? searchingAddress === t.address : lower === t.address.toLowerCase())\n    }\n\n    const lowerSearchParts = search\n        .toLowerCase()\n        .split(/\\s+/)\n        .filter((s) => s.length > 0)\n\n    if (lowerSearchParts.length === 0) return alwaysTrue\n\n    const matchesSearch = (s: string): boolean => {\n        const sParts = s\n            .toLowerCase()\n            .split(/\\s+/)\n            .filter((s) => s.length > 0)\n\n        return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n    }\n\n    return ({\n        name,\n        symbol\n    }: T): boolean => Boolean((symbol && matchesSearch(symbol)) || (name && matchesSearch(name)))\n}\n\nexport function filterTokens<T extends Token | TokenInfo>(tokens: T[], search: string): T[] {\n    return tokens.filter(createTokenFilterFunction(search))\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n    return useMemo(() => {\n        if (!tokens) {\n            return []\n        }\n\n        const symbolMatch = searchQuery\n            .toLowerCase()\n            .split(/\\s+/)\n            .filter((s) => s.length > 0)\n\n        if (symbolMatch.length > 1) {\n            return tokens\n        }\n\n        const exactMatches: Token[] = []\n        const symbolSubtrings: Token[] = []\n        const rest: Token[] = []\n\n        // sort tokens by exact match -> subtring on symbol match -> rest\n        tokens.map((token) => {\n            if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n                return exactMatches.push(token)\n            } else if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n                return symbolSubtrings.push(token)\n            } else {\n                return rest.push(token)\n            }\n        })\n\n        return [...exactMatches, ...symbolSubtrings, ...rest]\n    }, [tokens, searchQuery])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticall2Contract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n    const multicall = useMulticall2Contract()\n    return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { Currency, CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { useMemo } from \"react\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { TYPE } from \"../../theme\";\nimport { warningSeverity } from \"../../utils/prices\";\nimport HoverInlineText from \"components/HoverInlineText\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface FiatValueProps {\n    fiatValue: CurrencyAmount<Currency> | null | undefined;\n    priceImpact?: Percent;\n}\n\nexport function FiatValue({ fiatValue, priceImpact }: FiatValueProps) {\n    const theme = useTheme();\n    const priceImpactColor = useMemo(() => {\n        if (!priceImpact) return undefined;\n        if (priceImpact.lessThan(\"0\")) return \"#15af56\";\n        const severity = warningSeverity(priceImpact);\n        if (severity < 1) return \"black\";\n        if (severity < 3) return \"var(--yellow1)\";\n        return \"var(--red1)\";\n    }, [priceImpact, \"var(--green1)\", \"var(--red1)\", \"var(--text3)\", \"var(--yellow1)\"]);\n\n    return (\n        <TYPE.body fontSize={14} color={\"var(--text1)\"}>\n            {fiatValue ? (\n                <Trans>\n                    ~$ <HoverInlineText text={fiatValue?.toSignificant(6, { groupSeparator: \",\" })} />\n                </Trans>\n            ) : (\n                \"Can't estimate price\"\n            )}\n            {priceImpact ? (\n                <span style={{ color: priceImpactColor }}>\n                    {\" \"}\n                    (<Trans>{priceImpact.multiply(-1).toSignificant(3)}%</Trans>)\n                </span>\n            ) : null}\n        </TYPE.body>\n    );\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport styled from 'styled-components/macro'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { WrappedCurrency } from '../../models/types'\n\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin-left: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n  margin: 0;\n  `}\n`\n\ninterface DoubleCurrencyLogoProps {\n    margin?: boolean\n    size?: number\n    currency0?: Currency\n    currency1?: Currency\n}\n\nconst HigherLogo = styled(CurrencyLogo)`\n`\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\n  position: absolute;\n  left: ${({ sizeraw }) => '-' + (sizeraw / 1.5).toString() + 'px'} !important;\n`\n\nexport default function DoubleCurrencyLogo({ currency0, currency1, size = 16, margin = false }: DoubleCurrencyLogoProps) {\n    return (\n        <Wrapper sizeraw={size} margin={margin}>\n            {currency0 && <HigherLogo currency={currency0 as WrappedCurrency} size={size.toString() + 'px'} />}\n            {currency1 && <CoveredLogo currency={currency1 as WrappedCurrency} size={size.toString() + 'px'} sizeraw={size} />}\n        </Wrapper>\n    )\n}\n","import { useAllTransactions } from '../state/transactions/hooks'\nimport { useMemo } from 'react'\n\nexport function useSortedRecentTransactions() {\n    const allTransactions = useAllTransactions()\n\n    return useMemo(() => {\n        const txs = Object.values(allTransactions)\n        return txs.filter((tx) => new Date().getTime() - tx.addedTime < 86_400_000).sort((a, b) => b.addedTime - a.addedTime)\n    }, [allTransactions])\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from 'state'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector\n","import { BigintIsh, Currency, CurrencyAmount, NativeCurrency, Percent, Token, validateAndParseAddress } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { Position } from './entities/position'\nimport { ONE, ZERO } from './internalConstants'\nimport { MethodParameters, toHex } from './utils/calldata'\nimport { Interface } from '@ethersproject/abi'\n// import { abi } from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json'\nimport abi from '../../abis/non-fun-pos-man.json'\nimport { PermitOptions, SelfPermit } from './selfPermit'\nimport { ADDRESS_ZERO } from './constants'\nimport { Pool } from './entities'\n\nconst MaxUint128 = toHex(JSBI.subtract(JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(128)), JSBI.BigInt(1)))\n\nexport interface MintSpecificOptions {\n    /**\n     * The account that should receive the minted NFT.\n     */\n    recipient: string\n\n    /**\n     * Creates pool if not initialized before mint.\n     */\n    createPool?: boolean\n}\n\nexport interface IncreaseSpecificOptions {\n    /**\n     * Indicates the ID of the position to increase liquidity for.\n     */\n    tokenId: BigintIsh\n}\n\n/**\n * Options for producing the calldata to add liquidity.\n */\nexport interface CommonAddLiquidityOptions {\n    /**\n     * How much the pool price is allowed to move.\n     */\n    slippageTolerance: Percent\n\n    /**\n     * When the transaction expires, in epoch seconds.\n     */\n    deadline: BigintIsh\n\n    /**\n     * Whether to spend ether. If true, one of the pool tokens must be WETH, by default false\n     */\n    useNative?: NativeCurrency\n\n    /**\n     * The optional permit parameters for spending token0\n     */\n    token0Permit?: PermitOptions\n\n    /**\n     * The optional permit parameters for spending token1\n     */\n    token1Permit?: PermitOptions\n}\n\nexport type MintOptions = CommonAddLiquidityOptions & MintSpecificOptions\nexport type IncreaseOptions = CommonAddLiquidityOptions & IncreaseSpecificOptions\n\nexport type AddLiquidityOptions = MintOptions | IncreaseOptions\n\n// type guard\nfunction isMint(options: AddLiquidityOptions): options is MintOptions {\n    return Object.keys(options).some(k => k === 'recipient')\n}\n\nexport interface CollectOptions {\n    /**\n     * Indicates the ID of the position to collect for.\n     */\n    tokenId: BigintIsh\n\n    /**\n     * Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burned\n     */\n    expectedCurrencyOwed0: CurrencyAmount<Currency>\n\n    /**\n     * Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burned\n     */\n    expectedCurrencyOwed1: CurrencyAmount<Currency>\n\n    /**\n     * The account that should receive the tokens.\n     */\n    recipient: string\n}\n\nexport interface NFTPermitOptions {\n    v: 0 | 1 | 27 | 28\n    r: string\n    s: string\n    deadline: BigintIsh\n    spender: string\n}\n\n/**\n * Options for producing the calldata to exit a position.\n */\nexport interface RemoveLiquidityOptions {\n    /**\n     * The ID of the token to exit\n     */\n    tokenId: BigintIsh\n\n    /**\n     * The percentage of position liquidity to exit.\n     */\n    liquidityPercentage: Percent\n\n    /**\n     * How much the pool price is allowed to move.\n     */\n    slippageTolerance: Percent\n\n    /**\n     * When the transaction expires, in epoch seconds.\n     */\n    deadline: BigintIsh\n\n    /**\n     * Whether the NFT should be burned if the entire position is being exited, by default false.\n     */\n    burnToken?: boolean\n\n    /**\n     * The optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFT\n     */\n    permit?: NFTPermitOptions\n\n    /**\n     * Parameters to be passed on to collect\n     */\n    collectOptions: Omit<CollectOptions, 'tokenId'>\n}\n\nexport abstract class NonfungiblePositionManager extends SelfPermit {\n    public static INTERFACE: Interface = new Interface(abi)\n\n    /**\n     * Cannot be constructed.\n     */\n    private constructor() {\n        super()\n    }\n\n    public static createCallParameters(pool: Pool): MethodParameters {\n        return {\n            calldata: this.encodeCreate(pool),\n            value: toHex(0)\n        }\n    }\n\n    public static addCallParameters(position: Position, options: AddLiquidityOptions): MethodParameters {\n        invariant(JSBI.greaterThan(position.liquidity, ZERO), 'ZERO_LIQUIDITY')\n\n        const calldatas: string[] = []\n\n        // get amounts\n        const { amount0: amount0Desired, amount1: amount1Desired } = position.mintAmounts\n\n        // adjust for slippage\n        const minimumAmounts = position.mintAmountsWithSlippage(options.slippageTolerance)\n        const amount0Min = toHex(minimumAmounts.amount0)\n        const amount1Min = toHex(minimumAmounts.amount1)\n\n        const deadline = toHex(options.deadline)\n\n        // create pool if needed\n        if (isMint(options) && options.createPool) {\n            calldatas.push(this.encodeCreate(position.pool))\n        }\n\n        // permits if necessary\n        if (options.token0Permit) {\n            calldatas.push(NonfungiblePositionManager.encodePermit(position.pool.token0, options.token0Permit))\n        }\n        if (options.token1Permit) {\n            calldatas.push(NonfungiblePositionManager.encodePermit(position.pool.token1, options.token1Permit))\n        }\n\n        // mint\n        if (isMint(options)) {\n            const recipient: string = validateAndParseAddress(options.recipient)\n\n            calldatas.push(\n                NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [\n                    {\n                        token0: position.pool.token0.address,\n                        token1: position.pool.token1.address,\n                        tickLower: position.tickLower,\n                        tickUpper: position.tickUpper,\n                        amount0Desired: toHex(amount0Desired),\n                        amount1Desired: toHex(amount1Desired),\n                        amount0Min,\n                        amount1Min,\n                        recipient,\n                        deadline\n                    }\n                ])\n            )\n        } else {\n            // increase\n            calldatas.push(\n                NonfungiblePositionManager.INTERFACE.encodeFunctionData('increaseLiquidity', [\n                    {\n                        tokenId: toHex(options.tokenId),\n                        amount0Desired: toHex(amount0Desired),\n                        amount1Desired: toHex(amount1Desired),\n                        amount0Min,\n                        amount1Min,\n                        deadline\n                    }\n                ])\n            )\n        }\n\n        let value: string = toHex(0)\n\n        if (options.useNative) {\n            const wrapped = options.useNative.wrapped\n            invariant(position.pool.token0.equals(wrapped) || position.pool.token1.equals(wrapped), 'NO_WNative')\n\n            const wrappedValue = position.pool.token0.equals(wrapped) ? amount0Desired : amount1Desired\n\n            // we only need to refund if we're actually sending ETH\n            if (JSBI.greaterThan(wrappedValue, ZERO)) {\n                calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('refundNativeToken'))\n            }\n\n            value = toHex(wrappedValue)\n        }\n\n        return {\n            calldata:\n                calldatas.length === 1\n                    ? calldatas[0]\n                    : NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n            value\n        }\n    }\n\n    public static collectCallParameters(options: CollectOptions): MethodParameters {\n        const calldatas: string[] = NonfungiblePositionManager.encodeCollect(options)\n\n        return {\n            calldata:\n                calldatas.length === 1\n                    ? calldatas[0]\n                    : NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n            value: toHex(0)\n        }\n    }\n\n    /**\n     * Produces the calldata for completely or partially exiting a position\n     * @param position The position to exit\n     * @param options Additional information necessary for generating the calldata\n     * @returns The call parameters\n     */\n    public static removeCallParameters(position: Position, options: RemoveLiquidityOptions): MethodParameters {\n        const calldatas: string[] = []\n\n        const deadline = toHex(options.deadline)\n        const tokenId = toHex(options.tokenId)\n\n        // construct a partial position with a percentage of liquidity\n        const partialPosition = new Position({\n            pool: position.pool,\n            liquidity: options.liquidityPercentage.multiply(position.liquidity).quotient,\n            tickLower: position.tickLower,\n            tickUpper: position.tickUpper\n        })\n        invariant(JSBI.greaterThan(partialPosition.liquidity, ZERO), 'ZERO_LIQUIDITY')\n\n        // slippage-adjusted underlying amounts\n        const {\n            amount0: amount0Min,\n            amount1: amount1Min\n        } = partialPosition.burnAmountsWithSlippage(\n            options.slippageTolerance\n        )\n\n        if (options.permit) {\n            calldatas.push(\n                NonfungiblePositionManager.INTERFACE.encodeFunctionData('permit', [\n                    validateAndParseAddress(options.permit.spender),\n                    tokenId,\n                    toHex(options.permit.deadline),\n                    options.permit.v,\n                    options.permit.r,\n                    options.permit.s\n                ])\n            )\n        }\n\n        // remove liquidity\n        calldatas.push(\n            NonfungiblePositionManager.INTERFACE.encodeFunctionData('decreaseLiquidity', [\n                {\n                    tokenId,\n                    liquidity: toHex(partialPosition.liquidity),\n                    amount0Min: toHex(amount0Min),\n                    amount1Min: toHex(amount1Min),\n                    deadline\n                }\n            ])\n        )\n\n        const { expectedCurrencyOwed0, expectedCurrencyOwed1, ...rest } = options.collectOptions\n        calldatas.push(\n            ...NonfungiblePositionManager.encodeCollect({\n                tokenId: options.tokenId,\n                // add the underlying value to the expected currency already owed\n                expectedCurrencyOwed0: expectedCurrencyOwed0.add(\n                    CurrencyAmount.fromRawAmount(expectedCurrencyOwed0.currency, amount0Min)\n                ),\n                expectedCurrencyOwed1: expectedCurrencyOwed1.add(\n                    CurrencyAmount.fromRawAmount(expectedCurrencyOwed1.currency, amount1Min)\n                ),\n                ...rest\n            })\n        )\n\n        if (options.liquidityPercentage.equalTo(ONE)) {\n            if (options.burnToken) {\n                calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('burn', [tokenId]))\n            }\n        } else {\n            invariant(options.burnToken !== true, 'CANNOT_BURN')\n        }\n\n        return {\n            calldata: NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n            value: toHex(0)\n        }\n    }\n\n    private static encodeCreate(pool: Pool): string {\n        return NonfungiblePositionManager.INTERFACE.encodeFunctionData('createAndInitializePoolIfNecessary', [\n            pool.token0.address,\n            pool.token1.address,\n            toHex(pool.sqrtRatioX96)\n        ])\n    }\n\n    private static encodeCollect(options: CollectOptions): string[] {\n        const calldatas: string[] = []\n\n        const tokenId = toHex(options.tokenId)\n\n        const involvesETH =\n            options.expectedCurrencyOwed0.currency.isNative || options.expectedCurrencyOwed1.currency.isNative\n\n        const recipient = validateAndParseAddress(options.recipient)\n\n        // collect\n        calldatas.push(\n            NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [\n                {\n                    tokenId,\n                    recipient: involvesETH ? ADDRESS_ZERO : recipient,\n                    amount0Max: MaxUint128,\n                    amount1Max: MaxUint128\n                }\n            ])\n        )\n\n        if (involvesETH) {\n            const ethAmount = options.expectedCurrencyOwed0.currency.isNative\n                ? options.expectedCurrencyOwed0.quotient\n                : options.expectedCurrencyOwed1.quotient\n            const token = options.expectedCurrencyOwed0.currency.isNative\n                ? (options.expectedCurrencyOwed1.currency as Token)\n                : (options.expectedCurrencyOwed0.currency as Token)\n            const tokenAmount = options.expectedCurrencyOwed0.currency.isNative\n                ? options.expectedCurrencyOwed1.quotient\n                : options.expectedCurrencyOwed0.quotient\n\n            calldatas.push(\n                NonfungiblePositionManager.INTERFACE.encodeFunctionData('unwrapWNativeToken', [toHex(ethAmount), recipient])\n            )\n            calldatas.push(\n                NonfungiblePositionManager.INTERFACE.encodeFunctionData('sweepToken', [\n                    token.address,\n                    toHex(tokenAmount),\n                    recipient\n                ])\n            )\n        }\n\n        return calldatas\n    }\n}\n","import styled from 'styled-components/macro'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n    width?: string\n    align?: string\n    justify?: string\n    padding?: string\n    border?: string\n    borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { defaultAbiCoder } from '@ethersproject/abi'\nimport { getCreate2Address } from '@ethersproject/address'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { Token } from '@uniswap/sdk-core'\nimport { FeeAmount, POOL_INIT_CODE_HASH } from '../constants'\n\n/**\n * Computes a pool address\n * @param factoryAddress The Uniswap V3 factory address\n * @param tokenA The first token of the pair, irrespective of sort order\n * @param tokenB The second token of the pair, irrespective of sort order\n * @param fee The fee tier of the pool\n * @returns The pool address\n */\nexport function computePoolAddress({\n    factoryAddress,\n    tokenA,\n    tokenB,\n    fee,\n    initCodeHashManualOverride\n}: {\n    factoryAddress: string\n    tokenA: Token\n    tokenB: Token\n    fee: FeeAmount\n    initCodeHashManualOverride?: string\n}): string {\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n    return getCreate2Address(\n        factoryAddress,\n        keccak256(\n            ['bytes'],\n            [defaultAbiCoder.encode(['address', 'address'], [token0.address, token1.address])]\n        ),\n        initCodeHashManualOverride ?? POOL_INIT_CODE_HASH)\n}\n","import JSBI from 'jsbi'\nimport { NEGATIVE_ONE, ZERO } from '../internalConstants'\n\nexport abstract class LiquidityMath {\n    /**\n     * Cannot be constructed.\n     */\n\n    public static addDelta(x: JSBI, y: JSBI): JSBI {\n        if (JSBI.lessThan(y, ZERO)) {\n            return JSBI.subtract(x, JSBI.multiply(y, NEGATIVE_ONE))\n        } else {\n            return JSBI.add(x, y)\n        }\n    }\n}\n","import { MaxUint256 } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ZERO } from '../internalConstants'\n\nconst TWO = JSBI.BigInt(2)\nconst POWERS_OF_2 = [128, 64, 32, 16, 8, 4, 2, 1].map((pow: number): [number, JSBI] => [\n    pow,\n    JSBI.exponentiate(TWO, JSBI.BigInt(pow))\n])\n\nexport function mostSignificantBit(x: JSBI): number {\n    invariant(JSBI.greaterThan(x, ZERO), 'ZERO')\n    invariant(JSBI.lessThanOrEqual(x, MaxUint256), 'MAX')\n\n    let msb = 0\n    for (const [power, min] of POWERS_OF_2) {\n        if (JSBI.greaterThanOrEqual(x, min)) {\n            x = JSBI.signedRightShift(x, JSBI.BigInt(power))\n            msb += power\n        }\n    }\n    return msb\n}\n","import { BigintIsh } from '@uniswap/sdk-core'\n\n/**\n * Provides information about ticks\n */\nexport interface TickDataProvider {\n    /**\n     * Return information corresponding to a specific tick\n     * @param tick the tick to load\n     */\n    getTick(tick: number): Promise<{ liquidityNet: BigintIsh }>\n\n    /**\n     * Return the next tick that is initialized within a single word\n     * @param tick The current tick\n     * @param lte Whether the next tick should be lte the current tick\n     * @param tickSpacing The tick spacing of the pool\n     */\n    nextInitializedTickWithinOneWord(tick: number, lte: boolean, tickSpacing: number): Promise<[number, boolean]>\n}\n\n/**\n * This tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you\n * do not need to load tick data for your use case.\n */\nexport class NoTickDataProvider implements TickDataProvider {\n    private static ERROR_MESSAGE = 'No tick data provider was given'\n\n    async getTick(_tick: number): Promise<{ liquidityNet: BigintIsh }> {\n        throw new Error(NoTickDataProvider.ERROR_MESSAGE)\n    }\n\n    async nextInitializedTickWithinOneWord(\n        _tick: number,\n        _lte: boolean,\n        _tickSpacing: number\n    ): Promise<[number, boolean]> {\n        throw new Error(NoTickDataProvider.ERROR_MESSAGE)\n    }\n}\n","import { BigintIsh } from '@uniswap/sdk-core'\nimport { TickList } from '../utils/tickList'\nimport { Tick, TickConstructorArgs } from './tick'\nimport { TickDataProvider } from './tickDataProvider'\n\n/**\n * A data provider for ticks that is backed by an in-memory array of ticks.\n */\nexport class TickListDataProvider implements TickDataProvider {\n    private ticks: readonly Tick[]\n\n    constructor(ticks: (Tick | TickConstructorArgs)[], tickSpacing: number) {\n        const ticksMapped: Tick[] = ticks.map(t => (t instanceof Tick ? t : new Tick(t)))\n        TickList.validateList(ticksMapped, tickSpacing)\n        this.ticks = ticksMapped\n    }\n\n    async getTick(tick: number): Promise<{ liquidityNet: BigintIsh; liquidityGross: BigintIsh }> {\n        return TickList.getTick(this.ticks, tick)\n    }\n\n    async nextInitializedTickWithinOneWord(tick: number, lte: boolean, tickSpacing: number): Promise<[number, boolean]> {\n        return TickList.nextInitializedTickWithinOneWord(this.ticks, tick, lte, tickSpacing)\n    }\n}\n","/**\n * Determines if a tick list is sorted\n * @param list The tick list\n * @param comparator The comparator\n * @returns true if sorted\n */\nexport function isSorted<T>(list: Array<T>, comparator: (a: T, b: T) => number): boolean {\n    for (let i = 0; i < list.length - 1; i++) {\n        if (comparator(list[i], list[i + 1]) > 0) {\n            return false\n        }\n    }\n    return true\n}\n","import { BigintIsh } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { Q96 } from '../internalConstants'\n\n/**\n * Returns an imprecise maximum amount of liquidity received for a given amount of token 0.\n * This function is available to accommodate LiquidityAmounts#getLiquidityForAmount0 in the v3 periphery,\n * which could be more precise by at least 32 bits by dividing by Q64 instead of Q96 in the intermediate step,\n * and shifting the subtracted ratio left by 32 bits. This imprecise calculation will likely be replaced in a future\n * v3 router contract.\n * @param sqrtRatioAX96 The price at the lower boundary\n * @param sqrtRatioBX96 The price at the upper boundary\n * @param amount0 The token0 amount\n * @returns liquidity for amount0, imprecise\n */\nfunction maxLiquidityForAmount0Imprecise(sqrtRatioAX96: JSBI, sqrtRatioBX96: JSBI, amount0: BigintIsh): JSBI {\n    if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n        ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n    }\n    const intermediate = JSBI.divide(JSBI.multiply(sqrtRatioAX96, sqrtRatioBX96), Q96)\n    return JSBI.divide(JSBI.multiply(JSBI.BigInt(amount0), intermediate), JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96))\n}\n\n/**\n * Returns a precise maximum amount of liquidity received for a given amount of token 0 by dividing by Q64 instead of Q96 in the intermediate step,\n * and shifting the subtracted ratio left by 32 bits.\n * @param sqrtRatioAX96 The price at the lower boundary\n * @param sqrtRatioBX96 The price at the upper boundary\n * @param amount0 The token0 amount\n * @returns liquidity for amount0, precise\n */\nfunction maxLiquidityForAmount0Precise(sqrtRatioAX96: JSBI, sqrtRatioBX96: JSBI, amount0: BigintIsh): JSBI {\n    if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n        ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n    }\n\n    const numerator = JSBI.multiply(JSBI.multiply(JSBI.BigInt(amount0), sqrtRatioAX96), sqrtRatioBX96)\n    const denominator = JSBI.multiply(Q96, JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96))\n\n    return JSBI.divide(numerator, denominator)\n}\n\n/**\n * Computes the maximum amount of liquidity received for a given amount of token1\n * @param sqrtRatioAX96 The price at the lower tick boundary\n * @param sqrtRatioBX96 The price at the upper tick boundary\n * @param amount1 The token1 amount\n * @returns liquidity for amount1\n */\nfunction maxLiquidityForAmount1(sqrtRatioAX96: JSBI, sqrtRatioBX96: JSBI, amount1: BigintIsh): JSBI {\n    if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n        ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n    }\n    return JSBI.divide(JSBI.multiply(JSBI.BigInt(amount1), Q96), JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96))\n}\n\n/**\n * Computes the maximum amount of liquidity received for a given amount of token0, token1,\n * and the prices at the tick boundaries.\n * @param sqrtRatioCurrentX96 the current price\n * @param sqrtRatioAX96 price at lower boundary\n * @param sqrtRatioBX96 price at upper boundary\n * @param amount0 token0 amount\n * @param amount1 token1 amount\n * @param useFullPrecision if false, liquidity will be maximized according to what the router can calculate,\n * not what core can theoretically support\n */\nexport function maxLiquidityForAmounts(\n    sqrtRatioCurrentX96: JSBI,\n    sqrtRatioAX96: JSBI,\n    sqrtRatioBX96: JSBI,\n    amount0: BigintIsh,\n    amount1: BigintIsh,\n    useFullPrecision: boolean\n): JSBI {\n    if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n        ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n    }\n\n    const maxLiquidityForAmount0 = useFullPrecision ? maxLiquidityForAmount0Precise : maxLiquidityForAmount0Imprecise\n\n    if (JSBI.lessThanOrEqual(sqrtRatioCurrentX96, sqrtRatioAX96)) {\n        return maxLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0)\n    } else if (JSBI.lessThan(sqrtRatioCurrentX96, sqrtRatioBX96)) {\n        const liquidity0 = maxLiquidityForAmount0(sqrtRatioCurrentX96, sqrtRatioBX96, amount0)\n        const liquidity1 = maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioCurrentX96, amount1)\n        return JSBI.lessThan(liquidity0, liquidity1) ? liquidity0 : liquidity1\n    } else {\n        return maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1)\n    }\n}\n","import { BigintIsh, CurrencyAmount, MaxUint256, Percent, Price, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ZERO } from '../internalConstants'\nimport { maxLiquidityForAmounts } from '../utils/maxLiquidityForAmounts'\nimport { tickToPrice } from '../utils/priceTickConversions'\nimport { SqrtPriceMath } from '../utils/sqrtPriceMath'\nimport { TickMath } from '../utils/tickMath'\nimport { encodeSqrtRatioX96 } from '../utils/encodeSqrtRatioX96'\nimport { Pool } from './pool'\n\ninterface PositionConstructorArgs {\n    pool: Pool\n    tickLower: number\n    tickUpper: number\n    liquidity: BigintIsh\n}\n\n/**\n * Represents a position on a Uniswap V3 Pool\n */\nexport class Position {\n    public readonly pool: Pool\n    public readonly tickLower: number\n    public readonly tickUpper: number\n    public readonly liquidity: JSBI\n\n    // cached resuts for the getters\n    private _token0Amount: CurrencyAmount<Token> | null = null\n    private _token1Amount: CurrencyAmount<Token> | null = null\n\n    /**\n     * Constructs a position for a given pool with the given liquidity\n     * @param pool For which pool the liquidity is assigned\n     * @param liquidity The amount of liquidity that is in the position\n     * @param tickLower The lower tick of the position\n     * @param tickUpper The upper tick of the position\n     */\n    public constructor({ pool, liquidity, tickLower, tickUpper }: PositionConstructorArgs) {\n        invariant(tickLower < tickUpper, 'TICK_ORDER')\n        invariant(tickLower >= TickMath.MIN_TICK && tickLower % pool.tickSpacing === 0, 'TICK_LOWER')\n        invariant(tickUpper <= TickMath.MAX_TICK && tickUpper % pool.tickSpacing === 0, 'TICK_UPPER')\n\n        this.pool = pool\n        this.tickLower = tickLower\n        this.tickUpper = tickUpper\n        this.liquidity = JSBI.BigInt(liquidity)\n    }\n\n    private _mintAmounts: Readonly<{ amount0: JSBI; amount1: JSBI }> | null = null\n\n    /**\n     * Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at\n     * the current price for the pool\n     */\n    public get mintAmounts(): Readonly<{ amount0: JSBI; amount1: JSBI }> {\n        if (this._mintAmounts === null) {\n            if (this.pool.tickCurrent < this.tickLower) {\n                return {\n                    amount0: SqrtPriceMath.getAmount0Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        true\n                    ),\n                    amount1: ZERO\n                }\n            } else if (this.pool.tickCurrent < this.tickUpper) {\n                return {\n                    amount0: SqrtPriceMath.getAmount0Delta(\n                        this.pool.sqrtRatioX96,\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        true\n                    ),\n                    amount1: SqrtPriceMath.getAmount1Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        this.pool.sqrtRatioX96,\n                        this.liquidity,\n                        true\n                    )\n                }\n            } else {\n                return {\n                    amount0: ZERO,\n                    amount1: SqrtPriceMath.getAmount1Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        true\n                    )\n                }\n            }\n        }\n        return this._mintAmounts\n    }\n\n    /**\n     * Returns the price of token0 at the lower tick\n     */\n    public get token0PriceLower(): Price<Token, Token> {\n        return tickToPrice(this.pool.token0, this.pool.token1, this.tickLower)\n    }\n\n    /**\n     * Returns the price of token0 at the upper tick\n     */\n    public get token0PriceUpper(): Price<Token, Token> {\n        return tickToPrice(this.pool.token0, this.pool.token1, this.tickUpper)\n    }\n\n    /**\n     * Returns the amount of token0 that this position's liquidity could be burned for at the current pool price\n     */\n    public get amount0(): CurrencyAmount<Token> {\n        if (this._token0Amount === null) {\n            if (this.pool.tickCurrent < this.tickLower) {\n                this._token0Amount = CurrencyAmount.fromRawAmount(\n                    this.pool.token0,\n                    SqrtPriceMath.getAmount0Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        false\n                    )\n                )\n            } else if (this.pool.tickCurrent < this.tickUpper) {\n                this._token0Amount = CurrencyAmount.fromRawAmount(\n                    this.pool.token0,\n                    SqrtPriceMath.getAmount0Delta(\n                        this.pool.sqrtRatioX96,\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        false\n                    )\n                )\n            } else {\n                this._token0Amount = CurrencyAmount.fromRawAmount(this.pool.token0, ZERO)\n            }\n        }\n        return this._token0Amount\n    }\n\n    /**\n     * Returns the amount of token1 that this position's liquidity could be burned for at the current pool price\n     */\n    public get amount1(): CurrencyAmount<Token> {\n        if (this._token1Amount === null) {\n            if (this.pool.tickCurrent < this.tickLower) {\n                this._token1Amount = CurrencyAmount.fromRawAmount(this.pool.token1, ZERO)\n            } else if (this.pool.tickCurrent < this.tickUpper) {\n                this._token1Amount = CurrencyAmount.fromRawAmount(\n                    this.pool.token1,\n                    SqrtPriceMath.getAmount1Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        this.pool.sqrtRatioX96,\n                        this.liquidity,\n                        false\n                    )\n                )\n            } else {\n                this._token1Amount = CurrencyAmount.fromRawAmount(\n                    this.pool.token1,\n                    SqrtPriceMath.getAmount1Delta(\n                        TickMath.getSqrtRatioAtTick(this.tickLower),\n                        TickMath.getSqrtRatioAtTick(this.tickUpper),\n                        this.liquidity,\n                        false\n                    )\n                )\n            }\n        }\n        return this._token1Amount\n    }\n\n    /**\n     * Computes the maximum amount of liquidity received for a given amount of token0, token1,\n     * and the prices at the tick boundaries.\n     * @param pool The pool for which the position should be created\n     * @param tickLower The lower tick of the position\n     * @param tickUpper The upper tick of the position\n     * @param amount0 token0 amount\n     * @param amount1 token1 amount\n     * @param useFullPrecision If false, liquidity will be maximized according to what the router can calculate,\n     * not what core can theoretically support\n     * @returns The amount of liquidity for the position\n     */\n    public static fromAmounts({\n        pool,\n        tickLower,\n        tickUpper,\n        amount0,\n        amount1,\n        useFullPrecision\n    }: {\n        pool: Pool\n        tickLower: number\n        tickUpper: number\n        amount0: BigintIsh\n        amount1: BigintIsh\n        useFullPrecision: boolean\n    }) {\n        const sqrtRatioAX96 = TickMath.getSqrtRatioAtTick(tickLower)\n        const sqrtRatioBX96 = TickMath.getSqrtRatioAtTick(tickUpper)\n        return new Position({\n            pool,\n            tickLower,\n            tickUpper,\n            liquidity: maxLiquidityForAmounts(\n                pool.sqrtRatioX96,\n                sqrtRatioAX96,\n                sqrtRatioBX96,\n                amount0,\n                amount1,\n                useFullPrecision\n            )\n        })\n    }\n\n    /**\n     * Computes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1\n     * @param pool The pool for which the position is created\n     * @param tickLower The lower tick\n     * @param tickUpper The upper tick\n     * @param amount0 The desired amount of token0\n     * @param useFullPrecision If true, liquidity will be maximized according to what the router can calculate,\n     * not what core can theoretically support\n     * @returns The position\n     */\n    public static fromAmount0({\n        pool,\n        tickLower,\n        tickUpper,\n        amount0,\n        useFullPrecision\n    }: {\n        pool: Pool\n        tickLower: number\n        tickUpper: number\n        amount0: BigintIsh\n        useFullPrecision: boolean\n    }) {\n        return Position.fromAmounts({\n            pool,\n            tickLower,\n            tickUpper,\n            amount0,\n            amount1: MaxUint256,\n            useFullPrecision\n        })\n    }\n\n    /**\n     * Computes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0\n     * @param pool The pool for which the position is created\n     * @param tickLower The lower tick\n     * @param tickUpper The upper tick\n     * @param amount1 The desired amount of token1\n     * @returns The position\n     */\n    public static fromAmount1({\n        pool,\n        tickLower,\n        tickUpper,\n        amount1\n    }: {\n        pool: Pool\n        tickLower: number\n        tickUpper: number\n        amount1: BigintIsh\n    }) {\n        // this function always uses full precision,\n        return Position.fromAmounts({\n            pool,\n            tickLower,\n            tickUpper,\n            amount0: MaxUint256,\n            amount1,\n            useFullPrecision: true\n        })\n    }\n\n    /**\n     * Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position\n     * with the given slippage tolerance\n     * @param slippageTolerance Tolerance of unfavorable slippage from the current price\n     * @returns The amounts, with slippage\n     */\n    public mintAmountsWithSlippage(slippageTolerance: Percent): Readonly<{ amount0: JSBI; amount1: JSBI }> {\n        // get lower/upper prices\n        const { sqrtRatioX96Upper, sqrtRatioX96Lower } = this.ratiosAfterSlippage(slippageTolerance)\n\n        // construct counterfactual pools\n        const poolLower = new Pool(\n            this.pool.token0,\n            this.pool.token1,\n            this.pool.fee,\n            sqrtRatioX96Lower,\n            0 /* liquidity doesn't matter */,\n            TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower)\n        )\n        const poolUpper = new Pool(\n            this.pool.token0,\n            this.pool.token1,\n            this.pool.fee,\n            sqrtRatioX96Upper,\n            0 /* liquidity doesn't matter */,\n            TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper)\n        )\n\n        // because the router is imprecise, we need to calculate the position that will be created (assuming no slippage)\n        const positionThatWillBeCreated = Position.fromAmounts({\n            pool: this.pool,\n            tickLower: this.tickLower,\n            tickUpper: this.tickUpper,\n            ...this.mintAmounts, // the mint amounts are what will be passed as calldata\n            useFullPrecision: false\n        })\n\n        // we want the smaller amounts...\n        // ...which occurs at the upper price for amount0...\n        const { amount0 } = new Position({\n            pool: poolUpper,\n            liquidity: positionThatWillBeCreated.liquidity,\n            tickLower: this.tickLower,\n            tickUpper: this.tickUpper\n        }).mintAmounts\n        // ...and the lower for amount1\n        const { amount1 } = new Position({\n            pool: poolLower,\n            liquidity: positionThatWillBeCreated.liquidity,\n            tickLower: this.tickLower,\n            tickUpper: this.tickUpper\n        }).mintAmounts\n\n        return { amount0, amount1 }\n    }\n\n    /**\n     * Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the\n     * position with the given slippage tolerance\n     * @param slippageTolerance tolerance of unfavorable slippage from the current price\n     * @returns The amounts, with slippage\n     */\n    public burnAmountsWithSlippage(slippageTolerance: Percent): Readonly<{ amount0: JSBI; amount1: JSBI }> {\n        // get lower/upper prices\n        const { sqrtRatioX96Upper, sqrtRatioX96Lower } = this.ratiosAfterSlippage(slippageTolerance)\n\n        // construct counterfactual pools\n        const poolLower = new Pool(\n            this.pool.token0,\n            this.pool.token1,\n            this.pool.fee,\n            sqrtRatioX96Lower,\n            0 /* liquidity doesn't matter */,\n            TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower)\n        )\n        const poolUpper = new Pool(\n            this.pool.token0,\n            this.pool.token1,\n            this.pool.fee,\n            sqrtRatioX96Upper,\n            0 /* liquidity doesn't matter */,\n            TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper)\n        )\n\n        // we want the smaller amounts...\n        // ...which occurs at the upper price for amount0...\n        const amount0 = new Position({\n            pool: poolUpper,\n            liquidity: this.liquidity,\n            tickLower: this.tickLower,\n            tickUpper: this.tickUpper\n        }).amount0\n        // ...and the lower for amount1\n        const amount1 = new Position({\n            pool: poolLower,\n            liquidity: this.liquidity,\n            tickLower: this.tickLower,\n            tickUpper: this.tickUpper\n        }).amount1\n\n        return { amount0: amount0.quotient, amount1: amount1.quotient }\n    }\n\n    /**\n     * Returns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentage\n     * @param slippageTolerance The amount by which the price can 'slip' before the transaction will revert\n     * @returns The sqrt ratios after slippage\n     */\n    private ratiosAfterSlippage(slippageTolerance: Percent): { sqrtRatioX96Lower: JSBI; sqrtRatioX96Upper: JSBI } {\n        const priceLower = this.pool.token0Price.asFraction.multiply(new Percent(1).subtract(slippageTolerance))\n        const priceUpper = this.pool.token0Price.asFraction.multiply(slippageTolerance.add(1))\n        let sqrtRatioX96Lower = encodeSqrtRatioX96(priceLower.numerator, priceLower.denominator)\n        if (JSBI.lessThanOrEqual(sqrtRatioX96Lower, TickMath.MIN_SQRT_RATIO)) {\n            sqrtRatioX96Lower = JSBI.add(TickMath.MIN_SQRT_RATIO, JSBI.BigInt(1))\n        }\n        let sqrtRatioX96Upper = encodeSqrtRatioX96(priceUpper.numerator, priceUpper.denominator)\n        if (JSBI.greaterThanOrEqual(sqrtRatioX96Upper, TickMath.MAX_SQRT_RATIO)) {\n            sqrtRatioX96Upper = JSBI.subtract(TickMath.MAX_SQRT_RATIO, JSBI.BigInt(1))\n        }\n        return {\n            sqrtRatioX96Lower,\n            sqrtRatioX96Upper\n        }\n    }\n}\n","import { Currency } from '@uniswap/sdk-core'\n\nimport AlgebraConfig from \"algebra.config\"\n\nexport function currencyId(currency: Currency, chainId: number): string {\n    let chainSymbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        chainSymbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n    }\n\n    if (currency.isNative) return chainSymbol\n    if (currency.isToken) return currency.address\n    throw new Error('invalid currency')\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst MIN_NATIVE_CURRENCY_FOR_GAS: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n    if (!currencyAmount) return undefined\n    if (currencyAmount.currency.isNative) {\n        if (JSBI.greaterThan(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)) {\n            return CurrencyAmount.fromRawAmount(\n                currencyAmount.currency,\n                JSBI.subtract(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)\n            )\n        } else {\n            return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.BigInt(0))\n        }\n    }\n    return currencyAmount\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n    const savedCallback = useRef<() => void>()\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            const current = savedCallback.current\n            current && current()\n        }\n\n        if (delay !== null) {\n            if (leading) tick()\n            const id = setInterval(tick, delay)\n            return () => clearInterval(id)\n        }\n        return undefined\n    }, [delay, leading])\n}\n","import { BigintIsh, Token } from '@uniswap/sdk-core'\nimport { Interface } from '@ethersproject/abi'\n//@ts-ignore\nimport abi from '@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json'\nimport { toHex } from './utils'\n\nexport interface StandardPermitArguments {\n    v: 0 | 1 | 27 | 28\n    r: string\n    s: string\n    amount: BigintIsh\n    deadline: BigintIsh\n}\n\nexport interface AllowedPermitArguments {\n    v: 0 | 1 | 27 | 28\n    r: string\n    s: string\n    nonce: BigintIsh\n    expiry: BigintIsh\n}\n\nexport type PermitOptions = StandardPermitArguments | AllowedPermitArguments\n\nfunction isAllowedPermit(permitOptions: PermitOptions): permitOptions is AllowedPermitArguments {\n    return 'nonce' in permitOptions\n}\n\nexport abstract class SelfPermit {\n    public static INTERFACE: Interface = new Interface(abi.abi)\n\n    protected static encodePermit(token: Token, options: PermitOptions) {\n        return isAllowedPermit(options)\n            ? SelfPermit.INTERFACE.encodeFunctionData('selfPermitAllowed', [\n                token.address,\n                toHex(options.nonce),\n                toHex(options.expiry),\n                options.v,\n                options.r,\n                options.s\n            ])\n            : SelfPermit.INTERFACE.encodeFunctionData('selfPermit', [\n                token.address,\n                toHex(options.amount),\n                toHex(options.deadline),\n                options.v,\n                options.r,\n                options.s\n            ])\n    }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n    INPUT = 'INPUT',\n    OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState =\n    createAction<{\n        field: Field\n        typedValue: string\n        inputCurrencyId?: string\n        outputCurrencyId?: string\n        recipient: string | null\n    }>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { defaultAbiCoder } from '@ethersproject/abi'\nimport { getCreate2Address } from '@ethersproject/address'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { Token } from '@uniswap/sdk-core'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000'\n\nexport const POOL_INIT_CODE_HASH = AlgebraConfig.V3_CONTRACTS[ChainId.BNB].POOL_INIT_CODE_HASH\n\n/**\n * The default factory enabled fee amounts, denominated in hundredths of bips.\n */\nexport enum FeeAmount {\n    LOW = 500,\n    MEDIUM = 500,\n    HIGH = 500,\n}\n\n/**\n * The default factory tick spacings by fee amount.\n */\nexport const TICK_SPACINGS: { [amount in FeeAmount]: number } = {\n    [FeeAmount.LOW]: 60,\n    [FeeAmount.MEDIUM]: 60,\n    [FeeAmount.HIGH]: 60\n}\n\n/**\n * Computes a pool address\n * @param poolDeployer The QuickSwap factory address\n * @param tokenA The first token of the pair, irrespective of sort order\n * @param tokenB The second token of the pair, irrespective of sort order\n * @param fee The fee tier of the pool\n * @returns The pool address\n */\nexport function computePoolAddress({\n    poolDeployer,\n    tokenA,\n    tokenB,\n    initCodeHashManualOverride\n}: {\n    poolDeployer: string\n    tokenA: Token\n    tokenB: Token\n    initCodeHashManualOverride?: string\n}): string {\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n    return getCreate2Address(\n        poolDeployer,\n        keccak256(\n            ['bytes'],\n            [defaultAbiCoder.encode(['address', 'address'], [token0.address, token1.address])]\n        ),\n        initCodeHashManualOverride ?? POOL_INIT_CODE_HASH\n    )\n}\n","function getNetworkOnline() {\n    return navigator.onLine\n}\n\nexport const useInternet = () => {\n    return getNetworkOnline()\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n    const debouncedName = useDebounce(ensName, 200)\n    const ensNodeArgument = useMemo(() => {\n        if (!debouncedName) return [undefined]\n        try {\n            return debouncedName ? [namehash(debouncedName)] : [undefined]\n        } catch (error) {\n            return [undefined]\n        }\n    }, [debouncedName])\n    const registrarContract = useENSRegistrarContract(false)\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n    const resolverAddressResult = resolverAddress.result?.[0]\n    const resolverContract = useENSResolverContract(\n        resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n        false\n    )\n    const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n    const changed = debouncedName !== ensName\n    return {\n        address: changed ? null : addr.result?.[0] ?? null,\n        loading: changed || resolverAddress.loading || addr.loading\n    }\n}\n","export const stringToColour = (str: string) => {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash)\n    }\n    let colour = '#'\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF\n        colour += ('00' + value.toString(16)).substr(-2)\n    }\n    return hexToHSL(colour)\n}\n\nfunction hexToHSL(H: string) {\n    // Convert hex to RGB first\n    let r: any = 0, g: any = 0, b: any = 0\n    if (H.length == 4) {\n        r = '0x' + H[1] + H[1]\n        g = '0x' + H[2] + H[2]\n        b = '0x' + H[3] + H[3]\n    } else if (H.length == 7) {\n        r = '0x' + H[1] + H[2]\n        g = '0x' + H[3] + H[4]\n        b = '0x' + H[5] + H[6]\n    }\n    // Then to HSL\n    r /= 255\n    g /= 255\n    b /= 255\n    const cmin = Math.min(r, g, b),\n        cmax = Math.max(r, g, b),\n        delta = cmax - cmin\n    let h: any = 0,\n        s: any = 0,\n        l: any = 0\n\n    if (delta == 0)\n        h = 0\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6\n    else if (cmax == g)\n        h = (b - r) / delta + 2\n    else\n        h = (r - g) / delta + 4\n\n    h = Math.round(h * 60)\n\n    if (h < 0)\n        h += 360\n\n    l = (cmax + cmin) / 2\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1))\n    s = +(s * 100).toFixed(1)\n    l = +(l * 100).toFixed(1)\n\n    return {\n        background: 'hsl(' + h + ', 70%, 80%, 1)',\n        text: 'hsl(' + h + ', 70%, 20%, 1)',\n        border: 'hsl(' + h + ', 70%, 50%, 1)'\n    }\n}\n","import { TokenList } from \"@uniswap/token-lists/dist/types\";\nimport { Currency, Token } from \"@uniswap/sdk-core\";\nimport { CloseIcon, TYPE } from \"theme\";\nimport Card from \"components/Card\";\nimport { AutoColumn } from \"components/Column\";\nimport { RowBetween } from \"components/Row\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { ArrowLeft } from \"react-feather\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { SectionBreak } from \"../swap/styled\";\nimport { useAddUserToken } from \"state/user/hooks\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { ExternalLink } from \"../../theme\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport { AddressText, PaddedColumn } from \"./styled\";\nimport { Plural, Trans } from \"@lingui/macro\";\nimport { WrappedCurrency } from \"../../models/types\";\n\ninterface ImportProps {\n    tokens: Token[];\n    list?: TokenList;\n    onBack?: () => void;\n    onDismiss?: () => void;\n    handleCurrencySelect?: (currency: Currency) => void;\n}\n\nexport function ImportToken({ tokens, onBack, onDismiss, handleCurrencySelect }: ImportProps) {\n    const { chainId } = useActiveWeb3React();\n\n    const addToken = useAddUserToken();\n\n    return (\n        <div className={\"w-100 pos-r\"}>\n            <PaddedColumn gap=\"14px\" style={{ width: \"100%\", flex: \"1 1\" }}>\n                <RowBetween>\n                    {onBack ? <ArrowLeft style={{ cursor: \"pointer\" }} onClick={onBack} /> : <div />}\n                    <TYPE.mediumHeader color={\"var(--text1)\"}>\n                        <Plural value={tokens.length} one=\"Import token\" other=\"Import tokens\" />\n                    </TYPE.mediumHeader>\n                    {onDismiss ? <CloseIcon onClick={onDismiss} /> : <div />}\n                </RowBetween>\n            </PaddedColumn>\n            <SectionBreak />\n            <AutoColumn gap=\"md\" style={{ padding: \"1rem\" }}>\n                {tokens.map((token) => {\n                    return (\n                        <Card backgroundColor={\"var(--panel1)\"} key={\"import\" + token.address} className=\".token-warning-container\" padding=\"2rem\">\n                            <AutoColumn gap=\"10px\" justify=\"center\">\n                                <CurrencyLogo currency={token as WrappedCurrency} size={\"32px\"} />\n                                <AutoColumn gap=\"4px\" justify=\"center\">\n                                    <TYPE.body ml=\"8px\" mr=\"8px\" fontWeight={500} fontSize={20}>\n                                        {token.symbol}\n                                    </TYPE.body>\n                                    <TYPE.body color={\"var(--text1)\"} fontWeight={400} fontSize={14}>\n                                        {token.name}\n                                    </TYPE.body>\n                                </AutoColumn>\n                                {chainId && (\n                                    <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                                        <AddressText fontSize={12}>{token.address}</AddressText>\n                                    </ExternalLink>\n                                )}\n                            </AutoColumn>\n                        </Card>\n                    );\n                })}\n                <ButtonPrimary\n                    altDisabledStyle={true}\n                    $borderRadius=\"20px\"\n                    padding=\"10px 1rem\"\n                    onClick={() => {\n                        tokens.map((token) => addToken(token));\n                        handleCurrencySelect && handleCurrencySelect(tokens[0]);\n                    }}\n                    className=\".token-dismiss-button\"\n                >\n                    <Trans>Import</Trans>\n                </ButtonPrimary>\n            </AutoColumn>\n        </div>\n    );\n}\n","import AlgebraConfig from \"algebra.config\"\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId: number): number | undefined {\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        return chainId\n    }\n    return undefined\n}\n","import styled, { createGlobalStyle } from \"styled-components/macro\";\n\nexport const StandardPageWrapper = styled.div`\n    padding-top: 160px;\n    width: 100%;\n`;\n\nexport const IframeBodyWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-top: 3rem;\n    padding: 1rem;\n    align-items: center;\n    flex: 1;\n    z-index: 1;\n`;\nconst size = {\n    mobileS: \"320px\",\n    mobileM: \"375px\",\n    mobileL: \"425px\",\n    tablet: \"768px\",\n    laptop: \"1024px\",\n    laptopL: \"1440px\",\n    desktop: \"2560px\",\n};\n\nexport const deviceSizes = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`,\n};\n\n//App\nexport const AppWrapper = styled.div`\n    display: flex;\n    flex-flow: column;\n    align-items: flex-start;\n    height: 100%;\n`;\nexport const AppBodyWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 0 16px 0 16px;\n    align-items: center;\n    flex: 1;\n    z-index: 1;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 0 16px 16px 16px;\n  `};\n`;\nexport const HeaderWrapper = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    width: 100%;\n    justify-content: space-between;\n    top: 0;\n    z-index: 2;\n`;\nexport const Marginer = styled.div``;\nexport const BugReportLink = styled.a`\n    display: flex;\n    color: var(--white);\n    text-decoration: none;\n    font-size: 14px;\n\n    &:hover {\n        box-shadow: inset 0 -1px white;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n     display: none;\n  `}\n`;\nexport const NetworkFailedCard = styled.div`\n    position: fixed;\n    bottom: 3rem;\n    right: 1rem;\n    padding: 8px;\n    border-radius: 8px;\n    background-color: var(--dark-blue);\n    z-index: 5;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    position: unset;\n    width: calc(100% - 2rem);\n    left: unset;\n    right: unset;\n    margin-bottom: 0;\n    margin-top: 0.5rem;\n  `}\n`;\nexport const InternetError = styled.div`\n    width: 100%;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    h2 {\n        color: white;\n        font-size: 40px;\n        text-align: center;\n    }\n`;\nexport const GlobalStyle = createGlobalStyle`\n  button {\n    cursor: pointer;\n  }\n`;\n\n//AppBody\nexport const BodyWrapper = styled.div<{ margin?: string; maxWidth?: string }>`\n    position: relative;\n    max-width: ${({ maxWidth }) => maxWidth ?? \"610px\"};\n    width: 100%;\n    border-radius: 20px;\n    margin: 6rem auto auto;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin-top: 1rem;\n    border-radius: 20px;\n  `}\n    &::before,\n  &::after {\n        display: block;\n        content: \"\";\n        position: absolute;\n    }\n\n    &::after {\n        right: 0;\n        width: 51px;\n        height: 90px;\n        bottom: -45px;\n    }\n\n    &::before {\n        bottom: -94px;\n        width: 62px;\n        height: 140px;\n    }\n`;\n","import { Trans } from \"@lingui/macro\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport { COMMON_BASES } from \"../../constants/routing\";\nimport { currencyId } from \"../../utils/currencyId\";\nimport { AutoRow } from \"../Row\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport \"./index.scss\";\n\nimport AlgebraConfig from \"algebra.config\";\n\ninterface CommonBasesProps {\n    selectedCurrency?: Currency | null;\n    onSelect: (currency: Currency) => void;\n}\n\nexport default function CommonBases({ onSelect, selectedCurrency }: CommonBasesProps) {\n    const { chainId } = useActiveWeb3React();\n\n    const bases = COMMON_BASES[AlgebraConfig.CHAIN_PARAMS[chainId || 56].chainId] as WrappedCurrency[];\n\n    return bases.length > 0 ? (\n        <div className={\"mv-1 common-bases\"}>\n            <AutoRow gap=\"3px\">\n                {bases.map((currency) => {\n                    const isSelected = selectedCurrency?.equals(currency);\n                    return (\n                        <button\n                            className={\"br-8 bg-t f f-ac p-05 hover-op trans-op\"}\n                            onClick={() => !isSelected && onSelect(currency)}\n                            disabled={isSelected}\n                            key={currencyId(currency, chainId || AlgebraConfig.CHAIN_PARAMS[chainId || 56].chainId)}\n                        >\n                            <CurrencyLogo currency={currency} style={{ marginRight: 8 }} />\n                            <span>{currency.symbol}</span>\n                        </button>\n                    );\n                })}\n            </AutoRow>\n        </div>\n    ) : null;\n}\n","import { CSSProperties } from \"react\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { AutoRow, RowFixed } from \"components/Row\";\nimport { AutoColumn } from \"components/Column\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { TYPE } from \"theme\";\nimport useTheme from \"hooks/useTheme\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { useIsTokenActive, useIsUserAddedToken } from \"hooks/Tokens\";\nimport { Trans } from \"@lingui/macro\";\nimport { CheckIcon, NameOverflow, TokenSection } from \"./styled\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport \"./index.scss\";\n\ninterface ImportRowProps {\n    token: Token;\n    style?: CSSProperties;\n    dim?: boolean;\n    showImportView: () => void;\n    setImportToken: (token: Token) => void;\n}\n\nexport default function ImportRow({ token, style, dim, showImportView, setImportToken }: ImportRowProps) {\n    const theme = useTheme();\n\n    // check if already active on list or local storage tokens\n    const isAdded = useIsUserAddedToken(token);\n    const isActive = useIsTokenActive(token);\n\n    return (\n        <div className={\"currency-row flex-s-between p-1 br-8 mv-05\"}>\n            <div className={\"f f-ac\"}>\n                <CurrencyLogo currency={token as WrappedCurrency} size={\"24px\"} style={{ opacity: dim ? \"0.6\" : \"1\" }} />\n                <div className={\"f f-ac ml-05\"}>\n                    {token.symbol}\n                    <div className={\"fs-075 c-p l ml-05\"} title={token.name}>\n                        {token.name}\n                    </div>\n                </div>\n            </div>\n            {!isActive && !isAdded ? (\n                <button\n                    className={\"btn primary br-8 w-fc pv-05 ph-075 fs-085\"}\n                    onClick={() => {\n                        setImportToken && setImportToken(token);\n                        showImportView();\n                    }}\n                >\n                    <Trans>Import</Trans>\n                </button>\n            ) : (\n                <RowFixed style={{ minWidth: \"fit-content\" }}>\n                    <CheckIcon />\n                    <TYPE.main color={\"var(--green1)\"}>\n                        <Trans>Active</Trans>\n                    </TYPE.main>\n                </RowFixed>\n            )}\n        </div>\n    );\n}\n","import { Trans } from \"@lingui/macro\";\nimport { Currency, Token } from \"@uniswap/sdk-core\";\nimport { CSSProperties, MutableRefObject, useCallback, useMemo } from \"react\";\nimport { FixedSizeList } from \"react-window\";\nimport { Text } from \"rebass\";\nimport { useCombinedActiveList } from \"../../state/lists/hooks\";\nimport { WrappedTokenInfo } from \"../../state/lists/wrappedTokenInfo\";\nimport { TYPE } from \"../../theme\";\nimport { useIsUserAddedToken } from \"../../hooks/Tokens\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { MouseoverTooltip } from \"../Tooltip\";\nimport { isTokenOnList } from \"../../utils\";\nimport ImportRow from \"./ImportRow\";\nimport { LightGreyCard } from \"components/Card\";\nimport QuestionHelper from \"components/QuestionHelper\";\nimport useTheme from \"hooks/useTheme\";\nimport { FixedContentRow, Tag, TagContainer } from \"./styled\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport \"./index.scss\";\nimport { useActiveWeb3React } from \"hooks/web3\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport { ChainId } from \"constants/addresses\";\n\nfunction currencyKey(currency: Currency): string {\n    return currency.isToken ? currency.address : \"WNATIVE\";\n}\n\nfunction TokenTags({ currency }: { currency: Currency }) {\n    if (!(currency instanceof WrappedTokenInfo)) {\n        return <span />;\n    }\n\n    const tags = currency.tags;\n    if (!tags || tags.length === 0) return <span />;\n\n    const tag = tags[0];\n\n    return (\n        <TagContainer>\n            <MouseoverTooltip text={tag.description}>\n                <Tag key={tag.id}>{tag.name}</Tag>\n            </MouseoverTooltip>\n            {tags.length > 1 ? (\n                <MouseoverTooltip\n                    text={tags\n                        .slice(1)\n                        .map(({ name, description }) => `${name}: ${description}`)\n                        .join(\"; \\n\")}\n                >\n                    <Tag>...</Tag>\n                </MouseoverTooltip>\n            ) : null}\n        </TagContainer>\n    );\n}\n\ninterface CurrencyRowProps {\n    currency: Currency;\n    onSelect: () => void;\n    isSelected: boolean;\n    otherSelected: boolean;\n    style: CSSProperties;\n    showCurrencyAmount?: boolean;\n}\n\nfunction CurrencyRow({ currency, onSelect, isSelected, otherSelected, style }: CurrencyRowProps) {\n    const key = currencyKey(currency);\n    const selectedTokenList = useCombinedActiveList();\n    const isOnSelectedList = isTokenOnList(selectedTokenList, currency.isToken ? currency : undefined);\n    const customAdded = useIsUserAddedToken(currency);\n\n    const { chainId } = useActiveWeb3React();\n\n    // only show add or remove buttons if not on selected list\n    return (\n        <div className={`currency-row flex-s-between p-1 br-8 mv-05 token-item-${key}`} onClick={() => (isSelected ? null : onSelect())} data-disabled={isSelected} data-selected={otherSelected}>\n            <div className={\"f f-ac\"}>\n                <CurrencyLogo currency={currency as WrappedCurrency} size={\"24px\"} />\n                <div className={\"f c ml-05\"}>\n                    <Text title={currency.name} fontWeight={500}>\n                        {currency.symbol}\n                    </Text>\n                    <span className={\"fs-075\"}>\n                        {!currency.isNative && !isOnSelectedList && customAdded ? (\n                            <Trans>{currency.name} • Added by user</Trans>\n                        ) : (\n                            AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol\n                        )}\n                    </span>\n                </div>\n            </div>\n            <TokenTags currency={currency} />\n        </div>\n    );\n}\n\nconst BREAK_LINE = \"BREAK\";\ntype BreakLine = typeof BREAK_LINE;\n\nfunction isBreakLine(x: unknown): x is BreakLine {\n    return x === BREAK_LINE;\n}\n\nfunction BreakLineComponent({ style }: { style: CSSProperties }) {\n    const theme = useTheme();\n    return (\n        <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" $borderRadius=\"8px\">\n                <RowBetween>\n                    <RowFixed>\n                        <TYPE.main ml=\"6px\" fontSize=\"12px\" color={\"var(--text1)\"}>\n                            <Trans>Expanded results from inactive Token Lists</Trans>\n                        </TYPE.main>\n                    </RowFixed>\n                    <QuestionHelper text={<Trans>Tokens from inactive lists. Import specific tokens below or click Manage to activate more lists.</Trans>} />\n                </RowBetween>\n            </LightGreyCard>\n        </FixedContentRow>\n    );\n}\n\ninterface CurrenctListProps {\n    height: number;\n    currencies: Currency[];\n    otherListTokens?: WrappedTokenInfo[];\n    selectedCurrency?: Currency | null;\n    onCurrencySelect: (currency: Currency) => void;\n    otherCurrency?: Currency | null;\n    fixedListRef?: MutableRefObject<FixedSizeList | undefined>;\n    showImportView: () => void;\n    setImportToken: (token: Token) => void;\n    showCurrencyAmount?: boolean;\n}\n\nexport default function CurrencyList({\n    height,\n    currencies,\n    otherListTokens,\n    selectedCurrency,\n    onCurrencySelect,\n    otherCurrency,\n    fixedListRef,\n    showImportView,\n    setImportToken,\n    showCurrencyAmount,\n}: CurrenctListProps) {\n    const itemData: (Currency | BreakLine)[] = useMemo(() => {\n        if (otherListTokens && otherListTokens?.length > 0) {\n            return [...currencies, BREAK_LINE, ...otherListTokens];\n        }\n        return currencies;\n    }, [currencies, otherListTokens]);\n\n    const Row = useCallback(\n        function TokenRow({ data, index, style }: any) {\n            const row: Currency | BreakLine = data[index];\n\n            if (isBreakLine(row)) {\n                return <BreakLineComponent style={style} />;\n            }\n\n            const currency = row;\n\n            const isSelected = Boolean(currency && selectedCurrency && selectedCurrency.equals(currency));\n            const otherSelected = Boolean(currency && otherCurrency && otherCurrency.equals(currency));\n            const handleSelect = () => currency && onCurrencySelect(currency);\n\n            const token = currency?.wrapped;\n\n            const showImport = index > currencies.length;\n\n            if (showImport && token) {\n                return <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />;\n            } else if (currency) {\n                return <CurrencyRow style={style} currency={currency} isSelected={isSelected} onSelect={handleSelect} otherSelected={otherSelected} showCurrencyAmount={showCurrencyAmount} />;\n            } else {\n                return null;\n            }\n        },\n        [currencies.length, onCurrencySelect, otherCurrency, selectedCurrency, setImportToken, showImportView, showCurrencyAmount]\n    );\n\n    const itemKey = useCallback((index: number, data: typeof itemData) => {\n        const currency = data[index];\n        if (isBreakLine(currency)) return BREAK_LINE;\n        return currencyKey(currency);\n    }, []);\n\n    return (\n        <FixedSizeList style={{ overflow: \"unset\" }} height={height} ref={fixedListRef as any} width=\"100%\" itemData={itemData} itemCount={itemData.length} itemSize={56} itemKey={itemKey}>\n            {Row}\n        </FixedSizeList>\n    );\n}\n","import { useCallback, useState } from 'react'\n\nexport default function useToggle(initialState = false): [boolean, () => void] {\n    const [state, setState] = useState(initialState)\n    const toggle = useCallback(() => setState((state) => !state), [])\n    return [state, toggle]\n}\n","import { Currency, Token } from \"@uniswap/sdk-core\";\nimport { KeyboardEvent, RefObject, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { FixedSizeList } from \"react-window\";\nimport { ExtendedEther } from \"../../constants/tokens\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { useAllTokens, useIsUserAddedToken, useSearchInactiveTokenLists, useToken } from \"../../hooks/Tokens\";\nimport { CloseIcon, TYPE } from \"../../theme\";\nimport { isAddress } from \"../../utils\";\nimport Column from \"../Column\";\nimport CommonBases from \"./CommonBases\";\nimport CurrencyList from \"./CurrencyList\";\nimport { filterTokens, useSortedTokensByQuery } from \"./filtering\";\nimport { useTokenComparator } from \"./sorting\";\nimport { SearchInput } from \"./styled\";\nimport useToggle from \"hooks/useToggle\";\nimport { useOnClickOutside } from \"hooks/useOnClickOutside\";\nimport useTheme from \"hooks/useTheme\";\nimport ImportRow from \"./ImportRow\";\nimport useDebounce from \"hooks/useDebounce\";\nimport ReactGA from \"react-ga\";\n\ninterface CurrencySearchProps {\n    isOpen: boolean;\n    onDismiss: () => void;\n    selectedCurrency?: Currency | null;\n    onCurrencySelect: (currency: Currency) => void;\n    otherSelectedCurrency?: Currency | null;\n    showCommonBases?: boolean;\n    showCurrencyAmount?: boolean;\n    disableNonToken?: boolean;\n    showManageView: () => void;\n    showImportView: () => void;\n    setImportToken: (token: Token) => void;\n}\n\nexport function CurrencySearch({\n    selectedCurrency,\n    onCurrencySelect,\n    otherSelectedCurrency,\n    showCommonBases,\n    showCurrencyAmount,\n    disableNonToken,\n    onDismiss,\n    isOpen,\n    showImportView,\n    setImportToken,\n}: CurrencySearchProps) {\n    const { chainId } = useActiveWeb3React();\n    const theme = useTheme();\n\n    // refs for fixed size lists\n    const fixedList = useRef<FixedSizeList>();\n\n    const [searchQuery, setSearchQuery] = useState<string>(\"\");\n    const debouncedQuery = useDebounce(searchQuery, 200);\n\n    const [invertSearchOrder] = useState<boolean>(false);\n\n    const allTokens = useAllTokens();\n\n    // if they input an address, use it\n    const isAddressSearch = isAddress(debouncedQuery);\n\n    const searchToken = useToken(debouncedQuery);\n\n    const searchTokenIsAdded = useIsUserAddedToken(searchToken);\n\n    useEffect(() => {\n        if (isAddressSearch) {\n            ReactGA.event({\n                category: \"Currency Select\",\n                action: \"Search by address\",\n                label: isAddressSearch,\n            });\n        }\n    }, [isAddressSearch]);\n\n    const tokenComparator = useTokenComparator(invertSearchOrder);\n\n    const filteredTokens: Token[] = useMemo(() => {\n        return filterTokens(Object.values(allTokens), debouncedQuery);\n    }, [allTokens, debouncedQuery]);\n\n    const sortedTokens: Token[] = useMemo(() => {\n        return filteredTokens.sort(tokenComparator);\n    }, [filteredTokens, tokenComparator]);\n\n    const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery);\n\n    const ether = useMemo(() => chainId && ExtendedEther.onChain(chainId), [chainId]);\n\n    const filteredSortedTokensWithETH: Currency[] = useMemo(() => {\n        const s = debouncedQuery.toLowerCase().trim();\n        if (s === \"w\" || s === \"we\" || s === \"wet\" || s === \"weth\") {\n            return ether ? [ether, ...filteredSortedTokens] : filteredSortedTokens;\n        }\n        return filteredSortedTokens;\n    }, [debouncedQuery, ether, filteredSortedTokens]);\n\n    const handleCurrencySelect = useCallback(\n        (currency: Currency) => {\n            onCurrencySelect(currency);\n            onDismiss();\n        },\n        [onDismiss, onCurrencySelect]\n    );\n\n    // clear the input on open\n    useEffect(() => {\n        if (isOpen) setSearchQuery(\"\");\n    }, [isOpen]);\n\n    // manage focus on modal show\n    const inputRef = useRef<HTMLInputElement>();\n    const handleInput = useCallback((event) => {\n        const input = event.target.value;\n        const checksummedInput = isAddress(input);\n        setSearchQuery(checksummedInput || input);\n        fixedList.current?.scrollTo(0);\n    }, []);\n\n    const handleEnter = useCallback(\n        (e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === \"Enter\") {\n                const s = debouncedQuery.toLowerCase().trim();\n                if (s === \"weth\" && ether) {\n                    handleCurrencySelect(ether);\n                } else if (filteredSortedTokensWithETH.length > 0) {\n                    if (filteredSortedTokensWithETH[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() || filteredSortedTokensWithETH.length === 1) {\n                        handleCurrencySelect(filteredSortedTokensWithETH[0]);\n                    }\n                }\n            }\n        },\n        [debouncedQuery, ether, filteredSortedTokensWithETH, handleCurrencySelect]\n    );\n\n    // menu ui\n    const [open, toggle] = useToggle(false);\n    const node = useRef<HTMLDivElement>();\n    useOnClickOutside(node, open ? toggle : undefined);\n\n    // if no results on main list, show option to expand into inactive\n    const filteredInactiveTokens = useSearchInactiveTokenLists(filteredTokens.length === 0 || (debouncedQuery.length > 2 && !isAddressSearch) ? debouncedQuery : undefined);\n\n    return (\n        <div className={\"w-100\"}>\n            <div>\n                <div className={\"flex-s-between mb-1\"}>\n                    <Trans>Select a token</Trans>\n                    <CloseIcon onClick={onDismiss} />\n                </div>\n                <SearchInput\n                    type=\"text\"\n                    id=\"token-search-input\"\n                    placeholder={t`Search name or paste address`}\n                    autoComplete=\"off\"\n                    value={searchQuery}\n                    ref={inputRef as RefObject<HTMLInputElement>}\n                    onChange={handleInput}\n                    onKeyDown={handleEnter}\n                />\n                {showCommonBases && <CommonBases onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />}\n            </div>\n            {searchToken && !searchTokenIsAdded ? (\n                <div>\n                    <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n                </div>\n            ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n                <div className={\"h-200\"} style={{ overflow: \"auto\" }}>\n                    <CurrencyList\n                        height={200}\n                        currencies={disableNonToken ? filteredSortedTokens : filteredSortedTokensWithETH}\n                        otherListTokens={filteredInactiveTokens}\n                        onCurrencySelect={handleCurrencySelect}\n                        otherCurrency={otherSelectedCurrency}\n                        selectedCurrency={selectedCurrency}\n                        fixedListRef={fixedList}\n                        showImportView={showImportView}\n                        setImportToken={setImportToken}\n                        showCurrencyAmount={showCurrencyAmount}\n                    />\n                </div>\n            ) : (\n                <Column style={{ padding: \"20px\", height: \"auto\" }}>\n                    <TYPE.main color={\"var(--text3)\"} textAlign=\"center\" mb=\"20px\">\n                        <Trans>No results found.</Trans>\n                    </TYPE.main>\n                </Column>\n            )}\n        </div>\n    );\n}\n","import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: CurrencyAmount<Currency>, balanceB?: CurrencyAmount<Currency>) {\n    if (balanceA && balanceB) {\n        return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n    } else if (balanceA && balanceA.greaterThan('0')) {\n        return -1\n    } else if (balanceB && balanceB.greaterThan('0')) {\n        return 1\n    }\n    return 0\n}\n\nfunction getTokenComparator(balances: {\n    [tokenAddress: string]: CurrencyAmount<Currency> | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n    return function sortTokens(tokenA: Token, tokenB: Token): number {\n        // -1 = a is first\n        // 1 = b is first\n\n        // sort by balances\n        const balanceA = balances[tokenA.address]\n        const balanceB = balances[tokenB.address]\n\n        const balanceComp = balanceComparator(balanceA, balanceB)\n        if (balanceComp !== 0) return balanceComp\n\n        if (tokenA.symbol && tokenB.symbol) {\n            // sort by symbol\n            return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n        } else {\n            return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n        }\n    }\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n    const balances = useAllTokenBalances()\n    const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n    return useMemo(() => {\n        if (inverted) {\n            return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n        } else {\n            return comparator\n        }\n    }, [inverted, comparator])\n}\n","/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n    const protocol = uri.split(':')[0].toLowerCase()\n    switch (protocol) {\n        case 'https':\n            return [uri]\n        case 'http':\n            return ['https' + uri.substr(4), uri]\n        case 'ipfs':\n            const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n            return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n        case 'ipns':\n            const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n            return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n        default:\n            return []\n    }\n}\n","import { useLayoutEffect, useState } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token } from '@uniswap/sdk-core'\nimport uriToHttp from 'utils/uriToHttp'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n    if (token.chainId !== 1) {\n        return Promise.resolve('#FAAB14')\n    }\n\n    const path = `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n    return Vibrant.from(path)\n        .getPalette()\n        .then((palette) => {\n            if (palette?.Vibrant) {\n                let detectedHex = palette.Vibrant.hex\n                let AAscore = hex(detectedHex, '#FFF')\n                while (AAscore < 3) {\n                    detectedHex = shade(0.005, detectedHex)\n                    AAscore = hex(detectedHex, '#FFF')\n                }\n                return detectedHex\n            }\n            return null\n        })\n        .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n    const formattedPath = uriToHttp(uri)[0]\n\n    return Vibrant.from(formattedPath)\n        .getPalette()\n        .then((palette) => {\n            if (palette?.Vibrant) {\n                return palette.Vibrant.hex\n            }\n            return null\n        })\n        .catch(() => null)\n}\n\nexport function useColor(token?: Token) {\n    const [color, setColor] = useState<string>('#2172E5')\n\n    useLayoutEffect(() => {\n        let stale = false\n\n        if (token) {\n            getColorFromToken(token).then((tokenColor) => {\n                if (!stale && tokenColor !== null) {\n                    setColor(tokenColor)\n                }\n            })\n        }\n\n        return () => {\n            stale = true\n            setColor('#2172E5')\n        }\n    }, [token])\n\n    return color\n}\n\nexport function useListColor(listImageUri?: string) {\n    const [color, setColor] = useState('#2172E5')\n\n    useLayoutEffect(() => {\n        let stale = false\n\n        if (listImageUri) {\n            getColorFromUriPath(listImageUri).then((color) => {\n                if (!stale && color !== null) {\n                    setColor(color)\n                }\n            })\n        }\n\n        return () => {\n            stale = true\n            setColor('#2172E5')\n        }\n    }, [listImageUri])\n\n    return color\n}\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\n    //TODO\n\n    const urls = uriToHttp(listUrl)\n    for (let i = 0; i < urls.length; i++) {\n        const url = urls[i]\n        const isLast = i === urls.length - 1\n        let response\n        try {\n            response = await fetch(url, { credentials: 'omit' })\n        } catch (error) {\n            console.debug('Failed to fetch list', listUrl, error)\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n            continue\n        }\n\n        if (!response.ok) {\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n            continue\n        }\n\n        const json = await response.json()\n        if (!tokenListValidator(json)) {\n            const validationErrors: string =\n                tokenListValidator.errors?.reduce<string>((memo, error) => {\n                    const add = `${error.dataPath} ${error.message ?? ''}`\n                    return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n                }, '') ?? 'unknown error'\n            throw new Error(`Token list failed validation: ${validationErrors}`)\n        }\n        return json\n    }\n    throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n    {\n        constant: true,\n        inputs: [\n            {\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'resolver',\n        outputs: [\n            {\n                name: 'resolverAddress',\n                type: 'address'\n            }\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function'\n    }\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n    {\n        constant: true,\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'node',\n                type: 'bytes32'\n            }\n        ],\n        name: 'contenthash',\n        outputs: [\n            {\n                internalType: 'bytes',\n                name: '',\n                type: 'bytes'\n            }\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function'\n    }\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n    return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n    const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n    const hash = namehash(ensName)\n    const resolverAddress = await ensRegistrarContract.resolver(hash)\n    return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { getNetworkLibrary } from '../connectors'\nimport { useAppDispatch } from 'state/hooks'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\nimport { useActiveWeb3React } from './web3'\n\nexport function useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n    const { chainId, library } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n\n    const ensResolver = useCallback(\n        async (ensName: string) => {\n            if (!library || chainId !== 1) {\n                const networkLibrary = getNetworkLibrary()\n                const network = await networkLibrary.getNetwork()\n                if (networkLibrary && network.chainId === 1) {\n                    return resolveENSContentHash(ensName, networkLibrary)\n                }\n                throw new Error('Could not construct mainnet ENS resolver')\n            }\n            return resolveENSContentHash(ensName, library)\n        },\n        [chainId, library]\n    )\n\n    // note: prevent dispatch if using for list search or unsupported list\n    return useCallback(\n        async (listUrl: string, sendDispatch = true) => {\n            const requestId = nanoid()\n            sendDispatch && dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n            return getTokenList(listUrl)\n                .then((tokenList) => {\n                    sendDispatch && dispatch(fetchTokenList.fulfilled({\n                        url: listUrl,\n                        tokenList,\n                        requestId\n                    }))\n                    return tokenList\n                })\n                .catch((error) => {\n                    console.debug(`Failed to get list at url ${listUrl}`, error)\n                    sendDispatch && dispatch(fetchTokenList.rejected({\n                        url: listUrl,\n                        requestId,\n                        errorMessage: error.message\n                    }))\n                    throw error\n                })\n        },\n        [dispatch, ensResolver]\n    )\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n    const match = ensAddress.match(ENS_NAME_REGEX)\n    if (!match) return undefined\n    return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n    hex = hex.startsWith('0x') ? hex.substr(2) : hex\n    if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n    const arr = new Uint8Array(hex.length / 2)\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n    }\n    return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder('utf-8')\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n    const buff = hexToUint8Array(contenthash)\n    const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n    switch (codec) {\n        case 'ipfs-ns': {\n            const data = rmPrefix(buff as Buffer)\n            const cid = new CID(data)\n            return `ipfs://${toB58String(cid.multihash)}`\n        }\n        case 'ipns-ns': {\n            const data = rmPrefix(buff as Buffer)\n            const cid = new CID(data)\n            const multihash = decode(cid.multihash)\n            if (multihash.name === 'identity') {\n                return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n            } else {\n                return `ipns://${toB58String(cid.multihash)}`\n            }\n        }\n        default:\n            throw new Error(`Unrecognized codec: ${codec}`)\n    }\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from '../utils/contenthashToUri'\nimport { parseENSAddress } from '../utils/parseENSAddress'\nimport uriToHttp from '../utils/uriToHttp'\nimport useENSContentHash from './useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n    const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n    const resolvedContentHash = useENSContentHash(ens?.ensName)\n    return useMemo(() => {\n        if (ens) {\n            return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n        } else {\n            return uri ? uriToHttp(uri) : []\n        }\n    }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n    const ensNodeArgument = useMemo(() => {\n        if (!ensName) return [undefined]\n        try {\n            return ensName ? [namehash(ensName)] : [undefined]\n        } catch (error) {\n            return [undefined]\n        }\n    }, [ensName])\n    const registrarContract = useENSRegistrarContract(false)\n    const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n    const resolverAddress = resolverAddressResult.result?.[0]\n    const resolverContract = useENSResolverContract(\n        resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n        false\n    )\n    const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n    return {\n        contenthash: contenthash.result?.[0] ?? null,\n        loading: resolverAddressResult.loading || contenthash.loading\n    }\n}\n","import { useState } from \"react\";\nimport { Slash } from \"react-feather\";\nimport { ImageProps } from \"rebass\";\nimport useTheme from \"../../hooks/useTheme\";\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {};\n\ninterface LogoProps extends Pick<ImageProps, \"style\" | \"alt\" | \"className\"> {\n    srcs: string[];\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, style, ...rest }: LogoProps) {\n    const [, refresh] = useState<number>(0);\n\n    const theme = useTheme();\n\n    const src: string | undefined = srcs.find((src) => !BAD_SRCS[src]);\n\n    if (src) {\n        return (\n            <img\n                {...rest}\n                alt={alt}\n                src={src}\n                style={style}\n                onError={() => {\n                    if (src) BAD_SRCS[src] = true;\n                    refresh((i) => i + 1);\n                }}\n            />\n        );\n    }\n\n    return <Slash {...rest} style={{ ...style, color: \"var(--bg4)\" }} />;\n}\n","import styled from 'styled-components/macro'\nimport Logo from '../Logo'\n\nexport const StyledListLogo = styled(Logo)<{ size: string }>`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n`\n","import React from 'react'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { StyledListLogo } from './styled'\n\ninterface ListLogoProps {\n    logoURI: string\n    size?: string\n    style?: React.CSSProperties\n    alt?: string\n}\n\nexport default function ListLogo({ logoURI, style, size = '24px', alt }: ListLogoProps) {\n    const srcs: string[] = useHttpLocations(logoURI)\n\n    return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import styled from 'styled-components/macro'\nimport { cssVar, darken } from 'polished'\nimport { TYPE } from '../../theme'\n\n\n//index\nexport const BaseToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\n  padding: 0.25rem 0.6rem;\n  border-radius: 9px;\n  background: ${({ theme, isActive, isOnSwitch }) =>\n        isActive ? (isOnSwitch ? 'var(--primary)' : 'var(--primary)') : 'none'};\n  color: ${({ theme, isActive }) => (isActive ? theme.white : 'var(--text2)')};\n  font-size: 14px;\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\n  :hover {\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\n    background: ${({ theme, isActive, isOnSwitch }) =>\n        isActive ? (isOnSwitch ? darken(0.05, String(cssVar('--primary'))) : darken(0.05, String(cssVar('--primary')))) : 'none'};\n    color: ${({\n            theme,\n            isActive,\n            isOnSwitch\n        }) => (isActive ? (isOnSwitch ? theme.white : theme.white) : 'var(--text3)')};\n  }\n`\nexport const StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 12px;\n  border: none;\n  background: #2f567b;\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 2px;\n`\n\n//ListToggle\nexport const Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 20px;\n  border: none;\n  background: ${({ theme }) => 'var(--bg1)'};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`\nexport const ListToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : 'var(--bg4)')};\n  :hover {\n    opacity: 0.8;\n  }\n`\nexport const StatusText = styled(TYPE.main) <{ isActive?: boolean }>`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({ theme, isActive }) => (isActive ? 'var(--text1)' : 'var(--text3)')};\n`\n\n//MultyToggle\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'};\n  padding: 1px;\n  background: #2f567b;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  outline: none;\n`\nexport const ToggleElement = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? 'var(--primary)' : 'none')};\n  color: white;\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 500;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? 'var(--text2)' : 'var(--text3)')};\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { ListToggleElement, StatusText, Wrapper } from './styled'\n\ninterface ToggleProps {\n    id?: string\n    isActive: boolean\n    bgColor: string\n    toggle: () => void\n}\n\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\n    return (\n        <Wrapper id={id} isActive={isActive} onClick={toggle}>\n            {isActive && (\n                <StatusText fontWeight='600' margin='0 6px' isActive={true}>\n                    <Trans>ON</Trans>\n                </StatusText>\n            )}\n            <ListToggleElement isActive={isActive} bgColor={bgColor} />\n            {!isActive && (\n                <StatusText fontWeight='600' margin='0 6px' isActive={false}>\n                    <Trans>OFF</Trans>\n                </StatusText>\n            )}\n        </Wrapper>\n    )\n}\n","import { t, Trans } from \"@lingui/macro\";\nimport { TokenList } from \"@uniswap/token-lists\";\nimport Card from \"components/Card\";\nimport { UNSUPPORTED_LIST_URLS } from \"constants/lists\";\nimport { useListColor } from \"hooks/useColor\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { memo, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { CheckCircle, Settings } from \"react-feather\";\nimport { usePopper } from \"react-popper\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { useFetchListCallback } from \"../../hooks/useFetchListCallback\";\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\";\nimport useTheme from \"../../hooks/useTheme\";\nimport useToggle from \"../../hooks/useToggle\";\nimport { acceptListUpdate, disableList, enableList, removeList } from \"../../state/lists/actions\";\nimport { useActiveListUrls, useAllLists, useIsListActive } from \"../../state/lists/hooks\";\nimport { ExternalLink, IconWrapper, TYPE } from \"../../theme\";\nimport listVersionLabel from \"../../utils/listVersionLabel\";\nimport { parseENSAddress } from \"../../utils/parseENSAddress\";\nimport uriToHttp from \"../../utils/uriToHttp\";\nimport { ButtonEmpty, ButtonPrimary } from \"../Button\";\nimport Column, { AutoColumn } from \"../Column\";\nimport ListLogo from \"../ListLogo\";\nimport Row, { RowBetween, RowFixed } from \"../Row\";\nimport ListToggle from \"../Toggle/ListToggle\";\nimport { CurrencyModalView } from \"./CurrencySearchModal\";\nimport {\n    ListContainer,\n    ManageWrapper,\n    PaddedColumn,\n    PopoverContainer,\n    RowWrapper,\n    SearchInput,\n    Separator,\n    SeparatorDark,\n    StyledListUrlText,\n    StyledMenu,\n    StyledTitleText,\n    UnpaddedLinkStyledButton,\n} from \"./styled\";\n\nfunction listUrlRowHTMLId(listUrl: string) {\n    return `list-row-${listUrl.replace(/\\./g, \"-\")}`;\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n    const { chainId } = useActiveWeb3React();\n    const listsByUrl = useAppSelector((state) => state.lists.byUrl);\n    const dispatch = useAppDispatch();\n    const { current: list, pendingUpdate: pending } = listsByUrl[listUrl];\n\n    const activeTokensOnThisChain = useMemo(() => {\n        if (!list || !chainId) {\n            return 0;\n        }\n        return list.tokens.reduce((acc, cur) => (cur.chainId === chainId ? acc + 1 : acc), 0);\n    }, [chainId, list]);\n\n    const theme = useTheme();\n    const listColor = useListColor(list?.logoURI);\n    const isActive = useIsListActive(listUrl);\n\n    const [open, toggle] = useToggle(false);\n    const node = useRef<HTMLDivElement>();\n    const [referenceElement, setReferenceElement] = useState<HTMLDivElement>();\n    const [popperElement, setPopperElement] = useState<HTMLDivElement>();\n\n    const { styles, attributes } = usePopper(referenceElement, popperElement, {\n        placement: \"auto\",\n        strategy: \"fixed\",\n        modifiers: [{ name: \"offset\", options: { offset: [8, 8] } }],\n    });\n\n    useOnClickOutside(node, open ? toggle : undefined);\n\n    const handleAcceptListUpdate = useCallback(() => {\n        if (!pending) return;\n        dispatch(acceptListUpdate(listUrl));\n    }, [dispatch, listUrl, pending]);\n\n    const handleRemoveList = useCallback(() => {\n        if (window.prompt(t`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n            dispatch(removeList(listUrl));\n        }\n    }, [dispatch, listUrl]);\n\n    const handleEnableList = useCallback(() => {\n        dispatch(enableList(listUrl));\n    }, [dispatch, listUrl]);\n\n    const handleDisableList = useCallback(() => {\n        dispatch(disableList(listUrl));\n    }, [dispatch, listUrl]);\n\n    if (!list) return null;\n\n    return (\n        <RowWrapper active={isActive} hasActiveTokens={activeTokensOnThisChain > 0} bgColor={listColor} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n            {list.logoURI ? (\n                <ListLogo size=\"40px\" style={{ marginRight: \"1rem\" }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n            ) : (\n                <div style={{ width: \"24px\", height: \"24px\", marginRight: \"1rem\" }} />\n            )}\n            <Column style={{ flex: \"1\" }}>\n                <Row>\n                    <StyledTitleText active={isActive}>{list.name}</StyledTitleText>\n                </Row>\n                <RowFixed mt=\"4px\">\n                    <StyledListUrlText active={isActive} mr=\"6px\">\n                        <Trans>{activeTokensOnThisChain} tokens</Trans>\n                    </StyledListUrlText>\n                    <StyledMenu ref={node as any}>\n                        <ButtonEmpty onClick={toggle} ref={setReferenceElement} padding=\"0\">\n                            <Settings stroke={isActive ? \"var(--bg1)\" : \"var(--icon)\"} size={12} />\n                        </ButtonEmpty>\n                        {open && (\n                            <PopoverContainer show={true} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n                                <div>{list && listVersionLabel(list.version)}</div>\n                                <SeparatorDark />\n                                <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n                                    <Trans>View list</Trans>\n                                </ExternalLink>\n                                <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n                                    <Trans>Remove list</Trans>\n                                </UnpaddedLinkStyledButton>\n                                {pending && (\n                                    <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>\n                                        <Trans>Update list</Trans>\n                                    </UnpaddedLinkStyledButton>\n                                )}\n                            </PopoverContainer>\n                        )}\n                    </StyledMenu>\n                </RowFixed>\n            </Column>\n            <ListToggle\n                isActive={isActive}\n                bgColor={listColor}\n                toggle={() => {\n                    isActive ? handleDisableList() : handleEnableList();\n                }}\n            />\n        </RowWrapper>\n    );\n});\n\nexport function ManageLists({\n    setModalView,\n    setImportList,\n    setListUrl,\n}: {\n    setModalView: (view: CurrencyModalView) => void;\n    setImportList: (list: TokenList) => void;\n    setListUrl: (url: string) => void;\n}) {\n    const { chainId } = useActiveWeb3React();\n    const theme = useTheme();\n\n    const [listUrlInput, setListUrlInput] = useState<string>(\"\");\n\n    const lists = useAllLists();\n\n    const tokenCountByListName = useMemo<Record<string, number>>(\n        () =>\n            Object.values(lists).reduce((acc, { current: list }) => {\n                if (!list) {\n                    return acc;\n                }\n                return {\n                    ...acc,\n                    [list.name]: list.tokens.reduce((count: number, token) => (token.chainId === chainId ? count + 1 : count), 0),\n                };\n            }, {}),\n        [chainId, lists]\n    );\n\n    // sort by active but only if not visible\n    const activeListUrls = useActiveListUrls();\n\n    const handleInput = useCallback((e) => {\n        setListUrlInput(e.target.value);\n    }, []);\n\n    const fetchList = useFetchListCallback();\n\n    const validUrl: boolean = useMemo(() => {\n        return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput));\n    }, [listUrlInput]);\n\n    const sortedLists = useMemo(() => {\n        const listUrls = Object.keys(lists);\n        return listUrls\n            .filter((listUrl) => {\n                // only show loaded lists, hide unsupported lists\n                return Boolean(lists[listUrl].current) && !Boolean(UNSUPPORTED_LIST_URLS.includes(listUrl));\n            })\n            .sort((listUrlA, listUrlB) => {\n                const { current: listA } = lists[listUrlA];\n                const { current: listB } = lists[listUrlB];\n\n                // first filter on active lists\n                if (activeListUrls?.includes(listUrlA) && !activeListUrls?.includes(listUrlB)) {\n                    return -1;\n                }\n                if (!activeListUrls?.includes(listUrlA) && activeListUrls?.includes(listUrlB)) {\n                    return 1;\n                }\n\n                if (listA && listB) {\n                    if (tokenCountByListName[listA.name] > tokenCountByListName[listB.name]) {\n                        return -1;\n                    }\n                    if (tokenCountByListName[listA.name] < tokenCountByListName[listB.name]) {\n                        return 1;\n                    }\n                    return listA.name.toLowerCase() < listB.name.toLowerCase() ? -1 : listA.name.toLowerCase() === listB.name.toLowerCase() ? 0 : 1;\n                }\n                if (listA) return -1;\n                if (listB) return 1;\n                return 0;\n            });\n    }, [lists, activeListUrls, tokenCountByListName]);\n\n    // temporary fetched list for import flow\n    const [tempList, setTempList] = useState<TokenList>();\n    const [addError, setAddError] = useState<string | undefined>();\n\n    useEffect(() => {\n        async function fetchTempList() {\n            fetchList(listUrlInput, false)\n                .then((list) => setTempList(list))\n                .catch(() => setAddError(t`Error importing list`));\n        }\n\n        // if valid url, fetch details for card\n        if (validUrl) {\n            fetchTempList();\n        } else {\n            setTempList(undefined);\n            listUrlInput !== \"\" && setAddError(t`Enter valid list location`);\n        }\n\n        // reset error\n        if (listUrlInput === \"\") {\n            setAddError(undefined);\n        }\n    }, [fetchList, listUrlInput, validUrl]);\n\n    // check if list is already imported\n    const isImported = Object.keys(lists).includes(listUrlInput);\n\n    // set list values and have parent modal switch to import list view\n    const handleImport = useCallback(() => {\n        if (!tempList) return;\n        setImportList(tempList);\n        setModalView(CurrencyModalView.importList);\n        setListUrl(listUrlInput);\n    }, [listUrlInput, setImportList, setListUrl, setModalView, tempList]);\n\n    return (\n        <ManageWrapper>\n            <PaddedColumn gap=\"14px\">\n                <Row>\n                    <SearchInput type=\"text\" id=\"list-add-input\" placeholder={t`https:// or ipfs:// or ENS name`} value={listUrlInput} onChange={handleInput} />\n                </Row>\n                {addError ? (\n                    <TYPE.error title={addError} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }} error>\n                        {addError}\n                    </TYPE.error>\n                ) : null}\n            </PaddedColumn>\n            {tempList && (\n                <PaddedColumn style={{ paddingTop: 0 }}>\n                    <Card backgroundColor={\"var(--bg2)\"} padding=\"12px 20px\">\n                        <RowBetween>\n                            <RowFixed>\n                                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                                <AutoColumn gap=\"4px\" style={{ marginLeft: \"20px\" }}>\n                                    <TYPE.body fontWeight={600}>{tempList.name}</TYPE.body>\n                                    <TYPE.main fontSize={\"12px\"}>\n                                        <Trans>{tempList.tokens.length} tokens</Trans>\n                                    </TYPE.main>\n                                </AutoColumn>\n                            </RowFixed>\n                            {isImported ? (\n                                <RowFixed>\n                                    <IconWrapper stroke={\"var(--text2)\"} size=\"16px\" marginRight={\"10px\"}>\n                                        <CheckCircle />\n                                    </IconWrapper>\n                                    <TYPE.body color={\"var(--text2)\"}>\n                                        <Trans>Loaded</Trans>\n                                    </TYPE.body>\n                                </RowFixed>\n                            ) : (\n                                <ButtonPrimary style={{ fontSize: \"14px\" }} padding=\"6px 8px\" width=\"fit-content\" onClick={handleImport}>\n                                    <Trans>Import</Trans>\n                                </ButtonPrimary>\n                            )}\n                        </RowBetween>\n                    </Card>\n                </PaddedColumn>\n            )}\n            <Separator />\n            <ListContainer>\n                <AutoColumn gap=\"md\">\n                    {sortedLists.map((listUrl) => (\n                        <ListRow key={listUrl} listUrl={listUrl} />\n                    ))}\n                </AutoColumn>\n            </ListContainer>\n        </ManageWrapper>\n    );\n}\n","import { Version } from '@uniswap/token-lists'\n\nexport default function listVersionLabel(version: Version): string {\n    return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { RefObject, useCallback, useMemo, useRef, useState } from \"react\";\nimport Column from \"components/Column\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport { Footer, ManageTokensWrapper, PaddedColumn, SearchInput, Separator } from \"./styled\";\nimport Row, { RowBetween, RowFixed } from \"components/Row\";\nimport { ButtonText, ExternalLink, ExternalLinkIcon, TrashIcon, TYPE } from \"theme\";\nimport { useToken } from \"hooks/Tokens\";\nimport { useRemoveUserAddedToken, useUserAddedTokens } from \"state/user/hooks\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { isAddress } from \"utils\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport Card from \"components/Card\";\nimport ImportRow from \"./ImportRow\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { Trans } from \"@lingui/macro\";\nimport { CurrencyModalView } from \"./CurrencySearchModal\";\nimport { WrappedCurrency } from \"../../models/types\";\n\nexport default function ManageTokens({ setModalView, setImportToken }: { setModalView: (view: CurrencyModalView) => void; setImportToken: (token: Token) => void }) {\n    const { chainId } = useActiveWeb3React();\n\n    const [searchQuery, setSearchQuery] = useState<string>(\"\");\n    const theme = useTheme();\n\n    // manage focus on modal show\n    const inputRef = useRef<HTMLInputElement>();\n    const handleInput = useCallback((event) => {\n        const input = event.target.value;\n        const checksummedInput = isAddress(input);\n        setSearchQuery(checksummedInput || input);\n    }, []);\n\n    // if they input an address, use it\n    const isAddressSearch = isAddress(searchQuery);\n    const searchToken = useToken(searchQuery);\n\n    // all tokens for local lisr\n    const userAddedTokens: Token[] = useUserAddedTokens();\n    const removeToken = useRemoveUserAddedToken();\n\n    const handleRemoveAll = useCallback(() => {\n        if (chainId && userAddedTokens) {\n            userAddedTokens.map((token) => {\n                return removeToken(chainId, token.address);\n            });\n        }\n    }, [removeToken, userAddedTokens, chainId]);\n\n    const tokenList = useMemo(() => {\n        return (\n            chainId &&\n            userAddedTokens.map((token) => (\n                <RowBetween key={token.address} width=\"100%\">\n                    <RowFixed>\n                        <CurrencyLogo currency={token as WrappedCurrency} size={\"20px\"} />\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                            <TYPE.main ml={\"10px\"} fontWeight={600}>\n                                {token.symbol}\n                            </TYPE.main>\n                        </ExternalLink>\n                    </RowFixed>\n                    <RowFixed>\n                        <TrashIcon onClick={() => removeToken(chainId, token.address)} />\n                        <ExternalLinkIcon href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)} />\n                    </RowFixed>\n                </RowBetween>\n            ))\n        );\n    }, [userAddedTokens, chainId, removeToken]);\n\n    return (\n        <ManageTokensWrapper>\n            <Column style={{ width: \"100%\", height: \"100%\", flex: \"1 1\" }}>\n                <PaddedColumn gap=\"14px\">\n                    <Row>\n                        <SearchInput\n                            type=\"text\"\n                            id=\"token-search-input\"\n                            placeholder={\"0x0000\"}\n                            value={searchQuery}\n                            autoComplete=\"off\"\n                            ref={inputRef as RefObject<HTMLInputElement>}\n                            onChange={handleInput}\n                        />\n                    </Row>\n                    {searchQuery !== \"\" && !isAddressSearch && (\n                        <TYPE.error error={true}>\n                            <Trans>Enter valid token address</Trans>\n                        </TYPE.error>\n                    )}\n                    {searchToken && (\n                        <Card backgroundColor={\"var(--bg2)\"} padding=\"10px 0\">\n                            <ImportRow token={searchToken} showImportView={() => setModalView(CurrencyModalView.importToken)} setImportToken={setImportToken} style={{ height: \"fit-content\" }} />\n                        </Card>\n                    )}\n                </PaddedColumn>\n                <Separator />\n                <PaddedColumn gap=\"lg\" style={{ overflow: \"auto\", marginBottom: \"10px\" }}>\n                    <RowBetween>\n                        <TYPE.main fontWeight={600}>\n                            <Trans>{userAddedTokens?.length} Custom Tokens</Trans>\n                        </TYPE.main>\n                        {userAddedTokens.length > 0 && (\n                            <ButtonText onClick={handleRemoveAll}>\n                                <TYPE.blue>\n                                    <Trans>Clear all</Trans>\n                                </TYPE.blue>\n                            </ButtonText>\n                        )}\n                    </RowBetween>\n                    {tokenList}\n                </PaddedColumn>\n            </Column>\n            <Footer>\n                <TYPE.darkGray>\n                    <Trans>Tip: Custom tokens are stored locally in your browser</Trans>\n                </TYPE.darkGray>\n            </Footer>\n        </ManageTokensWrapper>\n    );\n}\n","import { Trans } from '@lingui/macro'\nimport { useState } from 'react'\nimport { PaddedColumn, Separator, ToggleOption, ToggleWrapper, Wrapper } from './styled'\nimport { RowBetween } from 'components/Row'\nimport { ArrowLeft } from 'react-feather'\nimport { Text } from 'rebass'\nimport { CloseIcon } from 'theme'\nimport { Token } from '@uniswap/sdk-core'\nimport { ManageLists } from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { TokenList } from '@uniswap/token-lists'\nimport { CurrencyModalView } from './CurrencySearchModal'\n\nexport default function Manage({\n    onDismiss,\n    setModalView,\n    setImportList,\n    setImportToken,\n    setListUrl\n}: {\n    onDismiss: () => void\n    setModalView: (view: CurrencyModalView) => void\n    setImportToken: (token: Token) => void\n    setImportList: (list: TokenList) => void\n    setListUrl: (url: string) => void\n}) {\n    // toggle between tokens and lists\n    const [showLists, setShowLists] = useState(true)\n\n    return (\n        <Wrapper>\n            <PaddedColumn>\n                <RowBetween>\n                    <ArrowLeft style={{ cursor: 'pointer' }}\n                               onClick={() => setModalView(CurrencyModalView.search)} />\n                    <Text fontWeight={500} fontSize={20}>\n                        <Trans>Manage</Trans>\n                    </Text>\n                    <CloseIcon onClick={onDismiss} />\n                </RowBetween>\n            </PaddedColumn>\n            <Separator />\n            <PaddedColumn style={{ paddingBottom: 0 }}>\n                <ToggleWrapper>\n                    <ToggleOption onClick={() => setShowLists(!showLists)} active={showLists}>\n                        <Trans>Lists</Trans>\n                    </ToggleOption>\n                    <ToggleOption onClick={() => setShowLists(!showLists)} active={!showLists}>\n                        <Trans>Tokens</Trans>\n                    </ToggleOption>\n                </ToggleWrapper>\n            </PaddedColumn>\n            {showLists ? (\n                <ManageLists setModalView={setModalView} setImportList={setImportList}\n                             setListUrl={setListUrl} />\n            ) : (\n                <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n            )}\n        </Wrapper>\n    )\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { useCallback, useEffect, useState } from 'react'\nimport useLast from '../../hooks/useLast'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ImportToken } from './ImportToken'\nimport usePrevious from 'hooks/usePrevious'\nimport Manage from './Manage'\nimport { TokenList } from '@uniswap/token-lists'\nimport { ImportList } from './ImportList'\n\ninterface CurrencySearchModalProps {\n    isOpen: boolean\n    onDismiss: () => void\n    selectedCurrency?: Currency | null\n    onCurrencySelect: (currency: Currency) => void\n    otherSelectedCurrency?: Currency | null\n    showCommonBases?: boolean\n    showCurrencyAmount?: boolean\n    disableNonToken?: boolean\n}\n\nexport enum CurrencyModalView {\n    search,\n    manage,\n    importToken,\n    importList,\n}\n\nexport default function CurrencySearchModal({\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    otherSelectedCurrency,\n    showCommonBases = true,\n    showCurrencyAmount = true,\n    disableNonToken = false\n}: CurrencySearchModalProps) {\n    const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.manage)\n    const lastOpen = useLast(isOpen)\n\n    useEffect(() => {\n        if (isOpen && !lastOpen) {\n            setModalView(CurrencyModalView.search)\n        }\n    }, [isOpen, lastOpen])\n\n    const handleCurrencySelect = useCallback(\n        (currency: Currency) => {\n            onCurrencySelect(currency)\n            onDismiss()\n        },\n        [onDismiss, onCurrencySelect]\n    )\n\n    // for token import view\n    const prevView = usePrevious(modalView)\n\n    // used for import token flow\n    const [importToken, setImportToken] = useState<Token | undefined>()\n\n    // used for import list\n    const [importList, setImportList] = useState<TokenList | undefined>()\n    const [listURL, setListUrl] = useState<string | undefined>()\n\n    // change min height if not searching\n    const minHeight = modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList ? 40 : 50\n\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={50} minHeight={minHeight}>\n            {modalView === CurrencyModalView.search ? (\n                <CurrencySearch\n                    isOpen={isOpen}\n                    onDismiss={onDismiss}\n                    onCurrencySelect={handleCurrencySelect}\n                    selectedCurrency={selectedCurrency}\n                    otherSelectedCurrency={otherSelectedCurrency}\n                    showCommonBases={showCommonBases}\n                    showCurrencyAmount={showCurrencyAmount}\n                    disableNonToken={disableNonToken}\n                    showImportView={() => setModalView(CurrencyModalView.importToken)}\n                    setImportToken={setImportToken}\n                    showManageView={() => setModalView(CurrencyModalView.manage)}\n                />\n            ) : modalView === CurrencyModalView.importToken && importToken ? (\n                <ImportToken\n                    tokens={[importToken]}\n                    onDismiss={onDismiss}\n                    list={importToken instanceof WrappedTokenInfo ? importToken.list : undefined}\n                    onBack={() =>\n                        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search)\n                    }\n                    handleCurrencySelect={handleCurrencySelect}\n                />\n            ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n                <ImportList list={importList} listURL={listURL} onDismiss={onDismiss}\n                            setModalView={setModalView} />\n            ) : modalView === CurrencyModalView.manage ? (\n                <Manage\n                    onDismiss={onDismiss}\n                    setModalView={setModalView}\n                    setImportToken={setImportToken}\n                    setImportList={setImportList}\n                    setListUrl={setListUrl}\n                />\n            ) : (\n                ''\n            )}\n        </Modal>\n    )\n}\n","import { useCallback, useState } from \"react\";\nimport { CloseIcon, TYPE } from \"theme\";\nimport Card from \"components/Card\";\nimport { AutoColumn } from \"components/Column\";\nimport { AutoRow, RowBetween, RowFixed } from \"components/Row\";\nimport { AlertTriangle, ArrowLeft } from \"react-feather\";\nimport useTheme from \"hooks/useTheme\";\nimport { transparentize } from \"polished\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { SectionBreak } from \"../swap/styled\";\nimport { ExternalLink } from \"../../theme\";\nimport ListLogo from \"components/ListLogo\";\nimport { Checkbox, PaddedColumn, TextDot, Wrapper } from \"./styled\";\nimport { TokenList } from \"@uniswap/token-lists\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { useFetchListCallback } from \"hooks/useFetchListCallback\";\nimport { enableList, removeList } from \"state/lists/actions\";\nimport { CurrencyModalView } from \"./CurrencySearchModal\";\nimport { useAllLists } from \"state/lists/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface ImportProps {\n    listURL: string;\n    list: TokenList;\n    onDismiss: () => void;\n    setModalView: (view: CurrencyModalView) => void;\n}\n\nexport function ImportList({ listURL, list, setModalView, onDismiss }: ImportProps) {\n    const theme = useTheme();\n    const dispatch = useAppDispatch();\n\n    // user must accept\n    const [confirmed, setConfirmed] = useState(false);\n\n    const lists = useAllLists();\n    const fetchList = useFetchListCallback();\n\n    // monitor is list is loading\n    const adding = Boolean(lists[listURL]?.loadingRequestId);\n    const [addError, setAddError] = useState<string | null>(null);\n\n    const handleAddList = useCallback(() => {\n        if (adding) return;\n        setAddError(null);\n        fetchList(listURL)\n            .then(() => {\n                // turn list on\n                dispatch(enableList(listURL));\n                // go back to lists\n                setModalView(CurrencyModalView.manage);\n            })\n            .catch((error) => {\n                setAddError(error.message);\n                dispatch(removeList(listURL));\n            });\n    }, [adding, dispatch, fetchList, listURL, setModalView]);\n\n    return (\n        <Wrapper>\n            <PaddedColumn gap=\"14px\" style={{ width: \"100%\", flex: \"1 1\" }}>\n                <RowBetween>\n                    <ArrowLeft style={{ cursor: \"pointer\" }} onClick={() => setModalView(CurrencyModalView.manage)} />\n                    <TYPE.mediumHeader>\n                        <Trans>Import List</Trans>\n                    </TYPE.mediumHeader>\n                    <CloseIcon onClick={onDismiss} />\n                </RowBetween>\n            </PaddedColumn>\n            <SectionBreak />\n            <PaddedColumn gap=\"md\">\n                <AutoColumn gap=\"md\">\n                    <Card backgroundColor={\"var(--bg2)\"} padding=\"12px 20px\">\n                        <RowBetween>\n                            <RowFixed>\n                                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                                <AutoColumn gap=\"sm\" style={{ marginLeft: \"20px\" }}>\n                                    <RowFixed>\n                                        <TYPE.body fontWeight={600} mr=\"6px\">\n                                            {list.name}\n                                        </TYPE.body>\n                                        <TextDot />\n                                        <TYPE.main fontSize={\"16px\"} ml=\"6px\">\n                                            <Trans>{list.tokens.length} tokens</Trans>\n                                        </TYPE.main>\n                                    </RowFixed>\n                                    <ExternalLink href={`https://tokenlists.org/token-list?url=${listURL}`}>\n                                        <TYPE.main fontSize={\"12px\"} color={\"var(--blue1)\"}>\n                                            {listURL}\n                                        </TYPE.main>\n                                    </ExternalLink>\n                                </AutoColumn>\n                            </RowFixed>\n                        </RowBetween>\n                    </Card>\n                    <Card style={{ backgroundColor: transparentize(0.8, \"var(--red1)\") }}>\n                        <AutoColumn\n                            justify=\"center\"\n                            style={{\n                                textAlign: \"center\",\n                                gap: \"16px\",\n                                marginBottom: \"12px\",\n                            }}\n                        >\n                            <AlertTriangle stroke={\"var(--red1)\"} size={32} />\n                            <TYPE.body fontWeight={500} fontSize={20} color={\"var(--red1)\"}>\n                                <Trans>Import at your own risk</Trans>\n                            </TYPE.body>\n                        </AutoColumn>\n\n                        <AutoColumn style={{ textAlign: \"center\", gap: \"16px\", marginBottom: \"12px\" }}>\n                            <TYPE.body fontWeight={500} color={\"var(--red1)\"}>\n                                <Trans>\n                                    By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists\n                                    that claim to represent projects that do not have one.\n                                </Trans>\n                            </TYPE.body>\n                            <TYPE.body fontWeight={600} color={\"var(--red1)\"}>\n                                <Trans>If you purchase a token from this list, you may not be able to sell it back.</Trans>\n                            </TYPE.body>\n                        </AutoColumn>\n                        <AutoRow justify=\"center\" style={{ cursor: \"pointer\" }} onClick={() => setConfirmed(!confirmed)}>\n                            <Checkbox name=\"confirmed\" type=\"checkbox\" checked={confirmed} onChange={() => setConfirmed(!confirmed)} />\n                            <TYPE.body ml=\"10px\" fontSize=\"16px\" color={\"var(--red1)\"} fontWeight={500}>\n                                <Trans>I understand</Trans>\n                            </TYPE.body>\n                        </AutoRow>\n                    </Card>\n                    <ButtonPrimary disabled={!confirmed} altDisabledStyle={true} $borderRadius=\"20px\" padding=\"10px 1rem\" onClick={handleAddList}>\n                        <Trans>Import</Trans>\n                    </ButtonPrimary>\n                    {addError ? (\n                        <TYPE.error title={addError} style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }} error>\n                            {addError}\n                        </TYPE.error>\n                    ) : null}\n                </AutoColumn>\n            </PaddedColumn>\n        </Wrapper>\n    );\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nexport default function useLast<T>(\n    value: T | undefined | null,\n    filterFn?: (value: T | null | undefined) => boolean\n): T | null | undefined {\n    const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n    useEffect(() => {\n        setLast((last) => {\n            const shouldUse: boolean = filterFn ? filterFn(value) : true\n            if (shouldUse) return value\n            return last\n        })\n    }, [filterFn, value])\n    return last\n}\n","export default __webpack_public_path__ + \"static/media/blue-loader.537dc03d.svg\";","import styled from 'styled-components/macro'\nimport { AutoColumn, ColumnCenter } from '../Column'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding: 1rem;\n`\nexport const Section = styled(AutoColumn)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '0' : '0')};\n`\nexport const BottomSection = styled(Section)`\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\nexport const ConfirmedIcon = styled(ColumnCenter)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '20px 0' : '60px 0;')};\n`\nexport const StyledLogo = styled.img`\n  height: 16px;\n  width: 16px;\n  margin-left: 6px;\n`\n","import { Currency } from \"@uniswap/sdk-core\";\nimport { ReactNode, useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport Modal from \"../Modal\";\nimport { Text } from \"rebass\";\nimport { CloseIcon, CustomLightSpinner, ExternalLink } from \"../../theme\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { AlertTriangle, ArrowUpCircle, CheckCircle, X } from \"react-feather\";\nimport { ButtonLight, ButtonPrimary } from \"../Button\";\nimport { AutoColumn } from \"../Column\";\n// @ts-ignore\nimport Circle from \"../../assets/images/blue-loader.svg\";\n// @ts-ignore\nimport MetaMaskLogo from \"../../assets/svg/metamask-logo.svg\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport useAddTokenToMetamask from \"hooks/useAddTokenToMetamask\";\nimport { Trans } from \"@lingui/macro\";\nimport { BottomSection, ConfirmedIcon, Section, StyledLogo, Wrapper } from \"./styled\";\n\ninterface ConfirmationPendingContentProps {\n    onDismiss: () => void;\n    pendingText: ReactNode;\n    inline?: boolean; // not in modal\n}\n\nfunction ConfirmationPendingContent({ onDismiss, pendingText, inline }: ConfirmationPendingContentProps) {\n    return (\n        <div className={\"p-1 w-100\"}>\n            {!inline && (\n                <div className={\"flex-s-between\"}>\n                    <div />\n                    <X className={\"hover-op trans-op\"} onClick={onDismiss} />\n                </div>\n            )}\n            <div className={\"f c f-ac f-jc mb-1 p-2\"}>\n                <CustomLightSpinner src={Circle} alt=\"loader\" size={inline ? \"40px\" : \"90px\"} />\n            </div>\n            <div className={\"f c f-ac ta-c\"}>\n                <span className={\"fs-125 c-p mb-05 i-f\"}>\n                    <Trans>Waiting For Confirmation</Trans>\n                </span>\n                <span className={\"b c-p i-f mb-05\"}>{pendingText}</span>\n                <span className={\"fs-075\"} style={{ color: \"var(--text1)\" }}>\n                    <Trans>Confirm this transaction in your wallet</Trans>\n                </span>\n            </div>\n        </div>\n    );\n}\n\ninterface TransactionSubmittedContentProps {\n    onDismiss: () => void;\n    hash: string | undefined;\n    chainId: number;\n    currencyToAdd?: Currency | undefined;\n    inline?: boolean; // not in modal\n}\n\nfunction TransactionSubmittedContent({ onDismiss, chainId, hash, currencyToAdd, inline }: TransactionSubmittedContentProps) {\n    const theme = useContext(ThemeContext);\n\n    const { library } = useActiveWeb3React();\n\n    const { addToken, success } = useAddTokenToMetamask(currencyToAdd);\n\n    return (\n        <div>\n            {!inline && (\n                <RowBetween>\n                    <div />\n                    <CloseIcon onClick={onDismiss} />\n                </RowBetween>\n            )}\n            <ConfirmedIcon inline={inline}>\n                <ArrowUpCircle strokeWidth={0.5} size={inline ? \"40px\" : \"90px\"} color={\"var(--primary)\"} />\n            </ConfirmedIcon>\n            <AutoColumn gap=\"12px\" justify={\"center\"}>\n                <Text fontWeight={500} fontSize={20} textAlign=\"center\">\n                    <Trans>Transaction Submitted</Trans>\n                </Text>\n                {chainId && hash && (\n                    <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n                        <Text fontWeight={500} fontSize={14} color={\"var(--primary)\"}>\n                            <Trans>View on Explorer</Trans>\n                        </Text>\n                    </ExternalLink>\n                )}\n                {currencyToAdd && library?.provider?.isMetaMask && (\n                    <ButtonLight mt=\"12px\" padding=\"6px 12px\" width=\"fit-content\" onClick={addToken}>\n                        {!success ? (\n                            <RowFixed>\n                                <Trans>\n                                    Add {currencyToAdd.symbol} to Metamask <StyledLogo src={MetaMaskLogo} />\n                                </Trans>\n                            </RowFixed>\n                        ) : (\n                            <RowFixed>\n                                <Trans>Added {currencyToAdd.symbol} </Trans>\n                                <CheckCircle size={\"16px\"} stroke={\"var(--green)\"} style={{ marginLeft: \"6px\" }} />\n                            </RowFixed>\n                        )}\n                    </ButtonLight>\n                )}\n                <ButtonPrimary onClick={onDismiss} style={{ margin: \"20px 0 0 0\", color: \"white\" }}>\n                    <Text fontWeight={500} fontSize={20}>\n                        {inline ? <Trans>Return</Trans> : <Trans>Close</Trans>}\n                    </Text>\n                </ButtonPrimary>\n            </AutoColumn>\n        </div>\n    );\n}\n\ninterface ConfirmationModalContentProps {\n    title: ReactNode;\n    onDismiss: () => void;\n    topContent: () => ReactNode;\n    bottomContent?: () => ReactNode | undefined;\n}\n\nexport function ConfirmationModalContent({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) {\n    return (\n        <div className={\"w-100\"}>\n            <div className={\"flex-s-between mb-1\"}>\n                {title}\n                <CloseIcon className={\"hover-op trans-op\"} onClick={onDismiss} />\n            </div>\n            {topContent()}\n            {bottomContent && <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>}\n        </div>\n    );\n}\n\ninterface TransactionErrorContentProps {\n    message: ReactNode;\n    onDismiss: () => void;\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: TransactionErrorContentProps) {\n    const theme = useContext(ThemeContext);\n    return (\n        <Wrapper>\n            <Section>\n                <RowBetween>\n                    <Text fontWeight={500} fontSize={20}>\n                        <Trans>Error</Trans>\n                    </Text>\n                    <CloseIcon onClick={onDismiss} />\n                </RowBetween>\n                <AutoColumn style={{ marginTop: 20, padding: \"2rem 0\" }} gap=\"24px\" justify=\"center\">\n                    <AlertTriangle color={\"var(--red1)\"} style={{ strokeWidth: 1.5 }} size={64} />\n                    <Text fontWeight={500} fontSize={16} color={\"var(--red1)\"} style={{ textAlign: \"center\", width: \"85%\", wordBreak: \"break-word\" }}>\n                        {message}\n                    </Text>\n                </AutoColumn>\n            </Section>\n            <BottomSection gap=\"12px\">\n                <ButtonPrimary onClick={onDismiss}>\n                    <Trans>Dismiss</Trans>\n                </ButtonPrimary>\n            </BottomSection>\n        </Wrapper>\n    );\n}\n\ninterface ConfirmationModalProps {\n    isOpen: boolean;\n    onDismiss: () => void;\n    hash: string | undefined;\n    content: () => ReactNode;\n    attemptingTxn: boolean;\n    pendingText: ReactNode;\n    currencyToAdd?: Currency | undefined;\n}\n\nexport default function TransactionConfirmationModal({ isOpen, onDismiss, attemptingTxn, hash, pendingText, content, currencyToAdd }: ConfirmationModalProps) {\n    const { chainId } = useActiveWeb3React();\n\n    // if on L2 and txn is submitted, close automatically (if open)\n    useEffect(() => {\n        if (isOpen && chainId && hash) {\n            onDismiss();\n        }\n    }, [chainId, hash, isOpen, onDismiss]);\n\n    if (!chainId) return null;\n\n    // confirmation screen\n    // if on L2 and submitted dont render content, as should auto dismiss\n    // need this to skip submitted view during state update ^^\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n            {attemptingTxn ? (\n                <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n            ) : hash ? (\n                <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} currencyToAdd={currencyToAdd} />\n            ) : (\n                content()\n            )}\n        </Modal>\n    );\n}\n","import { getTokenLogoURL } from '../components/CurrencyLogo'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { useCallback, useState } from 'react'\nimport { useActiveWeb3React } from 'hooks/web3'\n\nexport default function useAddTokenToMetamask(currencyToAdd: Currency | undefined): {\n    addToken: () => void\n    success: boolean | undefined\n} {\n    const { library } = useActiveWeb3React()\n\n    const token: Token | undefined = currencyToAdd?.wrapped\n\n    const [success, setSuccess] = useState<boolean | undefined>()\n\n    const addToken = useCallback(() => {\n        if (library && library.provider.isMetaMask && library.provider.request && token) {\n            library.provider\n                .request({\n                    method: 'wallet_watchAsset',\n                    params: {\n                        //@ts-ignore // need this for incorrect ethers provider type\n                        type: 'ERC20',\n                        options: {\n                            address: token.address,\n                            symbol: token.symbol,\n                            decimals: token.decimals,\n                            image: getTokenLogoURL(token.address)\n                        }\n                    }\n                })\n                .then((success) => {\n                    setSuccess(success)\n                })\n                .catch(() => setSuccess(false))\n        } else {\n            setSuccess(false)\n        }\n    }, [library, token])\n\n    return { addToken, success }\n}\n","import invariant from 'tiny-invariant'\n\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport { Pool } from './pool'\n\n/**\n * Represents a list of pools through which a swap can occur\n * @template TInput The input token\n * @template TOutput The output token\n */\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n    public readonly pools: Pool[]\n    public readonly tokenPath: Token[]\n    public readonly input: TInput\n    public readonly output: TOutput\n\n    /**\n     * Creates an instance of route.\n     * @param pools An array of `Pool` objects, ordered by the route the swap will take\n     * @param input The input token\n     * @param output The output token\n     */\n    public constructor(pools: Pool[], input: TInput, output: TOutput) {\n        invariant(pools.length > 0, 'POOLS')\n\n        const chainId = pools[0].chainId\n        const allOnSameChain = pools.every(pool => pool.chainId === chainId)\n        invariant(allOnSameChain, 'CHAIN_IDS')\n\n        const wrappedInput = input.wrapped\n        invariant(pools[0].involvesToken(wrappedInput), 'INPUT')\n\n        invariant(pools[pools.length - 1].involvesToken(output.wrapped), 'OUTPUT')\n\n        /**\n         * Normalizes token0-token1 order and selects the next token/fee step to add to the path\n         * */\n        const tokenPath: Token[] = [wrappedInput]\n        for (const [i, pool] of pools.entries()) {\n            const currentInputToken = tokenPath[i]\n            invariant(currentInputToken.equals(pool.token0) || currentInputToken.equals(pool.token1), 'PATH')\n            const nextToken = currentInputToken.equals(pool.token0) ? pool.token1 : pool.token0\n            tokenPath.push(nextToken)\n        }\n\n        this.pools = pools\n        this.tokenPath = tokenPath\n        this.input = input\n        this.output = output ?? tokenPath[tokenPath.length - 1]\n    }\n\n    private _midPrice: Price<TInput, TOutput> | null = null\n\n    /**\n     * Returns the mid price of the route\n     */\n    public get midPrice(): Price<TInput, TOutput> {\n        if (this._midPrice !== null) return this._midPrice\n\n        const price = this.pools.slice(1).reduce(\n            ({ nextInput, price }, pool) => {\n                return nextInput.equals(pool.token0)\n                    ? {\n                        nextInput: pool.token1,\n                        price: price.multiply(pool.token0Price)\n                    }\n                    : {\n                        nextInput: pool.token0,\n                        price: price.multiply(pool.token1Price)\n                    }\n            },\n            this.pools[0].token0.equals(this.input.wrapped)\n                ? {\n                    nextInput: this.pools[0].token1,\n                    price: this.pools[0].token0Price\n                }\n                : {\n                    nextInput: this.pools[0].token0,\n                    price: this.pools[0].token1Price\n                }\n        ).price\n\n        return (this._midPrice = new Price(this.input, this.output, price.denominator, price.numerator))\n    }\n\n    public get chainId(): number {\n        return this.pools[0].chainId\n    }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent, Price, sortedInsert, Token, TradeType } from '@uniswap/sdk-core'\nimport invariant from 'tiny-invariant'\nimport { ONE, ZERO } from '../internalConstants'\nimport { Pool } from './pool'\nimport { Route } from './route'\n\n/**\n * Trades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking them\n * @template TInput The input token, either Ether or an ERC-20\n * @template TOutput The output token, either Ether or an ERC-20\n * @template TTradeType The trade type, either exact input or exact output\n * @param a The first trade to compare\n * @param b The second trade to compare\n * @returns A sorted ordering for two neighboring elements in a trade array\n */\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n    a: Trade<TInput, TOutput, TTradeType>,\n    b: Trade<TInput, TOutput, TTradeType>\n) {\n    // must have same input and output token for comparison\n    invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\n    invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\n    if (a.outputAmount.equalTo(b.outputAmount)) {\n        if (a.inputAmount.equalTo(b.inputAmount)) {\n            // consider the number of hops since each hop costs gas\n            const aHops = a.swaps.reduce((total, cur) => total + cur.route.tokenPath.length, 0)\n            const bHops = b.swaps.reduce((total, cur) => total + cur.route.tokenPath.length, 0)\n            return aHops - bHops\n        }\n        // trade A requires less input than trade B, so A should come first\n        if (a.inputAmount.lessThan(b.inputAmount)) {\n            return -1\n        } else {\n            return 1\n        }\n    } else {\n        // tradeA has less output than trade B, so should come second\n        if (a.outputAmount.lessThan(b.outputAmount)) {\n            return 1\n        } else {\n            return -1\n        }\n    }\n}\n\nexport interface BestTradeOptions {\n    // how many results to return\n    maxNumResults?: number\n    // the maximum number of hops a trade should contain\n    maxHops?: number\n}\n\n/**\n * Represents a trade executed against a set of routes where some percentage of the input is\n * split across each route.\n *\n * Each route has its own set of pools. Pools can not be re-used across routes.\n *\n * Does not account for slippage, i.e., changes in price environment that can occur between\n * the time the trade is submitted and when it is executed.\n * @template TInput The input token, either Ether or an ERC-20\n * @template TOutput The output token, either Ether or an ERC-20\n * @template TTradeType The trade type, either exact input or exact output\n */\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\n    /**\n     * The swaps of the trade, i.e. which routes and how much is swapped in each that\n     * make up the trade.\n     */\n    public readonly swaps: {\n        route: Route<TInput, TOutput>\n        inputAmount: CurrencyAmount<TInput>\n        outputAmount: CurrencyAmount<TOutput>\n    }[]\n    /**\n     * The type of the trade, either exact in or exact out.\n     */\n    public readonly tradeType: TTradeType\n\n    /**\n     * Construct a trade by passing in the pre-computed property values\n     * @param routes The routes through which the trade occurs\n     * @param tradeType The type of trade, exact input or exact output\n     */\n    private constructor({\n        routes,\n        tradeType\n    }: {\n        routes: {\n            route: Route<TInput, TOutput>\n            inputAmount: CurrencyAmount<TInput>\n            outputAmount: CurrencyAmount<TOutput>\n        }[]\n        tradeType: TTradeType\n    }) {\n        const inputCurrency = routes[0].inputAmount.currency\n        const outputCurrency = routes[0].outputAmount.currency\n        invariant(\n            routes.every(({ route }) => inputCurrency.wrapped.equals(route.input.wrapped)),\n            'INPUT_CURRENCY_MATCH'\n        )\n        invariant(\n            routes.every(({ route }) => outputCurrency.wrapped.equals(route.output.wrapped)),\n            'OUTPUT_CURRENCY_MATCH'\n        )\n\n        const numPools = routes.map(({ route }) => route.pools.length).reduce((total, cur) => total + cur, 0)\n        const poolAddressSet = new Set<string>()\n        for (const { route } of routes) {\n            for (const pool of route.pools) {\n                poolAddressSet.add(Pool.getAddress(pool.token0, pool.token1, pool.fee))\n            }\n        }\n\n        invariant(numPools == poolAddressSet.size, 'POOLS_DUPLICATED')\n\n        this.swaps = routes\n        this.tradeType = tradeType\n    }\n\n    /**\n     * @deprecated Deprecated in favor of 'swaps' property. If the trade consists of multiple routes\n     * this will return an error.\n     *\n     * When the trade consists of just a single route, this returns the route of the trade,\n     * i.e. which pools the trade goes through.\n     */\n    public get route(): Route<TInput, TOutput> {\n        invariant(this.swaps.length == 1, 'MULTIPLE_ROUTES')\n        return this.swaps[0].route\n    }\n\n    /**\n     * The cached result of the input amount computation\n     * @private\n     */\n    private _inputAmount: CurrencyAmount<TInput> | undefined\n\n    /**\n     * The input amount for the trade assuming no slippage.\n     */\n    public get inputAmount(): CurrencyAmount<TInput> {\n        if (this._inputAmount) {\n            return this._inputAmount\n        }\n\n        const inputCurrency = this.swaps[0].inputAmount.currency\n        const totalInputFromRoutes = this.swaps\n            .map(({ inputAmount }) => inputAmount)\n            .reduce((total, cur) => total.add(cur), CurrencyAmount.fromRawAmount(inputCurrency, 0))\n\n        this._inputAmount = totalInputFromRoutes\n        return this._inputAmount\n    }\n\n    /**\n     * The cached result of the output amount computation\n     * @private\n     */\n    private _outputAmount: CurrencyAmount<TOutput> | undefined\n\n    /**\n     * The output amount for the trade assuming no slippage.\n     */\n    public get outputAmount(): CurrencyAmount<TOutput> {\n        if (this._outputAmount) {\n            return this._outputAmount\n        }\n\n        const outputCurrency = this.swaps[0].outputAmount.currency\n        const totalOutputFromRoutes = this.swaps\n            .map(({ outputAmount }) => outputAmount)\n            .reduce((total, cur) => total.add(cur), CurrencyAmount.fromRawAmount(outputCurrency, 0))\n\n        this._outputAmount = totalOutputFromRoutes\n        return this._outputAmount\n    }\n\n    /**\n     * The cached result of the computed execution price\n     * @private\n     */\n    private _executionPrice: Price<TInput, TOutput> | undefined\n\n    /**\n     * The price expressed in terms of output amount/input amount.\n     */\n    public get executionPrice(): Price<TInput, TOutput> {\n        return (\n            this._executionPrice ??\n            (this._executionPrice = new Price(\n                this.inputAmount.currency,\n                this.outputAmount.currency,\n                this.inputAmount.quotient,\n                this.outputAmount.quotient\n            ))\n        )\n    }\n\n    /**\n     * The cached result of the price impact computation\n     * @private\n     */\n    private _priceImpact: Percent | undefined\n\n    /**\n     * Returns the percent difference between the route's mid price and the price impact\n     */\n    public get priceImpact(): Percent {\n        if (this._priceImpact) {\n            return this._priceImpact\n        }\n\n        let spotOutputAmount = CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0)\n        for (const { route, inputAmount } of this.swaps) {\n            const midPrice = route.midPrice\n            spotOutputAmount = spotOutputAmount.add(midPrice.quote(inputAmount))\n        }\n\n        const priceImpact = spotOutputAmount.subtract(this.outputAmount).divide(spotOutputAmount)\n        this._priceImpact = new Percent(priceImpact.numerator, priceImpact.denominator)\n\n        return this._priceImpact\n    }\n\n    /**\n     * Constructs an exact in trade with the given amount in and route\n     * @template TInput The input token, either Ether or an ERC-20\n     * @template TOutput The output token, either Ether or an ERC-20\n     * @param route The route of the exact in trade\n     * @param amountIn The amount being passed in\n     * @returns The exact in trade\n     */\n    public static async exactIn<TInput extends Currency, TOutput extends Currency>(\n        route: Route<TInput, TOutput>,\n        amountIn: CurrencyAmount<TInput>\n    ): Promise<Trade<TInput, TOutput, TradeType.EXACT_INPUT>> {\n        return Trade.fromRoute(route, amountIn, TradeType.EXACT_INPUT)\n    }\n\n    /**\n     * Constructs an exact out trade with the given amount out and route\n     * @template TInput The input token, either Ether or an ERC-20\n     * @template TOutput The output token, either Ether or an ERC-20\n     * @param route The route of the exact out trade\n     * @param amountOut The amount returned by the trade\n     * @returns The exact out trade\n     */\n    public static async exactOut<TInput extends Currency, TOutput extends Currency>(\n        route: Route<TInput, TOutput>,\n        amountOut: CurrencyAmount<TOutput>\n    ): Promise<Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>> {\n        return Trade.fromRoute(route, amountOut, TradeType.EXACT_OUTPUT)\n    }\n\n    /**\n     * Constructs a trade by simulating swaps through the given route\n     * @template TInput The input token, either Ether or an ERC-20.\n     * @template TOutput The output token, either Ether or an ERC-20.\n     * @template TTradeType The type of the trade, either exact in or exact out.\n     * @param route route to swap through\n     * @param amount the amount specified, either input or output, depending on tradeType\n     * @param tradeType whether the trade is an exact input or exact output swap\n     * @returns The route\n     */\n    public static async fromRoute<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n        route: Route<TInput, TOutput>,\n        amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\n        tradeType: TTradeType\n    ): Promise<Trade<TInput, TOutput, TTradeType>> {\n        const amounts: CurrencyAmount<Token>[] = new Array(route.tokenPath.length)\n        let inputAmount: CurrencyAmount<TInput>\n        let outputAmount: CurrencyAmount<TOutput>\n        if (tradeType === TradeType.EXACT_INPUT) {\n            invariant(amount.currency.equals(route.input), 'INPUT')\n            amounts[0] = amount.wrapped\n            for (let i = 0; i < route.tokenPath.length - 1; i++) {\n                const pool = route.pools[i]\n                const [outputAmount] = await pool.getOutputAmount(amounts[i])\n                amounts[i + 1] = outputAmount\n            }\n            inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n            outputAmount = CurrencyAmount.fromFractionalAmount(\n                route.output,\n                amounts[amounts.length - 1].numerator,\n                amounts[amounts.length - 1].denominator\n            )\n        } else {\n            invariant(amount.currency.equals(route.output), 'OUTPUT')\n            amounts[amounts.length - 1] = amount.wrapped\n            for (let i = route.tokenPath.length - 1; i > 0; i--) {\n                const pool = route.pools[i - 1]\n                const [inputAmount] = await pool.getInputAmount(amounts[i])\n                amounts[i - 1] = inputAmount\n            }\n            inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator)\n            outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n        }\n\n        return new Trade({\n            routes: [{ inputAmount, outputAmount, route }],\n            tradeType\n        })\n    }\n\n    /**\n     * Constructs a trade from routes by simulating swaps\n     *\n     * @template TInput The input token, either Ether or an ERC-20.\n     * @template TOutput The output token, either Ether or an ERC-20.\n     * @template TTradeType The type of the trade, either exact in or exact out.\n     * @param routes the routes to swap through and how much of the amount should be routed through each\n     * @param tradeType whether the trade is an exact input or exact output swap\n     * @returns The trade\n     */\n    public static async fromRoutes<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n        routes: {\n            amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>\n            route: Route<TInput, TOutput>\n        }[],\n        tradeType: TTradeType\n    ): Promise<Trade<TInput, TOutput, TTradeType>> {\n        const populatedRoutes: {\n            route: Route<TInput, TOutput>\n            inputAmount: CurrencyAmount<TInput>\n            outputAmount: CurrencyAmount<TOutput>\n        }[] = []\n\n        for (const { route, amount } of routes) {\n            const amounts: CurrencyAmount<Token>[] = new Array(route.tokenPath.length)\n            let inputAmount: CurrencyAmount<TInput>\n            let outputAmount: CurrencyAmount<TOutput>\n\n            if (tradeType === TradeType.EXACT_INPUT) {\n                invariant(amount.currency.equals(route.input), 'INPUT')\n                inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n                amounts[0] = CurrencyAmount.fromFractionalAmount(route.input.wrapped, amount.numerator, amount.denominator)\n\n                for (let i = 0; i < route.tokenPath.length - 1; i++) {\n                    const pool = route.pools[i]\n                    const [outputAmount] = await pool.getOutputAmount(amounts[i])\n                    amounts[i + 1] = outputAmount\n                }\n\n                outputAmount = CurrencyAmount.fromFractionalAmount(\n                    route.output,\n                    amounts[amounts.length - 1].numerator,\n                    amounts[amounts.length - 1].denominator\n                )\n            } else {\n                invariant(amount.currency.equals(route.output), 'OUTPUT')\n                outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n                amounts[amounts.length - 1] = CurrencyAmount.fromFractionalAmount(\n                    route.output.wrapped,\n                    amount.numerator,\n                    amount.denominator\n                )\n\n                for (let i = route.tokenPath.length - 1; i > 0; i--) {\n                    const pool = route.pools[i - 1]\n                    const [inputAmount] = await pool.getInputAmount(amounts[i])\n                    amounts[i - 1] = inputAmount\n                }\n\n                inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator)\n            }\n\n            populatedRoutes.push({ route, inputAmount, outputAmount })\n        }\n\n        return new Trade({\n            routes: populatedRoutes,\n            tradeType\n        })\n    }\n\n    /**\n     * Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade\n     * elsewhere and do not have any tick data\n     * @template TInput The input token, either Ether or an ERC-20\n     * @template TOutput The output token, either Ether or an ERC-20\n     * @template TTradeType The type of the trade, either exact in or exact out\n     * @param constructorArguments The arguments passed to the trade constructor\n     * @returns The unchecked trade\n     */\n    public static createUncheckedTrade<TInput extends Currency,\n        TOutput extends Currency,\n        TTradeType extends TradeType>(constructorArguments: {\n        route: Route<TInput, TOutput>\n        inputAmount: CurrencyAmount<TInput>\n        outputAmount: CurrencyAmount<TOutput>\n        tradeType: TTradeType\n    }): Trade<TInput, TOutput, TTradeType> {\n        return new Trade({\n            ...constructorArguments,\n            routes: [\n                {\n                    inputAmount: constructorArguments.inputAmount,\n                    outputAmount: constructorArguments.outputAmount,\n                    route: constructorArguments.route\n                }\n            ]\n        })\n    }\n\n    /**\n     * Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade\n     * elsewhere and do not have any tick data\n     * @template TInput The input token, either Ether or an ERC-20\n     * @template TOutput The output token, either Ether or an ERC-20\n     * @template TTradeType The type of the trade, either exact in or exact out\n     * @param constructorArguments The arguments passed to the trade constructor\n     * @returns The unchecked trade\n     */\n    public static createUncheckedTradeWithMultipleRoutes<TInput extends Currency,\n        TOutput extends Currency,\n        TTradeType extends TradeType>(constructorArguments: {\n        routes: {\n            route: Route<TInput, TOutput>\n            inputAmount: CurrencyAmount<TInput>\n            outputAmount: CurrencyAmount<TOutput>\n        }[]\n        tradeType: TTradeType\n    }): Trade<TInput, TOutput, TTradeType> {\n        return new Trade(constructorArguments)\n    }\n\n    /**\n     * Given a list of pools, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n     * amount to an output token, making at most `maxHops` hops.\n     * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n     * the amount in among multiple routes.\n     * @param pools the pools to consider in finding the best trade\n     * @param nextAmountIn exact amount of input currency to spend\n     * @param currencyOut the desired currency out\n     * @param maxNumResults maximum number of results to return\n     * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\n     * @param currentPools used in recursion; the current list of pools\n     * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n     * @param bestTrades used in recursion; the current list of best trades\n     * @returns The exact in trade\n     */\n    public static async bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\n        pools: Pool[],\n        currencyAmountIn: CurrencyAmount<TInput>,\n        currencyOut: TOutput,\n        { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n        // used in recursion.\n        currentPools: Pool[] = [],\n        nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n        bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n    ): Promise<Trade<TInput, TOutput, TradeType.EXACT_INPUT>[]> {\n        invariant(pools.length > 0, 'POOLS')\n        invariant(maxHops > 0, 'MAX_HOPS')\n        invariant(currencyAmountIn === nextAmountIn || currentPools.length > 0, 'INVALID_RECURSION')\n\n        const amountIn = nextAmountIn.wrapped\n        const tokenOut = currencyOut.wrapped\n        for (let i = 0; i < pools.length; i++) {\n            const pool = pools[i]\n            // pool irrelevant\n            if (!pool.token0.equals(amountIn.currency) && !pool.token1.equals(amountIn.currency)) continue\n\n            let amountOut: CurrencyAmount<Token>\n            try {\n                ;[amountOut] = await pool.getOutputAmount(amountIn)\n            } catch (error: any) {\n                // input too low\n                if (error.isInsufficientInputAmountError) {\n                    continue\n                }\n                throw error\n            }\n            // we have arrived at the output token, so this is the final trade of one of the paths\n            if (amountOut.currency.isToken && amountOut.currency.equals(tokenOut)) {\n                sortedInsert(\n                    bestTrades,\n                    await Trade.fromRoute(\n                        new Route([...currentPools, pool], currencyAmountIn.currency, currencyOut),\n                        currencyAmountIn,\n                        TradeType.EXACT_INPUT\n                    ),\n                    maxNumResults,\n                    tradeComparator\n                )\n            } else if (maxHops > 1 && pools.length > 1) {\n                const poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length))\n\n                // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n                await Trade.bestTradeExactIn(\n                    poolsExcludingThisPool,\n                    currencyAmountIn,\n                    currencyOut,\n                    {\n                        maxNumResults,\n                        maxHops: maxHops - 1\n                    },\n                    [...currentPools, pool],\n                    amountOut,\n                    bestTrades\n                )\n            }\n        }\n\n        return bestTrades\n    }\n\n    /**\n     * similar to the above method but instead targets a fixed output amount\n     * given a list of pools, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n     * to an output token amount, making at most `maxHops` hops\n     * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n     * the amount in among multiple routes.\n     * @param pools the pools to consider in finding the best trade\n     * @param currencyIn the currency to spend\n     * @param currencyAmountOut the desired currency amount out\n     * @param nextAmountOut the exact amount of currency out\n     * @param maxNumResults maximum number of results to return\n     * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\n     * @param currentPools used in recursion; the current list of pools\n     * @param bestTrades used in recursion; the current list of best trades\n     * @returns The exact out trade\n     */\n    public static async bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\n        pools: Pool[],\n        currencyIn: TInput,\n        currencyAmountOut: CurrencyAmount<TOutput>,\n        { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n        // used in recursion.\n        currentPools: Pool[] = [],\n        nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n        bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n    ): Promise<Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[]> {\n        invariant(pools.length > 0, 'POOLS')\n        invariant(maxHops > 0, 'MAX_HOPS')\n        invariant(currencyAmountOut === nextAmountOut || currentPools.length > 0, 'INVALID_RECURSION')\n\n        const amountOut = nextAmountOut.wrapped\n        const tokenIn = currencyIn.wrapped\n        for (let i = 0; i < pools.length; i++) {\n            const pool = pools[i]\n            // pool irrelevant\n            if (!pool.token0.equals(amountOut.currency) && !pool.token1.equals(amountOut.currency)) continue\n\n            let amountIn: CurrencyAmount<Token>\n            try {\n                ;[amountIn] = await pool.getInputAmount(amountOut)\n            } catch (error: any) {\n                // not enough liquidity in this pool\n                if (error.isInsufficientReservesError) {\n                    continue\n                }\n                throw error\n            }\n            // we have arrived at the input token, so this is the first trade of one of the paths\n            if (amountIn.currency.equals(tokenIn)) {\n                sortedInsert(\n                    bestTrades,\n                    await Trade.fromRoute(\n                        new Route([pool, ...currentPools], currencyIn, currencyAmountOut.currency),\n                        currencyAmountOut,\n                        TradeType.EXACT_OUTPUT\n                    ),\n                    maxNumResults,\n                    tradeComparator\n                )\n            } else if (maxHops > 1 && pools.length > 1) {\n                const poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length))\n\n                // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n                await Trade.bestTradeExactOut(\n                    poolsExcludingThisPool,\n                    currencyIn,\n                    currencyAmountOut,\n                    {\n                        maxNumResults,\n                        maxHops: maxHops - 1\n                    },\n                    [pool, ...currentPools],\n                    amountIn,\n                    bestTrades\n                )\n            }\n        }\n\n        return bestTrades\n    }\n\n    /**\n     * Get the minimum amount that must be received from this trade for the given slippage tolerance\n     * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\n     * @returns The amount out\n     */\n    public minimumAmountOut(slippageTolerance: Percent, amountOut = this.outputAmount): CurrencyAmount<TOutput> {\n        invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n        if (this.tradeType === TradeType.EXACT_OUTPUT) {\n            return amountOut\n        } else {\n            const slippageAdjustedAmountOut = new Fraction(ONE)\n                .add(slippageTolerance)\n                .invert()\n                .multiply(amountOut.quotient).quotient\n            return CurrencyAmount.fromRawAmount(amountOut.currency, slippageAdjustedAmountOut)\n        }\n    }\n\n    /**\n     * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n     * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\n     * @returns The amount in\n     */\n    public maximumAmountIn(slippageTolerance: Percent, amountIn = this.inputAmount): CurrencyAmount<TInput> {\n        invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n        if (this.tradeType === TradeType.EXACT_INPUT) {\n            return amountIn\n        } else {\n            const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(amountIn.quotient).quotient\n            return CurrencyAmount.fromRawAmount(amountIn.currency, slippageAdjustedAmountIn)\n        }\n    }\n\n    /**\n     * Return the execution price after accounting for slippage tolerance\n     * @param slippageTolerance the allowed tolerated slippage\n     * @returns The execution price\n     */\n    public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\n        return new Price(\n            this.inputAmount.currency,\n            this.outputAmount.currency,\n            this.maximumAmountIn(slippageTolerance).quotient,\n            this.minimumAmountOut(slippageTolerance).quotient\n        )\n    }\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, Currency, CurrencyAmount, Percent, TradeType, validateAndParseAddress } from '@uniswap/sdk-core'\nimport invariant from 'tiny-invariant'\nimport { Trade } from './entities/trade'\nimport { ADDRESS_ZERO } from './constants'\nimport { PermitOptions, SelfPermit } from './selfPermit'\nimport { encodeRouteToPath } from './utils'\nimport { MethodParameters, toHex } from './utils/calldata'\n// import { abi } from '@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json'\nimport abi from '../../abis/swap-router.json'\n\n// import abi from './swapRouterTestABI.json'\n\nexport interface FeeOptions {\n    /**\n     * The percent of the output that will be taken as a fee.\n     */\n    fee: Percent\n\n    /**\n     * The recipient of the fee.\n     */\n    recipient: string\n}\n\n/**\n * Options for producing the arguments to send calls to the router.\n */\nexport interface SwapOptions {\n    /**\n     * How much the execution price is allowed to move unfavorably from the trade execution price.\n     */\n    slippageTolerance: Percent\n\n    /**\n     * The account that should receive the output.\n     */\n    recipient: string\n\n    /**\n     * When the transaction expires, in epoch seconds.\n     */\n    deadline: BigintIsh\n\n    /**\n     * Deflationary token.\n     */\n    feeOnTransfer: boolean\n\n    /**\n     * The optional permit parameters for spending the input.\n     */\n    inputTokenPermit?: PermitOptions\n\n    /**\n     * The optional price limit for the trade.\n     */\n    sqrtPriceLimitX96?: BigintIsh\n\n    /**\n     * Optional information for taking a fee on output.\n     */\n    fee?: FeeOptions\n}\n\n/**\n * Represents the Uniswap V2 SwapRouter, and has static methods for helping execute trades.\n */\nexport abstract class SwapRouter extends SelfPermit {\n    public static INTERFACE: Interface = new Interface(abi)\n\n    /**\n     * Cannot be constructed.\n     */\n    private constructor() {\n        super()\n    }\n\n    /**\n     * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n     * @param trade to produce call parameters for\n     * @param options options for the call parameters\n     */\n    public static swapCallParameters(\n        trades: Trade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>[],\n        options: SwapOptions\n    ): MethodParameters {\n        if (!Array.isArray(trades)) {\n            trades = [trades]\n        }\n\n        const sampleTrade = trades[0]\n        const tokenIn = sampleTrade.inputAmount.currency.wrapped\n        const tokenOut = sampleTrade.outputAmount.currency.wrapped\n\n        // All trades should have the same starting and ending token.\n        invariant(\n            trades.every(trade => trade.inputAmount.currency.wrapped.equals(tokenIn)),\n            'TOKEN_IN_DIFF'\n        )\n        invariant(\n            trades.every(trade => trade.outputAmount.currency.wrapped.equals(tokenOut)),\n            'TOKEN_OUT_DIFF'\n        )\n\n        const calldatas: string[] = []\n\n        const ZERO_IN: CurrencyAmount<Currency> = CurrencyAmount.fromRawAmount(trades[0].inputAmount.currency, 0)\n        const ZERO_OUT: CurrencyAmount<Currency> = CurrencyAmount.fromRawAmount(trades[0].outputAmount.currency, 0)\n\n        const totalAmountOut: CurrencyAmount<Currency> = trades.reduce(\n            (sum, trade) => sum.add(trade.minimumAmountOut(options.slippageTolerance)),\n            ZERO_OUT\n        )\n\n        // flag for whether a refund needs to happen\n        const mustRefund = sampleTrade.inputAmount.currency.isNative && sampleTrade.tradeType === TradeType.EXACT_OUTPUT\n        const inputIsNative = sampleTrade.inputAmount.currency.isNative\n        // flags for whether funds should be send first to the router\n        const outputIsNative = sampleTrade.outputAmount.currency.isNative\n        const routerMustCustody = outputIsNative || !!options.fee\n\n        const totalValue: CurrencyAmount<Currency> = inputIsNative\n            ? trades.reduce((sum, trade) => sum.add(trade.maximumAmountIn(options.slippageTolerance)), ZERO_IN)\n            : ZERO_IN\n\n        // encode permit if necessary\n        if (options.inputTokenPermit) {\n            invariant(sampleTrade.inputAmount.currency.isToken, 'NON_TOKEN_PERMIT')\n            calldatas.push(SwapRouter.encodePermit(sampleTrade.inputAmount.currency, options.inputTokenPermit))\n        }\n\n        const recipient: string = validateAndParseAddress(options.recipient)\n        const deadline = toHex(options.deadline)\n\n        for (const trade of trades) {\n            for (const { route, inputAmount, outputAmount } of trade.swaps) {\n                const amountIn: string = toHex(trade.maximumAmountIn(options.slippageTolerance, inputAmount).quotient)\n                const amountOut: string = toHex(trade.minimumAmountOut(options.slippageTolerance, outputAmount).quotient)\n\n                // flag for whether the trade is single hop or not\n                const singleHop = route.pools.length === 1\n\n                if (singleHop) {\n                    if (trade.tradeType === TradeType.EXACT_INPUT) {\n                        const exactInputSingleParams = {\n                            tokenIn: route.tokenPath[0].address,\n                            tokenOut: route.tokenPath[1].address,\n                            fee: route.pools[0].fee,\n                            recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n                            deadline,\n                            amountIn,\n                            amountOutMinimum: amountOut,\n                            sqrtPriceLimitX96: toHex(options.sqrtPriceLimitX96 ?? 0)\n                        }\n                        calldatas.push(SwapRouter.INTERFACE.encodeFunctionData(options.feeOnTransfer && !inputIsNative ? 'exactInputSingleSupportingFeeOnTransferTokens' : 'exactInputSingle', [exactInputSingleParams]))\n                    } else {\n                        const exactOutputSingleParams = {\n                            tokenIn: route.tokenPath[0].address,\n                            tokenOut: route.tokenPath[1].address,\n                            fee: route.pools[0].fee,\n                            recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n                            deadline,\n                            amountOut,\n                            amountInMaximum: amountIn,\n                            sqrtPriceLimitX96: toHex(options.sqrtPriceLimitX96 ?? 0)\n                        }\n\n                        calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutputSingle', [exactOutputSingleParams]))\n                    }\n                } else {\n                    invariant(options.sqrtPriceLimitX96 === undefined, 'MULTIHOP_PRICE_LIMIT')\n\n                    const path: string = encodeRouteToPath(route, trade.tradeType === TradeType.EXACT_OUTPUT)\n\n                    if (trade.tradeType === TradeType.EXACT_INPUT) {\n                        const exactInputParams = {\n                            path,\n                            recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n                            deadline,\n                            amountIn,\n                            amountOutMinimum: amountOut\n                        }\n\n                        calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactInput', [exactInputParams]))\n                    } else {\n                        const exactOutputParams = {\n                            path,\n                            recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n                            deadline,\n                            amountOut,\n                            amountInMaximum: amountIn\n                        }\n\n                        calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutput', [exactOutputParams]))\n                    }\n                }\n            }\n        }\n\n        // unwrap\n        if (routerMustCustody) {\n            if (!!options.fee) {\n                const feeRecipient: string = validateAndParseAddress(options.fee.recipient)\n                const fee = toHex(options.fee.fee.multiply(10_000).quotient)\n                if (outputIsNative) {\n                    calldatas.push(\n                        SwapRouter.INTERFACE.encodeFunctionData('unwrapWNativeTokenWithFee', [\n                            toHex(totalAmountOut.quotient),\n                            recipient,\n                            fee,\n                            feeRecipient\n                        ])\n                    )\n                } else {\n                    calldatas.push(\n                        SwapRouter.INTERFACE.encodeFunctionData('sweepTokenWithFee', [\n                            sampleTrade.outputAmount.currency.wrapped.address,\n                            toHex(totalAmountOut.quotient),\n                            recipient,\n                            fee,\n                            feeRecipient\n                        ])\n                    )\n                }\n            } else {\n                calldatas.push(\n                    SwapRouter.INTERFACE.encodeFunctionData('unwrapWNativeToken', [toHex(totalAmountOut.quotient), recipient])\n                )\n            }\n        }\n\n        // refund\n        if (mustRefund) {\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('refundNativeToken'))\n        }\n\n        return {\n            calldata:\n                calldatas.length === 1 ? calldatas[0] : SwapRouter.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n            value: toHex(totalValue.quotient)\n        }\n    }\n}\n","import JSBI from 'jsbi'\n\n// constants used internally but not expected to be used externally\nexport const NEGATIVE_ONE = JSBI.BigInt(-1)\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\n\n// used in liquidity amount math\nexport const Q96 = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(96))\nexport const Q192 = JSBI.exponentiate(Q96, JSBI.BigInt(2))\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.fef18eeb.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components/macro'\nimport { ButtonGray } from '../Button'\nimport { cssVar, darken } from 'polished'\nimport { AutoColumn } from 'components/Column'\nimport { Input as NumericalInput } from '../NumericalInput'\n// @ts-ignore\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\n\n//index\nexport const InputPanel = styled.div<{ hideInput?: boolean }>`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    position: relative;\n    border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n        // background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : 'var(--bg2)')};\n    background-color: transparent;\n    z-index: 1;\n    width: 100% !important;\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    width: 100%!important;\n  `}\n`\nexport const FixedContainer = styled.div`\n    width: 100%;\n    height: 60px;\n    align-items: center;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    z-index: 2;\n`\nexport const Container = styled.div<{ hideInput: boolean }>`\n    border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n    background-color: transparent;\n    width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n`\nexport const CurrencySelect = styled(ButtonGray) <{ selected: boolean; hideInput?: boolean; page?: string; shallow: boolean; swap: boolean }>`\n    align-items: center;\n    font-size: 24px;\n    font-weight: 500;\n    background-color: var(--currency-select);\n    color: var(--text1);\n    border-radius: 16px;\n    outline: none;\n    cursor: pointer;\n    user-select: none;\n    border: none;\n    height: ${({ hideInput }) => (hideInput ? '38px' : '35px')};\n    width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n    min-width: 214px;\n    padding: 0 15px;\n    justify-content: space-between;\n    margin-right: ${({ hideInput }) => (hideInput ? '0' : '12px')};\n\n    &:focus,\n    &:hover {\n        background-color: var(--currency-select-hover);\n    }\n    ${({ shallow }) =>\n        shallow &&\n        css`\n            padding: 0;\n            background-color: transparent;\n            box-shadow: none;\n\n            &:hover, &:focus {\n                background-color: transparent;\n                cursor: default;\n            }\n        `}\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`{\n    width: 100%;\n    margin: 0;\n  }`}\n`\nexport const InputRow = styled.div<{ selected: boolean; hideCurrency: boolean }>`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    padding: ${({ hideCurrency }) => (hideCurrency ? '1rem 1rem 0.75rem 0' : '1rem 1rem 0.75rem 1rem')};\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`{\n    flex-direction: column;\n    align-items: stretch;\n  }`}\n`\nexport const AutoColumnStyled = styled(AutoColumn) <{ page?: string }>`\n    left: 1rem;\n    bottom: -13% !important;\n    ${({ theme, page }) => theme.mediaWidth.upToExtraSmall`\n  left: ${page === 'addLiq' ? '0' : ''};\n  bottom: -25% !important;\n  `}\n`\nexport const LabelRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    color: ${({ theme }) => 'var(--text1)'};\n    font-size: 0.75rem;\n    line-height: 1rem;\n    padding: 0 1rem 1rem;\n\n    span:hover {\n        cursor: pointer;\n        color: ${({ theme }) => darken(0.2, String(cssVar('--text2')))};\n    }\n`\nexport const FiatRow = styled(LabelRow) <{ shallow?: boolean; page: string | undefined }>`\n    justify-content: flex-end;\n    padding: ${({ shallow, page }) => (page === 'addLiq' ? '0 1rem' : shallow ? '0' : '0 1rem 1rem')};\n    margin-top: ${({ page }) => (page === 'pool' ? '.3rem' : '0')};\n\n    span {\n        &:hover {\n            color: white;\n            cursor: default;\n        }\n    }\n\n`\nexport const Aligner = styled.span<{ centered: boolean }>`\n    display: flex;\n    align-items: center;\n    justify-content: ${({ centered }) => (centered ? 'center' : 'space-between')};\n    width: 100%;\n    position: relative;\n`\nexport const NumericalInputStyled = styled(NumericalInput)`\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 18px!important;\n  `}\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`{\n    text-align: left!important;\n    width: 100%;\n    margin: 15px 0 10px!important;\n  }`}\n`\nexport const StyledDropDown = styled(DropDown) <{ selected: boolean }>`\n    margin: 0 0.25rem 0 0.35rem;\n    height: 35%;\n\n    path {\n        stroke: ${({ selected, theme }) => (selected ? 'var(--text1)' : theme.white)};\n        stroke-width: 1.5px;\n    }\n`\nexport const StyledTokenName = styled.span<{ active?: boolean }>`\n    ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n    font-size: ${({ active }) => (active ? '16px' : '16px')};\n`\nexport const MaxButton = styled.button<{ page: string | undefined }>`\n    background-color: ${({ page, theme }) => page === 'addLiq' ? 'var(--primary)' : 'var(--primary-weak)'};\n    border-radius: 6px;\n    color: white;\n    margin-right: 10px;\n    border: none;\n    padding: 4px 6px;\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    margin: 10px 0 0 0;\n  `}\n    &:hover {\n        background-color: ${({\n    page,\n    theme\n}) => page === 'addLiq' ? darken(0.05, String(cssVar('--primary'))) : darken(0.05, '#D536C8')};\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n      width: 100%;\n      margin-top: 10px;\n      margin-right: 0;\n  `}\n`\n","import { Pair } from \"@uniswap/v2-sdk\";\nimport { Currency, CurrencyAmount, Percent, Token } from \"@uniswap/sdk-core\";\nimport { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport { useCurrencyBalance } from \"../../state/wallet/hooks\";\nimport CurrencySearchModal from \"../SearchModal/CurrencySearchModal\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport DoubleCurrencyLogo from \"../DoubleLogo\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { TYPE } from \"../../theme\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { Trans } from \"@lingui/macro\";\nimport { FiatValue } from \"./FiatValue\";\nimport Loader from \"../Loader\";\nimport useUSDCPrice from \"../../hooks/useUSDCPrice\";\nimport { Aligner, AutoColumnStyled, Container, CurrencySelect, FiatRow, FixedContainer, InputPanel, InputRow, MaxButton, NumericalInputStyled, StyledTokenName } from \"./styled\";\nimport { WrappedCurrency } from \"../../models/types\";\n\ninterface CurrencyInputPanelProps {\n    value: string;\n    onUserInput: (value: string) => void;\n    onMax?: () => void;\n    showMaxButton: boolean;\n    label?: ReactNode;\n    onCurrencySelect?: (currency: Currency) => void;\n    currency?: WrappedCurrency | null;\n    hideBalance?: boolean;\n    pair?: Pair | null;\n    hideInput?: boolean;\n    otherCurrency?: Currency | null;\n    fiatValue?: CurrencyAmount<Token> | null;\n    priceImpact?: Percent;\n    id: string;\n    showCommonBases?: boolean;\n    showCurrencyAmount?: boolean;\n    disableNonToken?: boolean;\n    showBalance?: boolean;\n    renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode;\n    locked?: boolean;\n    hideCurrency?: boolean;\n    centered?: boolean;\n    disabled: boolean;\n    shallow: boolean;\n    swap: boolean;\n    page?: string;\n}\n\nexport default function CurrencyInputPanel({\n    value,\n    onUserInput,\n    onMax,\n    showMaxButton,\n    onCurrencySelect,\n    currency,\n    otherCurrency,\n    id,\n    showCommonBases,\n    showCurrencyAmount,\n    disableNonToken,\n    fiatValue,\n    priceImpact,\n    hideBalance = false,\n    pair = null, // used for double token logo\n    hideInput = false,\n    locked = false,\n    showBalance,\n    hideCurrency = false,\n    centered = false,\n    disabled,\n    shallow = false,\n    swap = false,\n    page,\n    ...rest\n}: CurrencyInputPanelProps) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const { account } = useActiveWeb3React();\n\n    const balance = useCurrencyBalance(account ?? undefined, currency ?? undefined);\n\n    const currentPrice = useUSDCPrice(currency ?? undefined);\n\n    const handleDismissSearch = useCallback(() => {\n        setModalOpen(false);\n    }, [setModalOpen]);\n\n    const balanceString = useMemo(() => {\n        if (!balance) return \"Loading...\";\n\n        const _balance = balance.toFixed();\n\n        if (_balance.split(\".\")[0].length > 10) {\n            return _balance.slice(0, 7) + \"...\";\n        }\n\n        if (+balance.toFixed() === 0) {\n            return \"0\";\n        }\n        if (+balance.toFixed() < 0.0001) {\n            return \"< 0.0001\";\n        }\n\n        return +balance.toFixed(3);\n    }, [balance]);\n\n    return (\n        <InputPanel id={id} hideInput={hideInput} {...rest}>\n            {locked && (\n                <FixedContainer style={{ height: `${page === \"pool\" ? \"40px\" : \"80px\"}` }}>\n                    <AutoColumnStyled\n                        gap=\"sm\"\n                        justify=\"center\"\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            width: \"100%\",\n                            marginTop: \"18px\",\n                            position: \"absolute\",\n                            bottom: \"10%\",\n                        }}\n                    >\n                        {/* <Lock /> */}\n                        <TYPE.label fontSize=\"14px\">\n                            <Trans>Price is outside specified price range. Single-asset deposit only.</Trans>\n                        </TYPE.label>\n                    </AutoColumnStyled>\n                </FixedContainer>\n            )}\n\n            <Container hideInput={hideInput}>\n                <InputRow\n                    hideCurrency={hideCurrency}\n                    style={hideInput ? { borderRadius: \"8px\", padding: `${page === \"pool\" ? \"0\" : \"\"}` } : { padding: `${page === \"pool\" ? \"0\" : \"\"}` }}\n                    selected={!onCurrencySelect}\n                >\n                    {!hideCurrency && (\n                        <CurrencySelect\n                            page={page}\n                            selected={!!currency}\n                            hideInput={hideInput}\n                            className=\"open-currency-select-button\"\n                            shallow={shallow}\n                            swap={swap}\n                            disabled={shallow && page !== \"addLiq\"}\n                            onClick={() => {\n                                if (onCurrencySelect) {\n                                    setModalOpen(true);\n                                }\n                            }}\n                        >\n                            <Aligner centered={centered} title={balance ? balance.toSignificant(4) : \"\"}>\n                                <RowFixed>\n                                    {pair ? (\n                                        <span style={{ marginRight: \"0.5rem\" }}>\n                                            <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n                                        </span>\n                                    ) : currency ? (\n                                        <CurrencyLogo style={{ marginRight: \"0.5rem\" }} currency={currency} size={\"24px\"} />\n                                    ) : null}\n                                    {pair ? (\n                                        <StyledTokenName className=\"pair-name-container\">\n                                            {pair?.token0.symbol}:{pair?.token1.symbol}\n                                        </StyledTokenName>\n                                    ) : (\n                                        <StyledTokenName className=\"token-symbol-container\" active={Boolean(currency && currency.symbol)}>\n                                            {(currency && currency.symbol && currency.symbol.length > 20 ? (\n                                                currency.symbol.slice(0, 4) + \"...\" + currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                                            ) : currency ? (\n                                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                    <span>\n                                                        {shallow && showBalance && balance && page === \"addLiq\" && +balance.toSignificant(4) < 0.0001 ? (\n                                                            <Trans>{`Balance: < 0.0001 ${currency.symbol}`}</Trans>\n                                                        ) : shallow && showBalance && balance ? (\n                                                            <Trans>{`Balance: ${balanceString} ${currency.symbol}`}</Trans>\n                                                        ) : (\n                                                            currency.symbol\n                                                        )}\n                                                    </span>\n                                                    {showBalance && balance && !shallow ? (\n                                                        <span style={{ position: \"absolute\", right: 0, fontSize: \"13px\" }} title={balance.toExact()}>\n                                                            {balanceString}\n                                                        </span>\n                                                    ) : (\n                                                        showBalance &&\n                                                        !balance &&\n                                                        account && (\n                                                            <span style={{ position: \"absolute\", right: 0 }}>\n                                                                <Loader />\n                                                            </span>\n                                                        )\n                                                    )}\n                                                </div>\n                                            ) : null) || <Trans>Select a token</Trans>}\n                                        </StyledTokenName>\n                                    )}\n                                </RowFixed>\n                            </Aligner>\n                        </CurrencySelect>\n                    )}\n                    {(swap || page === \"addLiq\") && !locked && currency && showMaxButton && (\n                        <MaxButton page={page} onClick={onMax}>\n                            Max\n                        </MaxButton>\n                    )}\n                    {!hideInput && (\n                        <>\n                            <NumericalInputStyled\n                                style={{\n                                    backgroundColor: \"transparent\",\n                                    textAlign: hideCurrency ? \"left\" : \"right\",\n                                    fontSize: \"20px\",\n                                    marginTop: page === \"pool\" ? \"1rem\" : \"0\",\n                                }}\n                                className=\"token-amount-input\"\n                                value={value}\n                                disabled={disabled}\n                                onUserInput={(val) => {\n                                    if (val === \".\") val = \"0.\";\n                                    onUserInput(val);\n                                }}\n                            />\n                        </>\n                    )}\n                </InputRow>\n                {!hideInput && !hideBalance && !locked && value ? (\n                    <FiatRow shallow={shallow} page={page}>\n                        <RowBetween>\n                            <FiatValue fiatValue={fiatValue} priceImpact={priceImpact} />\n                        </RowBetween>\n                    </FiatRow>\n                ) : currency && swap && currentPrice ? (\n                    <FiatRow page={page}>\n                        <RowBetween>{`1 ${currency.symbol} = $${currentPrice.toFixed()}`}</RowBetween>\n                    </FiatRow>\n                ) : (\n                    currency &&\n                    swap && (\n                        <FiatRow page={page}>\n                            <RowBetween>\n                                <Trans>Updating...</Trans>\n                            </RowBetween>\n                        </FiatRow>\n                    )\n                )}\n            </Container>\n            {onCurrencySelect && (\n                <CurrencySearchModal\n                    isOpen={modalOpen}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={onCurrencySelect}\n                    selectedCurrency={currency}\n                    otherSelectedCurrency={otherCurrency}\n                    showCommonBases={showCommonBases}\n                    showCurrencyAmount={showCurrencyAmount}\n                    disableNonToken={disableNonToken}\n                />\n            )}\n        </InputPanel>\n    );\n}\n","import styled from 'styled-components/macro'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n    gap?: 'sm' | 'md' | 'lg' | string\n    justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import Badge, { BadgeVariant } from \"components/Badge\";\nimport styled from \"styled-components/macro\";\nimport { MouseoverTooltip } from \"../Tooltip\";\nimport { Trans } from \"@lingui/macro\";\nimport { AlertCircle } from \"react-feather\";\n\nconst BadgeWrapper = styled.div`\n    font-size: 14px;\n    display: flex;\n    justify-content: flex-end;\n    user-select: none;\n    margin-right: 0.5rem;\n`;\n\nconst BadgeText = styled.div`\n    font-weight: 500;\n    font-size: 14px;\n    cursor: default;\n`;\n\nconst ActiveDot = styled.span`\n    background-color: #9ff8c4;\n    border-radius: 50%;\n    height: 8px;\n    width: 8px;\n    margin-right: 4px;\n`;\n\ninterface RangeBadgeProps {\n    removed: boolean | undefined;\n    inRange: boolean | undefined;\n}\n\nexport default function RangeBadge({ removed, inRange }: RangeBadgeProps) {\n    return (\n        <BadgeWrapper>\n            {removed ? (\n                <MouseoverTooltip text={<Trans>Your position has 0 liquidity, and is not earning fees.</Trans>}>\n                    <Badge variant={BadgeVariant.DEFAULT}>\n                        <AlertCircle width={14} height={14} />\n                        &nbsp;\n                        <BadgeText>\n                            <Trans>Closed</Trans>\n                        </BadgeText>\n                    </Badge>\n                </MouseoverTooltip>\n            ) : inRange ? (\n                <MouseoverTooltip text={<Trans>The price of this pool is within your selected range. Your position is currently earning fees.</Trans>}>\n                    <Badge variant={BadgeVariant.DEFAULT}>\n                        <ActiveDot /> &nbsp;\n                        <BadgeText>\n                            <Trans>In range</Trans>\n                        </BadgeText>\n                    </Badge>\n                </MouseoverTooltip>\n            ) : (\n                <MouseoverTooltip text={<Trans>The price of this pool is outside of your selected range. Your position is not currently earning fees.</Trans>}>\n                    <Badge variant={BadgeVariant.WARNING}>\n                        <AlertCircle width={14} height={14} />\n                        &nbsp;\n                        <BadgeText>\n                            <Trans>Out of range</Trans>\n                        </BadgeText>\n                    </Badge>\n                </MouseoverTooltip>\n            )}\n        </BadgeWrapper>\n    );\n}\n","import { useMemo } from 'react'\nimport { DEFAULT_LOCALE, SupportedLocale } from '../../constants/locales'\nimport { navigatorLocale, useActiveLocale } from '../../hooks/useActiveLocale'\nimport { useLocationLinkProps } from 'hooks/useLocationLinkProps'\n\nconst useTargetLocale = (activeLocale: SupportedLocale) => {\n    const browserLocale = useMemo(() => navigatorLocale(), [])\n\n    if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\n        if (activeLocale === browserLocale) {\n            return DEFAULT_LOCALE\n        } else {\n            return browserLocale\n        }\n    }\n    return null\n}\n\nexport function SwitchLocaleLink() {\n    const activeLocale = useActiveLocale()\n    const targetLocale = useTargetLocale(activeLocale)\n\n    const { to } = useLocationLinkProps(targetLocale)\n\n    if (!targetLocale || !to) return null\n\n    return <></>\n}\n","import { stringify } from 'qs'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useLocation } from 'react-router-dom'\nimport { LocationDescriptor } from 'history'\nimport { SupportedLocale } from 'constants/locales'\nimport { useActiveLocale } from './useActiveLocale'\nimport { useMemo } from 'react'\n\nexport function useLocationLinkProps(locale: SupportedLocale | null): {\n    to?: LocationDescriptor\n    onClick?: () => void\n} {\n    const location = useLocation()\n    const qs = useParsedQueryString()\n    const activeLocale = useActiveLocale()\n\n    return useMemo(\n        () =>\n            !locale\n                ? {}\n                : {\n                    to: {\n                        ...location,\n                        search: stringify({ ...qs, lng: locale })\n                    },\n                    onClick: () => {\n                        console.log()\n                    }\n                },\n        [location, qs, activeLocale, locale]\n    )\n}\n","import { Result, useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\nimport { useEffect, useMemo } from 'react'\nimport { useV3NFTPositionManagerContract } from './useContract'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useFarmingSubgraph } from './useFarmingSubgraph'\nimport { PositionPool } from '../models/interfaces'\nimport usePrevious, { usePreviousNonEmptyArray } from './usePrevious'\nimport { useActiveWeb3React } from './web3'\n\ninterface UseV3PositionsResults {\n    loading: boolean\n    positions: PositionPool[] | undefined\n}\n\nfunction useV3PositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseV3PositionsResults | any {\n    const positionManager = useV3NFTPositionManagerContract()\n    const inputs = useMemo(() => (tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : []), [tokenIds])\n    const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n    const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n    const error = useMemo(() => results.some(({ error }) => error), [results])\n\n    const { account } = useActiveWeb3React()\n\n    const prevAccount = usePrevious(account)\n\n    const positions = useMemo(() => {\n        if (!loading && !error && tokenIds) {\n            return results.map((call, i) => {\n                const tokenId = tokenIds[i]\n                const result = call.result as Result\n                return {\n                    tokenId,\n                    fee: result.fee,\n                    feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n                    feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n                    liquidity: result.liquidity,\n                    nonce: result.nonce,\n                    operator: result.operator,\n                    tickLower: result.tickLower,\n                    tickUpper: result.tickUpper,\n                    token0: result.token0,\n                    token1: result.token1,\n                    tokensOwed0: result.tokensOwed0,\n                    tokensOwed1: result.tokensOwed1\n                }\n            })\n        }\n        return undefined\n    }, [loading, error, results, tokenIds, account])\n\n    const prevPositions = usePreviousNonEmptyArray(positions || [])\n\n    return useMemo(() => {\n\n        if (prevAccount !== account) return {\n            loading,\n            positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n        }\n\n        if (!prevPositions && positions) return {\n            loading,\n            positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n        }\n\n        if (tokenIds && prevPositions && tokenIds.length !== prevPositions.length) return {\n            loading: false,\n            positions: []\n        }\n\n        if ((!positions || positions.length === 0) && prevPositions && prevPositions.length !== 0) return {\n            loading: false,\n            positions: prevPositions.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n        }\n\n        return {\n            loading,\n            positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n        }\n\n    }, [prevPositions, positions, inputs, account])\n\n}\n\ninterface UseV3PositionResults {\n    loading: boolean\n    position: PositionPool | undefined\n}\n\nexport function useV3PositionFromTokenId(tokenId: BigNumber | undefined): UseV3PositionResults {\n    const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n    return {\n        loading: position.loading,\n        position: position.positions?.[0]\n    }\n}\n\nexport function useV3Positions(account: string | null | undefined): UseV3PositionsResults {\n    const positionManager = useV3NFTPositionManagerContract()\n\n    const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [account ?? undefined])\n\n    const { fetchPositionsOnFarmer: { positionsOnFarmer, positionsOnFarmerLoading, fetchPositionsOnFarmerFn } } = useFarmingSubgraph()\n\n    // we don't expect any account balance to ever exceed the bounds of max safe int\n    const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n    useEffect(() => {\n        if (account) {\n            fetchPositionsOnFarmerFn(account)\n        }\n    }, [account])\n\n\n    const tokenIdsArgs = useMemo(() => {\n        if (accountBalance && account) {\n            const tokenRequests: any[] = []\n            for (let i = 0; i < accountBalance; i++) {\n                tokenRequests.push([account, i])\n            }\n            return tokenRequests\n        }\n        return []\n    }, [account, accountBalance])\n\n    const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n    const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n\n    const tokenIds = useMemo(() => {\n        if (account) {\n            return tokenIdResults\n                .map(({ result }) => result)\n                .filter((result): result is Result => !!result)\n                .map((result) => BigNumber.from(result[0]))\n        }\n        return []\n    }, [account, tokenIdResults])\n\n    // const prevTokenIds = usePreviousNonEmptyArray(tokenIds)\n\n    // const _tokenIds = useMemo(() => {\n\n    //     if (!prevTokenIds) return tokenIds\n\n    //     if (tokenIds.length === 0 && prevTokenIds.length !== 0) return prevTokenIds\n\n    //     return tokenIds\n\n    // }, [tokenIds, account])\n\n    const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds)\n\n    const transferredTokenIds = useMemo(() => {\n\n        if (positionsOnFarmer && positionsOnFarmer.transferredPositionsIds) {\n            return positionsOnFarmer.transferredPositionsIds\n        }\n\n        return []\n\n    }, [positionsOnFarmer, account])\n\n    //@ts-ignore\n    const { positions: _positionsOnFarmer, loading: _positionsOnFarmerLoading } = useV3PositionsFromTokenIds(transferredTokenIds)\n\n    const oldTransferredTokenIds = useMemo(() => {\n\n        if (positionsOnFarmer && positionsOnFarmer.oldTransferredPositionsIds) {\n            return positionsOnFarmer.oldTransferredPositionsIds\n        }\n\n        return []\n\n    }, [positionsOnFarmer, account])\n\n    //@ts-ignore\n    const { positions: _positionsOnOldFarmer, loading: _positionsOnOldFarmerLoading } = useV3PositionsFromTokenIds(oldTransferredTokenIds)\n\n    const combinedPositions = useMemo(() => {\n\n        if (positions && _positionsOnFarmer && _positionsOnOldFarmer) {\n            return [...positions, ..._positionsOnFarmer.map(position => ({\n                ...position,\n                onFarming: true\n            })), ..._positionsOnOldFarmer.map(position => ({\n                ...position,\n                oldFarming: true\n            }))]\n        }\n\n        return undefined\n\n    }, [positions, _positionsOnFarmer, account])\n\n    return {\n        loading: someTokenIdsLoading || balanceLoading || positionsLoading || _positionsOnFarmerLoading,\n        positions: combinedPositions\n    }\n}","import { useEffect, useState } from 'react'\nimport { useActiveWeb3React } from './web3'\nimport { Contract, providers } from 'ethers'\nimport ERC20_ABI from 'abis/erc20.json'\nimport NON_FUN_POS_MAN from 'abis/non-fun-pos-man.json'\nimport FARMING_CENTER_ABI from 'abis/farming-center.json'\nimport FINITE_FARMING_ABI from 'abis/finite-farming.json'\nimport { ChainId, FARMING_CENTER, FINITE_FARMING, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from '../constants/addresses'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport {\n    CURRENT_EVENTS,\n    FETCH_ETERNAL_FARM,\n    FETCH_ETERNAL_FARM_FROM_POOL,\n    FETCH_FINITE_FARM_FROM_POOL,\n    FETCH_LIMIT,\n    FETCH_POOL,\n    FETCH_REWARDS,\n    FETCH_TOKEN,\n    FUTURE_EVENTS,\n    HAS_TRANSFERED_POSITIONS,\n    INFINITE_EVENTS,\n    POSITIONS_ON_ETERNAL_FARMING,\n    TRANSFERED_POSITIONS,\n    TRANSFERED_POSITIONS_FOR_POOL\n} from '../utils/graphql-queries'\nimport { useClients } from './subgraph/useClients'\nimport { formatUnits, parseUnits } from '@ethersproject/units'\nimport {\n    Deposit,\n    DetachedEternalFarming,\n    EternalFarming,\n    FarmingEvent,\n    FormattedEternalFarming,\n    FormattedRewardInterface,\n    PoolChartSubgraph,\n    PoolSubgraph,\n    Position,\n    SubgraphResponse,\n    TickFarming,\n    TokenSubgraph\n} from '../models/interfaces'\nimport { Aprs, FutureFarmingEvent } from '../models/interfaces'\nimport { fetchEternalFarmTVL, fetchLimitFarmAPR, fetchLimitFarmTVL } from 'utils/api'\nimport { useEthPrices } from \"./useEthPrices\"\n\nimport AlgebraConfig from \"algebra.config\"\n\nexport function useFarmingSubgraph() {\n\n    const { chainId, account, library } = useActiveWeb3React()\n    const { dataClient, farmingClient } = useClients()\n\n    const [positionsForPool, setPositionsForPool] = useState<Position[] | null>(null)\n    const [positionsForPoolLoading, setPositionsForPoolLoading] = useState<boolean>(false)\n\n    const [transferredPositions, setTransferredPositions] = useState<Deposit[] | null>(null)\n    const [transferredPositionsLoading, setTransferredPositionsLoading] = useState<boolean>(false)\n\n    const [hasTransferredPositions, setHasTransferredPositions] = useState<boolean | null>(null)\n    const [hasTransferredPositionsLoading, setHasTransferredPositionsLoading] = useState<boolean>(false)\n\n    const [rewardsResult, setRewardsResult] = useState<FormattedRewardInterface[] | string>([])\n    const [rewardsLoading, setRewardsLoading] = useState<boolean>(false)\n\n    const [futureEvents, setFutureEvents] = useState<FutureFarmingEvent[] | null>(null)\n    const [futureEventsLoading, setFutureEventsLoading] = useState<boolean>(false)\n\n    const [allEvents, setAllEvents] = useState<{ currentEvents: FarmingEvent[]; futureEvents: FutureFarmingEvent[] } | null>(null)\n    const [allEventsLoading, setAllEventsLoading] = useState<boolean>(false)\n\n    const [positionsOnFarmer, setPositionsOnFarmer] = useState<{ transferredPositionsIds: string[], oldTransferredPositionsIds: string[] } | null>(null)\n    const [positionsOnFarmerLoading, setPositionsOnFarmerLoading] = useState<boolean>(false)\n\n    const [eternalFarms, setEternalFarms] = useState<FormattedEternalFarming[] | null>(null)\n    const [eternalFarmsLoading, setEternalFarmsLoading] = useState<boolean>(false)\n\n    const [positionsEternal, setPositionsEternal] = useState<TickFarming[] | null>(null)\n    const [positionsEternalLoading, setPositionsEternalLoading] = useState<boolean>(false)\n\n    const provider = library ? new providers.Web3Provider(library.provider) : undefined\n\n    const ethPrices = useEthPrices()\n\n    async function fetchEternalFarmAPR() {\n\n        const apiURL = AlgebraConfig.API[chainId || ChainId.BNB].eternalFarmsAPR\n\n        try {\n            return await fetch(apiURL).then(v => v.json())\n\n        } catch (error: any) {\n            return {}\n        }\n\n    }\n\n    async function getEvents(events: any[], farming = false) {\n\n        const _events: any[] = []\n\n        for (let i = 0; i < events.length; i++) {\n\n            const pool = await fetchPool(events[i].pool)\n            const rewardToken = await fetchToken(events[i].rewardToken, farming)\n            const bonusRewardToken = await fetchToken(events[i].bonusRewardToken, farming)\n            const multiplierToken = await fetchToken(events[i].multiplierToken, farming)\n\n            const _event: any = {\n                ...events[i],\n                pool,\n                rewardToken,\n                bonusRewardToken,\n                multiplierToken,\n                reward: formatUnits(BigNumber.from(events[i].reward), rewardToken.decimals),\n                bonusReward: formatUnits(BigNumber.from(events[i].bonusReward), bonusRewardToken.decimals)\n            }\n\n            _events.push({ ..._event })\n        }\n\n        return _events\n\n    }\n\n    async function fetchToken(tokenId: string, farming = false) {\n\n        try {\n\n            const { data: { tokens }, error } = (await (farming ? farmingClient : dataClient).query<SubgraphResponse<TokenSubgraph[]>>({\n                query: FETCH_TOKEN(),\n                variables: { tokenId }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            return tokens[0]\n\n        } catch (err) {\n            throw new Error('Fetch token ' + err)\n        }\n    }\n\n    async function fetchPool(poolId: string) {\n        try {\n            const { data: { pools }, error } = (await dataClient.query<SubgraphResponse<PoolSubgraph[]>>({\n                query: FETCH_POOL(),\n                variables: { poolId }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            return pools[0]\n\n        } catch (err) {\n            throw new Error('Fetch pools ' + err)\n        }\n    }\n\n    async function fetchLimit(limitFarmingId: string) {\n        try {\n\n            const { data: { limitFarmings }, error } = (await farmingClient.query<SubgraphResponse<FutureFarmingEvent[]>>({\n                query: FETCH_LIMIT(),\n                variables: { limitFarmingId }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            return limitFarmings[0]\n\n\n        } catch (err) {\n            throw new Error('Fetch limit farmings ' + err)\n        }\n    }\n\n    async function fetchEternalFarming(farmId: string) {\n\n        try {\n\n            const { data: { eternalFarmings }, error } = (await farmingClient.query<SubgraphResponse<DetachedEternalFarming[]>>({\n                query: FETCH_ETERNAL_FARM(),\n                variables: { farmId }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            return eternalFarmings[0]\n\n\n        } catch (err: any) {\n            throw new Error('Fetch infinite farming ' + err.message)\n        }\n    }\n\n    async function fetchRewards(reload?: boolean) {\n\n        if (!account || !chainId) return\n\n        try {\n            setRewardsLoading(true)\n\n            const { data: { rewards }, error } = (await farmingClient.query({\n                query: FETCH_REWARDS(),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: { account }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            if (!provider) throw new Error('No provider')\n\n            const newRewards: any[] = []\n\n            for (const reward of rewards) {\n\n                const rewardContract = new Contract(\n                    reward.rewardAddress,\n                    ERC20_ABI,\n                    provider\n                )\n\n                const symbol = await rewardContract.symbol()\n                const name = await rewardContract.name()\n                const decimals = await rewardContract.decimals()\n\n                const newReward = {\n                    ...reward,\n                    amount: reward.amount > 0 ? (reward.amount / Math.pow(10, decimals)).toFixed(decimals) : 0,\n                    trueAmount: reward.amount,\n                    symbol,\n                    name\n                }\n\n                newRewards.push(newReward)\n\n            }\n\n            setRewardsResult(newRewards)\n\n        } catch (err) {\n            setRewardsResult('failed')\n            if (err instanceof Error) {\n                throw new Error('Reward fetching ' + err.message)\n            }\n        }\n\n        setRewardsLoading(false)\n    }\n\n    async function fetchFutureEvents(reload?: boolean) {\n\n        try {\n            setFutureEventsLoading(true)\n\n            const { data: { limitFarmings: futureEvents }, error } = (await farmingClient.query<SubgraphResponse<FutureFarmingEvent[]>>({\n                query: FUTURE_EVENTS(),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: { timestamp: Math.round(Date.now() / 1000) }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            if (futureEvents.length === 0) {\n                setFutureEvents([])\n                setFutureEventsLoading(false)\n                return\n            }\n\n            setFutureEvents(await getEvents(futureEvents, true))\n\n        } catch (err) {\n            throw new Error('Future limit farmings fetching ' + err)\n        } finally {\n            setFutureEventsLoading(false)\n        }\n    }\n\n    async function fetchAllEvents(reload?: boolean) {\n\n        setAllEventsLoading(true)\n\n        try {\n\n            const { data: { limitFarmings: currentEvents }, error } = (await farmingClient.query<SubgraphResponse<FarmingEvent[]>>({\n                query: CURRENT_EVENTS(),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: {\n                    startTime: Math.round(Date.now() / 1000),\n                    endTime: Math.round(Date.now() / 1000)\n                }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            const { data: { limitFarmings: futureEvents }, error: _error } = await farmingClient.query<SubgraphResponse<FutureFarmingEvent[]>>({\n                query: FUTURE_EVENTS(),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: { timestamp: Math.round(Date.now() / 1000) }\n            })\n\n            if (_error) throw new Error(`${_error.name} ${_error.message}`)\n\n            if (currentEvents.length === 0 && futureEvents.length === 0) {\n                setAllEvents({\n                    currentEvents: [],\n                    futureEvents: []\n                })\n                setAllEventsLoading(false)\n                return\n            }\n\n            const eventTVL = await fetchLimitFarmTVL(chainId || ChainId.BNB)\n            const aprs: Aprs = await fetchLimitFarmAPR(chainId || ChainId.BNB)\n\n            const price = 1\n\n            const EVENT_LOCK = 100_000\n\n            setAllEvents({\n                currentEvents: await getEvents(currentEvents.map(el => ({\n                    ...el,\n                    active: true,\n                    apr: aprs[el.id] ? aprs[el.id] : 37\n                })), true),\n                futureEvents: await getEvents(futureEvents.map(el => ({\n                    ...el,\n                    locked: eventTVL[el.id] === undefined ? false : eventTVL[el.id] * price >= EVENT_LOCK,\n                    apr: aprs[el.id] ? aprs[el.id] : 37\n                })), true)\n            })\n\n            setAllEventsLoading(false)\n\n        } catch (err) {\n            throw new Error('Error while fetching current limit farmings ' + err)\n        } finally {\n            setAllEventsLoading(false)\n        }\n    }\n\n    async function fetchHasTransferredPositions() {\n        if (!chainId || !account) return\n\n        if (!provider) throw new Error('No provider')\n\n        try {\n            setHasTransferredPositionsLoading(true)\n\n            const { data: { deposits: positionsTransferred }, error } = (await farmingClient.query<SubgraphResponse<Deposit[]>>({\n                query: HAS_TRANSFERED_POSITIONS(),\n                fetchPolicy: 'network-only',\n                variables: { account }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            setHasTransferredPositions(Boolean(positionsTransferred.length))\n            setHasTransferredPositionsLoading(false)\n\n        } catch (err: any) {\n            throw new Error('Has transferred positions ' + err.code + ' ' + err.message)\n        } finally {\n            setHasTransferredPositionsLoading(false)\n        }\n\n    }\n\n    async function fetchTransferredPositions(reload?: boolean) {\n\n        if (!chainId || !account) return\n\n        if (!provider) throw new Error('No provider')\n\n        try {\n\n            setTransferredPositionsLoading(true)\n\n            const { data: { deposits: positionsTransferred }, error } = (await farmingClient.query<SubgraphResponse<Deposit[]>>({\n                query: TRANSFERED_POSITIONS(true),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: { account }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            if (positionsTransferred.length === 0) {\n                setTransferredPositions([])\n                setTransferredPositionsLoading(false)\n                return\n            }\n\n            const _positions: any[] = []\n\n            for (const position of positionsTransferred) {\n\n                const nftContract = new Contract(\n                    NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n                    NON_FUN_POS_MAN,\n                    provider.getSigner()\n                )\n\n                const { tickLower, tickUpper, liquidity, token0, token1 } = await nftContract.positions(+position.id)\n\n                let _position = {\n                    ...position,\n                    tickLower,\n                    tickUpper,\n                    liquidity,\n                    token0,\n                    token1\n                }\n\n                if (!position.limitFarming && !position.eternalFarming && typeof position.pool === 'string') {\n\n                    const _pool = await fetchPool(position.pool)\n\n                    if (!_pool) continue\n                    //@ts-ignore\n                    _position = { ..._position, pool: _pool }\n                }\n\n                if (position.limitFarming) {\n\n                    const finiteFarmingContract = new Contract(\n                        FINITE_FARMING[chainId],\n                        FINITE_FARMING_ABI,\n                        provider.getSigner()\n                    )\n\n                    const {\n                        rewardToken,\n                        bonusRewardToken,\n                        pool,\n                        startTime,\n                        endTime,\n                        createdAtTimestamp,\n                        multiplierToken,\n                        tokenAmountForTier1,\n                        tokenAmountForTier2,\n                        tokenAmountForTier3,\n                        tier1Multiplier,\n                        tier2Multiplier,\n                        tier3Multiplier\n                    } = await fetchLimit(position.limitFarming)\n\n                    const rewardInfo = await finiteFarmingContract.callStatic.getRewardInfo(\n                        [rewardToken, bonusRewardToken, pool, +startTime, +endTime],\n                        +position.id\n                    )\n\n                    const _rewardToken = await fetchToken(rewardToken, true)\n                    const _bonusRewardToken = await fetchToken(bonusRewardToken, true)\n                    const _multiplierToken = await fetchToken(multiplierToken, true)\n                    const _pool = await fetchPool(pool)\n\n                    if (!_pool || !_rewardToken || !_bonusRewardToken || !_multiplierToken) continue\n\n                    _position = {\n                        ..._position,\n                        //@ts-ignore\n                        pool: _pool,\n                        limitRewardToken: _rewardToken,\n                        limitBonusRewardToken: _bonusRewardToken,\n                        limitStartTime: +startTime,\n                        limitEndTime: +endTime,\n                        started: +startTime * 1000 < Date.now(),\n                        ended: +endTime * 1000 < Date.now(),\n                        createdAtTimestamp: +createdAtTimestamp,\n                        limitEarned: rewardInfo[0] ? formatUnits(BigNumber.from(rewardInfo[0]), _rewardToken.decimals) : 0,\n                        limitBonusEarned: rewardInfo[1] ? formatUnits(BigNumber.from(rewardInfo[1]), _bonusRewardToken.decimals) : 0,\n                        limitMultiplierToken: _multiplierToken,\n                        limitTokenAmountForTier1: tokenAmountForTier1,\n                        limitTokenAmountForTier2: tokenAmountForTier2,\n                        limitTokenAmountForTier3: tokenAmountForTier3,\n                        limitTier1Multiplier: tier1Multiplier,\n                        limitTier2Multiplier: tier2Multiplier,\n                        limitTier3Multiplier: tier3Multiplier\n                    }\n\n                } else {\n                    const { data: { limitFarmings }, error } = await farmingClient.query({\n                        //@ts-ignore\n                        query: FETCH_FINITE_FARM_FROM_POOL([position.pool]),\n                        fetchPolicy: 'network-only'\n                    })\n\n                    if (error) throw new Error(`${error.name} ${error.message}`)\n\n                    if (limitFarmings.filter((farm: any) => Math.round(Date.now() / 1000) < farm.startTime).length !== 0) {\n                        _position = {\n                            ..._position,\n                            limitAvailable: true\n                        }\n                    }\n                }\n\n                if (position.eternalFarming) {\n\n                    const {\n                        rewardToken,\n                        bonusRewardToken,\n                        pool,\n                        startTime,\n                        endTime,\n                        multiplierToken,\n                        tier1Multiplier,\n                        tier2Multiplier,\n                        tier3Multiplier,\n                        tokenAmountForTier1,\n                        tokenAmountForTier2,\n                        tokenAmountForTier3\n                    } = await fetchEternalFarming(position.eternalFarming)\n\n                    const farmingCenterContract = new Contract(\n                        FARMING_CENTER[chainId],\n                        FARMING_CENTER_ABI,\n                        provider.getSigner()\n                    )\n\n                    const { reward, bonusReward } = await farmingCenterContract.callStatic.collectRewards(\n                        [rewardToken, bonusRewardToken, pool, startTime, endTime],\n                        +position.id,\n                        { from: account }\n                    )\n\n                    const _rewardToken = await fetchToken(rewardToken, true)\n                    const _bonusRewardToken = await fetchToken(bonusRewardToken, true)\n                    const _pool = await fetchPool(pool)\n                    const _multiplierToken = await fetchToken(multiplierToken, true)\n\n                    if (!_pool || !_rewardToken || !_bonusRewardToken || !_multiplierToken) continue\n\n                    _position = {\n                        ..._position,\n                        eternalRewardToken: _rewardToken,\n                        eternalBonusRewardToken: _bonusRewardToken,\n                        eternalStartTime: startTime,\n                        eternalEndTime: endTime,\n                        eternalMultiplierToken: _multiplierToken,\n                        eternalTier1Multiplier: tier1Multiplier,\n                        eternalTier2Multiplier: tier2Multiplier,\n                        eternalTier3Multiplier: tier3Multiplier,\n                        eternalTokenAmountForTier1: tokenAmountForTier1,\n                        eternalTokenAmountForTier2: tokenAmountForTier2,\n                        eternalTokenAmountForTier3: tokenAmountForTier3,\n                        //@ts-ignore\n                        pool: _pool,\n                        eternalEarned: formatUnits(BigNumber.from(reward), _rewardToken.decimals),\n                        eternalBonusEarned: formatUnits(BigNumber.from(bonusReward), _bonusRewardToken.decimals)\n                    }\n\n                } else {\n\n                    const { data: { eternalFarmings }, error } = await farmingClient.query({\n                        //@ts-ignore\n                        query: FETCH_ETERNAL_FARM_FROM_POOL([position.pool]),\n                        fetchPolicy: 'network-only'\n                    })\n\n                    if (error) throw new Error(`${error.name} ${error.message}`)\n\n                    if (eternalFarmings.filter((farm: any) => (+farm.rewardRate || +farm.bonusRewardRate) && !farm.isDetached).length !== 0) {\n                        _position = {\n                            ..._position,\n                            eternalAvailable: true\n                        }\n                    }\n                }\n\n                _positions.push(_position)\n            }\n            setTransferredPositions(_positions)\n\n        } catch (err: any) {\n            throw new Error('Transferred positions ' + 'code: ' + err.code + ', ' + err.message)\n        } finally {\n            setTransferredPositionsLoading(false)\n        }\n    }\n\n    async function fetchPositionsOnEternalFarming(reload?: boolean) {\n\n        if (!chainId || !account) return\n\n        if (!provider) throw new Error('No provider')\n\n        setPositionsEternalLoading(true)\n\n        try {\n\n            const { data: { deposits: eternalPositions }, error } = (await farmingClient.query<SubgraphResponse<Position[]>>({\n                query: POSITIONS_ON_ETERNAL_FARMING(),\n                fetchPolicy: reload ? 'network-only' : 'cache-first',\n                variables: { account }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            if (eternalPositions.length === 0) {\n                setPositionsEternal([])\n                setPositionsEternalLoading(false)\n                return\n            }\n\n            const _positions: TickFarming[] = []\n\n            for (const position of eternalPositions) {\n\n                const nftContract = new Contract(\n                    NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n                    NON_FUN_POS_MAN,\n                    provider.getSigner()\n                )\n\n                const { tickLower, tickUpper, liquidity, token0, token1 } = await nftContract.positions(+position.id)\n\n                let _position: TickFarming = { tickLower, tickUpper, liquidity, token0, token1 }\n\n                const { rewardToken, bonusRewardToken, pool, startTime, endTime } = await fetchEternalFarming(String(position.eternalFarming))\n\n                const _pool = await fetchPool(pool)\n                const _rewardToken = await fetchToken(rewardToken)\n                const _bonusRewardToken = await fetchToken(bonusRewardToken)\n\n                if (!_pool || !_rewardToken || !_bonusRewardToken) continue\n\n                _position = {\n                    ..._position,\n                    ...position,\n                    pool: _pool,\n                    rewardToken: _rewardToken,\n                    bonusRewardToken: _bonusRewardToken,\n                    startTime,\n                    endTime\n                }\n\n                _positions.push(_position)\n            }\n\n            setPositionsEternal(_positions)\n\n        } catch (error: any) {\n            throw new Error('Infinite farms loading' + error.code + error.message)\n        }\n    }\n\n    async function fetchPositionsForPool(pool: PoolChartSubgraph, minRangeLength: string) {\n\n        if (!chainId || !account) return\n\n        try {\n\n            setPositionsForPoolLoading(true)\n\n            const { data: { deposits: positionsTransferred }, error: errorTransferred } = (await farmingClient.query<SubgraphResponse<Position[]>>({\n                query: TRANSFERED_POSITIONS_FOR_POOL(),\n                fetchPolicy: 'network-only',\n                variables: { account, pool: pool.id, minRangeLength }\n            }))\n\n            if (errorTransferred) throw new Error(`${errorTransferred.name} ${errorTransferred.message}`)\n\n            const _positions: Position[] = []\n\n            let _position: Position\n\n            //Hack\n            for (const position of positionsTransferred) {\n\n                _position = { ...position, onFarmingCenter: position.onFarmingCenter }\n\n                _positions.push(_position)\n\n            }\n\n            setPositionsForPool(_positions)\n\n        } catch (err) {\n            throw new Error('Positions for pools ' + err)\n        } finally {\n            setPositionsForPoolLoading(false)\n        }\n    }\n\n    async function fetchPositionsOnFarmer(account: string) {\n\n        try {\n            setPositionsOnFarmerLoading(true)\n\n            const { data: { deposits: positionsTransferred }, error } = (await farmingClient.query<SubgraphResponse<Position[]>>({\n                query: TRANSFERED_POSITIONS(true),\n                fetchPolicy: 'network-only',\n                variables: { account }\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            // const { data: { deposits: oldPositionsTransferred }, error: _error } = (await oldFarmingClient.query<SubgraphResponse<Deposit[]>>({\n            //     query: TRANSFERED_POSITIONS(false),\n            //     fetchPolicy: 'network-only',\n            //     variables: { account }\n            // }))\n\n            // if (_error) throw new Error(`${_error.name} ${_error.message}`)\n\n            if (positionsTransferred.length === 0) {\n                setPositionsOnFarmer({\n                    transferredPositionsIds: [],\n                    oldTransferredPositionsIds: []\n                })\n                setPositionsOnFarmerLoading(false)\n                return\n            }\n\n            const transferredPositionsIds = positionsTransferred.map(position => position.id)\n\n            const oldTransferredPositionsIds = []\n\n            setPositionsOnFarmer({\n                transferredPositionsIds,\n                oldTransferredPositionsIds\n            })\n\n        } catch (err) {\n            setPositionsOnFarmerLoading(false)\n            throw new Error('Fetching positions on farmer ' + err)\n        }\n    }\n\n    async function fetchEternalFarms(reload: boolean) {\n\n        // if (!ethPrices) return\n\n        setEternalFarmsLoading(true)\n\n        try {\n\n            const { data: { eternalFarmings }, error } = (await farmingClient.query<SubgraphResponse<EternalFarming[]>>({\n                query: INFINITE_EVENTS,\n                fetchPolicy: reload ? 'network-only' : 'cache-first'\n            }))\n\n            if (error) throw new Error(`${error.name} ${error.message}`)\n\n            if (eternalFarmings.length === 0) {\n                setEternalFarms([])\n                setEternalFarmsLoading(false)\n                return\n            }\n\n            const aprs: Aprs = await fetchEternalFarmAPR()\n            const eventTVL = await fetchEternalFarmTVL(chainId || ChainId.BNB)\n\n            let _eternalFarmings: FormattedEternalFarming[] = []\n            // TODO\n            // .filter(farming => +farming.bonusRewardRate || +farming.rewardRate)\n            for (const farming of eternalFarmings) {\n                const pool = await fetchPool(farming.pool)\n                const rewardToken = await fetchToken(farming.rewardToken, true)\n                const bonusRewardToken = await fetchToken(farming.bonusRewardToken, true)\n                const multiplierToken = await fetchToken(farming.multiplierToken, true)\n\n                if (!pool || !rewardToken || !bonusRewardToken || !multiplierToken) continue\n\n                const _rewardRate = formatUnits(BigNumber.from(farming.rewardRate), rewardToken.decimals)\n                const _bonusRewardRate = formatUnits(BigNumber.from(farming.bonusRewardRate), bonusRewardToken.decimals)\n\n                const dailyRewardRate = Math.round(+_rewardRate * 86_400)\n                const dailyBonusRewardRate = Math.round(+_bonusRewardRate * 86_400)\n\n                const apr = aprs[farming.id] ? aprs[farming.id] : 200\n                // const tvl = eventTVL[farming.id] ? Math.round(eventTVL[farming.id] * ethPrices.current) : 0\n\n                _eternalFarmings = [\n                    //@ts-ignore\n                    ..._eternalFarmings,\n                    {\n                        ...farming,\n                        rewardToken,\n                        bonusRewardToken,\n                        multiplierToken,\n                        dailyRewardRate,\n                        dailyBonusRewardRate,\n                        //@ts-ignore\n                        pool,\n                        apr,\n                        tvl: 0\n                    }\n                ]\n\n            }\n\n            setEternalFarms(_eternalFarmings)\n\n        } catch (err) {\n            setEternalFarms(null)\n            if (err instanceof Error) {\n                throw new Error('Error while fetching infinite farms ' + err.message)\n            }\n        } finally {\n            setEternalFarmsLoading(false)\n        }\n    }\n\n    return {\n        ethPricesFecthed: !!ethPrices,\n        fetchRewards: { rewardsResult, rewardsLoading, fetchRewardsFn: fetchRewards },\n        fetchFutureEvents: {\n            futureEvents,\n            futureEventsLoading,\n            fetchFutureEventsFn: fetchFutureEvents\n        },\n        fetchAllEvents: { allEvents, allEventsLoading, fetchAllEventsFn: fetchAllEvents },\n        fetchPositionsForPool: {\n            positionsForPool,\n            positionsForPoolLoading,\n            fetchPositionsForPoolFn: fetchPositionsForPool\n        },\n        fetchTransferredPositions: {\n            transferredPositions,\n            transferredPositionsLoading,\n            fetchTransferredPositionsFn: fetchTransferredPositions\n        },\n        fetchHasTransferredPositions: {\n            hasTransferredPositions,\n            hasTransferredPositionsLoading,\n            fetchHasTransferredPositionsFn: fetchHasTransferredPositions\n        },\n        fetchPositionsOnFarmer: {\n            positionsOnFarmer,\n            positionsOnFarmerLoading,\n            fetchPositionsOnFarmerFn: fetchPositionsOnFarmer\n        },\n        fetchEternalFarms: {\n            eternalFarms,\n            eternalFarmsLoading,\n            fetchEternalFarmsFn: fetchEternalFarms\n        },\n        fetchPositionsOnEternalFarmings: {\n            positionsEternal,\n            positionsEternalLoading,\n            fetchPositionsOnEternalFarmingFn: fetchPositionsOnEternalFarming\n        }\n    }\n\n}\n","import styled from 'styled-components/macro'\nimport { Link as HistoryLink, NavLink } from 'react-router-dom'\nimport { cssVar, darken } from 'polished'\nimport { ArrowLeft } from 'react-feather'\n\nconst activeClassName = 'ACTIVE'\nexport const Tabs = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\nexport const StyledNavLink = styled(NavLink).attrs({\n    activeClassName\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => 'var(--text3)'};\n  font-size: 20px;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    font-weight: 500;\n    color: ${({ theme }) => 'var(--text1)'};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, String(cssVar('--text1')))};\n  }\n`\nexport const StyledHistoryLink = styled(HistoryLink) <{ flex: string | undefined }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\nexport const ActiveText = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n`\nexport const StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => 'var(--text1)'};\n`\n","import { StyledNavLink, Tabs } from './styled'\nimport { Trans } from '@lingui/macro'\n\ninterface SwapPoolTabs {\n    active: 'swap' | 'pool'\n}\n\nexport function SwapPoolTabs({ active }: SwapPoolTabs) {\n    return (\n        <Tabs style={{ marginBottom: '20px', display: 'none', padding: '1rem 1rem 0 1rem' }}>\n            <StyledNavLink id={`swap-nav-link`} to={'/swap'} isActive={() => active === 'swap'}>\n                <Trans>Swap</Trans>\n            </StyledNavLink>\n            <StyledNavLink id={`pool-nav-link`} to={'/pool'} isActive={() => active === 'pool'}>\n                <Trans>Pool</Trans>\n            </StyledNavLink>\n        </Tabs>\n    )\n}\n","import { Percent } from \"@uniswap/sdk-core\";\nimport { ReactNode } from \"react\";\nimport { useAppDispatch } from \"../../state/hooks\";\nimport { Link as HistoryLink, useLocation } from \"react-router-dom\";\nimport { resetMintState } from \"../../state/mint/actions\";\nimport { resetMintState as resetMintV3State } from \"../../state/mint/v3/actions\";\nimport { Trans } from \"@lingui/macro\";\nimport { Box } from \"rebass\";\nimport SettingsTab from \"../Settings\";\nimport { ArrowLeft } from \"react-feather\";\n\ninterface AddRemoveTabsProps {\n    adding: boolean;\n    creating: boolean;\n    defaultSlippage: Percent;\n    positionID?: string | undefined;\n    showBackLink?: boolean;\n    children?: ReactNode | undefined;\n}\n\nexport function AddRemoveTabs({ adding, creating, defaultSlippage, positionID, children }: AddRemoveTabsProps) {\n    // reset states on back\n    const dispatch = useAppDispatch();\n    const location = useLocation();\n\n    // detect if back should redirect to v3 or v2 pool page\n    const poolLink = location.pathname.includes(\"add/v2\") ? \"/pool/v2\" : \"/pool\" + (!!positionID ? `/${positionID.toString()}` : \"\");\n\n    return (\n        <div className={\"flex-s-between\"}>\n            <HistoryLink\n                to={poolLink}\n                onClick={() => {\n                    if (adding) {\n                        // not 100% sure both of these are needed\n                        dispatch(resetMintState());\n                        dispatch(resetMintV3State());\n                    }\n                }}\n            >\n                <ArrowLeft stroke={\"var(--icon)\"} />\n            </HistoryLink>\n            <span className={\"fs-125 w-100 ta-c\"}>{creating ? <Trans>Create a pair</Trans> : adding ? <Trans>Increase Liquidity</Trans> : <Trans>Remove Liquidity</Trans>}</span>\n            <Box style={{ marginRight: \".5rem\" }}>{children}</Box>\n            <SettingsTab placeholderSlippage={defaultSlippage} />\n        </div>\n    );\n}\n","import { Token } from '@uniswap/sdk-core'\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WNATIVE: { [chainId: number]: Token } = {\n    [ChainId.BNB]: new Token(ChainId.BNB, AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].wrappedNativeCurrency.address, AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].wrappedNativeCurrency.decimals, AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].nativeCurrency.symbol, AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].nativeCurrency.name),\n    [ChainId.PULSE]: new Token(ChainId.PULSE, AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].wrappedNativeCurrency.address, AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].wrappedNativeCurrency.decimals, AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].nativeCurrency.symbol, AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].nativeCurrency.name)\n}\n","import invariant from 'tiny-invariant'\nimport { Currency, NativeCurrency, Token } from '@uniswap/sdk-core'\nimport { WNATIVE } from './wnative'\nimport AlgebraConfig from \"algebra.config\"\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Matic extends NativeCurrency {\n    private static _etherCache: { [chainId: number]: Matic } = {}\n\n    protected constructor(chainId: number) {\n        super(chainId, AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.decimals, AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol, AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.name)\n    }\n\n    public get wrapped(): Token {\n        const weth9 = WNATIVE[this.chainId]\n        invariant(!!weth9, 'WRAPPED')\n        return weth9\n    }\n\n    public static onChain(chainId: number): Matic {\n        return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Matic(chainId))\n    }\n\n    public equals(other: Currency): boolean {\n        return other.isNative && other.chainId === this.chainId\n    }\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { Matic } from '../lib/src/entities/matic'\nimport { WNATIVE } from '../lib/src/entities/wnative'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"./addresses\"\n\nexport const [\n    DEFAULT_TOKENS_BNB,\n    TOKENS_FOR_MULTIHOP_BNB,\n    STABLE_TOKENS_BNB\n] = [\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].defaultTokens,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].tokensForMultihop,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].stableTokens,\n].map(tokens => Object.entries(tokens).map(([address, { name, symbol, decimals }]: any) => new Token(AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].chainId, address, decimals, symbol, name)))\n\nexport const [\n    DEFAULT_TOKENS_PULSE,\n    TOKENS_FOR_MULTIHOP_PULSE,\n    STABLE_TOKENS_PULSE\n] = [\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].defaultTokens,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].tokensForMultihop,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].stableTokens,\n].map(tokens => Object.entries(tokens).map(([address, { name, symbol, decimals }]: any) => new Token(AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].chainId, address, decimals, symbol, name)))\n\n\nexport const STABLE_TOKEN_FOR_USD_PRICE_BNB = new Token(\n    AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].chainId,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].stableTokenForUSDPrice.address,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].stableTokenForUSDPrice.decimals,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].stableTokenForUSDPrice.symbol,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].stableTokenForUSDPrice.name,\n)\n\nexport const STABLE_TOKEN_FOR_USD_PRICE_PULSE = new Token(\n    AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].chainId,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].stableTokenForUSDPrice.address,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].stableTokenForUSDPrice.decimals,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].stableTokenForUSDPrice.symbol,\n    AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].stableTokenForUSDPrice.name,\n)\n\nexport const WMATIC_EXTENDED: { [chainId: number]: Token } = {\n    ...WNATIVE\n}\n\nexport class ExtendedEther extends Matic {\n    private static _cachedEther: { [chainId: number]: ExtendedEther } = {}\n\n    public get wrapped(): Token {\n        if (this.chainId in WMATIC_EXTENDED) return WMATIC_EXTENDED[this.chainId]\n        throw new Error('Unsupported chain ID')\n    }\n\n    public static onChain(chainId: number): ExtendedEther {\n        return this._cachedEther[chainId] ?? (this._cachedEther[chainId] = new ExtendedEther(chainId))\n    }\n}\n","import styled from 'styled-components/macro'\nimport Column, { AutoColumn } from '../Column'\nimport Row, { RowBetween } from '../Row'\nimport { CheckCircle } from 'react-feather'\nimport { LinkStyledButton, TYPE } from '../../theme'\n\n//All\nexport const Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    overflow: auto;\n`\nexport const PaddedColumn = styled(AutoColumn)`\n    padding: 20px;\n`\nexport const SearchInput = styled.input`\n    position: relative;\n    display: flex;\n    height: 2rem;\n    min-height: 2rem;\n    max-height: 2rem;\n    padding-left: 12px;\n    padding-right: 12px;\n    align-items: center;\n    width: 100%;\n    white-space: nowrap;\n    background: transparent;\n    outline: none;\n    border-radius: 8px;\n    color: var(--text1);\n    border: 1px solid var(--primary);\n    -webkit-appearance: none;\n\n    font-size: 16px;\n\n    ::placeholder {\n        color: ${({ theme }) => 'var(--text3)'};\n        opacity: 1;\n    }\n\n    transition: border 100ms;\n\n    :focus {\n        border: 1px solid var(--primary);\n        outline: none;\n    }\n`\nexport const Separator = styled.div`\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => 'var(--bg2)'};\n`\n\n//CommonBases\nexport const MobileWrapper = styled(AutoColumn)`\n`\nexport const BaseWrapper = styled.div<{ disable?: boolean }>`\n    border: 1px solid ${({ disable }) => (disable ? 'transparent' : '#3881a5')};\n    border-radius: 10px;\n    display: flex;\n    padding: 6px;\n\n    align-items: center;\n\n    :hover {\n        cursor: ${({ disable }) => !disable && 'pointer'};\n        background-color: ${({ disable }) => !disable && '#9ddcfb'};\n    }\n\n    color: ${({ theme, disable }) => disable && 'var(--text3)'};\n    background-color: ${({ disable }) => disable && '#e5e5e5'};\n    filter: ${({ disable }) => disable && 'grayscale(1)'};\n`\n\n//CurrencyList\nexport const Tag = styled.div`\n    background-color: ${({ theme }) => 'var(--bg3)'};\n    color: ${({ theme }) => 'var(--text2)'};\n    font-size: 14px;\n    border-radius: 4px;\n    padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n    max-width: 6rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    justify-self: flex-end;\n    margin-right: 4px;\n`\nexport const FixedContentRow = styled.div`\n    padding: 4px 20px;\n    height: 56px;\n    display: grid;\n    grid-gap: 16px;\n    align-items: center;\n`\nexport const TagContainer = styled.div`\n    display: flex;\n    justify-content: flex-end;\n`\nexport const MenuItem = styled(RowBetween)`\n    padding: 4px 20px;\n    height: 56px;\n    display: grid;\n    grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\n    grid-gap: 16px;\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\n    pointer-events: ${({ disabled }) => disabled && 'none'};\n\n    :hover {\n        background-color: ${({ disabled }) => !disabled && '#9ddcfb'};\n    }\n\n    opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\n//CurrencySearch\nexport const ContentWrapper = styled(Column)`\n    width: 100%;\n    flex: 1 1;\n    position: relative;\n    color: #080064;\n`\n\n//ImportRow\nexport const TokenSection = styled.div<{ dim?: boolean }>`\n    padding: 4px 20px;\n    height: 56px;\n    display: grid;\n    grid-template-columns: auto minmax(auto, 1fr) auto;\n    grid-gap: 16px;\n    align-items: center;\n    color: #080064;\n\n    opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\nexport const CheckIcon = styled(CheckCircle)`\n    height: 16px;\n    width: 16px;\n    margin-right: 6px;\n    stroke: ${({ theme }) => 'var(--green1)'};\n`\nexport const NameOverflow = styled.div`\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    max-width: 140px;\n    font-size: 12px;\n`\n\n//ImportList\nexport const TextDot = styled.div`\n    height: 3px;\n    width: 3px;\n    background-color: ${({ theme }) => 'var(--text2)'};\n    border-radius: 50%;\n`\nexport const Checkbox = styled.input`\n    border: 1px solid ${({ theme }) => 'var(--red2)'};\n    height: 20px;\n    margin: 0;\n`\n\n//ImportTokens\nexport const AddressText = styled(TYPE.blue)`\n    font-size: 12px;\n    word-break: break-all;\n    color: var(--text1);\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n  `}\n`\n\n//Manage\nexport const ToggleWrapper = styled(RowBetween)`\n    background-color: ${({ theme }) => 'var(--bg3)'};\n    border-radius: 12px;\n    padding: 6px;\n`\nexport const ToggleOption = styled.div<{ active?: boolean }>`\n    width: 48%;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 12px;\n    font-weight: 600;\n    background-color: ${({ theme, active }) => (active ? 'var(--bg1)' : 'var(--bg3)')};\n    color: ${({ theme, active }) => (active ? 'var(--text1)' : 'var(--text2)')};\n    user-select: none;\n\n    :hover {\n        cursor: pointer;\n        opacity: 0.7;\n    }\n`\n\n//ManageLists\nexport const ManageWrapper = styled(Column)`\n    height: 100%;\n`\nexport const UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n    padding: 0;\n    font-size: 1rem;\n    opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\n`\nexport const PopoverContainer = styled.div<{ show: boolean }>`\n    z-index: 100;\n    visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n    opacity: ${(props) => (props.show ? 1 : 0)};\n    transition: visibility 150ms linear, opacity 150ms linear;\n    background: ${({ theme }) => 'var(--bg2)'};\n    border: 1px solid ${({ theme }) => 'var(--bg3)'};\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.01), 0 4px 8px rgba(0, 0, 0, 0.04), 0 16px 24px rgba(0, 0, 0, 0.04),\n    0 24px 32px rgba(0, 0, 0, 0.01);\n    color: ${({ theme }) => 'var(--text2)'};\n    border-radius: 0.5rem;\n    padding: 1rem;\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-gap: 8px;\n    font-size: 1rem;\n    text-align: left;\n`\nexport const StyledMenu = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    border: none;\n`\nexport const StyledTitleText = styled.div<{ active: boolean }>`\n    font-size: 16px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-weight: 600;\n    color: ${({ theme, active }) => (active ? theme.white : 'var(--text2)')};\n`\nexport const StyledListUrlText = styled(TYPE.main) <{ active: boolean }>`\n    font-size: 12px;\n    color: ${({ theme, active }) => (active ? theme.white : 'var(--text2)')};\n`\nexport const RowWrapper = styled(Row) <{ bgColor: string; active: boolean; hasActiveTokens: boolean }>`\n    background-color: ${({\n    bgColor,\n    active,\n    theme\n}) => (active ? bgColor ?? 'transparent' : 'var(--bg2)')};\n    opacity: ${({ hasActiveTokens }) => (hasActiveTokens ? 1 : 0.4)};\n    transition: 200ms;\n    align-items: center;\n    padding: 1rem;\n    border-radius: 20px;\n`\nexport const ListContainer = styled.div`\n    height: 100%;\n    overflow: auto;\n    padding: 1rem 1rem 80px;\n`\nexport const SeparatorDark = styled.div`\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => 'var(--bg3)'};\n`\n\n//ManageTokens\nexport const ManageTokensWrapper = styled.div`\n    width: 100%;\n    height: calc(100% - 60px);\n    position: relative;\n    padding-bottom: 80px;\n`\nexport const Footer = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-radius: 0 0 20px 20px;\n    border-top: 1px solid ${({ theme }) => 'var(--bg3)'};\n    padding: 20px;\n    text-align: center;\n`\n","import { MaxUint256 } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ONE, ZERO } from '../internalConstants'\nimport { mostSignificantBit } from './mostSignificantBit'\n\nfunction mulShift(val: JSBI, mulBy: string): JSBI {\n    return JSBI.signedRightShift(JSBI.multiply(val, JSBI.BigInt(mulBy)), JSBI.BigInt(128))\n}\n\nconst Q32 = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(32))\n\nexport abstract class TickMath {\n    /**\n     * Cannot be constructed.\n     */\n\n    /**\n     * The minimum tick that can be used on any pool.\n     */\n    public static MIN_TICK = -887272\n    /**\n     * The maximum tick that can be used on any pool.\n     */\n    public static MAX_TICK: number = -TickMath.MIN_TICK\n\n    /**\n     * The sqrt ratio corresponding to the minimum tick that could be used on any pool.\n     */\n    public static MIN_SQRT_RATIO: JSBI = JSBI.BigInt('4295128739')\n    /**\n     * The sqrt ratio corresponding to the maximum tick that could be used on any pool.\n     */\n    public static MAX_SQRT_RATIO: JSBI = JSBI.BigInt('1461446703485210103287273052203988822378723970342')\n\n    /**\n     * Returns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick\n     * @param tick the tick for which to compute the sqrt ratio\n     */\n    public static getSqrtRatioAtTick(tick: number): JSBI {\n\n        invariant(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK && Number.isInteger(tick), 'TICK')\n        const absTick: number = tick < 0 ? tick * -1 : tick\n\n        let ratio: JSBI =\n            (absTick & 0x1) != 0\n                ? JSBI.BigInt('0xfffcb933bd6fad37aa2d162d1a594001')\n                : JSBI.BigInt('0x100000000000000000000000000000000')\n        if ((absTick & 0x2) != 0) ratio = mulShift(ratio, '0xfff97272373d413259a46990580e213a')\n        if ((absTick & 0x4) != 0) ratio = mulShift(ratio, '0xfff2e50f5f656932ef12357cf3c7fdcc')\n        if ((absTick & 0x8) != 0) ratio = mulShift(ratio, '0xffe5caca7e10e4e61c3624eaa0941cd0')\n        if ((absTick & 0x10) != 0) ratio = mulShift(ratio, '0xffcb9843d60f6159c9db58835c926644')\n        if ((absTick & 0x20) != 0) ratio = mulShift(ratio, '0xff973b41fa98c081472e6896dfb254c0')\n        if ((absTick & 0x40) != 0) ratio = mulShift(ratio, '0xff2ea16466c96a3843ec78b326b52861')\n        if ((absTick & 0x80) != 0) ratio = mulShift(ratio, '0xfe5dee046a99a2a811c461f1969c3053')\n        if ((absTick & 0x100) != 0) ratio = mulShift(ratio, '0xfcbe86c7900a88aedcffc83b479aa3a4')\n        if ((absTick & 0x200) != 0) ratio = mulShift(ratio, '0xf987a7253ac413176f2b074cf7815e54')\n        if ((absTick & 0x400) != 0) ratio = mulShift(ratio, '0xf3392b0822b70005940c7a398e4b70f3')\n        if ((absTick & 0x800) != 0) ratio = mulShift(ratio, '0xe7159475a2c29b7443b29c7fa6e889d9')\n        if ((absTick & 0x1000) != 0) ratio = mulShift(ratio, '0xd097f3bdfd2022b8845ad8f792aa5825')\n        if ((absTick & 0x2000) != 0) ratio = mulShift(ratio, '0xa9f746462d870fdf8a65dc1f90e061e5')\n        if ((absTick & 0x4000) != 0) ratio = mulShift(ratio, '0x70d869a156d2a1b890bb3df62baf32f7')\n        if ((absTick & 0x8000) != 0) ratio = mulShift(ratio, '0x31be135f97d08fd981231505542fcfa6')\n        if ((absTick & 0x10000) != 0) ratio = mulShift(ratio, '0x9aa508b5b7a84e1c677de54f3e99bc9')\n        if ((absTick & 0x20000) != 0) ratio = mulShift(ratio, '0x5d6af8dedb81196699c329225ee604')\n        if ((absTick & 0x40000) != 0) ratio = mulShift(ratio, '0x2216e584f5fa1ea926041bedfe98')\n        if ((absTick & 0x80000) != 0) ratio = mulShift(ratio, '0x48a170391f7dc42444e8fa2')\n\n        if (tick > 0) ratio = JSBI.divide(MaxUint256, ratio)\n\n        // back to Q96\n        return JSBI.greaterThan(JSBI.remainder(ratio, Q32), ZERO)\n            ? JSBI.add(JSBI.divide(ratio, Q32), ONE)\n            : JSBI.divide(ratio, Q32)\n    }\n\n    /**\n     * Returns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96\n     * and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96\n     * @param sqrtRatioX96 the sqrt ratio as a Q64.96 for which to compute the tick\n     */\n    public static getTickAtSqrtRatio(sqrtRatioX96: JSBI): number {\n        invariant(\n            JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n            JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO),\n            'SQRT_RATIO'\n        )\n\n        const sqrtRatioX128 = JSBI.leftShift(sqrtRatioX96, JSBI.BigInt(32))\n\n        const msb = mostSignificantBit(sqrtRatioX128)\n\n        let r: JSBI\n        if (JSBI.greaterThanOrEqual(JSBI.BigInt(msb), JSBI.BigInt(128))) {\n            r = JSBI.signedRightShift(sqrtRatioX128, JSBI.BigInt(msb - 127))\n        } else {\n            r = JSBI.leftShift(sqrtRatioX128, JSBI.BigInt(127 - msb))\n        }\n\n        let log_2: JSBI = JSBI.leftShift(JSBI.subtract(JSBI.BigInt(msb), JSBI.BigInt(128)), JSBI.BigInt(64))\n\n        for (let i = 0; i < 14; i++) {\n            r = JSBI.signedRightShift(JSBI.multiply(r, r), JSBI.BigInt(127))\n            const f = JSBI.signedRightShift(r, JSBI.BigInt(128))\n            log_2 = JSBI.bitwiseOr(log_2, JSBI.leftShift(f, JSBI.BigInt(63 - i)))\n            r = JSBI.signedRightShift(r, f)\n        }\n\n        const log_sqrt10001 = JSBI.multiply(log_2, JSBI.BigInt('255738958999603826347141'))\n\n        const tickLow = JSBI.toNumber(\n            JSBI.signedRightShift(\n                JSBI.subtract(log_sqrt10001, JSBI.BigInt('3402992956809132418596140100660247210')),\n                JSBI.BigInt(128)\n            )\n        )\n        const tickHigh = JSBI.toNumber(\n            JSBI.signedRightShift(\n                JSBI.add(log_sqrt10001, JSBI.BigInt('291339464771989622907027621153398088495')),\n                JSBI.BigInt(128)\n            )\n        )\n\n        return tickLow === tickHigh\n            ? tickLow\n            : JSBI.lessThanOrEqual(TickMath.getSqrtRatioAtTick(tickHigh), sqrtRatioX96)\n                ? tickHigh\n                : tickLow\n    }\n}\n","import { Currency, CurrencyAmount, Price, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useBestV3TradeExactOut } from './useBestV3Trade'\nimport { useActiveWeb3React } from './web3'\n\nimport { STABLE_TOKEN_FOR_USD_PRICE_BNB, STABLE_TOKEN_FOR_USD_PRICE_PULSE, STABLE_TOKENS_PULSE } from \"constants/tokens\"\nimport { ChainId } from \"constants/addresses\"\n\n// Stablecoin amounts used when calculating spot price for a given currency.\n// The amount is large enough to filter low liquidity pairs.\n\n// Two different consts used as a hack for allLiquidity flag in useUSDCPrice fn.\n// Doing another way makes amounts in EnterAmount stuck somehow.\nconst STABLECOIN_AMOUNT_OUT_ALL: { [chainId: number]: CurrencyAmount<Token> } = {\n    [ChainId.BNB]: CurrencyAmount.fromRawAmount(STABLE_TOKEN_FOR_USD_PRICE_BNB, 1),\n    [ChainId.PULSE]: CurrencyAmount.fromRawAmount(STABLE_TOKEN_FOR_USD_PRICE_PULSE, 1),\n}\n\nconst STABLECOIN_AMOUNT_OUT_FILTERED: { [chainId: number]: CurrencyAmount<Token> } = {\n    [ChainId.BNB]: CurrencyAmount.fromRawAmount(STABLE_TOKEN_FOR_USD_PRICE_BNB, 100_000e1),\n    [ChainId.PULSE]: CurrencyAmount.fromRawAmount(STABLE_TOKEN_FOR_USD_PRICE_PULSE, 100_000e1),\n}\n\n/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */\nexport default function useUSDCPrice(currency?: Currency, allLiquidity?: boolean): Price<Currency, Token> | undefined {\n    const { chainId } = useActiveWeb3React()\n\n    const amountOut = chainId ? (allLiquidity ? STABLECOIN_AMOUNT_OUT_ALL[chainId] : STABLECOIN_AMOUNT_OUT_FILTERED[chainId]) : undefined\n    const stablecoin = amountOut?.currency\n\n    const v3USDCTrade = useBestV3TradeExactOut(currency, amountOut)\n\n    return useMemo(() => {\n\n        if (!currency || !stablecoin) {\n            return undefined\n        }\n\n        // handle usdc\n        if (currency?.wrapped.equals(stablecoin)) {\n            return new Price(stablecoin, stablecoin, '1', '1')\n        }\n\n        if (v3USDCTrade.trade) {\n            const { numerator, denominator } = v3USDCTrade.trade.route.midPrice\n            return new Price(currency, stablecoin, denominator, numerator)\n        }\n\n        return undefined\n    }, [currency, stablecoin, v3USDCTrade.trade])\n}\n\nexport function useUSDCValue(currencyAmount: CurrencyAmount<Currency> | undefined | null, allLiquidity = false) {\n\n    const price = useUSDCPrice(currencyAmount?.currency, allLiquidity)\n\n    return useMemo(() => {\n        if (!price || !currencyAmount) return null\n        try {\n            return price.quote(currencyAmount)\n        } catch (error) {\n            return null\n        }\n    }, [currencyAmount, price])\n}\n","import { useBlocksFromTimestamps } from './blocks'\nimport { useDeltaTimestamps } from '../utils/queries'\nimport { useEffect, useMemo, useState } from 'react'\nimport { ApolloClient, gql, NormalizedCacheObject } from '@apollo/client'\nimport { useClients } from './subgraph/useClients'\nimport { useActiveWeb3React } from './web3'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport interface EthPrices {\n    current: number\n    oneDay: number\n    twoDay: number\n    oneWeek: number\n}\n\nexport const ETH_PRICES = gql`\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\n    current: bundles(first: 1, subgraphError: allow) {\n      maticPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }, subgraphError: allow) {\n      maticPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }, subgraphError: allow) {\n      maticPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }, subgraphError: allow) {\n        maticPriceUSD\n    }\n  }\n`\n\ninterface PricesResponse {\n    current: {\n        maticPriceUSD: string\n    }[]\n    oneDay: {\n        maticPriceUSD: string\n    }[]\n    twoDay: {\n        maticPriceUSD: string\n    }[]\n    oneWeek: {\n        maticPriceUSD: string\n    }[]\n}\n\nasync function fetchEthPrices(\n    blocks: [number, number, number, number],\n    client: ApolloClient<NormalizedCacheObject>\n): Promise<{ data: EthPrices | undefined; error: boolean }> {\n    try {\n\n        const { data, error } = await client.query<PricesResponse>({\n            query: ETH_PRICES,\n            variables: {\n                block24: blocks[0],\n                block48: blocks[1],\n                blockWeek: blocks[2]\n            }\n        })\n\n        if (error) {\n            return {\n                error: true,\n                data: undefined\n            }\n        } else if (data) {\n            return {\n                data: {\n                    current: parseFloat(data.current[0].maticPriceUSD ?? 0),\n                    oneDay: parseFloat(data.oneDay[0]?.maticPriceUSD ?? 0),\n                    twoDay: parseFloat(data.twoDay[0]?.maticPriceUSD ?? 0),\n                    oneWeek: parseFloat(data.oneWeek[0]?.maticPriceUSD ?? 0)\n                },\n                error: false\n            }\n        } else {\n            return {\n                data: undefined,\n                error: true\n            }\n        }\n    } catch (e) {\n        console.log(e)\n        return {\n            data: undefined,\n            error: true\n        }\n    }\n}\n\n/**\n * returns eth prices at current, 24h, 48h, and 1w intervals\n */\nexport function useEthPrices(): EthPrices | undefined {\n    const [prices, setPrices] = useState<{ [network: string]: EthPrices | undefined }>()\n    const [error, setError] = useState(false)\n    const { dataClient } = useClients()\n\n    const [t24, t48, tWeek] = useDeltaTimestamps()\n    const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n\n    // index on active network\n    const { chainId } = useActiveWeb3React()\n    const indexedPrices = prices?.[chainId ?? ChainId.BNB]\n\n    const formattedBlocks = useMemo(() => {\n        if (blocks) {\n            return blocks.reverse().sort((a, b) => +b.timestamp - +a.timestamp).map((b) => parseFloat(b.number))\n        }\n        return undefined\n    }, [blocks])\n\n    useEffect(() => {\n        async function fetch() {\n            const {\n                data,\n                error\n            } = await fetchEthPrices(formattedBlocks as [number, number, number, number], dataClient)\n            if (error || blockError) {\n                setError(true)\n            } else if (data) {\n                setPrices({\n                    [chainId ?? ChainId.BNB]: data\n                })\n            }\n        }\n\n        if (!indexedPrices && !error && formattedBlocks) {\n            fetch()\n        }\n    }, [error, prices, formattedBlocks, blockError, dataClient, indexedPrices, chainId])\n\n    return prices?.[chainId ?? ChainId.BNB]\n}\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport { useEffect, useMemo, useState } from 'react'\nimport { GET_BLOCKS } from '../../utils/graphql-queries'\nimport { splitQuery } from '../../utils/queries'\nimport { useClients } from '../subgraph/useClients'\nimport { useActiveWeb3React } from '../web3'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport function useBlocksFromTimestamps(timestamps: number[], blockClientOverride?: ApolloClient<NormalizedCacheObject>): {\n    blocks: | {\n        timestamp: string\n        number: any\n    }[] | undefined\n    error: boolean\n} {\n    const { chainId } = useActiveWeb3React()\n    const [blocks, setBlocks] = useState<any>()\n    const [error, setError] = useState(false)\n\n    const { blockClient } = useClients()\n    const activeBlockClient = blockClientOverride ?? blockClient\n\n    // derive blocks based on active network\n    const networkBlocks = blocks?.[chainId ?? ChainId.BNB]\n\n    useEffect(() => {\n        async function fetchData() {\n            const results = await splitQuery(GET_BLOCKS, activeBlockClient, [], timestamps)\n            if (results) {\n                setBlocks({ ...(blocks ?? {}), [chainId ?? ChainId.BNB]: results })\n            } else {\n                setError(true)\n            }\n        }\n\n        if (!networkBlocks && !error) {\n            fetchData()\n        }\n    })\n\n    const blocksFormatted = useMemo(() => {\n        if (blocks?.[chainId ?? ChainId.BNB]) {\n            const networkBlocks = blocks?.[chainId ?? ChainId.BNB]\n            const formatted: any[] = []\n            for (const t in networkBlocks) {\n                if (networkBlocks[t].length > 0) {\n                    formatted.push({\n                        timestamp: t.split('t')[1],\n                        number: networkBlocks[t][0]['number']\n                    })\n                }\n            }\n            return formatted\n        }\n        return undefined\n    }, [chainId, blocks])\n\n    return {\n        blocks: blocksFormatted,\n        error\n    }\n}\n\nexport async function getBlocksFromTimestamps(\n    timestamps: number[],\n    blockClient: ApolloClient<NormalizedCacheObject>,\n    skipCount = 500\n) {\n    if (timestamps?.length === 0) {\n        return []\n    }\n    const fetchedData: any = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n    const blocks: any[] = []\n    if (fetchedData) {\n        for (const t in fetchedData) {\n            if (fetchedData[t].length > 0) {\n                blocks.push({\n                    timestamp: t.split('t')[1],\n                    number: fetchedData[t][0]['number']\n                })\n            }\n        }\n    }\n    return blocks\n}\n","import { useSingleCallResult } from 'state/multicall/hooks'\nimport { useEffect, useState } from 'react'\nimport { useV3NFTPositionManagerContract } from './useContract'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Pool } from 'lib/src'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useBlockNumber } from 'state/application/hooks'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\n// compute current + counterfactual fees for a v3 position\nexport function useV3PositionFees(\n    pool?: Pool,\n    tokenId?: BigNumber,\n    asWETH = false\n): [CurrencyAmount<Currency>, CurrencyAmount<Currency>] | [undefined, undefined] {\n    const positionManager = useV3NFTPositionManagerContract(false)\n    const owner: string | undefined = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId])\n        .result?.[0]\n\n    const tokenIdHexString = tokenId?.toHexString()\n    const latestBlockNumber = useBlockNumber()\n\n    // TODO find a way to get this into multicall\n    // latestBlockNumber is included to ensure data stays up-to-date every block\n    const [amounts, setAmounts] = useState<[BigNumber, BigNumber]>()\n    useEffect(() => {\n        let stale = false\n\n        if (positionManager && tokenIdHexString && owner && typeof latestBlockNumber === 'number') {\n            positionManager.callStatic\n                .collect(\n                    {\n                        tokenId: tokenIdHexString,\n                        recipient: owner, // some tokens might fail if transferred to address(0)\n                        amount0Max: MAX_UINT128,\n                        amount1Max: MAX_UINT128\n                    },\n                    { from: owner } // need to simulate the call as the owner\n                )\n                .then((results: any) => {\n                    if (!stale) setAmounts([results.amount0, results.amount1])\n                })\n        }\n\n        return () => {\n            stale = true\n        }\n    }, [positionManager, tokenIdHexString, owner, latestBlockNumber])\n\n    if (pool && amounts) {\n        return [\n            CurrencyAmount.fromRawAmount(!asWETH ? unwrappedToken(pool.token0) : pool.token0, amounts[0].toString()),\n            CurrencyAmount.fromRawAmount(!asWETH ? unwrappedToken(pool.token1) : pool.token1, amounts[1].toString())\n        ]\n    } else {\n        return [undefined, undefined]\n    }\n}\n","import styled from 'styled-components/macro'\n\nexport const TextWrapper = styled.span<{ margin: boolean; link?: boolean; fontSize?: string; adjustSize?: boolean }>`\n    margin-left: ${({ margin }) => margin && '4px'};\n    color: var(--text1) !important;\n    font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n    &:hover {\n        color: var(--text2) !important;\n    }\n\n    @media screen and (max-width: 600px) {\n        font-size: ${({ adjustSize }) => adjustSize && '12px'};\n    }\n`\n","import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport { TextWrapper } from './styled'\n\ninterface HoverInlineTextProps {\n    text?: string\n    maxCharacters?: number\n    margin?: boolean\n    adjustSize?: boolean\n    fontSize?: string\n    link?: boolean\n}\n\nconst HoverInlineText = ({ text, maxCharacters = 20, margin = false, adjustSize = false, fontSize, link, ...rest }: HoverInlineTextProps) => {\n    const [showHover, setShowHover] = useState(false)\n\n    if (!text) {\n        return <span />\n    }\n\n    if (text.length > maxCharacters) {\n        return (\n            <Tooltip text={text} show={showHover}>\n                <TextWrapper\n                    onMouseEnter={() => setShowHover(true)}\n                    onMouseLeave={() => setShowHover(false)}\n                    margin={margin}\n                    adjustSize={adjustSize}\n                    link={link}\n                    fontSize={fontSize}\n                    {...rest}\n                >\n                    {' ' + text.slice(0, maxCharacters - 1) + '...'}\n                </TextWrapper>\n            </Tooltip>\n        )\n    }\n\n    return (\n        <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\n            {text}\n        </TextWrapper>\n    )\n}\nexport default HoverInlineText\n","import { Price, Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from 'lib/src'\n\nexport function getTickToPrice(baseToken?: Token, quoteToken?: Token, tick?: number): Price<Token, Token> | undefined {\n    if (!baseToken || !quoteToken || typeof tick !== 'number') {\n        return undefined\n    }\n    return tickToPrice(baseToken, quoteToken, tick)\n}\n","import { encodeSqrtRatioX96, FeeAmount, nearestUsableTick, priceToClosestTick, TickMath } from 'lib/src'\nimport { Price, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n    if (!baseToken || !quoteToken || !value) {\n        return undefined\n    }\n\n    if (!value.match(/^\\d*\\.?\\d+$/)) {\n        return undefined\n    }\n\n    const [whole, fraction] = value.split('.')\n\n    const decimals = fraction?.length ?? 0\n    const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''))\n\n    return new Price(\n        baseToken,\n        quoteToken,\n        JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n        JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n    )\n}\n\nexport function tryParseTick(\n    baseToken?: Token,\n    quoteToken?: Token,\n    feeAmount?: FeeAmount,\n    value?: string\n): number | undefined {\n    if (!baseToken || !quoteToken || !feeAmount || !value) {\n        return undefined\n    }\n\n    const price = tryParsePrice(baseToken, quoteToken, value)\n\n    if (!price) {\n        return undefined\n    }\n\n    let tick: number\n\n    // check price is within min/max bounds, if outside return min/max\n    const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator)\n\n    if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n        tick = TickMath.MAX_TICK\n    } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n        tick = TickMath.MIN_TICK\n    } else {\n        // this function is agnostic to the base, will always return the correct tick\n        tick = priceToClosestTick(price)\n    }\n\n\n    return nearestUsableTick(tick, 60)\n}\n","import { t } from '@lingui/macro'\nimport { BIG_INT_ZERO } from '../../../constants/misc'\nimport { getTickToPrice } from 'utils/getTickToPrice'\nimport JSBI from 'jsbi'\nimport { PoolState } from '../../../hooks/usePools'\nimport { encodeSqrtRatioX96, FeeAmount, nearestUsableTick, Pool, Position, priceToClosestTick, TickMath, tickToPrice } from 'lib/src'\nimport { Currency, CurrencyAmount, Price, Rounding, Token } from '@uniswap/sdk-core'\nimport { useCallback, useMemo } from 'react'\nimport { useActiveWeb3React } from '../../../hooks/web3'\nimport { AppState } from '../../index'\nimport { tryParseAmount } from '../../swap/hooks'\nimport { useCurrencyBalances } from '../../wallet/hooks'\nimport { Bound, Field, setFullRange, typeInput, typeLeftRangeInput, typeRightRangeInput, typeStartPriceInput } from './actions'\nimport { tryParseTick } from './utils'\nimport { usePool } from 'hooks/usePools'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nexport interface IDerivedMintInfo {\n    pool?: Pool | null\n    poolState: PoolState\n    ticks: { [bound in Bound]?: number | undefined }\n    price?: Price<Token, Token>\n    pricesAtTicks: {\n        [bound in Bound]?: Price<Token, Token> | undefined\n    }\n    currencies: { [field in Field]?: Currency }\n    currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n    dependentField: Field\n    parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n    position: Position | undefined\n    noLiquidity?: boolean\n    errorMessage?: string\n    errorCode?: number\n    invalidPool: boolean\n    outOfRange: boolean\n    invalidRange: boolean\n    depositADisabled: boolean\n    depositBDisabled: boolean\n    invertPrice: boolean\n    ticksAtLimit: { [bound in Bound]?: boolean | undefined },\n    dynamicFee: number,\n    lowerPrice: any,\n    upperPrice: any\n}\n\nexport function useV3MintState(): AppState['mintV3'] {\n    return useAppSelector((state) => state.mintV3)\n}\n\nexport function useV3MintActionHandlers(noLiquidity: boolean | undefined): {\n    onFieldAInput: (typedValue: string) => void\n    onFieldBInput: (typedValue: string) => void\n    onLeftRangeInput: (typedValue: string) => void\n    onRightRangeInput: (typedValue: string) => void\n    onStartPriceInput: (typedValue: string) => void\n} {\n    const dispatch = useAppDispatch()\n\n    const onFieldAInput = useCallback(\n        (typedValue: string) => {\n            dispatch(typeInput({\n                field: Field.CURRENCY_A,\n                typedValue,\n                noLiquidity: noLiquidity === true\n            }))\n        },\n        [dispatch, noLiquidity]\n    )\n\n    const onFieldBInput = useCallback(\n        (typedValue: string) => {\n            dispatch(typeInput({\n                field: Field.CURRENCY_B,\n                typedValue,\n                noLiquidity: noLiquidity === true\n            }))\n        },\n        [dispatch, noLiquidity]\n    )\n\n    const onLeftRangeInput = useCallback(\n        (typedValue: string) => {\n            dispatch(typeLeftRangeInput({ typedValue }))\n        },\n        [dispatch]\n    )\n\n    const onRightRangeInput = useCallback(\n        (typedValue: string) => {\n            dispatch(typeRightRangeInput({ typedValue }))\n        },\n        [dispatch]\n    )\n\n    const onStartPriceInput = useCallback(\n        (typedValue: string) => {\n            dispatch(typeStartPriceInput({ typedValue }))\n        },\n        [dispatch]\n    )\n\n    return {\n        onFieldAInput,\n        onFieldBInput,\n        onLeftRangeInput,\n        onRightRangeInput,\n        onStartPriceInput\n    }\n}\n\nexport function useV3DerivedMintInfo(\n    currencyA?: Currency,\n    currencyB?: Currency,\n    feeAmount?: FeeAmount,\n    baseCurrency?: Currency,\n    // override for existing position\n    existingPosition?: Position\n): {\n    pool?: Pool | null\n    poolState: PoolState\n    ticks: { [bound in Bound]?: number | undefined }\n    price?: Price<Token, Token>\n    pricesAtTicks: {\n        [bound in Bound]?: Price<Token, Token> | undefined\n    }\n    currencies: { [field in Field]?: Currency }\n    currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n    dependentField: Field\n    parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n    position: Position | undefined\n    noLiquidity?: boolean\n    errorMessage?: string\n    errorCode?: number\n    invalidPool: boolean\n    outOfRange: boolean\n    invalidRange: boolean\n    depositADisabled: boolean\n    depositBDisabled: boolean\n    invertPrice: boolean\n    ticksAtLimit: { [bound in Bound]?: boolean | undefined },\n    dynamicFee: number,\n    lowerPrice: any,\n    upperPrice: any\n} {\n\n    const { account } = useActiveWeb3React()\n\n    const { independentField, typedValue, leftRangeTypedValue, rightRangeTypedValue, startPriceTypedValue } = useV3MintState()\n\n    const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n    // currencies\n    const currencies: { [field in Field]?: Currency } = useMemo(\n        () => (\n            {\n                [Field.CURRENCY_A]: currencyA,\n                [Field.CURRENCY_B]: currencyB\n            }\n        )\n        , [currencyA, currencyB])\n\n    // formatted with tokens\n    const [tokenA, tokenB, baseToken] = useMemo(\n        () => [currencyA?.wrapped, currencyB?.wrapped, baseCurrency?.wrapped],\n        [currencyA, currencyB, baseCurrency]\n    )\n\n    const [token0, token1] = useMemo(\n        () =>\n            tokenA && tokenB ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : [undefined, undefined],\n        [tokenA, tokenB]\n    )\n\n    // balances\n    const balances = useCurrencyBalances(account ?? undefined, [\n        currencies[Field.CURRENCY_A],\n        currencies[Field.CURRENCY_B]\n    ])\n    const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n        [Field.CURRENCY_A]: balances[0],\n        [Field.CURRENCY_B]: balances[1]\n    }\n\n    // pool\n    //TODO\n    const [poolState, pool] = usePool(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n    const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n    const dynamicFee = pool ? pool.fee : 100\n\n    // note to parse inputs in reverse\n    const invertPrice = Boolean(baseToken && token0 && !baseToken.equals(token0))\n\n    // always returns the price with 0 as base token\n    const price: Price<Token, Token> | undefined = useMemo(() => {\n        // if no liquidity use typed value\n        if (noLiquidity) {\n            const parsedQuoteAmount = tryParseAmount(startPriceTypedValue, invertPrice ? token0 : token1)\n            if (parsedQuoteAmount && token0 && token1) {\n                const baseAmount = tryParseAmount('1', invertPrice ? token1 : token0)\n                const price =\n                    baseAmount && parsedQuoteAmount\n                        ? new Price(\n                            baseAmount.currency,\n                            parsedQuoteAmount.currency,\n                            baseAmount.quotient,\n                            parsedQuoteAmount.quotient\n                        )\n                        : undefined\n                return (invertPrice ? price?.invert() : price) ?? undefined\n            }\n            return undefined\n        } else {\n            // get the amount of quote currency\n            return pool && token0 ? pool.priceOf(token0) : undefined\n        }\n    }, [noLiquidity, startPriceTypedValue, invertPrice, token1, token0, pool])\n\n    // check for invalid price input (converts to invalid ratio)\n    const invalidPrice = useMemo(() => {\n        const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : undefined\n        const invalid =\n            price &&\n            sqrtRatioX96 &&\n            !(\n                JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n                JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)\n            )\n        return invalid\n    }, [price])\n\n    // used for ratio calculation when pool not initialized\n    const mockPool = useMemo(() => {\n        if (tokenA && tokenB && feeAmount && price && !invalidPrice) {\n            const currentTick = priceToClosestTick(price)\n            const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick)\n            return new Pool(tokenA, tokenB, feeAmount, currentSqrt, JSBI.BigInt(0), currentTick, [])\n        } else {\n            return undefined\n        }\n    }, [feeAmount, invalidPrice, price, tokenA, tokenB])\n\n    // if pool exists use it, if not use the mock pool\n    const poolForPosition: Pool | undefined = pool ?? mockPool\n\n    // lower and upper limits in the tick space for `feeAmount`\n    const tickSpaceLimits: {\n        [bound in Bound]: number | undefined\n    } = useMemo(\n        () => ({\n            [Bound.LOWER]: feeAmount ? nearestUsableTick(TickMath.MIN_TICK, 60) : undefined,\n            [Bound.UPPER]: feeAmount ? nearestUsableTick(TickMath.MAX_TICK, 60) : undefined\n        }),\n        [feeAmount]\n    )\n\n    // parse typed range values and determine closest ticks\n    // lower should always be a smaller tick\n    const ticks: {\n        [key: string]: number | undefined\n    } = useMemo(() => {\n\n        return {\n            [Bound.LOWER]:\n                typeof existingPosition?.tickLower === 'number'\n                    ? existingPosition.tickLower\n                    : (invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n                        (!invertPrice && typeof leftRangeTypedValue === 'boolean')\n                        ? tickSpaceLimits[Bound.LOWER]\n                        : invertPrice\n                            ? tryParseTick(token1, token0, feeAmount, rightRangeTypedValue.toString())\n                            : tryParseTick(token0, token1, feeAmount, leftRangeTypedValue.toString()),\n            [Bound.UPPER]:\n                typeof existingPosition?.tickUpper === 'number'\n                    ? existingPosition.tickUpper\n                    : (!invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n                        (invertPrice && typeof leftRangeTypedValue === 'boolean')\n                        ? tickSpaceLimits[Bound.UPPER]\n                        : invertPrice\n                            ? tryParseTick(token1, token0, feeAmount, leftRangeTypedValue.toString())\n                            : tryParseTick(token0, token1, feeAmount, rightRangeTypedValue.toString())\n        }\n    }, [\n        existingPosition,\n        feeAmount,\n        invertPrice,\n        leftRangeTypedValue,\n        rightRangeTypedValue,\n        token0,\n        token1,\n        tickSpaceLimits\n    ])\n\n    const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks || {}\n\n    // specifies whether the lower and upper ticks is at the exteme bounds\n    const ticksAtLimit = useMemo(\n        () => ({\n            [Bound.LOWER]: feeAmount && tickLower === tickSpaceLimits.LOWER,\n            [Bound.UPPER]: feeAmount && tickUpper === tickSpaceLimits.UPPER\n        }),\n        [tickSpaceLimits, tickLower, tickUpper, feeAmount]\n    )\n\n    // mark invalid range\n    const invalidRange = Boolean(typeof tickLower === 'number' && typeof tickUpper === 'number' && tickLower >= tickUpper)\n\n    // always returns the price with 0 as base token\n    const pricesAtTicks = useMemo(() => {\n\n        return {\n            [Bound.LOWER]: getTickToPrice(token0, token1, ticks[Bound.LOWER]),\n            [Bound.UPPER]: getTickToPrice(token0, token1, ticks[Bound.UPPER])\n        }\n    }, [token0, token1, ticks])\n    const { [Bound.LOWER]: lowerPrice, [Bound.UPPER]: upperPrice } = pricesAtTicks\n\n    // liquidity range warning\n    const outOfRange = Boolean(\n        !invalidRange && price && lowerPrice && upperPrice && (price.lessThan(lowerPrice) || price.greaterThan(upperPrice))\n    )\n\n    const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n        typedValue,\n        currencies[independentField]\n    )\n\n    const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n        // we wrap the currencies just to get the price in terms of the other token\n        const wrappedIndependentAmount = independentAmount?.wrapped\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        if (\n            independentAmount &&\n            wrappedIndependentAmount &&\n            typeof tickLower === 'number' &&\n            typeof tickUpper === 'number' &&\n            poolForPosition\n        ) {\n            // if price is out of range or invalid range - return 0 (single deposit will be independent)\n            if (outOfRange || invalidRange) {\n                return undefined\n            }\n\n            const position: Position | undefined = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n                ? Position.fromAmount0({\n                    pool: poolForPosition,\n                    tickLower,\n                    tickUpper,\n                    amount0: independentAmount.quotient,\n                    useFullPrecision: true // we want full precision for the theoretical position\n                })\n                : Position.fromAmount1({\n                    pool: poolForPosition,\n                    tickLower,\n                    tickUpper,\n                    amount1: independentAmount.quotient\n                })\n\n            const dependentTokenAmount = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n                ? position.amount1\n                : position.amount0\n            return dependentCurrency && CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n        }\n\n        return undefined\n    }, [\n        independentAmount,\n        outOfRange,\n        dependentField,\n        currencyB,\n        currencyA,\n        tickLower,\n        tickUpper,\n        poolForPosition,\n        invalidRange\n    ])\n\n    const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n        return {\n            [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n            [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount\n        }\n    }, [dependentAmount, independentAmount, independentField])\n\n    // single deposit only if price is out of range\n    const deposit0Disabled = Boolean(\n        typeof tickUpper === 'number' && poolForPosition && poolForPosition.tickCurrent >= tickUpper\n    )\n    const deposit1Disabled = Boolean(\n        typeof tickLower === 'number' && poolForPosition && poolForPosition.tickCurrent <= tickLower\n    )\n\n    // sorted for token order\n    const depositADisabled =\n        invalidRange ||\n        Boolean(\n            (deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA)) ||\n            (deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA))\n        )\n    const depositBDisabled =\n        invalidRange ||\n        Boolean(\n            (deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB)) ||\n            (deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB))\n        )\n\n    // create position entity based on users selection\n    const position: Position | undefined = useMemo(() => {\n        if (\n            !poolForPosition ||\n            !tokenA ||\n            !tokenB ||\n            typeof tickLower !== 'number' ||\n            typeof tickUpper !== 'number' ||\n            invalidRange\n        ) {\n            return undefined\n        }\n\n        // mark as 0 if disabled because out of range\n        const amount0 = !deposit0Disabled\n            ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_A : Field.CURRENCY_B]?.quotient\n            : BIG_INT_ZERO\n        const amount1 = !deposit1Disabled\n            ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_B : Field.CURRENCY_A]?.quotient\n            : BIG_INT_ZERO\n\n        if (amount0 !== undefined && amount1 !== undefined) {\n            return Position.fromAmounts({\n                pool: poolForPosition,\n                tickLower,\n                tickUpper,\n                amount0,\n                amount1,\n                useFullPrecision: true // we want full precision for the theoretical position\n            })\n        } else {\n            return undefined\n        }\n    }, [\n        parsedAmounts,\n        poolForPosition,\n        tokenA,\n        tokenB,\n        deposit0Disabled,\n        deposit1Disabled,\n        invalidRange,\n        tickLower,\n        tickUpper\n    ])\n\n    let errorMessage: string | undefined\n    let errorCode: number | undefined\n\n    if (!account) {\n        errorMessage = t`Connect Wallet`\n        errorCode = errorCode ?? 0\n    }\n\n    if (poolState === PoolState.INVALID) {\n        errorMessage = errorMessage ?? t`Invalid pair`\n        errorCode = errorCode ?? 1\n    }\n\n    if (invalidPrice) {\n        errorMessage = errorMessage ?? t`Invalid price input`\n        errorCode = errorCode ?? 2\n    }\n\n    if (\n        (!parsedAmounts[Field.CURRENCY_A] && !depositADisabled) ||\n        (!parsedAmounts[Field.CURRENCY_B] && !depositBDisabled)\n    ) {\n        errorMessage = errorMessage ?? t`Enter an amount`\n        errorCode = errorCode ?? 3\n    }\n\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount, } = parsedAmounts\n\n\n    if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n        errorMessage = t`Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n        errorCode = errorCode ?? 4\n    }\n\n    if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n        errorMessage = t`Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n        errorCode = errorCode ?? 5\n    }\n\n    const invalidPool = poolState === PoolState.INVALID\n\n    return {\n        dependentField,\n        currencies,\n        pool,\n        poolState,\n        currencyBalances,\n        parsedAmounts,\n        ticks,\n        price,\n        pricesAtTicks,\n        position,\n        noLiquidity,\n        errorMessage,\n        errorCode,\n        invalidPool,\n        invalidRange,\n        outOfRange,\n        depositADisabled,\n        depositBDisabled,\n        invertPrice,\n        ticksAtLimit,\n        dynamicFee,\n        lowerPrice,\n        upperPrice\n    }\n}\n\nexport function useRangeHopCallbacks(\n    baseCurrency: Currency | undefined,\n    quoteCurrency: Currency | undefined,\n    feeAmount: FeeAmount | undefined,\n    tickLower: number | undefined,\n    tickUpper: number | undefined,\n    pool?: Pool | undefined | null\n) {\n    const dispatch = useAppDispatch()\n\n    const baseToken = useMemo(() => baseCurrency?.wrapped, [baseCurrency])\n    const quoteToken = useMemo(() => quoteCurrency?.wrapped, [quoteCurrency])\n\n    const getDecrementLower = useCallback((rate = 1) => {\n        if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n            const newPrice = tickToPrice(baseToken, quoteToken, tickLower - 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        // use pool current tick as starting tick if we have pool but no tick input\n\n        if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n            const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        return ''\n    }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n    const getIncrementLower = useCallback((rate = 1) => {\n        if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n            const newPrice = tickToPrice(baseToken, quoteToken, tickLower + 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        // use pool current tick as starting tick if we have pool but no tick input\n        if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n            const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        return ''\n    }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n    const getDecrementUpper = useCallback((rate = 1) => {\n        if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n            const newPrice = tickToPrice(baseToken, quoteToken, tickUpper - 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        // use pool current tick as starting tick if we have pool but no tick input\n        if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n            const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        return ''\n    }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n    const getIncrementUpper = useCallback((rate = 1) => {\n        if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n            const newPrice = tickToPrice(baseToken, quoteToken, tickUpper + 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        // use pool current tick as starting tick if we have pool but no tick input\n        if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n            const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + 60 * rate)\n            return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n        }\n        return ''\n    }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n    const getSetRange = useCallback(\n        (numTicks: number) => {\n            if (baseToken && quoteToken && feeAmount && pool) {\n                // calculate range around current price given `numTicks`\n                const newPriceLower = tickToPrice(\n                    baseToken,\n                    quoteToken,\n                    Math.max(TickMath.MIN_TICK, pool.tickCurrent - numTicks)\n                )\n                const newPriceUpper = tickToPrice(\n                    baseToken,\n                    quoteToken,\n                    Math.min(TickMath.MAX_TICK, pool.tickCurrent + numTicks)\n                )\n\n                return [\n                    newPriceLower.toSignificant(5, undefined, Rounding.ROUND_UP),\n                    newPriceUpper.toSignificant(5, undefined, Rounding.ROUND_UP)\n                ]\n            }\n            return ['', '']\n        },\n        [baseToken, quoteToken, feeAmount, pool]\n    )\n\n    const getSetFullRange = useCallback(() => {\n        dispatch(setFullRange())\n    }, [dispatch])\n\n    return {\n        getDecrementLower,\n        getIncrementLower,\n        getDecrementUpper,\n        getIncrementUpper,\n        getSetRange,\n        getSetFullRange\n    }\n}\n\n\nexport function useActivePreset(): AppState['mintV3']['preset'] {\n    const preset = useAppSelector((state: AppState) => state.mintV3.preset)\n    return useMemo(() => preset, [preset])\n}\n\nexport function useAddLiquidityTxHash(): AppState['mintV3']['txHash'] {\n    const txHash = useAppSelector((state: AppState) => state.mintV3.txHash)\n    return useMemo(() => txHash, [txHash])\n}\n\nexport function useShowNewestPosition(): AppState['mintV3']['showNewestPosition'] {\n    const newestPosition = useAppSelector((state: AppState) => state.mintV3.showNewestPosition)\n    return useMemo(() => newestPosition, [newestPosition])\n}\n\nexport function useInitialUSDPrices(): AppState['mintV3']['initialUSDPrices'] {\n    const initialUSDPrices = useAppSelector((state: AppState) => state.mintV3.initialUSDPrices)\n    return useMemo(() => initialUSDPrices, [initialUSDPrices])\n}\n\nexport function useInitialTokenPrice(): AppState['mintV3']['initialTokenPrice'] {\n    const initialTokenPrice = useAppSelector((state: AppState) => state.mintV3.initialTokenPrice)\n    return useMemo(() => initialTokenPrice, [initialTokenPrice])\n}\n\nexport function useCurrentStep(): AppState['mintV3']['currentStep'] {\n    const currentStep = useAppSelector((state: AppState) => state.mintV3.currentStep)\n    return useMemo(() => currentStep, [currentStep])\n}\n","import { FunctionFragment, Interface } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useBlockNumber } from '../application/hooks'\nimport { addMulticallListeners, ListenerOptions, removeMulticallListeners } from './actions'\nimport { Call, parseCallKey, toCallKey } from './utils'\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n    return BigNumber.isBigNumber(x) || ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n    return (\n        x === undefined ||\n        (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n    )\n}\n\ninterface CallResult {\n    readonly valid: boolean\n    readonly data: string | undefined\n    readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n    blocksPerFetch: Infinity\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(\n    calls: (Call | undefined)[],\n    { blocksPerFetch }: ListenerOptions = { blocksPerFetch: 1 },\n    methodName?: string\n): CallResult[] {\n    const { chainId } = useActiveWeb3React()\n    const callResults = useAppSelector((state) => state.multicall.callResults)\n    const dispatch = useAppDispatch()\n\n    const serializedCallKeys: string = useMemo(\n        () =>\n            JSON.stringify(\n                calls\n                    ?.filter((c): c is Call => Boolean(c))\n                    ?.map(toCallKey)\n                    ?.sort() ?? []\n            ),\n        [calls]\n    )\n\n    // update listeners when there is an actual change that persists for at least 100ms\n    useEffect(() => {\n        const callKeys: string[] = JSON.parse(serializedCallKeys)\n        if (!chainId || callKeys.length === 0) return undefined\n        const calls = callKeys.map((key) => parseCallKey(key))\n\n        dispatch(\n            addMulticallListeners({\n                chainId,\n                calls,\n                options: { blocksPerFetch }\n            })\n        )\n\n        return () => {\n            dispatch(\n                removeMulticallListeners({\n                    chainId,\n                    calls,\n                    options: { blocksPerFetch }\n                })\n            )\n        }\n    }, [chainId, dispatch, blocksPerFetch, serializedCallKeys])\n\n    return useMemo(\n        () =>\n            calls.map<CallResult>((call) => {\n                if (!chainId || !call) return INVALID_RESULT\n\n                const result = callResults[chainId]?.[toCallKey(call)]\n                let data\n\n                if (result?.data && result?.data !== '0x') {\n                    data = result.data\n                } else {\n                    // console.error(result, result?.data, call)\n                }\n\n                return { valid: true, data, blockNumber: result?.blockNumber }\n            }),\n        [callResults, calls, chainId]\n    )\n}\n\ninterface CallState {\n    readonly valid: boolean\n    // the result, or undefined if loading or errored/no data\n    readonly result: Result | undefined\n    // true if the result has never been fetched\n    readonly loading: boolean\n    // true if the result is not for the latest block\n    readonly syncing: boolean\n    // true if the call was made and is synced, but the return data is invalid\n    readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = {\n    valid: false,\n    result: undefined,\n    loading: false,\n    syncing: false,\n    error: false\n}\nconst LOADING_CALL_STATE: CallState = {\n    valid: true,\n    result: undefined,\n    loading: true,\n    syncing: true,\n    error: false\n}\n\nfunction toCallState(\n    callResult: CallResult | undefined,\n    contractInterface: Interface | undefined,\n    fragment: FunctionFragment | undefined,\n    latestBlockNumber: number | undefined\n): CallState {\n    if (!callResult) return INVALID_CALL_STATE\n    const { valid, data, blockNumber } = callResult\n    if (!valid) return INVALID_CALL_STATE\n    if (valid && !blockNumber) return LOADING_CALL_STATE\n    if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n    const success = data && data.length > 2\n    const syncing = (blockNumber ?? 0) < latestBlockNumber\n    let result: Result | undefined = undefined\n\n    if (success && data) {\n        try {\n            result = contractInterface.decodeFunctionResult(fragment, data)\n        } catch (error) {\n            console.debug('Result data parsing failed', fragment, data)\n            return {\n                valid: true,\n                loading: false,\n                error: true,\n                syncing,\n                result\n            }\n        }\n    }\n\n    return {\n        valid: true,\n        loading: false,\n        syncing,\n        result: result,\n        error: !success\n    }\n}\n\nexport function useSingleContractMultipleData(\n    contract: Contract | null | undefined,\n    methodName: string,\n    callInputs: OptionalMethodInputs[],\n    options: Partial<ListenerOptions> & { gasRequired?: number } = {}\n): CallState[] {\n\n    const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n    const blocksPerFetch = options?.blocksPerFetch\n    const gasRequired = options?.gasRequired\n\n    const calls = useMemo(\n        () =>\n            contract && fragment && callInputs?.length > 0 && callInputs.every((inputs) => isValidMethodArgs(inputs))\n                ? callInputs.map<Call>((inputs) => {\n                    return {\n                        address: contract.address,\n                        callData: contract.interface.encodeFunctionData(fragment, inputs),\n                        ...(gasRequired ? { gasRequired } : {})\n                    }\n                })\n                : [],\n        [contract, fragment, callInputs, gasRequired]\n    )\n\n    const results = useCallsData(calls, blocksPerFetch ? { blocksPerFetch } : undefined, methodName)\n\n    const latestBlockNumber = useBlockNumber()\n\n    return useMemo(() => {\n        return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n    }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n    addresses: (string | undefined)[],\n    contractInterface: Interface,\n    methodName: string,\n    callInputs?: OptionalMethodInputs,\n    options?: Partial<ListenerOptions> & { gasRequired?: number }\n): CallState[] {\n    const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n\n    const blocksPerFetch = options?.blocksPerFetch\n    const gasRequired = options?.gasRequired\n\n    const callData: string | undefined = useMemo(\n        () =>\n            fragment && isValidMethodArgs(callInputs)\n                ? contractInterface.encodeFunctionData(fragment, callInputs)\n                : undefined,\n        [callInputs, contractInterface, fragment]\n    )\n\n    const calls = useMemo(\n        () =>\n            fragment && addresses && addresses.length > 0 && callData\n                ? addresses.map<Call | undefined>((address) => {\n                    return address && callData\n                        ? {\n                            address,\n                            callData,\n                            ...(gasRequired ? { gasRequired } : {})\n                        }\n                        : undefined\n                })\n                : [],\n        [addresses, callData, fragment, gasRequired]\n    )\n\n    const results = useCallsData(calls, blocksPerFetch ? { blocksPerFetch } : undefined)\n\n    const latestBlockNumber = useBlockNumber()\n\n    return useMemo(() => {\n        return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n    }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n    contract: Contract | null | undefined,\n    methodName: string,\n    inputs?: OptionalMethodInputs,\n    options?: Partial<ListenerOptions> & { gasRequired?: number }\n): CallState {\n    const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n    const blocksPerFetch = options?.blocksPerFetch\n    const gasRequired = options?.gasRequired\n\n    const calls = useMemo<Call[]>(() => {\n        return contract && fragment && isValidMethodArgs(inputs)\n            ? [\n                {\n                    address: contract.address,\n                    callData: contract.interface.encodeFunctionData(fragment, inputs),\n                    ...(gasRequired ? { gasRequired } : {})\n                }\n            ]\n            : []\n    }, [contract, fragment, inputs, gasRequired])\n\n    const result = useCallsData(calls, blocksPerFetch ? { blocksPerFetch } : undefined)[0]\n    const latestBlockNumber = useBlockNumber()\n\n    return useMemo(() => {\n        return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n    }, [result, contract, fragment, latestBlockNumber])\n}\n","import { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk/dist/'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n    try {\n        return getAddress(value)\n    } catch {\n        return false\n    }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n    const parsed = isAddress(address)\n    if (!parsed) {\n        throw Error(`Invalid 'address' parameter '${address}'.`)\n    }\n    return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// account is not optional\nfunction getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n    return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nfunction getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n    return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n    if (!isAddress(address) || address === AddressZero) {\n        throw Error(`Invalid 'address' parameter '${address}'.`)\n    }\n\n    return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(tokenAddressMap: TokenAddressMap, token?: Token): boolean {\n    return Boolean(token?.isToken && tokenAddressMap[token.chainId]?.[token.address])\n}\n\nexport function formattedFeeAmount(feeAmount: FeeAmount): number {\n    return feeAmount / 10000\n}\n\nexport function feeTierPercent(fee: number): string {\n    return (fee / 10000).toFixed(4) + '%'\n}\n","import AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\ninterface SpecialTokensInterface {\n    [key: string]: string\n}\n\nexport const specialTokensBNB: SpecialTokensInterface = Object.entries(AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].tokensLogos).reduce((acc, [address, logo]) => ({\n    ...acc,\n    [address]: logo\n}), {})\n\n\nexport const specialTokensPulse: SpecialTokensInterface = Object.entries(AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].tokensLogos).reduce((acc, [address, logo]) => ({\n    ...acc,\n    [address]: logo\n}), {})\n\n","import styled from 'styled-components/macro'\n\nexport const StyledImgLogo = styled.img<{ size: string }>`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.075);\n    border-radius: 24px;\n`\n\nexport const StyledLogo = styled.div<{ size: string }>`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    border-radius: ${({ size }) => size};\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.075);\n    background-color: ${({ theme }) => theme.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    font-family: Montserrat, serif;\n    font-weight: 600;\n`\n","import React from \"react\";\n// @ts-ignore\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { stringToColour } from \"../../utils/stringToColour\";\nimport { specialTokensBNB, specialTokensPulse } from \"./SpecialTokens\";\nimport { StyledImgLogo, StyledLogo } from \"./styled\";\nimport { WrappedCurrency } from \"../../models/types\";\n\nimport AlgebraConfig from \"algebra.config\";\n\nexport const getTokenLogoURL = (address: string) => `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n\nexport default function CurrencyLogo({ currency, size = \"24px\", style, ...rest }: { currency?: WrappedCurrency; size?: string; style?: React.CSSProperties }) {\n    const { chainId } = useActiveWeb3React();\n\n    let logo;\n\n    if (chainId && chainId === AlgebraConfig.CHAIN_PARAMS[chainId].chainId) {\n        logo = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.logo;\n    }\n\n    if (!currency) return <div />;\n\n    if (currency.address?.toLowerCase() in specialTokensBNB) {\n        return <StyledImgLogo src={specialTokensBNB[currency.address.toLowerCase()]} size={size} style={style} {...rest} />;\n    }\n\n    if (currency.address?.toLowerCase() in specialTokensPulse) {\n        return <StyledImgLogo src={specialTokensPulse[currency.address.toLowerCase()]} size={size} style={style} {...rest} />;\n    }\n\n    if (currency.isNative) {\n        return <StyledImgLogo src={logo} size={size} style={style} {...rest} />;\n    }\n\n    return (\n        <StyledLogo\n            size={size}\n            style={{\n                ...style,\n                background: stringToColour(currency.symbol).background,\n                color: stringToColour(currency.symbol).text,\n                border: stringToColour(currency.symbol).border,\n\n                fontSize: size === \"18px\" ? \"8px\" : size === \"24px\" ? \"12px\" : \"10px\",\n            }}\n            {...rest}\n        >\n            {currency.symbol?.slice(0, 2)}\n        </StyledLogo>\n    );\n}\n","import { Contract } from '@ethersproject/contracts'\nimport IUniswapV2PairABI from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport V2MigratorABI from 'abis/migrator.json'\nimport IUniswapV2Router02ABI from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport NFTPosMan from '../pages/AddLiquidity/abi2.json'\nimport ENS_PUBLIC_RESOLVER_ABI from 'abis/ens-public-resolver.json'\nimport ENS_ABI from 'abis/ens-registrar.json'\nimport ERC20_ABI from 'abis/erc20.json'\nimport ERC20_BYTES32_ABI from 'abis/erc20_bytes32.json'\nimport WETH_ABI from 'abis/weth.json'\nimport EIP_2612 from 'abis/eip_2612.json'\nimport MULTICALL_ABI from 'abis/multicall.json'\nimport {\n    ENS_REGISTRAR_ADDRESSES,\n    MULTICALL_ADDRESS,\n    NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,\n    QUOTER_ADDRESSES,\n    V3_MIGRATOR_ADDRESSES\n} from 'constants/addresses'\nimport { useMemo } from 'react'\nimport { getContract } from 'utils'\nimport { WMATIC_EXTENDED } from '../constants/tokens'\nimport { useActiveWeb3React } from './web3'\nimport NewQuoterABI from '../abis/quoter.json'\n\n// returns null on errors\nexport function useContract<T extends Contract = Contract>(\n    addressOrAddressMap: string | { [chainId: number]: string } | undefined,\n    ABI: any,\n    withSignerIfPossible = true\n): T | null {\n    const { library, account, chainId } = useActiveWeb3React()\n\n    return useMemo(() => {\n        if (!addressOrAddressMap || !ABI || !library || !chainId) return null\n        let address: string | undefined\n        if (typeof addressOrAddressMap === 'string') address = addressOrAddressMap\n        else address = addressOrAddressMap[chainId]\n        if (!address) return null\n        try {\n            return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n        } catch (error) {\n            console.error('Failed to get contract', error)\n            return null\n        }\n    }, [addressOrAddressMap, ABI, library, chainId, withSignerIfPossible, account]) as T\n}\n\nexport function useV2MigratorContract() {\n    return useContract(V3_MIGRATOR_ADDRESSES, V2MigratorABI, true)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean) {\n    return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean) {\n    const { chainId } = useActiveWeb3React()\n    return useContract(chainId ? WMATIC_EXTENDED[chainId]?.address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean) {\n    return useContract(ENS_REGISTRAR_ADDRESSES, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean) {\n    return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n    return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function useEIP2612Contract(tokenAddress?: string): Contract | null {\n    return useContract(tokenAddress, EIP_2612, false)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n    return useContract(pairAddress, IUniswapV2PairABI.abi, withSignerIfPossible)\n}\n\nexport function useMulticall2Contract() {\n    return useContract(MULTICALL_ADDRESS, MULTICALL_ABI, false)\n}\n\nexport function useV3NFTPositionManagerContract(withSignerIfPossible?: boolean) {\n    return useContract(\n        NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,\n        NFTPosMan,\n        withSignerIfPossible\n    )\n}\n\nexport function useV3Quoter() {\n    return useContract(QUOTER_ADDRESSES, NewQuoterABI)\n}\n","import { BigintIsh } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\n/**\n * Generated method parameters for executing a call.\n */\nexport interface MethodParameters {\n    /**\n     * The hex encoded calldata to perform the given operation\n     */\n    calldata: string\n    /**\n     * The amount of ether (wei) to send in hex.\n     */\n    value: string\n}\n\n/**\n * Converts a big int to a hex string\n * @param bigintIsh\n * @returns The hex encoded calldata\n */\nexport function toHex(bigintIsh: BigintIsh) {\n    const bigInt = JSBI.BigInt(bigintIsh)\n    let hex = bigInt.toString(16)\n    if (hex.length % 2 !== 0) {\n        hex = `0${hex}`\n    }\n    return `0x${hex}`\n}\n","import { getCreate2Address } from '@ethersproject/address'\nimport { keccak256, pack } from '@ethersproject/solidity'\nimport { BigintIsh, CurrencyAmount, Price, sqrt, Token } from '@uniswap/sdk-core'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { ChainId, V2_FACTORY_ADDRESSES } from '../constants/addresses'\n\nimport AlgebraConfig from \"algebra.config\"\n\n// import { InsufficientReservesError, InsufficientInputAmountError } from '../errors'\n\nexport const FACTORY_ADDRESS = V2_FACTORY_ADDRESSES[ChainId.BNB]\nexport const SUSHI_FACTORY_ADDRESS = '0xc35dadb65012ec5796536bd9864ed8773abc74c4'\n\nexport const INIT_CODE_HASH = '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const FIVE = JSBI.BigInt(5)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport const computePairAddress = ({\n    factoryAddress,\n    hash = '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f',\n    tokenA,\n    tokenB\n}: {\n    factoryAddress: string\n    tokenA: Token\n    tokenB: Token\n    hash?: string\n}): string => {\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    return getCreate2Address(\n        factoryAddress,\n        keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n        hash\n    )\n}\n\nexport class Pair {\n    public readonly liquidityToken: Token\n    private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n    public constructor(currencyAmountA: CurrencyAmount<Token>, tokenAmountB: CurrencyAmount<Token>, sushi?: boolean) {\n        const tokenAmounts = currencyAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n            ? [currencyAmountA, tokenAmountB]\n            : [tokenAmountB, currencyAmountA]\n\n        this.liquidityToken = new Token(\n            tokenAmounts[0].currency.chainId,\n            Pair.getAddress(tokenAmounts[0].currency, tokenAmounts[1].currency, sushi),\n            18,\n            'UNI-V2',\n            'Uniswap V2'\n        )\n\n        this.tokenAmounts = tokenAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n    }\n\n    /**\n     * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n     */\n    public get token0Price(): Price<Token, Token> {\n        const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n        return new Price(this.token0, this.token1, result.denominator, result.numerator)\n    }\n\n    /**\n     * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n     */\n    public get token1Price(): Price<Token, Token> {\n        const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n        return new Price(this.token1, this.token0, result.denominator, result.numerator)\n    }\n\n    /**\n     * Returns the chain ID of the tokens in the pair.\n     */\n    public get chainId(): number {\n        return this.token0.chainId\n    }\n\n    public get token0(): Token {\n        return this.tokenAmounts[0].currency\n    }\n\n    public get token1(): Token {\n        return this.tokenAmounts[1].currency\n    }\n\n    public get reserve0(): CurrencyAmount<Token> {\n        return this.tokenAmounts[0]\n    }\n\n    public get reserve1(): CurrencyAmount<Token> {\n        return this.tokenAmounts[1]\n    }\n\n    public static getAddress(tokenA: Token, tokenB: Token, sushi?: boolean): string {\n        return computePairAddress({\n            factoryAddress: sushi ? SUSHI_FACTORY_ADDRESS : FACTORY_ADDRESS,\n            tokenA,\n            tokenB,\n            hash: sushi ? '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303' : '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'\n        })\n    }\n\n    /**\n     * Returns true if the token is either token0 or token1\n     * @param token to check\n     */\n    public involvesToken(token: Token): boolean {\n        return token.equals(this.token0) || token.equals(this.token1)\n    }\n\n    /**\n     * Return the price of the given token in terms of the other token in the pair.\n     * @param token token to return price of\n     */\n    public priceOf(token: Token): Price<Token, Token> {\n        invariant(this.involvesToken(token), 'TOKEN')\n        return token.equals(this.token0) ? this.token0Price : this.token1Price\n    }\n\n    public reserveOf(token: Token): CurrencyAmount<Token> {\n        invariant(this.involvesToken(token), 'TOKEN')\n        return token.equals(this.token0) ? this.reserve0 : this.reserve1\n    }\n\n    public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n        invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n        if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n            // throw new InsufficientReservesError()\n            throw new Error()\n        }\n        const inputReserve = this.reserveOf(inputAmount.currency)\n        const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n        const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n        const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n        const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n        const outputAmount = CurrencyAmount.fromRawAmount(\n            inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n            JSBI.divide(numerator, denominator)\n        )\n        if (JSBI.equal(outputAmount.quotient, ZERO)) {\n            // throw new InsufficientInputAmountError()\n            throw new Error()\n        }\n        return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n    }\n\n    public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n        invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n        if (\n            JSBI.equal(this.reserve0.quotient, ZERO) ||\n            JSBI.equal(this.reserve1.quotient, ZERO) ||\n            JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n        ) {\n            // throw new InsufficientReservesError()\n            throw new Error()\n        }\n\n        const outputReserve = this.reserveOf(outputAmount.currency)\n        const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n        const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n        const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\n        const inputAmount = CurrencyAmount.fromRawAmount(\n            outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n            JSBI.add(JSBI.divide(numerator, denominator), ONE)\n        )\n        return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n    }\n\n    public getLiquidityMinted(\n        totalSupply: CurrencyAmount<Token>,\n        tokenAmountA: CurrencyAmount<Token>,\n        tokenAmountB: CurrencyAmount<Token>\n    ): CurrencyAmount<Token> {\n        invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n        const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n            ? [tokenAmountA, tokenAmountB]\n            : [tokenAmountB, tokenAmountA]\n        invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n        let liquidity: JSBI\n        if (JSBI.equal(totalSupply.quotient, ZERO)) {\n            liquidity = JSBI.subtract(\n                sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n                MINIMUM_LIQUIDITY\n            )\n        } else {\n            const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n            const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n            liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n        }\n        if (!JSBI.greaterThan(liquidity, ZERO)) {\n            // throw new InsufficientInputAmountError()\n            throw new Error()\n        }\n        return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n    }\n\n    public getLiquidityValue(\n        token: Token,\n        totalSupply: CurrencyAmount<Token>,\n        liquidity: CurrencyAmount<Token>,\n        feeOn = false,\n        kLast?: BigintIsh\n    ): CurrencyAmount<Token> {\n        invariant(this.involvesToken(token), 'TOKEN')\n        invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n        invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n        invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n        let totalSupplyAdjusted: CurrencyAmount<Token>\n        if (!feeOn) {\n            totalSupplyAdjusted = totalSupply\n        } else {\n            invariant(!!kLast, 'K_LAST')\n            const kLastParsed = JSBI.BigInt(kLast)\n            if (!JSBI.equal(kLastParsed, ZERO)) {\n                const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n                const rootKLast = sqrt(kLastParsed)\n                if (JSBI.greaterThan(rootK, rootKLast)) {\n                    const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n                    const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n                    const feeLiquidity = JSBI.divide(numerator, denominator)\n                    totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n                } else {\n                    totalSupplyAdjusted = totalSupply\n                }\n            } else {\n                totalSupplyAdjusted = totalSupply\n            }\n        }\n\n        return CurrencyAmount.fromRawAmount(\n            token,\n            JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n        )\n    }\n}\n","import { Percent, Token } from \"@uniswap/sdk-core\";\nimport { SupportedLocale } from \"constants/locales\";\nimport JSBI from \"jsbi\";\nimport flatMap from \"lodash.flatmap\";\nimport { useCallback, useMemo } from \"react\";\nimport { shallowEqual } from \"react-redux\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { V2_FACTORY_ADDRESSES } from \"../../constants/addresses\";\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from \"../../constants/routing\";\nimport { useAllTokens } from \"../../hooks/Tokens\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { computePairAddress, Pair } from \"../../utils/computePairAddress\";\nimport { AppState } from \"../index\";\nimport {\n    addSerializedPair,\n    addSerializedToken,\n    removeSerializedToken,\n    SerializedPair,\n    SerializedToken,\n    updateHideClosedPositions,\n    updateHideFarmingPositions,\n    updateUserDarkMode,\n    updateUserDeadline,\n    updateUserExpertMode,\n    updateUserLocale,\n    updateUserSingleHopOnly,\n    updateUserSlippageTolerance,\n} from \"./actions\";\n\nfunction serializeToken(token: Token): SerializedToken {\n    return {\n        chainId: token.chainId,\n        address: token.address,\n        decimals: token.decimals,\n        symbol: token.symbol,\n        name: token.name,\n    };\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n    return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\n\nexport function useIsDarkMode(): boolean {\n    const { userDarkMode, matchesDarkMode } = useAppSelector(\n        ({ user: { matchesDarkMode, userDarkMode } }) => ({\n            userDarkMode,\n            matchesDarkMode,\n        }),\n        shallowEqual\n    );\n\n    return Boolean(userDarkMode);\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n    const dispatch = useAppDispatch();\n    const darkMode = useIsDarkMode();\n\n    const toggleSetDarkMode = useCallback(() => {\n        dispatch(updateUserDarkMode({ userDarkMode: !darkMode }));\n    }, [darkMode, dispatch]);\n\n    return [darkMode, toggleSetDarkMode];\n}\n\nexport function useUserLocale(): SupportedLocale | null {\n    return useAppSelector((state) => state.user.userLocale);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n    if (tokenA.chainId !== tokenB.chainId) throw new Error(\"Not matching chain IDs\");\n    if (tokenA.equals(tokenB)) throw new Error(\"Tokens cannot be equal\");\n    if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error(\"No V2 factory address on this chain\");\n\n    return new Token(\n        tokenA.chainId,\n        computePairAddress({\n            factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId],\n            tokenA,\n            tokenB,\n        }),\n        18,\n        \"QUICKSWAP-V2\",\n        \"QUICKSWAP V2\"\n    );\n}\n\nexport function useUserLocaleManager(): [SupportedLocale | null, (newLocale: SupportedLocale) => void] {\n    const dispatch = useAppDispatch();\n    const locale = useUserLocale();\n\n    const setLocale = useCallback(\n        (newLocale: SupportedLocale) => {\n            dispatch(updateUserLocale({ userLocale: newLocale }));\n        },\n        [dispatch]\n    );\n\n    return [locale, setLocale];\n}\n\nexport function useIsExpertMode(): boolean {\n    return useAppSelector((state) => state.user.userExpertMode);\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n    const dispatch = useAppDispatch();\n    const expertMode = useIsExpertMode();\n\n    const toggleSetExpertMode = useCallback(() => {\n        dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\n    }, [expertMode, dispatch]);\n\n    return [expertMode, toggleSetExpertMode];\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n    const dispatch = useAppDispatch();\n\n    const singleHopOnly = useAppSelector((state) => state.user.userSingleHopOnly);\n\n    const setSingleHopOnly = useCallback(\n        (newSingleHopOnly: boolean) => {\n            dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\n        },\n        [dispatch]\n    );\n\n    return [singleHopOnly, setSingleHopOnly];\n}\n\nexport function useSetUserSlippageTolerance(): (slippageTolerance: Percent | \"auto\") => void {\n    const dispatch = useAppDispatch();\n\n    return useCallback(\n        (userSlippageTolerance: Percent | \"auto\") => {\n            let value: \"auto\" | number;\n            try {\n                value = userSlippageTolerance === \"auto\" ? \"auto\" : JSBI.toNumber(userSlippageTolerance.multiply(10_000).quotient);\n            } catch (error) {\n                value = \"auto\";\n            }\n            dispatch(\n                updateUserSlippageTolerance({\n                    userSlippageTolerance: value,\n                })\n            );\n        },\n        [dispatch]\n    );\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\nexport function useUserSlippageTolerance(): Percent | \"auto\" {\n    const userSlippageTolerance = useAppSelector((state) => {\n        return state.user.userSlippageTolerance;\n    });\n\n    return useMemo(() => (userSlippageTolerance === \"auto\" ? \"auto\" : new Percent(userSlippageTolerance, 10_000)), [userSlippageTolerance]);\n}\n\nexport function useUserHideClosedPositions(): [boolean, (newHideClosedPositions: boolean) => void] {\n    const dispatch = useAppDispatch();\n\n    const hideClosedPositions = useAppSelector((state) => state.user.userHideClosedPositions);\n\n    const setHideClosedPositions = useCallback(\n        (newHideClosedPositions: boolean) => {\n            dispatch(updateHideClosedPositions({ userHideClosedPositions: newHideClosedPositions }));\n        },\n        [dispatch]\n    );\n\n    return [hideClosedPositions, setHideClosedPositions];\n}\n\nexport function useUserHideFarmingPositions(): [boolean, (newHideFarmingPositions: boolean) => void] {\n    const dispatch = useAppDispatch();\n\n    const hideFarmingPositions = useAppSelector((state) => state.user.userHideFarmingPositions);\n\n    const setHideFarmingPositions = useCallback(\n        (newHideFarmingPositions: boolean) => {\n            dispatch(updateHideFarmingPositions({ userHideFarmingPositions: newHideFarmingPositions }));\n        },\n        [dispatch]\n    );\n\n    return [hideFarmingPositions, setHideFarmingPositions];\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance: Percent): Percent {\n    const allowedSlippage = useUserSlippageTolerance();\n    return useMemo(() => (allowedSlippage === \"auto\" ? defaultSlippageTolerance : allowedSlippage), [allowedSlippage, defaultSlippageTolerance]);\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n    const dispatch = useAppDispatch();\n    const deadline = useAppSelector((state) => state.user.userDeadline);\n\n    const setUserDeadline = useCallback(\n        (userDeadline: number) => {\n            dispatch(updateUserDeadline({ userDeadline }));\n        },\n        [dispatch]\n    );\n\n    return [deadline, setUserDeadline];\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n    const dispatch = useAppDispatch();\n    return useCallback(\n        (token: Token) => {\n            dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\n        },\n        [dispatch]\n    );\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n    const dispatch = useAppDispatch();\n    return useCallback(\n        (chainId: number, address: string) => {\n            dispatch(removeSerializedToken({ chainId, address }));\n        },\n        [dispatch]\n    );\n}\n\nexport function useUserAddedTokens(): Token[] {\n    const { chainId } = useActiveWeb3React();\n    const serializedTokensMap = useAppSelector(({ user: { tokens } }) => tokens);\n\n    // console.log(serializedTokensMap, 'tokMapppp')\n\n    // useEffect(() => {\n    //     fetchList('https://unpkg.com/quickswap-default-token-list@1.0.39/build/quickswap-default.tokenlist.json')\n    //         .then(res => {\n    //             let stepTokens = {}\n    //             res.tokens.map(item => {\n    //                 if (item.chainId === 137) {\n    //                     stepTokens = {...stepTokens, [item.address]: item}\n    //                 }\n    //             })\n    //             setMap({137: stepTokens})\n    //         })\n    // }, [])\n\n    return useMemo(() => {\n        if (!chainId) return [];\n        return Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken);\n    }, [serializedTokensMap, chainId]);\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n    return {\n        token0: serializeToken(pair.token0),\n        token1: serializeToken(pair.token1),\n    };\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n    const dispatch = useAppDispatch();\n\n    return useCallback(\n        (pair: Pair) => {\n            dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\n        },\n        [dispatch]\n    );\n}\n\nexport function useURLWarningVisible(): boolean {\n    return useAppSelector((state: AppState) => state.user.URLWarningVisible);\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n    const { chainId } = useActiveWeb3React();\n    const tokens = useAllTokens();\n\n    // pinned pairs\n    const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId]);\n\n    // pairs for every token against every base\n    const generatedPairs: [Token, Token][] = useMemo(\n        () =>\n            chainId\n                ? flatMap(Object.keys(tokens), (tokenAddress) => {\n                      const token = tokens[tokenAddress];\n                      // for each token on the current chain,\n                      return (\n                          // loop though all bases on the current chain\n                          (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                              // to construct pairs of the given token with each base\n                              .map((base) => {\n                                  if (base.address === token.address) {\n                                      return null;\n                                  } else {\n                                      return [base, token];\n                                  }\n                              })\n                              .filter((p): p is [Token, Token] => p !== null)\n                      );\n                  })\n                : [],\n        [tokens, chainId]\n    );\n\n    // pairs saved by users\n    const savedSerializedPairs = useAppSelector(({ user: { pairs } }) => pairs);\n\n    const userPairs: [Token, Token][] = useMemo(() => {\n        if (!chainId || !savedSerializedPairs) return [];\n        const forChain = savedSerializedPairs[chainId];\n        if (!forChain) return [];\n\n        return Object.keys(forChain).map((pairId) => {\n            return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n        });\n    }, [savedSerializedPairs, chainId]);\n\n    const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n\n    return useMemo(() => {\n        // dedupes pairs of tokens in the combined list\n        const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n            // console.log(tokenA, tokenB, 'kekeke')\n            const sorted = tokenA.sortsBefore(tokenB);\n            const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n            if (memo[key]) return memo;\n            memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n            return memo;\n        }, {});\n\n        return Object.keys(keyed).map((key) => keyed[key]);\n    }, [combinedList]);\n}\n","import { Percent } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"./addresses\"\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const NetworkContextName = 'NETWORK'\n\n// 30 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 30\nexport const L2_DEADLINE_FROM_NOW = 60 * 5\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis JSBI.BigInt\nconst BIPS_BASE = JSBI.BigInt(10000)\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE)\n\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE)\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const IS_ON_APP_URL = window && window.location.hostname === AlgebraConfig.MISC[ChainId.BNB].appURL\n","import { createAction } from '@reduxjs/toolkit'\nimport { SupportedLocale } from 'constants/locales'\n\nexport interface SerializedToken {\n    chainId: number\n    address: string\n    decimals: number\n    symbol?: string\n    name?: string\n}\n\nexport interface SerializedPair {\n    token0: SerializedToken\n    token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateArbitrumAlphaAcknowledged = createAction<{ arbitrumAlphaAcknowledged: boolean }>('user/updateArbitrumAlphaAcknowledged')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserLocale = createAction<{ userLocale: SupportedLocale }>('user/updateUserLocale')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateHideClosedPositions = createAction<{ userHideClosedPositions: boolean }>('user/hideClosedPositions')\nexport const updateHideFarmingPositions = createAction<{ userHideFarmingPositions: boolean }>('user/hideFarmingPositions')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number | 'auto' }>('user/updateUserSlippageTolerance')\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\nexport const toggleOntoWrongChainModal = createAction<{ toggled: boolean }>('user/toggleOntoWrongChainModal')\n","import { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { arrayify } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { createTokenFilterFunction } from '../components/SearchModal/filtering'\nimport { ExtendedEther, WMATIC_EXTENDED } from '../constants/tokens'\nimport { TokenAddressMap, useAllLists, useCombinedActiveList, useInactiveListUrls } from '../state/lists/hooks'\nimport { WrappedTokenInfo } from '../state/lists/wrappedTokenInfo'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './web3'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n    const { chainId } = useActiveWeb3React()\n    const userAddedTokens = useUserAddedTokens()\n\n    return useMemo(() => {\n        if (!chainId) return {}\n\n        // reduce to just tokens\n        const mapWithoutUrls = Object.keys(tokenMap[chainId] ?? {}).reduce<{ [address: string]: Token }>(\n            (newMap, address) => {\n                newMap[address] = tokenMap[chainId][address].token\n                return newMap\n            },\n            {}\n        )\n\n        if (includeUserAdded) {\n            return (\n                userAddedTokens\n                    // reduce into all ALL_TOKENS filtered by the current chain\n                    .reduce<{ [address: string]: Token }>(\n                        (tokenMap, token) => {\n                            tokenMap[token.address] = token\n                            return tokenMap\n                        },\n                        // must make a copy because reduce modifies the map, and we do not\n                        // want to make a copy in every iteration\n                        { ...mapWithoutUrls }\n                    )\n            )\n        }\n\n        return mapWithoutUrls\n    }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n    const allTokens = useCombinedActiveList()\n    return useTokensFromMap(allTokens, true)\n}\n\nexport function useSearchInactiveTokenLists(search: string | undefined, minResults = 10): WrappedTokenInfo[] {\n    const lists = useAllLists()\n    const inactiveUrls = useInactiveListUrls()\n    const { chainId } = useActiveWeb3React()\n    const activeTokens = useAllTokens()\n\n    return useMemo(() => {\n        if (!search || search.trim().length === 0) return []\n        const tokenFilter = createTokenFilterFunction(search)\n        const result: WrappedTokenInfo[] = []\n        const addressSet: { [address: string]: true } = {}\n        for (const url of inactiveUrls) {\n            const list = lists[url].current\n            if (!list) continue\n            for (const tokenInfo of list.tokens) {\n                if (tokenInfo.chainId === chainId && tokenFilter(tokenInfo)) {\n                    const wrapped: WrappedTokenInfo = new WrappedTokenInfo(tokenInfo, list)\n                    if (!(wrapped.address in activeTokens) && !addressSet[wrapped.address]) {\n                        addressSet[wrapped.address] = true\n                        result.push(wrapped)\n                        if (result.length >= minResults) return result\n                    }\n                }\n            }\n        }\n        return result\n    }, [activeTokens, chainId, inactiveUrls, lists, minResults, search])\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n    const activeTokens = useAllTokens()\n\n    if (!activeTokens || !token) {\n        return false\n    }\n\n    return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n    const userAddedTokens = useUserAddedTokens()\n\n    if (!currency) {\n        return false\n    }\n\n    return !!userAddedTokens.find((token) => currency.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n    return str && str.length > 0\n        ? str\n        : // need to check for proper bytes string and valid terminator\n        bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n            ? parseBytes32String(bytes32)\n            : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n    const { chainId } = useActiveWeb3React()\n    const tokens = useAllTokens()\n\n    const address = isAddress(tokenAddress)\n    const _lowkeyAddress = useMemo(() => {\n        if (!address) return\n\n        return address.toLowerCase()\n\n    }, [tokenAddress, address])\n\n    const tokenContract = useTokenContract(address ? address : undefined, false)\n    const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n    const token: Token | undefined = address ? tokens[address] : undefined\n\n    const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n    const tokenNameBytes32 = useSingleCallResult(\n        token ? undefined : tokenContractBytes32,\n        'name',\n        undefined,\n        NEVER_RELOAD\n    )\n\n    const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n    const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n\n    const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n    return useMemo(() => {\n        if (token) return token\n        if (!chainId || !address || !_lowkeyAddress) return undefined\n        if (_lowkeyAddress in AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].defaultTokens) return new Token(\n            chainId,\n            address,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].defaultTokens[_lowkeyAddress].decimals,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].defaultTokens[_lowkeyAddress].symbol,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.BNB].defaultTokens[_lowkeyAddress].name\n        )\n        if (_lowkeyAddress in AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].defaultTokens) return new Token(\n            chainId,\n            address,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].defaultTokens[_lowkeyAddress].decimals,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].defaultTokens[_lowkeyAddress].symbol,\n            AlgebraConfig.DEFAULT_TOKEN_LIST[ChainId.PULSE].defaultTokens[_lowkeyAddress].name\n        )\n        if (decimals.loading || symbol.loading || tokenName.loading) return null\n        if (decimals.result) {\n            return new Token(\n                chainId,\n                address,\n                decimals.result[0],\n                parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n                parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n            )\n        }\n        return undefined\n    }, [\n        address,\n        chainId,\n        decimals.loading,\n        decimals.result,\n        symbol.loading,\n        symbol.result,\n        symbolBytes32.result,\n        token,\n        tokenName.loading,\n        tokenName.result,\n        tokenNameBytes32.result\n    ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n    const { chainId } = useActiveWeb3React()\n\n    const isETH = currencyId?.toUpperCase() === AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].wrappedNativeCurrency.symbol || currencyId?.toUpperCase() === AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].wrappedNativeCurrency.symbol\n\n    const token = useToken(isETH ? undefined : currencyId)\n    const extendedEther = useMemo(() => (chainId ? ExtendedEther.onChain(chainId) : undefined), [chainId])\n    const weth = chainId ? WMATIC_EXTENDED[chainId] : undefined\n    if (weth?.address?.toLowerCase() === currencyId?.toLowerCase()) return weth\n    return isETH ? extendedEther : token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport type PopupContent = {\n    txn: {\n        hash: string\n        success: boolean\n        summary?: string\n    }\n}\n\nexport enum ApplicationModal {\n    WALLET,\n    SETTINGS,\n    SELF_CLAIM,\n    ADDRESS_CLAIM,\n    CLAIM_POPUP,\n    MENU,\n    DELEGATE,\n    VOTE,\n    POOL_OVERVIEW_OPTIONS,\n    ARBITRUM_OPTIONS,\n}\n\nexport const updateChainId = createAction<{ chainId: number | null }>('application/updateChainId')\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\nexport const updateGasPrice = createAction<{ fetched: number | null, override: boolean }>('application/updateGasPrice')\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal')\nexport const addPopup =\n    createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>('application/addPopup')\nexport const removePopup = createAction<{ key: string }>('application/removePopup')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n    CURRENCY_A = 'CURRENCY_A',\n    CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { AppState } from '../index'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions'\n\nexport function useBlockNumber(): number | undefined {\n    const { chainId } = useActiveWeb3React()\n\n    return useAppSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n    const openModal = useAppSelector((state: AppState) => state.application.openModal)\n    return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n    const open = useModalOpen(modal)\n    const dispatch = useAppDispatch()\n    return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useWalletModalToggle(): () => void {\n    return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n    return useToggleModal(ApplicationModal.SETTINGS)\n}\n\nexport function useShowClaimPopup(): boolean {\n    return useModalOpen(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleShowClaimPopup(): () => void {\n    return useToggleModal(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleSelfClaimModal(): () => void {\n    return useToggleModal(ApplicationModal.SELF_CLAIM)\n}\n\nexport function useToggleDelegateModal(): () => void {\n    return useToggleModal(ApplicationModal.DELEGATE)\n}\n\nexport function useToggleVoteModal(): () => void {\n    return useToggleModal(ApplicationModal.VOTE)\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n    const dispatch = useAppDispatch()\n\n    return useCallback(\n        (content: PopupContent, key?: string) => {\n            dispatch(addPopup({ content, key }))\n        },\n        [dispatch]\n    )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n    const dispatch = useAppDispatch()\n    return useCallback(\n        (key: string) => {\n            dispatch(removePopup({ key }))\n        },\n        [dispatch]\n    )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n    const list = useAppSelector((state: AppState) => state.application.popupList)\n    return useMemo(() => list.filter((item) => item.show), [list])\n}\n","import styled, { keyframes } from 'styled-components/macro'\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`\n\nexport const StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n    animation: 2s ${rotate} linear infinite;\n    height: ${({ size }) => size};\n    width: ${({ size }) => size};\n\n    path {\n        stroke: ${({ stroke, theme }) => stroke ?? 'var(--primary)'};\n    }\n`\n\nconst loadingAnimation = keyframes`\n    0% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0 50%;\n    }\n`\n\nexport const LoadingRows = styled.div`\n    display: grid;\n    min-width: 75%;\n    max-width: 100%;\n    grid-column-gap: 0.5em;\n    grid-row-gap: 0.8em;\n    grid-template-columns: repeat(3, 1fr);\n\n    & > div {\n        animation: ${loadingAnimation} 1.5s infinite;\n        animation-fill-mode: both;\n        background: linear-gradient(to left,\n        ${({ theme }) => 'var(--bg1)'} 25%,\n        ${({ theme }) => 'var(--bg2)'} 50%,\n        ${({ theme }) => 'var(--bg1)'} 75%);\n        background-size: 400%;\n        border-radius: 12px;\n        height: 2.4em;\n        will-change: background-position;\n    }\n\n    & > div:nth-child(4n + 1) {\n        grid-column: 1 / 3;\n    }\n\n    & > div:nth-child(4n) {\n        grid-column: 3 / 4;\n        margin-bottom: 2em;\n    }\n`\n","import { StyledSVG } from './styled'\n\ninterface LoaderProps {\n    size?: string\n    stroke?: string\n    [k: string]: any\n}\n\nexport default function Loader({ size = '16px', stroke, ...rest }: LoaderProps) {\n    return (\n        <StyledSVG\n            style={{ display: 'block' }}\n            viewBox='0 0 24 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            size={size}\n            stroke={stroke}\n            {...rest}\n        >\n            <path\n                d='M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5'\n                strokeWidth='2.5'\n                strokeLinecap='round'\n                strokeLinejoin='round'\n            />\n        </StyledSVG>\n    )\n}\n","var map = {\n\t\"./en-US.po\": [\n\t\t968,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 714;\nmodule.exports = webpackAsyncContext;","import styled from \"styled-components/macro\";\nimport { cssVar, darken } from \"polished\";\n\nimport { RowBetween } from \"../Row\";\nimport { Check, ChevronDown } from \"react-feather\";\nimport { Button as RebassButton, ButtonProps as ButtonPropsOriginal } from \"rebass/styled-components\";\nimport useTheme from \"hooks/useTheme\";\n\ntype ButtonProps = Omit<ButtonPropsOriginal, \"css\">;\n\nconst Base = styled(RebassButton)<\n    {\n        padding?: string;\n        width?: string;\n        $borderRadius?: string;\n        altDisabledStyle?: boolean;\n    } & ButtonProps\n>`\n    padding: ${({ padding }) => padding ?? \"16px\"};\n    width: ${({ width }) => width ?? \"100%\"};\n    font-weight: 500;\n    text-align: center;\n    border-radius: ${({ $borderRadius }) => $borderRadius ?? \"12px\"};\n    outline: none;\n    border: 1px solid transparent;\n    color: white;\n    text-decoration: none;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    align-items: center;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n\n    &:disabled {\n        cursor: auto;\n        pointer-events: none;\n    }\n\n    will-change: transform;\n    transition: transform 450ms ease;\n    transform: perspective(1px) translateZ(0);\n\n    > * {\n        user-select: none;\n    }\n\n    > a {\n        text-decoration: none;\n    }\n`;\n\nexport const ButtonPrimary = styled(Base)`\n    background-color: ${({ theme }) => \"var(--primary)\"};\n    color: white;\n\n    &:focus {\n        box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, String(cssVar(\"--primary\")))};\n        background-color: ${({ theme }) => darken(0.05, String(cssVar(\"--primary\")))};\n    }\n\n    &:hover {\n        background-color: ${({ theme }) => darken(0.05, String(cssVar(\"--primary\")))};\n    }\n\n    &:active {\n        box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, String(cssVar(\"--primary\")))};\n        background-color: ${({ theme }) => darken(0.1, String(cssVar(\"--primary\")))};\n    }\n\n    &:disabled {\n        background-color: ${({ theme, altDisabledStyle, disabled }) => (altDisabledStyle ? (disabled ? \"var(--primary)\" : \"var(--primary-disabled)\") : \"var(--primary-disabled)\")};\n        color: ${({ theme }) => \"var(--text2)\"};\n        cursor: auto;\n        box-shadow: none;\n        border: 1px solid transparent;\n        outline: none;\n    }\n`;\n\nexport const ButtonLight = styled(Base)`\n    background-color: ${({ theme }) => \"var(--primary)\"};\n    color: ${({}) => \"white\"};\n    font-size: 16px;\n    font-weight: 500;\n\n    &:focus {\n        box-shadow: 0 0 0 1pt ${({ disabled, theme }) => !disabled && darken(0.03, String(cssVar(\"--primary\")))};\n        background-color: ${({ disabled, theme }) => !disabled && darken(0.03, String(cssVar(\"--primary\")))};\n    }\n\n    &:hover {\n        background-color: ${({ disabled, theme }) => !disabled && darken(0.03, String(cssVar(\"--primary\")))};\n    }\n\n    &:active {\n        box-shadow: 0 0 0 1pt ${({ disabled, theme }) => !disabled && darken(0.05, String(cssVar(\"--primary\")))};\n        background-color: ${({ disabled, theme }) => !disabled && darken(0.05, String(cssVar(\"--primary\")))};\n    }\n\n    :disabled {\n        opacity: 0.4;\n\n        :hover {\n            cursor: auto;\n            background-color: ${({}) => \"#6ec2eb\"};\n            box-shadow: none;\n            border: 1px solid transparent;\n            outline: none;\n        }\n    }\n`;\n\nexport const ButtonGray = styled(Base)`\n    background-color: ${({ theme }) => \"var(--primary)\"};\n    color: ${({ theme }) => \"var(--text2)\"};\n    font-size: 16px;\n    font-weight: 500;\n\n    &:hover {\n        background-color: ${({ theme, disabled }) => !disabled && darken(0.05, String(cssVar(\"--primary\")))};\n    }\n\n    &:active {\n        background-color: ${({ theme, disabled }) => !disabled && darken(0.1, String(cssVar(\"--primary-disabled\")))};\n    }\n`;\n\nexport const ButtonSecondary = styled(Base)`\n    border: 1px solid ${({ theme }) => \"var(--primary3)\"};\n    color: ${({ theme }) => \"var(--primary)\"};\n    background-color: transparent;\n    font-size: 16px;\n    border-radius: 12px;\n    padding: ${({ padding }) => (padding ? padding : \"10px\")};\n\n    &:focus {\n        box-shadow: 0 0 0 1pt ${({ theme }) => \"var(--primary3)\"};\n        border: 1px solid ${({ theme }) => \"var(--primary2)\"};\n    }\n\n    &:hover {\n        border: 1px solid ${({ theme }) => \"var(--primary2)\"};\n    }\n\n    &:active {\n        box-shadow: 0 0 0 1pt ${({ theme }) => \"var(--primary3)\"};\n        border: 1px solid ${({ theme }) => \"var(--primary2)\"};\n    }\n\n    &:disabled {\n        opacity: 50%;\n        cursor: auto;\n    }\n\n    a:hover {\n        text-decoration: none;\n    }\n`;\n\nexport const ButtonOutlined = styled(Base)`\n    background-color: ${({}) => \"rgba(60,97,126,0.5)\"};\n    color: ${({ theme }) => \"var(--text1)\"};\n\n    &:focus {\n        box-shadow: 0 0 0 1px ${({ theme }) => \"var(--bg4)\"};\n    }\n\n    &:hover {\n        box-shadow: 0 0 0 1px ${({ theme }) => \"var(--bg4)\"};\n    }\n\n    &:active {\n        box-shadow: 0 0 0 1px ${({ theme }) => \"var(--bg4)\"};\n    }\n\n    &:disabled {\n        opacity: 50%;\n        cursor: auto;\n    }\n`;\n\nexport const ButtonEmpty = styled(Base)`\n    background-color: transparent;\n    // color: ${({ theme }) => \"var(--primary)\"};\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &:focus {\n        text-decoration: underline;\n    }\n\n    &:hover {\n        text-decoration: none;\n    }\n\n    &:active {\n        text-decoration: none;\n    }\n\n    &:disabled {\n        opacity: 50%;\n        cursor: auto;\n    }\n`;\n\nexport const ButtonText = styled(Base)`\n    padding: 0;\n    width: fit-content;\n    background: none;\n    text-decoration: none;\n\n    &:focus {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        text-decoration: underline;\n    }\n\n    &:hover {\n        // text-decoration: underline;\n        opacity: 0.9;\n    }\n\n    &:active {\n        text-decoration: underline;\n    }\n\n    &:disabled {\n        opacity: 50%;\n        cursor: auto;\n    }\n`;\n\nconst ButtonConfirmedStyle = styled(Base)`\n    background-color: ${({ theme }) => \"var(--bg3)\"};\n    color: ${({ theme }) => \"var(--text1)\"};\n    /* border: 1px solid ${({ theme }) => \"var(--green1)\"}; */\n\n    &:disabled {\n        opacity: 50%;\n        background-color: ${({ theme }) => \"var(--primary-disabled)\"};\n        color: ${({ theme }) => \"var(--text2)\"};\n        cursor: auto;\n    }\n`;\n\nconst ButtonErrorStyle = styled(Base)`\n    background-color: var(--primary);\n\n    &:focus {\n        box-shadow: 0 0 0 1pt var(--red);\n        background-color: var(--red);\n    }\n\n    &:hover {\n        background-color: var(--red);\n    }\n\n    &:active {\n        box-shadow: 0 0 0 1pt var(--red);\n        background-color: var(--red);\n    }\n\n    &:disabled {\n        opacity: 50%;\n        cursor: auto;\n        box-shadow: none;\n        color: #d7d7d7;\n        background-color: var(--primary-weak);\n        border: 1px solid var(--primary-weak);\n    }\n`;\n\nexport function ButtonConfirmed({ confirmed, altDisabledStyle, ...rest }: { confirmed?: boolean; altDisabledStyle?: boolean } & ButtonProps) {\n    if (confirmed) {\n        return <ButtonConfirmedStyle {...rest} />;\n    } else {\n        return <ButtonPrimary {...rest} altDisabledStyle={altDisabledStyle} />;\n    }\n}\n\nexport function ButtonError({ error, ...rest }: { error?: boolean } & ButtonProps) {\n    if (error) {\n        return <ButtonErrorStyle {...rest} />;\n    } else {\n        return <ButtonPrimary {...rest} />;\n    }\n}\n\nexport function ButtonDropdown({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n    return (\n        <ButtonPrimary {...rest} disabled={disabled}>\n            <RowBetween>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n                <ChevronDown size={24} />\n            </RowBetween>\n        </ButtonPrimary>\n    );\n}\n\nexport function ButtonDropdownLight({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n    return (\n        <ButtonOutlined {...rest} disabled={disabled}>\n            <RowBetween>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n                <ChevronDown size={24} />\n            </RowBetween>\n        </ButtonOutlined>\n    );\n}\n\nconst ActiveOutlined = styled(ButtonOutlined)`\n    border: 1px solid;\n    border-color: ${({ theme }) => \"var(--primary)\"};\n`;\n\nconst Circle = styled.div`\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background-color: ${({ theme }) => \"var(--primary)\"};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst CheckboxWrapper = styled.div`\n    width: 30px;\n    padding: 0 10px;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n`;\n\nconst ResponsiveCheck = styled(Check)`\n    size: 13px;\n`;\n\nexport function ButtonRadioChecked({ active = false, children, ...rest }: { active?: boolean } & ButtonProps) {\n    const theme = useTheme();\n\n    if (!active) {\n        return (\n            <ButtonOutlined $borderRadius=\"12px\" padding=\"12px 8px\" {...rest}>\n                {<RowBetween>{children}</RowBetween>}\n            </ButtonOutlined>\n        );\n    } else {\n        return (\n            <ActiveOutlined {...rest} padding=\"12px 8px\" $borderRadius=\"12px\">\n                {\n                    <RowBetween>\n                        {children}\n                        <CheckboxWrapper>\n                            <Circle>\n                                <ResponsiveCheck size={13} stroke={theme.white} />\n                            </Circle>\n                        </CheckboxWrapper>\n                    </RowBetween>\n                }\n            </ActiveOutlined>\n        );\n    }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { ALL_SUPPORTED_CHAIN_IDS } from '../constants/chains'\nimport getLibrary from '../utils/getLibrary'\nimport { NetworkConnector } from './NetworkConnector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { OntoWindow } from '../models/types/global'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ConnectorUpdate } from '@web3-react/types'\nimport { getAddress } from 'ethers/lib/utils'\n\nimport AlgebraConfig from \"algebra.config\"\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY\nconst NETWORK_URLS: { [chainId: number]: string } = {\n    [56]: AlgebraConfig.CHAIN_PARAMS[56].rpcURL,\n    [369]: AlgebraConfig.CHAIN_PARAMS[369].rpcURL\n}\n\nexport const network = new NetworkConnector({\n    urls: NETWORK_URLS,\n    defaultChainId: 56\n})\n\nlet networkLibrary: Web3Provider | undefined\n\nexport function getNetworkLibrary(): Web3Provider {\n    return (networkLibrary = networkLibrary ?? getLibrary(network.provider))\n}\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: ALL_SUPPORTED_CHAIN_IDS\n})\n\nexport const gnosisSafe = new SafeAppConnector()\n\nexport const walletconnector = new WalletConnectConnector({\n    rpc: NETWORK_URLS,\n    supportedChainIds: ALL_SUPPORTED_CHAIN_IDS,\n    qrcode: true,\n})\n\ninterface OntoWalletConfig {\n    supportedChainIds: number[]\n}\n\nexport class OntoWalletConnector extends AbstractConnector {\n\n    constructor(config: OntoWalletConfig) {\n        super({ supportedChainIds: config.supportedChainIds })\n    }\n\n    async activate(): Promise<ConnectorUpdate> {\n        const ethAgent = this.getAgent()\n\n        if (!(await this.isAvalible())) {\n            throw new Error('Wallet is not available')\n        }\n\n        const accounts: string[] = await ethAgent.request({\n            method: 'eth_requestAccounts'\n        })\n\n        const account = getAddress(accounts[0])\n\n        const provider = new Web3Provider(ethAgent)\n\n        const { chainId } = await provider.getNetwork()\n\n        // @ts-ignore\n        provider.provider.on('accountsChanged', (accounts: string[]): void => {\n            //@ts-ignore\n            if (account !== accounts[0]) {\n                localStorage.setItem('ontoWarning', '')\n                window.location.reload()\n            } else if (accounts.length === 0) {\n                localStorage.setItem('ontoWarning', '')\n            }\n        })\n\n        //@ts-ignore\n        provider.provider.on('chainChanged', (chain) => {\n            //@ts-ignore\n            if (chain !== chainId) {\n                window.location.reload()\n            } else {\n                localStorage.setItem('ontoWarning', '')\n            }\n        })\n\n\n        return Promise.resolve({ provider: provider.provider, chainId, account })\n    }\n\n    deactivate(): void {\n    }\n\n    protected getAgent(): any {\n        return (\n            (window as any).onto ??\n            ((window as any).ethereum?.isONTO && (window as any).ethereum)\n        )\n    }\n\n    async getAccount(): Promise<string | null> {\n        const { account } = await this.activate()\n        return Promise.resolve(account ?? null)\n    }\n\n    async getChainId(): Promise<number | string> {\n        const { chainId } = await this.activate()\n        if (!chainId) {\n            throw new Error('Error chainId')\n        }\n        return Promise.resolve(chainId)\n    }\n\n    async getProvider(): Promise<any> {\n        const { provider } = await this.activate()\n        return Promise.resolve(provider)\n    }\n\n    protected async isAvalible(): Promise<boolean> {\n        return !!this.getAgent()\n    }\n\n    async close(): Promise<void> {\n        this.deactivate()\n        // const { provider, account } = await this.activate()\n        try {\n\n\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    parseSendReturn(sendReturn: any) {\n        return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n    }\n\n\n    async isAuthorized(): Promise<boolean> {\n\n        const _window = window as unknown as OntoWindow\n\n        if (!_window.onto) {\n            return false\n        }\n\n        try {\n            return await _window.onto.send('eth_accounts').then((sendReturn: any) => {\n                if (this.parseSendReturn(sendReturn).length > 0) {\n                    return true\n                } else {\n                    return false\n                }\n            })\n        } catch {\n            return false\n        }\n    }\n\n}\n\nexport const ontoconnector = new OntoWalletConnector({\n    supportedChainIds: [56, 369]\n})\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n    urls: { [chainId: number]: string }\n    defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n    isMetaMask?: boolean\n    host?: string\n    path?: string\n    sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n    send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n    constructor(message: string, public code: number, public data?: unknown) {\n        super(message)\n    }\n}\n\ninterface BatchItem {\n    request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n    resolve: (result: any) => void\n    reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n    public readonly isMetaMask: false = false\n    public readonly chainId: number\n    public readonly url: string\n    public readonly host: string\n    public readonly path: string\n    public readonly batchWaitTimeMs: number\n\n    private nextId = 1\n    private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n    private batch: BatchItem[] = []\n\n    constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n        this.chainId = chainId\n        this.url = url\n        const parsed = new URL(url)\n        this.host = parsed.host\n        this.path = parsed.pathname\n        // how long to wait to batch calls\n        this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n    }\n\n    public readonly clearBatch = async () => {\n        // console.debug('Clearing batch', this.batch)\n        const batch = this.batch\n        this.batch = []\n        this.batchTimeoutId = null\n        let response: Response\n        try {\n            response = await fetch(this.url, {\n                method: 'POST',\n                headers: { 'content-type': 'application/json', accept: 'application/json' },\n                body: JSON.stringify(batch.map((item) => item.request))\n            })\n        } catch (error) {\n            batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n            return\n        }\n\n        if (!response.ok) {\n            batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n            return\n        }\n\n        let json\n        try {\n            json = await response.json()\n        } catch (error) {\n            batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n            return\n        }\n        const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n            memo[current.request.id] = current\n            return memo\n        }, {})\n        for (const result of json) {\n            const {\n                resolve,\n                reject,\n                request: { method }\n            } = byKey[result.id]\n            if ('error' in result) {\n                reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n            } else if ('result' in result && resolve) {\n                resolve(result.result)\n            } else {\n                reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n            }\n        }\n    }\n\n    public readonly sendAsync = (\n        request: {\n            jsonrpc: '2.0'\n            id: number | string | null\n            method: string\n            params?: unknown[] | Record<string, unknown>\n        },\n        callback: (error: any, response: any) => void\n    ): void => {\n        this.request(request.method, request.params)\n            .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n            .catch((error) => callback(error, null))\n    }\n\n    public readonly request = async (\n        method: string | { method: string; params: unknown[] },\n        params?: unknown[] | Record<string, unknown>\n    ): Promise<unknown> => {\n        if (typeof method !== 'string') {\n            return this.request(method.method, method.params)\n        }\n        if (method === 'eth_chainId') {\n            return `0x${this.chainId.toString(16)}`\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.batch.push({\n                request: {\n                    jsonrpc: '2.0',\n                    id: this.nextId++,\n                    method,\n                    params\n                },\n                resolve,\n                reject\n            })\n        })\n        this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n        return promise\n    }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n    private readonly providers: { [chainId: number]: MiniRpcProvider }\n    private currentChainId: number\n\n    constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n        invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n        super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n        this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n        this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n            accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n            return accumulator\n        }, {})\n    }\n\n    public get provider(): MiniRpcProvider {\n        return this.providers[this.currentChainId]\n    }\n\n    public async activate(): Promise<ConnectorUpdate> {\n        return {\n            provider: this.providers[this.currentChainId],\n            chainId: this.currentChainId,\n            account: null\n        }\n    }\n\n    public async getProvider(): Promise<MiniRpcProvider> {\n        return this.providers[this.currentChainId]\n    }\n\n    public async getChainId(): Promise<number> {\n        return this.currentChainId\n    }\n\n    public async getAccount(): Promise<null> {\n        return null\n    }\n\n    public deactivate() {\n        return\n    }\n}\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { useCallback, useMemo } from 'react'\nimport { SWAP_ROUTER_ADDRESSES } from '../constants/addresses'\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin } from '../utils/calculateGasMargin'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './web3'\nimport { useTokenAllowance } from './useTokenAllowance'\nimport { useAppSelector } from \"state/hooks\"\nimport { GAS_PRICE_MULTIPLIER } from \"./useGasPrice\"\n\nimport { t } from '@lingui/macro'\nexport enum ApprovalState {\n    UNKNOWN = 'UNKNOWN',\n    NOT_APPROVED = 'NOT_APPROVED',\n    PENDING = 'PENDING',\n    APPROVED = 'APPROVED',\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n    amountToApprove?: CurrencyAmount<Currency>,\n    spender?: string\n): [ApprovalState, () => Promise<void>] {\n    const { account, chainId } = useActiveWeb3React()\n    const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n    const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n    const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n\n    const gasPrice = useAppSelector((state) => {\n        if (!state.application.gasPrice.fetched) return 0.1\n        return state.application.gasPrice.override ? 0.1 : state.application.gasPrice.fetched\n    })\n\n    // check the current approval status\n    const approvalState: ApprovalState = useMemo(() => {\n        if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n        if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n        // we might not have enough data to know whether or not we need to approve\n        if (!currentAllowance) return ApprovalState.UNKNOWN\n\n        // amountToApprove will be defined if currentAllowance is\n        return currentAllowance.lessThan(amountToApprove)\n            ? pendingApproval\n                ? ApprovalState.PENDING\n                : ApprovalState.NOT_APPROVED\n            : ApprovalState.APPROVED\n    }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n    const tokenContract = useTokenContract(token?.address)\n    const addTransaction = useTransactionAdder()\n\n    const approve = useCallback(async (): Promise<void> => {\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\n            console.error('approve was called unnecessarily')\n            return\n        }\n        if (!chainId) {\n            console.error('no chainId')\n            return\n        }\n\n        if (!token) {\n            console.error('no token')\n            return\n        }\n\n        if (!tokenContract) {\n            console.error('tokenContract is null')\n            return\n        }\n\n        if (!amountToApprove) {\n            console.error('missing amount to approve')\n            return\n        }\n\n        if (!spender) {\n            console.error('no spender')\n            return\n        }\n\n        let useExact = true\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n            // general fallback for tokens who restrict approval amounts\n            useExact = true\n            return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n        })\n\n        return tokenContract\n            .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n                gasLimit: calculateGasMargin(chainId, estimatedGas),\n            })\n            .then((response: TransactionResponse) => {\n                addTransaction(response, {\n                    summary: t`Approved ` + (amountToApprove.currency.symbol || t`LP-tokens`),\n                    approval: { tokenAddress: token.address, spender: spender }\n                })\n            })\n            .catch((error: Error) => {\n                console.debug('Failed to approve token', error)\n                // throw error\n            })\n    }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, chainId])\n\n    return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined,\n    allowedSlippage: Percent\n) {\n    const { chainId } = useActiveWeb3React()\n    const v3SwapRouterAddress = chainId ? SWAP_ROUTER_ADDRESSES[chainId] : undefined\n    const amountToApprove = useMemo(\n        () => (trade && trade.inputAmount.currency.isToken ? trade.maximumAmountIn(allowedSlippage) : undefined),\n        [trade, allowedSlippage]\n    )\n    return useApproveCallback(\n        amountToApprove,\n        chainId ? (trade instanceof V3Trade ? v3SwapRouterAddress : undefined) : undefined\n    )\n}\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTokenContract } from './useContract'\nimport usePrevious from './usePrevious'\n\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): CurrencyAmount<Token> | undefined {\n    const contract = useTokenContract(token?.address, false)\n\n    const inputs = useMemo(() => [owner, spender], [owner, spender])\n    const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n    const prevAllowance = usePrevious(allowance)\n\n    const _allowance = useMemo(() => {\n        if (!prevAllowance) return allowance\n\n        if (!allowance && prevAllowance) return prevAllowance\n\n        return allowance\n    }, [allowance, token, owner, spender])\n\n    return useMemo(\n        () => (token && _allowance ? CurrencyAmount.fromRawAmount(token, _allowance.toString()) : undefined),\n        [token, _allowance]\n    )\n}\n","import { useEffect, useRef } from 'react'\n\n// modified from https://usehooks.com/usePrevious/\nexport default function usePrevious<T>(value: T) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T>()\n\n    // Store current value in ref\n    useEffect(() => {\n        if (value && ref.current !== value) {\n            ref.current = value\n        }\n    }, [value]) // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current\n}\n\nexport function usePreviousNonEmptyArray<T>(value: T[]) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T[]>()\n\n    // Store current value in ref\n    useEffect(() => {\n        if (value.length > 0) {\n            ref.current = value\n        }\n    }, [value]) // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current\n}\n\nexport function usePreviousNonEmptyObject<T>(value: T) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T>()\n\n    // Store current value in ref\n    useEffect(() => {\n        if (value && Object.keys(value).length !== 0) {\n            ref.current = value\n        }\n    }, [value]) // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current\n}\n\nexport function usePreviousNonErroredArray<T>(value: T[]) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T[]>()\n\n    // Store current value in ref\n    useEffect(() => {\n        if (value.length > 0 && !value.every((el: any) => el.error)) {\n            ref.current = value\n        }\n    }, [value]) // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current\n}","import AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nconst ETHERSCAN_PREFIXES: { [chainId: number]: string } = {\n    [ChainId.BNB]: ''\n}\n\nexport enum ExplorerDataType {\n    TRANSACTION = 'transaction',\n    TOKEN = 'token',\n    ADDRESS = 'address',\n    BLOCK = 'block',\n}\n\n/**\n * Return the explorer link for the given data and data type\n * @param chainId the ID of the chain for which to return the data\n * @param data the data to return a link for\n * @param type the type of the data\n */\nexport function getExplorerLink(chainId: number, data: string, type: ExplorerDataType): string {\n    const prefix = `${AlgebraConfig.CHAIN_PARAMS[chainId].blockExplorerURL}`\n\n    switch (type) {\n        case ExplorerDataType.TRANSACTION:\n            return `${prefix}/tx/${data}`\n\n        case ExplorerDataType.TOKEN:\n            return `${prefix}/token/${data}`\n\n        case ExplorerDataType.BLOCK:\n            return `${prefix}/block/${data}`\n\n        case ExplorerDataType.ADDRESS:\n            return `${prefix}/address/${data}`\n        default:\n            return `${prefix}`\n    }\n}\n","import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V3Trade } from 'lib/src'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { useMemo } from 'react'\nimport { useUserSlippageToleranceWithDefault } from '../state/user/hooks'\n\nconst V3_SWAP_DEFAULT_SLIPPAGE = new Percent(50, 10_000) // .50%\nconst ONE_TENTHS_PERCENT = new Percent(10, 10_000) // .10%\n\nexport default function useSwapSlippageTolerance(\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n): Percent {\n    const defaultSlippageTolerance = useMemo(() => {\n        if (!trade) return ONE_TENTHS_PERCENT\n        return V3_SWAP_DEFAULT_SLIPPAGE\n    }, [trade])\n    return useUserSlippageToleranceWithDefault(defaultSlippageTolerance)\n}\n","import { t } from '@lingui/macro'\nimport JSBI from 'jsbi'\nimport { Trade as V3Trade } from 'lib/src'\nimport { useBestV3TradeExactIn, useBestV3TradeExactOut, V3TradeState } from '../../hooks/useBestV3Trade'\nimport useENS from '../../hooks/useENS'\nimport { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useCurrency } from '../../hooks/Tokens'\nimport useSwapSlippageTolerance from '../../hooks/useSwapSlippageTolerance'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport function useSwapState(): AppState['swap'] {\n    return useAppSelector((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n    onCurrencySelection: (field: Field, currency: Currency) => void\n    onSwitchTokens: () => void\n    onUserInput: (field: Field, typedValue: string) => void\n    onChangeRecipient: (recipient: string | null) => void\n} {\n    const dispatch = useAppDispatch()\n\n    const { chainId } = useActiveWeb3React()\n\n    let symbol: string\n\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        symbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n    }\n\n    const onCurrencySelection = useCallback(\n        (field: Field, currency: Currency) => {\n\n            dispatch(\n                selectCurrency({\n                    field,\n                    currencyId: currency.isToken ? currency.address : currency.isNative ? AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol : ''\n                })\n            )\n        },\n        [dispatch]\n    )\n\n    const onSwitchTokens = useCallback(() => {\n        dispatch(switchCurrencies())\n    }, [dispatch])\n\n    const onUserInput = useCallback(\n        (field: Field, typedValue: string) => {\n            dispatch(typeInput({ field, typedValue }))\n        },\n        [dispatch]\n    )\n\n    const onChangeRecipient = useCallback(\n        (recipient: string | null) => {\n            dispatch(setRecipient({ recipient }))\n        },\n        [dispatch]\n    )\n\n    return {\n        onSwitchTokens,\n        onCurrencySelection,\n        onUserInput,\n        onChangeRecipient\n    }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount<T extends Currency>(value?: string, currency?: T): CurrencyAmount<T> | undefined {\n    if (!value || !currency) {\n        return undefined\n    }\n    try {\n        const typedValueParsed = parseUnits(value, currency.decimals).toString()\n        if (typedValueParsed !== '0') {\n            return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n        }\n    } catch (error) {\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n        console.debug(`Failed to parse input amount: \"${value}\"`, error)\n    }\n    // necessary for all paths to return a value\n    return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: { [address: string]: true } = {\n    '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f': true, // v2 factory\n    '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a': true, // v2 router 01\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D': true // v2 router 02\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n    currencies: { [field in Field]?: Currency }\n    currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n    parsedAmount: CurrencyAmount<Currency> | undefined\n    inputError?: string\n    v2Trade: V2Trade<Currency, Currency, TradeType> | undefined\n    v3TradeState: { trade: V3Trade<Currency, Currency, TradeType> | null; state: V3TradeState }\n    toggledTrade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n    allowedSlippage: Percent\n} {\n    const { account } = useActiveWeb3React()\n\n    const {\n        independentField,\n        typedValue,\n        [Field.INPUT]: { currencyId: inputCurrencyId },\n        [Field.OUTPUT]: { currencyId: outputCurrencyId },\n        recipient\n    } = useSwapState()\n\n\n    const inputCurrency = useCurrency(inputCurrencyId)\n    const outputCurrency = useCurrency(outputCurrencyId)\n\n    const recipientLookup = useENS(recipient ?? undefined)\n    const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n    const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n        inputCurrency ?? undefined,\n        outputCurrency ?? undefined\n    ])\n\n    const isExactIn: boolean = independentField === Field.INPUT\n    const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n    // const bestV2TradeExactIn = useV2TradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined, {\n    //   maxHops: singleHopOnly ? 1 : undefined,\n    // })\n    // const bestV2TradeExactOut = useV2TradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined, {\n    //   maxHops: singleHopOnly ? 1 : undefined,\n    // })\n\n    const bestV3TradeExactIn = useBestV3TradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n    const bestV3TradeExactOut = useBestV3TradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n    // const v2Trade = isExactIn ? bestV2TradeExactIn : bestV2TradeExactOut\n    const v3Trade = (isExactIn ? bestV3TradeExactIn : bestV3TradeExactOut) ?? undefined\n\n    const currencyBalances = {\n        [Field.INPUT]: relevantTokenBalances[0],\n        [Field.OUTPUT]: relevantTokenBalances[1]\n    }\n\n    const currencies: { [field in Field]?: Currency } = {\n        [Field.INPUT]: inputCurrency ?? undefined,\n        [Field.OUTPUT]: outputCurrency ?? undefined\n    }\n\n    let inputError: string | undefined\n    if (!account) {\n        inputError = t`Connect Wallet`\n    }\n\n    if (!parsedAmount) {\n        inputError = inputError ?? t`Enter an amount`\n    }\n\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n        inputError = inputError ?? t`Select a token`\n    }\n\n    const formattedTo = isAddress(to)\n    if (!to || !formattedTo) {\n        inputError = inputError ?? t`Enter a recipient`\n    } else {\n        if (\n            BAD_RECIPIENT_ADDRESSES[formattedTo]\n            // (bestV2TradeExactIn && involvesAddress(bestV2TradeExactIn, formattedTo)) ||\n            // (bestV2TradeExactOut && involvesAddress(bestV2TradeExactOut, formattedTo))\n        ) {\n            inputError = inputError ?? t`Invalid recipient`\n        }\n    }\n\n    const toggledTrade = v3Trade.trade ?? undefined\n    const allowedSlippage = useSwapSlippageTolerance(toggledTrade)\n\n    // compare input balance to max input based on version\n    const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], toggledTrade?.maximumAmountIn(allowedSlippage)]\n\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n        inputError = t`Insufficient ${amountIn.currency.symbol} balance`\n    }\n\n    return {\n        currencies,\n        currencyBalances,\n        parsedAmount,\n        inputError,\n        v2Trade: undefined,\n        v3TradeState: v3Trade,\n        toggledTrade,\n        allowedSlippage\n    }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any, chainId: number): string {\n    let chainSymbol\n\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        chainSymbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n    }\n\n    if (typeof urlParam === 'string') {\n        const valid = isAddress(urlParam)\n        if (valid) return valid\n        if (urlParam.toUpperCase() === chainSymbol) return chainSymbol\n    }\n    return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n    return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n    return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\n\nfunction validatedRecipient(recipient: any): string | null {\n    if (typeof recipient !== 'string') return null\n    const address = isAddress(recipient)\n    if (address) return address\n    if (ENS_NAME_REGEX.test(recipient)) return recipient\n    if (ADDRESS_REGEX.test(recipient)) return recipient\n    return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs, chainId: number): SwapState {\n    let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency, chainId)\n    let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency, chainId)\n    if (inputCurrency === '' && outputCurrency === '') {\n        // default to ETH input\n        if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n            inputCurrency = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n        }\n    } else if (inputCurrency === outputCurrency) {\n        // clear output if identical\n        outputCurrency = ''\n    }\n\n    const recipient = validatedRecipient(parsedQs.recipient)\n\n    return {\n        [Field.INPUT]: {\n            currencyId: inputCurrency\n        },\n        [Field.OUTPUT]: {\n            currencyId: outputCurrency\n        },\n        typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n        independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n        recipient\n    }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n    | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n    | undefined {\n    const { chainId } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n    const parsedQs = useParsedQueryString()\n    const [result, setResult] =\n        useState<{ inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined>()\n\n    useEffect(() => {\n        if (!chainId) return\n        const parsed = queryParametersToSwapState(parsedQs, chainId)\n\n        dispatch(\n            replaceSwapState({\n                typedValue: parsed.typedValue,\n                field: parsed.independentField,\n                inputCurrencyId: parsed[Field.INPUT].currencyId,\n                outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n                recipient: parsed.recipient\n            })\n        )\n\n        setResult({\n            inputCurrencyId: parsed[Field.INPUT].currencyId,\n            outputCurrencyId: parsed[Field.OUTPUT].currencyId\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, chainId])\n\n    return result\n}\n","import { POOL_DEPLOYER_ADDRESS } from '../constants/addresses'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useActiveWeb3React } from './web3'\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nimport { Pool } from 'lib/src'\nimport { Interface } from '@ethersproject/abi'\nimport abi from '../abis/pool.json'\nimport { computePoolAddress } from './computePoolAddress'\nimport { useInternet } from './useInternet'\nimport { useToken } from './Tokens'\nimport { usePreviousNonEmptyArray, usePreviousNonErroredArray } from './usePrevious'\n\nconst POOL_STATE_INTERFACE = new Interface(abi)\n\nexport enum PoolState {\n    LOADING,\n    NOT_EXISTS,\n    EXISTS,\n    INVALID,\n}\n\nexport function usePools(\n    poolKeys: [Currency | undefined, Currency | undefined][]\n): [PoolState, Pool | null][] {\n    const { chainId } = useActiveWeb3React()\n\n    const transformed: ([Token, Token] | null)[] = useMemo(() => {\n        return poolKeys.map(([currencyA, currencyB]) => {\n            if (!chainId || !currencyA || !currencyB) return null\n\n            const tokenA = currencyA?.wrapped\n            const tokenB = currencyB?.wrapped\n            if (!tokenA || !tokenB || tokenA.equals(tokenB)) return null\n            const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n            return [token0, token1]\n        })\n    }, [chainId, poolKeys])\n\n    const poolAddresses: (string | undefined)[] = useMemo(() => {\n        const poolDeployerAddress = chainId && POOL_DEPLOYER_ADDRESS[chainId]\n\n        return transformed.map((value) => {\n            if (!poolDeployerAddress || !value) return undefined\n            return computePoolAddress({\n                poolDeployer: poolDeployerAddress,\n                tokenA: value[0],\n                tokenB: value[1]\n            })\n        })\n    }, [chainId, transformed])\n\n    const globalState0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'globalState')\n    const prevGlobalState0s = usePreviousNonErroredArray(globalState0s)\n\n    const _globalState0s = useMemo(() => {\n\n        if (!prevGlobalState0s || !globalState0s || globalState0s.length === 1) return globalState0s\n\n        if (globalState0s.every(el => el.error) && !prevGlobalState0s.every(el => el.error)) return prevGlobalState0s\n\n        return globalState0s\n\n    }, [poolAddresses, globalState0s])\n\n    const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n    const prevLiquidities = usePreviousNonErroredArray(liquidities)\n\n    const _liquidities = useMemo(() => {\n\n        if (!prevLiquidities || !liquidities || liquidities.length === 1) return liquidities\n\n        if (liquidities.every(el => el.error) && !prevLiquidities.every(el => el.error)) return prevLiquidities\n\n        return liquidities\n\n    }, [poolAddresses, liquidities])\n\n    return useMemo(() => {\n        return poolKeys.map((_key, index) => {\n            const [token0, token1] = transformed[index] ?? []\n            if (!token0 || !token1) return [PoolState.INVALID, null]\n\n            const {\n                result: globalState,\n                loading: globalStateLoading,\n                valid: globalStateValid\n            } = _globalState0s[index]\n            const {\n                result: liquidity,\n                loading: liquidityLoading,\n                valid: liquidityValid\n            } = _liquidities[index]\n\n            if (!globalStateValid || !liquidityValid) return [PoolState.INVALID, null]\n            if (globalStateLoading || liquidityLoading) return [PoolState.LOADING, null]\n\n            if (!globalState || !liquidity) return [PoolState.NOT_EXISTS, null]\n\n            if (!globalState.price || globalState.price.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n            try {\n                return [PoolState.EXISTS, new Pool(token0, token1, globalState.fee, globalState.price, liquidity[0], globalState.tick)]\n            } catch (error) {\n                return [PoolState.NOT_EXISTS, null]\n            }\n        })\n    }, [_liquidities, poolKeys, _globalState0s, transformed])\n}\n\nexport function usePool(\n    currencyA: Currency | undefined,\n    currencyB: Currency | undefined\n    // feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n    const poolKeys: [Currency | undefined, Currency | undefined][] = useMemo(\n        () => [[currencyA, currencyB]],\n        [currencyA, currencyB]\n    )\n\n    return usePools(poolKeys)[0]\n}\n\nexport function useTokensSymbols(token0: string, token1: string) {\n    const internet = useInternet()\n    const _token0 = useToken(token0)\n    const _token1 = useToken(token1)\n\n    return useMemo(() => [_token0, _token1], [_token0, _token1, internet])\n}\n","import { UAParser } from 'ua-parser-js'\n\nconst parser = new UAParser(window.navigator.userAgent)\nconst { type } = parser.getDevice()\n\nexport const userAgent = parser.getResult()\n\nexport const isMobile = type === 'mobile' || type === 'tablet'","import ReactGA from 'react-ga'\nimport TagManager from 'react-gtm-module'\n\nimport { isMobile } from 'utils/userAgent'\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = 'UA-238335198-1'\n\nconst tagManagerArgs = {\n    gtmId: 'GTM-5544TNR'\n}\n\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n    ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n        gaOptions: {\n            storage: 'none',\n            storeGac: false\n        }\n    })\n    ReactGA.set({\n        anonymizeIp: true,\n        customBrowserType: !isMobile\n            ? 'desktop'\n            : 'web3' in window || 'ethereum' in window\n                ? 'mobileWeb3'\n                : 'mobileRegular'\n    })\n} else {\n    ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nTagManager.initialize(tagManagerArgs)\n","import { ReactNode, useMemo } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { Trans } from '@lingui/macro'\n\n// SDN OFAC addresses\nconst BLOCKED_ADDRESSES: string[] = [\n    '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n    '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n    '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n    '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n    '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C'\n]\n\nexport default function Blocklist({ children }: { children: ReactNode }) {\n    const { account } = useActiveWeb3React()\n    const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n    if (blocked) {\n        return (\n            <div>\n                <Trans>Blocked address</Trans>\n            </div>\n        )\n    }\n    return <>{children}</>\n}\n","import { ReactNode, useEffect, useState } from \"react\";\nimport { i18n } from \"@lingui/core\";\nimport { I18nProvider } from \"@lingui/react\";\nimport { useActiveLocale, useSetLocaleFromUrl } from \"hooks/useActiveLocale\";\nimport { SupportedLocale } from \"constants/locales\";\nimport { en, ru, es, PluralCategory } from \"make-plural/plurals\";\n\ntype LocalePlural = {\n    [key in SupportedLocale]: (n: number | string, ord?: boolean) => PluralCategory;\n};\n\nconst plurals: LocalePlural = {\n    \"en-US\": en,\n};\n\nasync function dynamicActivate(locale: SupportedLocale) {\n    const { messages } = await import(`@lingui/loader!./locales/${locale}.po`);\n    i18n.loadLocaleData(locale, { plurals: () => plurals[locale] });\n    i18n.load(locale, messages);\n    i18n.activate(locale);\n}\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n    useSetLocaleFromUrl();\n    const locale = useActiveLocale();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        dynamicActivate(locale)\n            .then(() => {\n                setLoaded(true);\n            })\n            .catch((error) => {\n                console.error(\"Failed to activate locale\", locale, error);\n            });\n    }, [locale]);\n\n    // prevent the app from rendering with placeholder text before the locale is loaded\n    if (!loaded) return null;\n\n    return (\n        <I18nProvider forceRenderOnLocaleChange={false} i18n={i18n}>\n            {children}\n        </I18nProvider>\n    );\n}\n","import { useEffect } from 'react'\n\nimport { useAppDispatch } from 'state/hooks'\nimport { updateUserExpertMode } from '../state/user/actions'\nimport useParsedQueryString from './useParsedQueryString'\n\nexport default function ApeModeQueryParamReader(): null {\n    useApeModeQueryParamReader()\n    return null\n}\n\nfunction useApeModeQueryParamReader() {\n    const dispatch = useAppDispatch()\n    const { ape } = useParsedQueryString()\n\n    useEffect(() => {\n        if (typeof ape !== 'string') return\n        if (ape === '' || ape.toLowerCase() === 'true') {\n            dispatch(updateUserExpertMode({ userExpertMode: true }))\n        }\n    })\n}\n","import styled from 'styled-components/macro'\n\nexport const FallbackWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  z-index: 1;\n`\nexport const BodyWrapper = styled.div<{ margin?: string }>`\n  padding: 1rem;\n  width: 100%;\n`\nexport const CodeBlockWrapper = styled.div`\n  background: ${({ theme }) => 'var(--bg0)'};\n  overflow: auto;\n  white-space: pre;\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0.01), 0 4px 8px rgba(0, 0, 0, 0.04), 0 16px 24px rgba(0, 0, 0, 0.04),\n    0 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 24px;\n  padding: 18px 24px;\n  color: ${({ theme }) => 'var(--text1)'};\n`\nexport const SomethingWentWrongWrapper = styled.div`\n  padding: 6px 24px;\n`\n","import { Trans } from \"@lingui/macro\";\nimport React, { ErrorInfo } from \"react\";\nimport { TYPE } from \"../../theme\";\nimport { AutoColumn } from \"../Column\";\nimport ReactGA from \"react-ga\";\nimport { BodyWrapper, CodeBlockWrapper, FallbackWrapper, SomethingWentWrongWrapper } from \"./styled\";\n\ntype ErrorBoundaryState = {\n    error: Error | null;\n};\n\nexport default class ErrorBoundary extends React.Component<any, ErrorBoundaryState> {\n    constructor(props: unknown) {\n        super(props);\n        this.state = { error: null };\n    }\n\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        console.log(error);\n        ReactGA.exception({\n            ...error,\n            ...errorInfo,\n            fatal: true,\n        });\n    }\n\n    render() {\n        const { error } = this.state;\n        if (error !== null) {\n            return (\n                <FallbackWrapper>\n                    <BodyWrapper>\n                        <AutoColumn gap={\"md\"}>\n                            <SomethingWentWrongWrapper>\n                                <TYPE.label fontSize={24} fontWeight={600}>\n                                    <Trans>Something went wrong</Trans>\n                                </TYPE.label>\n                            </SomethingWentWrongWrapper>\n                            <CodeBlockWrapper>\n                                <code>\n                                    <TYPE.main fontSize={10}>{error.stack}</TYPE.main>\n                                </code>\n                            </CodeBlockWrapper>\n                        </AutoColumn>\n                    </BodyWrapper>\n                </FallbackWrapper>\n            );\n        }\n        return this.props.children;\n    }\n}\n","export default __webpack_public_path__ + \"static/media/litx-logo.6d468162.png\";","export default __webpack_public_path__ + \"static/media/arrow-right.52be2438.svg\";","export default __webpack_public_path__ + \"static/media/walletConnectionIcon.53f7bbd0.svg\";","import { AbstractConnector } from '@web3-react/abstract-connector'\nimport INJECTED_ICON_URL from '../assets/images/arrow-right.svg'\nimport METAMASK_ICON_URL from '../assets/svg/metamask-logo.svg'\nimport WALLET_CONNECT_URL from '../assets/images/walletConnectionIcon.svg'\nimport { injected, walletconnector } from '../connectors'\n\ninterface WalletInfo {\n    connector?: AbstractConnector\n    name: string\n    iconURL: string\n    description: string\n    href: string | null\n    color: string\n    primary?: true\n    mobile?: true\n    mobileOnly?: true\n    chromeOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n    INJECTED: {\n        connector: injected,\n        name: 'Injected',\n        iconURL: INJECTED_ICON_URL,\n        description: 'Injected web3 provider.',\n        href: null,\n        color: '#010101',\n        primary: true\n    },\n    METAMASK: {\n        connector: injected,\n        name: 'MetaMask',\n        iconURL: METAMASK_ICON_URL,\n        description: '',\n        href: null,\n        color: '#E8831D'\n    },\n    WALLET_CONNECT: {\n        connector: walletconnector,\n        name: \"Wallet Connect\",\n        iconURL: WALLET_CONNECT_URL,\n        description: \"Universal wallet protocol.\",\n        href: null,\n        color: '#2797FFFF',\n        mobile: true\n    },\n}\n","import React from 'react'\nimport useCopyClipboard from '../../hooks/useCopyClipboard'\nimport { CheckCircle, Copy } from 'react-feather'\nimport { Trans } from '@lingui/macro'\nimport { CopyIcon, TransactionStatusText } from './styled'\n\nexport default function CopyHelper(props: { toCopy: string; children?: React.ReactNode }) {\n    const [isCopied, setCopied] = useCopyClipboard()\n\n    return (\n        <button className={'bg-t br-0 fs-085 c-p f f-ac p-0 mr-05'} onClick={() => setCopied(props.toCopy)}>\n            {isCopied ? (\n                <span className={'f f-ac mr-025'}>\n                    <CheckCircle size={'1rem'} stroke={'var(--primary)'}/>\n                    <span className={'ml-025'}>\n                        <Trans>Copied</Trans>\n                    </span>\n                </span>\n            ) : (\n                <span className={'mr-025'}>\n                    <Copy size={'1rem'} stroke={'var(--primary)'} />\n                </span>\n            )}\n            <span className={'hover-line'}>\n                {isCopied ? '' : props.children}\n            </span>\n        </button>\n    )\n}\n","import copy from 'copy-to-clipboard'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport default function useCopyClipboard(timeout = 500): [boolean, (toCopy: string) => void] {\n    const [isCopied, setIsCopied] = useState(false)\n\n    const staticCopy = useCallback((text) => {\n        const didCopy = copy(text)\n        setIsCopied(didCopy)\n    }, [])\n\n    useEffect(() => {\n        if (isCopied) {\n            const hide = setTimeout(() => {\n                setIsCopied(false)\n            }, timeout)\n\n            return () => {\n                clearTimeout(hide)\n            }\n        }\n        return undefined\n    }, [isCopied, setIsCopied, timeout])\n\n    return [isCopied, staticCopy]\n}\n","var _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.60ee17cf.svg\";\nexport { ForwardRef as ReactComponent };","import { CheckCircle, Triangle, X } from 'react-feather'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useAllTransactions } from '../../state/transactions/hooks'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport Loader from '../Loader'\nimport { useAppDispatch } from '../../state/hooks'\nimport { clearOneTransaction } from '../../state/transactions/actions'\nimport { ExternalLink } from '../../theme'\n\n\nexport default function Transaction({ hash }: { hash: string }) {\n    const { chainId } = useActiveWeb3React()\n    const allTransactions = useAllTransactions()\n    const dispatch = useAppDispatch()\n\n    const tx = allTransactions?.[hash]\n    const summary = tx?.summary\n    const pending = !tx?.receipt\n    const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n    if (!chainId) return null\n\n    return (\n        <ExternalLink\n            href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}\n        >\n            <span className={'hover-line'}>{summary ?? hash} ↗</span>\n            <div className={'f'}>\n                <div className={`c-${pending ? 'p' : success ? 'g' : 'r'} pos-r z-10`}>\n                    {pending ? <Loader /> : success ? <CheckCircle size='1rem' /> : <Triangle size='1rem' />}\n                </div>\n                <div className={'ml-025 c-r pos-r z-10'} onClick={(e) => {\n                    e.preventDefault()\n                    dispatch(clearOneTransaction({ chainId, hash }))\n                }}>\n                    <X size={'16'} />\n                </div>\n            </div>\n        </ExternalLink>\n    )\n}\n","import styled from 'styled-components/macro'\n\nexport const StyledIdenticonContainer = styled.div`\n    height: 1rem;\n    width: 1rem;\n    border-radius: 1.125rem;\n    background-color: ${({ theme }) => 'var(--bg4)'};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n        display: none;\n    `}\n`\n","import { useEffect, useRef } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport Jazzicon from '@metamask/jazzicon'\nimport { StyledIdenticonContainer } from './styled'\n\nexport default function Identicon() {\n    const ref = useRef<HTMLDivElement>()\n\n    const { account } = useActiveWeb3React()\n\n    useEffect(() => {\n        if (account && ref.current) {\n            ref.current.innerHTML = ''\n            ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\n        }\n    }, [account])\n\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    return <StyledIdenticonContainer ref={ref as any} />\n}\n","import styled from 'styled-components/macro'\nimport { ExternalLink, LinkStyledButton } from '../../theme'\nimport { ButtonSecondary } from '../Button'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\n\n//index\nexport const HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1rem 1rem;\n    font-weight: 500;\n    color: ${(props) => (props.color === 'blue' ? ({ theme }) => 'var(--primary1)' : 'inherit')};\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\nexport const UpperSection = styled.div`\n    position: relative;\n    color: #080064;\n\n    h5 {\n        margin: 0 0 0.5rem 0;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`\nexport const InfoCard = styled.div`\n    padding: 1rem;\n    border: 1px solid ${({ theme }) => 'var(--bg3)'};\n    border-radius: 20px;\n    position: relative;\n    display: grid;\n    grid-row-gap: 12px;\n    margin-bottom: 20px;\n`\nexport const AccountGroupingRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    justify-content: space-between;\n    align-items: center;\n    font-weight: 400;\n    color: ${({ theme }) => 'var(--text1)'};\n\n    div {\n        ${({ theme }) => theme.flexRowNoWrap}\n        align-items: center;\n    }\n`\nexport const AccountSection = styled.div`\n    padding: 0 1rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1.5rem 1rem;`};\n`\nexport const YourAccount = styled.div`\n    h5 {\n        margin: 0 0 1rem 0;\n        font-weight: 400;\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: 500;\n    }\n`\nexport const LowerSection = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    padding: 1.5rem;\n    flex-grow: 1;\n    overflow: auto;\n    background-color: rgb(179, 230, 255);\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n\n    h5 {\n        margin: 0;\n        font-weight: 400;\n        color: ${({ theme }) => 'var(--text3)'};\n    }\n`\nexport const AccountControl = styled.div`\n    display: flex;\n    justify-content: space-between;\n    min-width: 0;\n    width: 100%;\n\n    font-weight: 500;\n    font-size: 1.25rem;\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    p {\n        min-width: 0;\n        margin: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        color: #080064;\n    }\n`\nexport const AddressLink = styled(ExternalLink) <{ hasENS: boolean; isENS: boolean }>`\n    font-size: 0.825rem;\n    color: ${({ theme }) => 'var(--text3)'};\n    margin-left: 1rem;\n    display: flex;\n\n    :hover {\n        color: #080064;\n    }\n`\nexport const CloseIcon = styled.div`\n    position: absolute;\n    right: 1rem;\n    top: 14px;\n\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`\nexport const CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => 'var(--text4)'};\n    }\n`\nexport const WalletName = styled.div`\n    width: initial;\n    font-size: 0.825rem;\n    font-weight: 500;\n    color: #080064;\n`\nexport const IconWrapper = styled.div<{ size?: number }>`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    align-items: center;\n    justify-content: center;\n    margin-right: 8px;\n\n    & > img,\n    span {\n        height: ${({ size }) => (size ? size + 'px' : '32px')};\n        width: ${({ size }) => (size ? size + 'px' : '32px')};\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\nexport const TransactionListWrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n`\nexport const WalletAction = styled(ButtonSecondary)`\n    width: fit-content;\n    font-weight: 400;\n    margin-left: 8px;\n    font-size: 0.825rem;\n    padding: 4px 6px;\n\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`\nexport const MainWalletAction = styled(WalletAction)`\n    color: ${({ theme }) => 'var(--primary1)'};\n`\n\n//Copy\nexport const CopyIcon = styled(LinkStyledButton)`\n    color: ${({ theme }) => 'var(--text3)'};\n    flex-shrink: 0;\n    display: flex;\n    text-decoration: none;\n    font-size: 0.825rem;\n\n    :hover,\n    :active,\n    :focus {\n        text-decoration: none;\n        color: ${({ theme }) => 'var(--text2)'};\n    }\n`\nexport const TransactionStatusText = styled.span`\n    margin-left: 0.25rem;\n    font-size: 0.825rem;\n    ${({ theme }) => theme.flexRowNoWrap};\n    align-items: center;\n    color: #080064;\n`\n\n//Transaction\nexport const TransactionWrapper = styled.div``\nexport const TransactionsStatusText = styled.div`\n    margin-right: 0.5rem;\n    display: flex;\n    align-items: center;\n\n    :hover {\n        text-decoration: underline;\n    }\n`\nexport const TransactionState = styled(ExternalLink) <{ pending: boolean; success?: boolean }>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    text-decoration: none !important;\n    border-radius: 0.5rem;\n    padding: 0.25rem 0;\n    font-weight: 500;\n    font-size: 0.825rem;\n    color: ${({ theme }) => 'var(--primary-disabled)'};\n`\nexport const TransIconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n    color: ${({\n    pending,\n    success,\n    theme\n}) => (pending ? 'var(--primary1)' : success ? 'var(--green1)' : 'var(--red1)')};\n    position: relative;\n    z-index: 10;\n`\nexport const TransCloseIcon = styled.div`\n    position: relative;\n    z-index: 10;\n    color: ${({ theme }) => 'var(--red1)'}\n`\nexport const IconsWrapper = styled.div`\n    display: flex;\n    gap: .3rem;\n`\n","import { useState, useEffect } from \"react\";\nimport \"./index.scss\";\nimport { Moon, Sun } from \"react-feather\";\nimport { useDarkModeManager } from \"state/user/hooks\";\n\nexport default function ThemeSwitcher() {\n    const [isDarkMode, toggle] = useDarkModeManager();\n\n    const [isEnabled, setIsEnabled] = useState(false);\n\n    useEffect(() => {\n        const html = document.documentElement;\n        if (isDarkMode) {\n            html.classList.add(\"dark-theme\");\n        } else {\n            html.classList.remove(\"dark-theme\");\n        }\n    }, [isDarkMode]);\n\n    const toggleState = () => {\n        setIsEnabled((prevState) => !prevState);\n        toggle();\n    };\n\n    return (\n        <label className={\"toggle-wrapper\"} htmlFor=\"toggle\">\n            <div className={`toggle ${isEnabled ? \"enabled\" : \"disabled\"}`}>\n                <span className=\"hidden\">{isEnabled ? \"Enable Light Mode\" : \"Enable Dark Mode\"}</span>\n                <div className=\"icons\">\n                    <Sun />\n                    <Moon />\n                </div>\n                <input id=\"toggle\" name=\"toggle\" type=\"checkbox\" checked={isEnabled} onClick={toggleState} />\n            </div>\n        </label>\n    );\n}\n","import { useCallback, useEffect } from \"react\";\nimport { SUPPORTED_WALLETS } from \"../../constants/wallet\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { clearAllTransactions } from \"../../state/transactions/actions\";\nimport { shortenAddress } from \"../../utils\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport Copy from \"./Copy\";\nimport Transaction from \"./Transaction\";\nimport { ReactComponent as Close } from \"../../assets/images/x.svg\";\nimport { injected, OntoWalletConnector } from \"../../connectors\";\nimport Identicon from \"../Identicon\";\nimport { ExternalLink as LinkIcon } from \"react-feather\";\nimport { ExternalLink } from \"../../theme\";\nimport { Trans } from \"@lingui/macro\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { IconWrapper, WalletAction } from \"./styled\";\nimport { EthereumWindow } from \"../../models/types\";\nimport \"./index.scss\";\nimport Card from \"../../shared/components/Card/Card\";\nimport ThemeSwitcher from \"components/ThemeSwitcher\";\n\nfunction renderTransactions(transactions: string[]) {\n    return (\n        <div>\n            {transactions.map((hash, i) => {\n                return (\n                    <div className={\"mb-025\"} key={i}>\n                        <Transaction hash={hash} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\ninterface AccountDetailsProps {\n    toggleWalletModal: () => void;\n    pendingTransactions: string[];\n    confirmedTransactions: string[];\n    ENSName?: string;\n    openOptions: () => void;\n}\n\nexport default function AccountDetails({ toggleWalletModal, pendingTransactions, confirmedTransactions, ENSName }: AccountDetailsProps) {\n    const { chainId, account, connector, deactivate } = useActiveWeb3React();\n    const dispatch = useAppDispatch();\n\n    function formatConnectorName() {\n        const { ethereum } = window as unknown as EthereumWindow;\n        const isMetaMask = !!(ethereum && ethereum.isMetaMask);\n        const name = Object.keys(SUPPORTED_WALLETS)\n            .filter((k) => SUPPORTED_WALLETS[k].connector === connector && (connector !== injected || isMetaMask === (k === \"METAMASK\")))\n            .map((k) => SUPPORTED_WALLETS[k].name)[0];\n        return (\n            <div className={`fs-085 ${name === \"Metamask\" && \"mb-05\"}`}>\n                <Trans>Connected with {name}</Trans>\n            </div>\n        );\n    }\n\n    function getStatusIcon() {\n        if (connector === injected) {\n            return (\n                <IconWrapper size={16}>\n                    <Identicon />\n                </IconWrapper>\n            );\n        }\n        return null;\n    }\n\n    const clearAllTransactionsCallback = useCallback(() => {\n        if (chainId) dispatch(clearAllTransactions({ chainId }));\n    }, [dispatch, chainId]);\n\n    const disconnectHandler = useCallback(() => {\n        if (connector instanceof OntoWalletConnector) {\n            deactivate();\n        }\n        (connector as any).close();\n    }, []);\n\n    return (\n        <>\n            <div className={\"pos-r\"}>\n                <div className={\"flex-s-between w-100 mb-1\"}>\n                    <Trans>Account</Trans>\n                    <div className=\"f f-ac\">\n                        <span className=\"account-details__theme-switcher\">\n                            <ThemeSwitcher />\n                        </span>\n                        <span className={\"cur-p hover-op trans-op\"} onClick={toggleWalletModal}>\n                            <Close />\n                        </span>\n                    </div>\n                </div>\n                <div className={\"account-details p-1 mb-15 br-12\"}>\n                    <div className={\"f f-ac mb-05\"}>\n                        {formatConnectorName()}\n                        {connector !== injected ? (\n                            <WalletAction onClick={() => disconnectHandler()}>\n                                <Trans>Disconnect</Trans>\n                            </WalletAction>\n                        ) : null}\n                    </div>\n                    <div className={\"l f f-ac mb-05\"} id=\"web3-account-identifier-row\">\n                        {ENSName ? (\n                            <>\n                                {getStatusIcon()}\n                                <p> {ENSName}</p>\n                            </>\n                        ) : (\n                            <>\n                                {getStatusIcon()}\n                                <p> {account && shortenAddress(account)}</p>\n                            </>\n                        )}\n                    </div>\n                    <div className={\"f\"}>\n                        {ENSName ? (\n                            <>\n                                {account && (\n                                    <Copy toCopy={account}>\n                                        <Trans>Copy Address</Trans>\n                                    </Copy>\n                                )}\n                                {chainId && account && (\n                                    <ExternalLink href={getExplorerLink(chainId, ENSName, ExplorerDataType.ADDRESS)}>\n                                        <LinkIcon size={\"1rem\"} color=\"var(--primary)\" />\n                                        <span className={\"ml-025 c-p hover-line\"}>\n                                            <Trans>View on Explorer</Trans>\n                                        </span>\n                                    </ExternalLink>\n                                )}\n                            </>\n                        ) : (\n                            <>\n                                {account && (\n                                    <Copy toCopy={account}>\n                                        <Trans>Copy Address</Trans>\n                                    </Copy>\n                                )}\n                                {chainId && account && (\n                                    <ExternalLink href={getExplorerLink(chainId, account, ExplorerDataType.ADDRESS)}>\n                                        <LinkIcon size={\"1rem\"} color=\"var(--primary)\" />\n                                        <span className={\"ml-025 c-p hover-line\"}>\n                                            <Trans>View on Explorer</Trans>\n                                        </span>\n                                    </ExternalLink>\n                                )}\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n            {!!pendingTransactions.length || !!confirmedTransactions.length ? (\n                <Card isDark classes={\"br-12 mt-1 p-1\"}>\n                    <div className={\"c-p flex-s-between mb-05\"}>\n                        <Trans>Recent Transactions</Trans>\n                        <button className={\"br-0 bg-t c-p p-0 hover-line\"} onClick={clearAllTransactionsCallback}>\n                            <Trans>(clear all)</Trans>\n                        </button>\n                    </div>\n                    {renderTransactions(pendingTransactions)}\n                    {renderTransactions(confirmedTransactions)}\n                </Card>\n            ) : (\n                <Card isDark classes={\"f c f-ac f-jc br-12 mt-1 h-200\"}>\n                    <Trans>Your transactions will appear here...</Trans>\n                </Card>\n            )}\n        </>\n    );\n}\n","import styled from 'styled-components/macro'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport Loader from '../Loader'\nimport { cssVar, darken } from 'polished'\n\n\n//index\nexport const CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\nexport const CloseColor = styled(Close)`\n  path {\n    stroke: #080064;\n  }\n`\nexport const Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\nexport const HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: #080064;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\nexport const ContentWrapper = styled.div`\n  background-color: rgb(179,230,255);\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0 1rem 1rem 1rem`};\n`\nexport const UpperSection = styled.div`\n  position: relative;\n\n  color: #080064;\n\n  h5 {\n    margin: 0 0 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\nexport const OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\nexport const HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => 'var(--text1)'};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\n//Option\nconst InfoCard = styled.button<{ active?: boolean }>`\n  background-color: ${({ theme, active }) => (active ? 'var(--bg3)' : 'var(--primary)')};\n  padding: 1rem;\n  outline: none;\n  border-radius: 12px;\n  width: 100% !important;\n\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => 'var(--primary-disabled)'};\n  }\n\n  border: 1px solid ${({\n    theme,\n    active\n}) => (active ? 'var(--primary)' : 'var(--primary)')};\n`\nconst OptionCard = styled(InfoCard as any)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\nexport const OptionCardLeft = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`\nexport const OptionCardClickable = styled(OptionCard as any) <{ clickable?: boolean }>`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n    border: ${({ clickable }) => (clickable ? `1px solid rgb(0, 143, 255)` : ``)};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\nexport const GreenCircle = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({ theme }) => 'var(--green1)'};\n    border-radius: 50%;\n  }\n`\nexport const CircleWrapper = styled.div`\n  color: ${({ theme }) => 'var(--green1)'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nexport const HeaderText = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => 'var(--primary1)' : ({ theme }) => 'var(--text1)')};\n  font-size: 1rem;\n  font-weight: 500;\n`\nexport const SubHeader = styled.div`\n  color: ${({ theme }) => 'var(--text1)'};\n  margin-top: 10px;\n  font-size: 12px;\n`\nexport const IconWrapper = styled.div<{ size?: number | null }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\n//PendingView\nexport const PendingSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\nexport const StyledLoader = styled(Loader)`\n  margin-right: 1rem;\n`\nexport const LoadingMessage = styled.div<{ error?: boolean }>`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? 'var(--red1)' : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? 'var(--red1)' : 'var(--text4)')};\n\n  & > * {\n    padding: 1rem;\n  }\n`\nexport const ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\nexport const ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => 'var(--text1)'};\n  background-color: ${({ theme }) => 'var(--bg4)'};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, String(cssVar('--text4')))};\n  }\n`\nexport const LoadingWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`\n\nexport const ConnectNetwork = styled.div`\n  padding: 1rem;\n  background: var(--primary);\n  border-radius: 8px;\n  color: white;\n  font-weight: 600;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    background-color: ${darken(0.08, '#02734f')};\n  }`\n","import React from \"react\";\nimport { ExternalLink } from \"../../theme\";\nimport { CircleWrapper, GreenCircle, IconWrapper } from \"./styled\";\n\ninterface OptionProps {\n    link?: string | null;\n    clickable?: boolean;\n    size?: number | null;\n    onClick?: any;\n    color: string;\n    header: React.ReactNode;\n    subheader: React.ReactNode | null;\n    icon: string;\n    active?: boolean;\n    id: string;\n}\n\nexport default function Option({ link = null, clickable = true, size, onClick = null, color, header, subheader = null, icon, active = false, id }: OptionProps) {\n    const content = (\n        <button\n            className={\"btn primary bg-cl flex-s-between w-100 p-1\"}\n            style={{ backgroundColor: \"var(--panel1)\", color: \"var(--secondary)\" }}\n            id={id}\n            onClick={onClick}\n            data-clickable={clickable && !active}\n        >\n            <div className={\"f f-jc f-ac h-100\"}>\n                <div color={color}>\n                    {active ? (\n                        <CircleWrapper>\n                            <GreenCircle>\n                                <div />\n                            </GreenCircle>\n                        </CircleWrapper>\n                    ) : (\n                        \"\"\n                    )}\n                    {header}\n                </div>\n                {subheader && <div className={\"fs-075 ml-05\"}>{subheader}</div>}\n            </div>\n            <IconWrapper size={size}>\n                <img src={icon} alt={\"Icon\"} />\n            </IconWrapper>\n        </button>\n    );\n    if (link) {\n        return <ExternalLink href={link}>{content}</ExternalLink>;\n    }\n\n    return content;\n}\n","import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { SUPPORTED_WALLETS } from '../../constants/wallet'\nimport Option from './Option'\nimport { injected } from '../../connectors'\nimport { Trans } from '@lingui/macro'\nimport { ErrorButton, ErrorGroup, LoadingMessage, LoadingWrapper, PendingSection, StyledLoader } from './styled'\n\ninterface PendingView {\n    connector?: AbstractConnector\n    error?: boolean\n    setPendingError: (error: boolean) => void\n    tryActivation: (connector: AbstractConnector) => void\n    errorMessage: string\n}\n\nexport default function PendingView({ connector, error = false, setPendingError, tryActivation, errorMessage }:PendingView ) {\n    const isMetamask = window?.ethereum?.isMetaMask\n\n    return (\n        <PendingSection>\n            <LoadingMessage error={error}>\n                <LoadingWrapper>\n                    {error ? (\n                        <ErrorGroup>\n                            <div>\n                                <Trans>Error connecting</Trans>\n                            </div>\n                            <ErrorButton\n                                onClick={() => {\n                                    setPendingError(false)\n                                    connector && tryActivation(connector)\n                                }}\n                            >\n                                <Trans>Try Again</Trans>\n                            </ErrorButton>\n                        </ErrorGroup>\n                    ) : (\n                        <>\n                            <StyledLoader />\n                            <Trans>Initializing...</Trans>\n                        </>\n                    )}\n                </LoadingWrapper>\n            </LoadingMessage>\n            {Object.keys(SUPPORTED_WALLETS).map((key) => {\n                const option = SUPPORTED_WALLETS[key]\n                if (option.connector === connector) {\n                    if (option.connector === injected) {\n                        if (isMetamask && option.name !== 'MetaMask') {\n                            return null\n                        }\n                        if (!isMetamask && option.name === 'MetaMask') {\n                            return null\n                        }\n                    }\n                    return (\n                        <Option\n                            id={`connect-${key}`}\n                            key={key}\n                            clickable={false}\n                            color={option.color}\n                            header={errorMessage}\n                            subheader={option.description}\n                            icon={option.iconURL}\n                        />\n                    )\n                }\n                return null\n            })}\n        </PendingSection>\n    )\n}\n","import styled, { css } from 'styled-components/macro'\nimport { ButtonSecondary } from '../Button'\nimport { cssVar, darken } from 'polished'\nimport { Activity } from 'react-feather'\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n    ${({ theme }) => theme.flexRowNoWrap}\n    width: 100%;\n    align-items: center;\n    border-radius: 8px;\n    cursor: pointer;\n    user-select: none;\n\n    :focus {\n        box-shadow: none;\n        outline: none;\n    }\n`\nexport const Web3StatusError = styled(Web3StatusGeneric)`\n    background-color: ${({ theme }) => 'var(--red1)'};\n    border: 1px solid ${({ theme }) => 'var(--red1)'};\n    color: ${({ theme }) => theme.white};\n    font-weight: 500;\n\n    :hover,\n    :focus {\n        background-color: ${({ theme }) => darken(0.1, String(cssVar('--red1')))};\n    }\n`\nexport const Web3StatusConnect = styled(Web3StatusGeneric) <{ faded?: boolean }>`\n    background-color: ${({ theme }) => 'var(--primary)'};\n    border: 1px solid ${({ theme }) => 'var(--primary)'};\n    padding: 10px 36px;\n\n    color: white;\n    font-weight: 500;\n\n    :hover,\n    :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, String(cssVar('--primary')))};\n        background-color: ${({ theme }) => darken(0.05, String(cssVar('--primary')))};\n        color: white;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      padding: 10px 16px;\n    `}\n`\nexport const Web3StatusConnected = styled(Web3StatusGeneric) <{ pending?: boolean }>`\n    background-color: ${({ pending, theme }) => (pending ? 'var(--primary1)' : 'var(--bg0)')};\n    color: ${({ pending, theme }) => (pending ? theme.white : 'var(--text1)')};\n    padding: 10px;\n    font-weight: 500;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 15px;\n  `}\n`\nexport const Text = styled.p`\n    flex: 1 1 auto;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0 0.5rem 0 0.25rem;\n    font-size: 1rem;\n    width: fit-content;\n    font-weight: 500;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      font-size: 11px;\n  `}\n`\nexport const NetworkIcon = styled(Activity)`\n    margin-left: 0.25rem;\n    margin-right: 0.5rem;\n    width: 16px;\n    height: 16px;\n`\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { injected, walletconnector } from \"../../connectors\";\nimport Identicon from \"../Identicon\";\nimport WalletConnectImg from \"../../assets/images/walletConnectionIcon.svg\";\n\nimport \"./index.scss\";\n\nexport function StatusIcon({ connector }: { connector: AbstractConnector }) {\n    if (connector === injected) {\n        return <Identicon />;\n    }\n    if (connector === walletconnector) {\n        return <img className=\"account-img\" style={{ width: \"18px\", height: \"18px\" }} src={WalletConnectImg} alt=\"\" />;\n    }\n\n    return null;\n}\n","import { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport useENSName from \"../../hooks/useENSName\";\nimport { useSortedRecentTransactions } from \"../../hooks/useSortedRecentTransactions\";\nimport { useHasSocks } from \"../../hooks/useSocksBalance\";\nimport { useWalletModalToggle } from \"../../state/application/hooks\";\nimport { NetworkIcon, Text, Web3StatusConnect, Web3StatusConnected, Web3StatusError } from \"./styled\";\nimport { RowBetween } from \"../Row\";\nimport { t, Trans } from \"@lingui/macro\";\nimport Loader from \"../Loader\";\nimport { Sock } from \"./Sock\";\nimport { shortenAddress } from \"../../utils\";\nimport { StatusIcon } from \"./StatusIcon\";\nimport { EthereumWindow } from \"models/types\";\nimport { useState } from \"react\";\n\nimport AlgebraConfig from \"algebra.config\";\n\nexport async function addPolygonNetwork(chainId: number) {\n    const _window = window as EthereumWindow;\n\n    try {\n        await _window.ethereum.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: AlgebraConfig.CHAIN_PARAMS[chainId].chainIdHex,\n                },\n            ],\n        });\n        window.location.reload();\n    } catch (switchError: any) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        if (switchError.code === 4902) {\n            try {\n                await _window?.ethereum?.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: AlgebraConfig.CHAIN_PARAMS[chainId].chainIdHex,\n                            chainName: AlgebraConfig.CHAIN_PARAMS[chainId].chainName,\n                            nativeCurrency: {\n                                name: AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.name,\n                                symbol: AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol,\n                                decimals: AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.decimals,\n                            },\n                            blockExplorerUrls: [AlgebraConfig.CHAIN_PARAMS[chainId].blockExplorerURL],\n                            rpcUrls: [AlgebraConfig.CHAIN_PARAMS[chainId].rpcURL],\n                        },\n                    ],\n                });\n            } catch (addError) {\n                // handle \"add\" error\n            }\n        }\n        // handle other \"switch\" errors\n    }\n}\n\nexport function Web3StatusInner() {\n    const { account, connector, error } = useWeb3React();\n    const { ENSName } = useENSName(account ?? undefined);\n    const sortedRecentTransactions = useSortedRecentTransactions();\n\n    const ontoWrongChainWarning = !!localStorage.getItem(\"ontoWarning\");\n\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash);\n\n    const hasPendingTransactions = !!pending.length;\n    const hasSocks = useHasSocks();\n    const toggleWalletModal = useWalletModalToggle();\n\n    const [ontoHelper, toggleOntoHelper] = useState(false);\n\n    if (account) {\n        return (\n            <Web3StatusConnected id=\"web3-status-connected\" style={{ background: \"var(--panel1)\", color: \"var(--text1)\", border: \"none\" }} onClick={toggleWalletModal} pending={hasPendingTransactions}>\n                {hasPendingTransactions ? (\n                    <RowBetween>\n                        <Text>\n                            <Trans>{pending?.length} Pending</Trans>\n                        </Text>{\" \"}\n                        <Loader stroke={\"var(--loader)\"} />\n                    </RowBetween>\n                ) : (\n                    <>\n                        {hasSocks ? <Sock /> : null}\n                        <Text>{ENSName || shortenAddress(account, 2)}</Text>\n                    </>\n                )}\n                {!hasPendingTransactions && connector && <StatusIcon connector={connector} />}\n            </Web3StatusConnected>\n        );\n    } else if (ontoWrongChainWarning) {\n        return <></>;\n    } else if (error) {\n        return (\n            <Web3StatusError onClick={toggleWalletModal}>\n                <NetworkIcon />\n                <Text>{error instanceof UnsupportedChainIdError ? <span>{t`Connect`}</span> : <Trans>Error</Trans>}</Text>\n            </Web3StatusError>\n        );\n    } else {\n        return (\n            <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n                <Text>\n                    <Trans>Connect Wallet</Trans>\n                </Text>\n            </Web3StatusConnect>\n        );\n    }\n}\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { isMobile, isChrome } from \"react-device-detect\";\nimport MetamaskIcon from \"../../assets/svg/metamask-logo.svg\";\nimport { injected, OntoWalletConnector } from \"../../connectors\";\nimport { SUPPORTED_WALLETS } from \"../../constants/wallet\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { ApplicationModal } from \"../../state/application/actions\";\nimport { useModalOpen, useWalletModalToggle } from \"../../state/application/hooks\";\nimport AccountDetails from \"../AccountDetails\";\nimport { t, Trans } from \"@lingui/macro\";\nimport Modal from \"../Modal\";\nimport Option from \"./Option\";\nimport PendingView from \"./PendingView\";\nimport ReactGA from \"react-ga\";\nimport { addPolygonNetwork } from \"components/Web3Status/Web3StatusInner\";\nimport { OptionGrid, Wrapper } from \"./styled\";\nimport Card from \"../../shared/components/Card/Card\";\nimport { ReactComponent as Close } from \"../../assets/images/x.svg\";\nimport { UserRejectedRequestError, WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { ArrowLeft } from \"react-feather\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport { ChainId } from \"constants/addresses\";\n\nconst WALLET_VIEWS = {\n    OPTIONS: \"options\",\n    OPTIONS_SECONDARY: \"options_secondary\",\n    ACCOUNT: \"account\",\n    PENDING: \"pending\",\n};\n\ninterface WalletModalProps {\n    pendingTransactions: string[]; // hashes of pending\n    confirmedTransactions: string[]; // hashes of confirmed\n    ENSName?: string;\n}\n\nexport default function WalletModal({ pendingTransactions, confirmedTransactions, ENSName }: WalletModalProps) {\n    // important that these are destructed from the account-specific web3-react context\n\n    const { active, account, connector, activate, error, setError, deactivate } = useWeb3React();\n\n    const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n    const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>();\n    const [pendingError, setPendingError] = useState<boolean>();\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n    const [isOnto, setIsOnto] = useState(false);\n    const [connect, setConnect] = useState(false);\n\n    const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n    const toggleWalletModal = useWalletModalToggle();\n\n    const previousAccount = usePrevious(account);\n\n    // close on connection, when logged out before\n    useEffect(() => {\n        if (account && !previousAccount && walletModalOpen) {\n            toggleWalletModal();\n        }\n    }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\n\n    // always reset to account view\n    useEffect(() => {\n        if (walletModalOpen) {\n            setPendingError(false);\n            setWalletView(WALLET_VIEWS.ACCOUNT);\n        }\n    }, [walletModalOpen]);\n\n    // close modal when a connection is successful\n    const activePrevious = usePrevious(active);\n    const connectorPrevious = usePrevious(connector);\n    useEffect(() => {\n        if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n            setWalletView(WALLET_VIEWS.ACCOUNT);\n        }\n    }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n    const tryActivation = async (connector: AbstractConnector | undefined) => {\n        let name = \"\";\n        Object.keys(SUPPORTED_WALLETS).map((key) => {\n            if (connector === SUPPORTED_WALLETS[key].connector) {\n                return (name = SUPPORTED_WALLETS[key].name);\n            }\n            return true;\n        });\n\n        ReactGA.event({\n            category: \"Wallet\",\n            action: \"Change Wallet\",\n            label: name,\n        });\n\n        setPendingWallet(connector);\n        setWalletView(WALLET_VIEWS.PENDING);\n\n        if (connector instanceof WalletConnectConnector) {\n            connector.walletConnectProvider = undefined;\n        }\n\n        connector &&\n            activate(connector, undefined, true)\n                .then(async () => {\n                    const walletAddress = await connector.getAccount();\n                    if (walletAddress) {\n                        setWalletView(WALLET_VIEWS.ACCOUNT);\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error instanceof UnsupportedChainIdError) {\n                        setErrorMessage(t`Please connect to Supported Network.`);\n                        setPendingError(true);\n                        setError(error);\n                    } else if (error instanceof UserRejectedRequestError) {\n                        setWalletView(WALLET_VIEWS.ACCOUNT);\n                    } else {\n                        setPendingError(true);\n                    }\n                })\n                .finally(() => {\n                    setIsOnto(connector instanceof OntoWalletConnector);\n                });\n    };\n\n    // get wallets user can switch too, depending on device/browser\n    function getOptions() {\n        const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n\n        return Object.keys(SUPPORTED_WALLETS).map((key) => {\n            const option = SUPPORTED_WALLETS[key];\n            // check for mobile options\n            if (isMobile) {\n                //disable portis on mobile for now\n                if (!window.web3 && !window.ethereum && option.mobile) {\n                    return (\n                        <Option\n                            onClick={() => {\n                                option.connector !== connector && !option.href && tryActivation(option.connector);\n                            }}\n                            id={`connect-${key}`}\n                            key={key}\n                            active={option.connector && option.connector === connector}\n                            color={option.color}\n                            link={option.href}\n                            header={option.name}\n                            subheader={null}\n                            icon={option.iconURL}\n                        />\n                    );\n                }\n\n                if (error && error instanceof UnsupportedChainIdError) {\n                    return <div>{t`Please connect to Supported Netwrok`}</div>;\n                }\n\n                return null;\n            }\n\n            if (!isChrome) {\n                if (!option.chromeOnly && option.name !== \"Injected\") {\n                    return (\n                        <Option\n                            onClick={() => {\n                                option.connector !== connector && !option.href && tryActivation(option.connector);\n                            }}\n                            id={`connect-${key}`}\n                            key={key}\n                            active={option.connector && option.connector === connector}\n                            color={option.color}\n                            link={option.href}\n                            header={option.name}\n                            subheader={null}\n                            icon={option.iconURL}\n                        />\n                    );\n                }\n                return null;\n            }\n\n            // overwrite injected when needed\n            if (option.connector === injected) {\n                // don't show injected if there's no injected provider\n                if (!(window.web3 || window.ethereum)) {\n                    if (option.name === \"MetaMask\") {\n                        return <Option id={`connect-${key}`} key={key} color={\"#E8831D\"} header={<Trans>Install Metamask</Trans>} subheader={null} link={\"https://metamask.io/\"} icon={MetamaskIcon} />;\n                    } else {\n                        return null; //dont want to return install twice\n                    }\n                }\n                // don't return metamask if injected provider isn't metamask\n                else if (option.name === \"MetaMask\" && !isMetamask) {\n                    return null;\n                }\n                // likewise for generic\n                else if (option.name === \"Injected\" && isMetamask) {\n                    return null;\n                } else if (option.name === \"ONTO Wallet\") {\n                    return <div>{t`Please select Supported Network`}</div>;\n                }\n            }\n\n            // return rest of options\n            return (\n                !isMobile &&\n                !option.mobileOnly && (\n                    <Option\n                        id={`connect-${key}`}\n                        onClick={() => {\n                            option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n                        }}\n                        key={key}\n                        active={option.connector === connector}\n                        color={option.color}\n                        link={option.href}\n                        header={option.name}\n                        subheader={null} //use option.descriptio to bring back multi-line\n                        icon={option.iconURL}\n                    />\n                )\n            );\n        });\n    }\n\n    function getModalContent() {\n        if (error) {\n            return (\n                <div className={\"b\"}>\n                    <div className={\"flex-s-between\"}>\n                        {error instanceof UnsupportedChainIdError ? <Trans>Wrong Network</Trans> : <Trans>Error connecting</Trans>}\n\n                        <div className={\"cur-p hover-op trans-op\"} onClick={toggleWalletModal}>\n                            <Close />\n                        </div>\n                    </div>\n                    <div className={\"pt-1\"}>\n                        {error instanceof UnsupportedChainIdError ? (\n                            <>\n                                <h5 className={\"mb-1\"}>\n                                    <Trans>{isOnto ? t`Change your network in ONTO Wallet browser extension` : t`Please connect to the Supported Network.`}</Trans>\n                                </h5>\n                                {isMobile ? (\n                                    <p>{t`Add network to your metamask app.`}</p>\n                                ) : (\n                                    !isOnto && (\n                                        <div className=\"f\" style={{ gap: \"1rem\" }}>\n                                            <button className={\"btn primary p-1 w-100 b\"} style={{ color: \"white\" }} onClick={() => addPolygonNetwork(ChainId.BNB)}>\n                                                {t`Connect to BNB Chain`}\n                                            </button>\n                                            <button className={\"btn primary p-1 w-100 b\"} style={{ color: \"white\" }} onClick={() => addPolygonNetwork(ChainId.PULSE)}>\n                                                {t`Connect to PulseChain`}\n                                            </button>\n                                        </div>\n                                    )\n                                )}\n                            </>\n                        ) : (\n                            <Trans>Error connecting. Try refreshing the page.</Trans>\n                        )}\n                    </div>\n                </div>\n            );\n        }\n        if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n            return (\n                <AccountDetails\n                    toggleWalletModal={toggleWalletModal}\n                    pendingTransactions={pendingTransactions}\n                    confirmedTransactions={confirmedTransactions}\n                    ENSName={ENSName}\n                    openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n                />\n            );\n        }\n        return (\n            <div className={\"pos-r\"}>\n                <div className={\"flex-s-between\"}>\n                    {walletView !== WALLET_VIEWS.ACCOUNT ? (\n                        <span\n                            className={\"hover-op trans-op f cur-p\"}\n                            onClick={() => {\n                                setPendingError(false);\n                                setWalletView(WALLET_VIEWS.ACCOUNT);\n                            }}\n                        >\n                            <Trans>\n                                <ArrowLeft size={\"1rem\"} className={\"mr-025\"} /> Back\n                            </Trans>\n                        </span>\n                    ) : (\n                        <span>\n                            <Trans>Connect Wallet</Trans>\n                        </span>\n                    )}\n                    <div className={\"cur-p hover-op trans-op\"} onClick={toggleWalletModal}>\n                        <Close />\n                    </div>\n                </div>\n\n                <Card isDark classes={\"p-1 br-12 mt-1\"}>\n                    {walletView === WALLET_VIEWS.PENDING ? (\n                        <PendingView connector={pendingWallet} error={pendingError} setPendingError={setPendingError} tryActivation={tryActivation} errorMessage={errorMessage} />\n                    ) : (\n                        <OptionGrid>{getOptions()}</OptionGrid>\n                    )}\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n            <Wrapper>{getModalContent()}</Wrapper>\n        </Modal>\n    );\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport { NetworkContextName } from \"../../constants/misc\";\nimport useENSName from \"../../hooks/useENSName\";\nimport WalletModal from \"../WalletModal\";\nimport { useSortedRecentTransactions } from \"../../hooks/useSortedRecentTransactions\";\nimport { Web3StatusInner } from \"./Web3StatusInner\";\nimport { Text, Web3StatusConnect } from \"./styled\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function Web3Status() {\n    const { active, account } = useWeb3React();\n    const contextNetwork = useWeb3React(NetworkContextName);\n    const { ENSName } = useENSName(account ?? undefined);\n\n    const sortedRecentTransactions = useSortedRecentTransactions();\n\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash);\n    const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt).map((tx) => tx.hash);\n\n    if (!contextNetwork.active && !active) {\n        return <Web3StatusConnect\n        id=\"connect-wallet\"\n        faded={!account}\n        disabled\n    >\n        <Text>\n            <Trans>Loading...</Trans>\n        </Text>\n    </Web3StatusConnect>;\n    }\n\n    return (\n        <>\n            <Web3StatusInner />\n            <WalletModal ENSName={ENSName ?? undefined} pendingTransactions={pending} confirmedTransactions={confirmed} />\n        </>\n    );\n}\n","import { useOnClickOutside } from \"hooks/useOnClickOutside\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { ApplicationModal } from \"state/application/actions\";\nimport { useModalOpen, useToggleModal } from \"state/application/hooks\";\nimport { switchToNetwork } from \"utils/switchToNetwork\";\nimport { CHAIN_INFO } from \"../../constants/chains\";\n\nimport AlgebraConfig from \"algebra.config\";\n\nexport default function NetworkCard() {\n    const { chainId, library } = useActiveWeb3React();\n\n    const node = useRef<HTMLDivElement>(null);\n    const open = useModalOpen(ApplicationModal.ARBITRUM_OPTIONS);\n    const toggle = useToggleModal(ApplicationModal.ARBITRUM_OPTIONS);\n    useOnClickOutside(node, open ? toggle : undefined);\n\n    const info = chainId ? CHAIN_INFO[chainId] : undefined;\n\n    console.log(chainId, info, library);\n\n    if (!chainId || !info || !library) {\n        return null;\n    }\n\n    if (chainId) {\n        return (\n            <div className=\"f\">\n                <img src={AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.logo} width=\"20\" />\n                <div className=\"ml-05\" style={{ whiteSpace: \"nowrap\" }} title={info.label}>\n                    {info.label}\n                </div>\n            </div>\n        );\n    }\n\n    return <div title={info.label}>{info.label}</div>;\n}\n","import styled, { css, keyframes } from 'styled-components/macro'\nimport Row from '../Row'\nimport { Text } from 'rebass'\nimport { NavLink } from 'react-router-dom'\nimport { cssVar, darken } from 'polished'\nimport { YellowCard } from 'components/Card'\nimport { TYPE } from '../../theme'\n\n//index\nconst activeClassName = 'ACTIVE'\nexport const HeaderFrame = styled.div<{ showBackground: boolean }>`\n    display: flex;\n    grid-template-columns: 120px 1fr 120px;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: row;\n    width: 100%;\n    top: 0;\n    position: relative;\n    z-index: 21;\n    background-position: ${({ showBackground }) => (showBackground ? '0 -100%' : '0 0')};\n    background-size: 100% 200%;\n    box-shadow: 0 0 0 1px ${({\n    theme,\n    showBackground\n}) => (showBackground ? 'var(--bg2)' : 'transparent;')};\n    transition: background-position 0.1s, box-shadow 0.1s;\n    background-blend-mode: hard-light;\n    padding: 50px 1rem 1rem;\n\n    ${({ theme }) => theme.mediaWidth.upToLarge`\n    grid-template-columns: 48px 1fr 1fr;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding:  1rem;\n    grid-template-columns: 1fr 1fr;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding:  1rem;\n    grid-template-columns: 36px 1fr;\n  `};\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`{\n    padding: 0.5rem 1rem;\n  }`}\n`\nexport const HeaderControls = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    justify-self: flex-end;\n    background-repeat: repeat;\n    background-size: 27px 40px;\n    height: 64px;\n    padding: 1rem;\n    border-radius: 16px;\n\n    background-color: #b38280;\n    border: 4px solid #713937;\n\n    &::before,\n    &::after {\n        content: '';\n        width: 5px;\n        height: 51px;\n        position: absolute;\n        top: -55px;\n    }\n\n    &::before {\n        left: 15%;\n    }\n\n    &::after {\n        right: 15%;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 0 1rem;\n  `}\n`\nexport const HeaderElement = styled.div`\n    display: flex;\n    align-items: center;\n\n    /* addresses safari's lack of support for \"gap\" */\n\n    & > *:not(:first-child) {\n        margin-left: 8px;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: center;\n  `};\n`\nexport const HeaderLinks = styled(Row)`\n    position: absolute;\n    transform: translateX(-50%);\n    left: 50%;\n    justify-self: center;\n    background-color: #b38280;\n    border: 4px solid #713937;\n    background-repeat: repeat;\n    background-size: 27px 40px;\n    width: fit-content;\n    padding: 0 16px;\n    border-radius: 16px;\n    display: grid;\n    grid-auto-flow: column;\n    grid-gap: 30px;\n    overflow: visible;\n    align-items: center;\n\n    &::before,\n    &::after {\n        content: '';\n        width: 5px;\n        height: 54px;\n        position: absolute;\n        top: -58px;\n    }\n\n    &::before {\n        left: 15%;\n    }\n\n    &::after {\n        right: 15%;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToLarge`\n  position: relative;\n  transform: unset;\n  left: unset;\n  overflow: auto;\n  `}\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n  position: fixed;\n  bottom: 1rem;\n  transform: translateX(-50%);\n  left: 50%;\n  flex-direction: row;\n  justify-content: space-between;\n  justify-self: center;\n  z-index: 99;\n  margin: 0 auto;\n\n  &::before,\n  &::after {\n    display: none;\n  }\n`};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n  position: fixed;\n  transform: translateX(-50%);\n  left: 50%;\n  bottom: 1rem;\n    overflow: auto;\n    width: calc(100% - 1rem);\n    margin-right: -1rem;\n    &::before, &::after {\n      display: none;\n    }\n\n  `}\n`\nexport const AccountElement = styled.div<{ active: boolean }>`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background-color: #713937;\n    border-radius: 8px;\n    white-space: nowrap;\n    width: 100%;\n    cursor: pointer;\n\n    :focus {\n        border: 1px solid blue;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 14px;\n  `}\n`\nexport const BalanceText = styled(Text)`\n    cursor: default;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      font-size: 13px\n    `}\n`\nexport const LogoWrapper = styled.div`\n    position: relative;\n`\nexport const Title = styled.a`\n    display: flex;\n    z-index: 5;\n    position: relative;\n    width: 250px;\n    height: 64px;\n    align-items: center;\n    border-radius: 16px;\n    pointer-events: auto;\n    justify-self: flex-start;\n    text-decoration: none;\n    background-color: #b38280;\n    border: 4px solid #9eb7cd;\n    background-repeat: repeat;\n    background-size: 27px 40px;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    &::before,\n    &::after {\n        content: '';\n        width: 5px;\n        height: 51px;\n        position: absolute;\n        top: -55px;\n    }\n\n    &::before {\n        left: 15%;\n    }\n\n    &::after {\n        right: 15%;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToLarge`\n    width: 200px;\n  `}\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 150px;\n    margin-right: 10px;\n  `}\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    width: 80px;\n  `}\n`\nexport const TitleIce = styled.div`\n    width: 100%;\n    height: 100%;\n    background-color: RGBA(51, 182, 255, 0.5);\n    border-radius: 11px;\n`\nexport const TitleIcicle = styled.div`\n    background-repeat: no-repeat;\n    background-size: 98%;\n    width: 100%;\n    height: 75px;\n    position: absolute;\n    display: block;\n    z-index: 4;\n    top: 18px;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `}\n`\nexport const AlgIcon = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > img {\n        width: calc(100% - 30px);\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`{\n    & > img {\n      width: 130px;\n    }\n  }`}\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`{\n    & > img {\n      width: 30px;\n    }\n  }`}\n`\nexport const StyledNavLink = styled(NavLink).attrs({\n    activeClassName\n})`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: left;\n    outline: none;\n    cursor: pointer;\n    text-decoration: none;\n    color: white;\n    font-size: 1rem;\n    width: fit-content;\n    font-weight: 600;\n    padding: 14px 15px;\n    word-break: break-word;\n    white-space: nowrap;\n    border-bottom: 3px solid transparent;\n    position: relative;\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    padding: 14px 15px;\n  `}\n    &.${activeClassName} {\n        font-weight: 600;\n        color: #ffd967;\n        border-bottom: 3px solid #ffbf00;\n    }\n\n    &:not(.${activeClassName}) {\n        & :hover,\n        &:focus {\n            color: ${({ theme }) => darken(0.1, String(cssVar('--text1')))};\n        }\n    }\n`\n\n//NetworkCard\nconst BaseWrapper = css`\n    position: relative;\n    margin-right: 8px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    justify-self: end;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin: 0 0.5rem 0 0;\n    width: initial;\n    text-overflow: ellipsis;\n    flex-shrink: 1;\n  `};\n`\nexport const FallbackWrapper = styled(YellowCard)`\n    ${BaseWrapper};\n    background: #0f1940;\n    color: white;\n    border: 1px solid #0b1462;\n    border-radius: 12px;\n    padding: 8px 12px;\n    width: 100%;\n`\nexport const NetworkWrapper = styled.div`\n    padding: 8px 0 8px 12px;\n    background-color: #713937;\n    border-radius: 6px;\n    display: flex;\n    align-items: center;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\nexport const ChainWrapper = styled.span`\n    margin-top: 3px;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin-top: 1px;\n  `}\n`\n\n//GasPrice\nexport const GasPriceWrapper = styled.div`\n    color: var(--white);\n    font-size: 11px;\n    opacity: 0.7;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\n\n//Pooling\nexport const StyledPolling = styled.div`\n    display: flex;\n    align-items: center;\n    color: black;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `}\n`\nexport const StyledPollingNumber = styled(TYPE.small) <{ breathe: boolean; hovering: boolean }>`\n    transition: opacity 0.25s ease;\n    color: var(--text1);\n    opacity: ${({ breathe, hovering }) => (hovering ? 0.7 : breathe ? 1 : 0.5)};\n\n    :hover {\n        opacity: 1;\n    }\n`\nexport const StyledPollingDot = styled.div`\n    width: 8px;\n    height: 8px;\n    min-height: 8px;\n    min-width: 8px;\n    margin-left: 0.5rem;\n    border-radius: 50%;\n    position: relative;\n    background-color: #00f3df;\n`\nconst rotate360 = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`\nexport const Spinner = styled.div`\n    animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n    transform: translateZ(0);\n\n    border-top: 1px solid transparent;\n    border-right: 1px solid transparent;\n    border-bottom: 1px solid transparent;\n    border-left: 2px solid #00f3df;\n    background: transparent;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    position: relative;\n\n    left: -3px;\n    top: -3px;\n`\n","import { useCallback } from \"react\";\nimport AlgebraConfig from \"algebra.config\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { ChainId } from \"constants/addresses\";\nimport { addPolygonNetwork } from \"components/Web3Status/Web3StatusInner\";\n\nimport \"./index.scss\";\n\nexport default function HeaderMenu() {\n    const { chainId } = useActiveWeb3React();\n\n    const handleSelect = useCallback((item: number) => addPolygonNetwork(item), []);\n\n    return (\n        <div className=\"header-menu br-8\">\n            <ul className=\"header-menu__list\">\n                <li className={`header-menu__list-item ${chainId === ChainId.BNB ? \"active\" : \"\"} `} onClick={() => handleSelect(ChainId.BNB)}>\n                    <a rel={\"noreferrer noopener\"} target={\"_blank\"} className=\"ph-1 pv-1 mxs_pv-1 ms_pv-1 w-100 f f-jb\">\n                        <span className=\"header-menu__list-item__title f\">\n                            <span className={\"mr-1\"}>\n                                <img width={18} src={AlgebraConfig.CHAIN_PARAMS[ChainId.BNB].nativeCurrency.logo} />\n                            </span>\n                            <span>{\"BNB Chain\"}</span>\n                        </span>\n                    </a>\n                </li>\n                <li className={`header-menu__list-item ${chainId === ChainId.PULSE ? \"active\" : \"\"}`} onClick={() => handleSelect(ChainId.PULSE)}>\n                    <a rel={\"noreferrer noopener\"} target={\"_blank\"} className=\"ph-1 pv-1 mxs_pv-1 ms_pv-1 w-100 f f-jb\">\n                        <span className=\"header-menu__list-item__title f\">\n                            <span className={\"mr-1\"}>\n                                <img width={18} src={AlgebraConfig.CHAIN_PARAMS[ChainId.PULSE].nativeCurrency.logo} />\n                            </span>\n                            <span>{\"PulseChain\"}</span>\n                        </span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    );\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useETHBalances } from \"state/wallet/hooks\";\n// @ts-ignore\nimport Logo from \"../../assets/images/litx-logo.png\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport Web3Status from \"../Web3Status\";\nimport NetworkCard from \"./NetworkCard\";\nimport { useIsNetworkFailed } from \"../../hooks/useIsNetworkFailed\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { isMobile } from \"react-device-detect\";\nimport { BalanceText } from \"./styled\";\nimport \"./index.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { Sliders } from \"react-feather\";\nimport HeaderMenu from \"components/HeaderMenu\";\nimport { Trans } from \"@lingui/macro\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport ThemeSwitcher from \"components/ThemeSwitcher\";\n\nexport default function Header() {\n    const { account, chainId } = useActiveWeb3React();\n\n    const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? \"\"];\n\n    const prevEthBalance = usePrevious(userEthBalance);\n\n    const _userEthBalance = useMemo(() => {\n        if (!userEthBalance) {\n            return prevEthBalance;\n        }\n\n        return userEthBalance;\n    }, [userEthBalance]);\n\n    const networkFailed = useIsNetworkFailed();\n\n    let chainValue;\n\n    if (chainId === AlgebraConfig.CHAIN_PARAMS[chainId || 56].chainId) {\n        chainValue = AlgebraConfig.CHAIN_PARAMS[chainId || 56].wrappedNativeCurrency.symbol;\n    }\n\n    const handleBlur = useCallback((e: React.ChangeEvent<HTMLLabelElement>) => {\n        const target = e.target.control as HTMLInputElement;\n\n        if (!target) return;\n\n        setTimeout(() => (target.checked = false), 100);\n    }, []);\n\n    return (\n        <div className={\"header__wrapper flex-s-between w-100 pv-1 pl-2\"}>\n            <a className={\"header__logo hover-op trans-op mxs_mr-1\"} href=\".\">\n                <img src={Logo} alt=\"LitX logo\" />\n            </a>\n            <div className={\"header__links\"}>\n                <NavLink className={\"header__links__link hover-op\"} activeClassName={\"header__links__link--active\"} id={`swap-nav-link`} to={\"/swap\"}>\n                    <Trans>Swap</Trans>\n                </NavLink>\n                <NavLink\n                    className={\"header__links__link hover-op trans-op\"}\n                    id={`pool-nav-link`}\n                    to={\"/pool\"}\n                    isActive={(match, { pathname }) =>\n                        Boolean(match) || pathname.startsWith(\"/add\") || pathname.startsWith(\"/remove\") || pathname.startsWith(\"/increase\") || pathname.startsWith(\"/find\")\n                    }\n                    activeClassName={\"header__links__link--active\"}\n                >\n                    <Trans>Pool</Trans>\n                </NavLink>\n                <NavLink className={\"header__links__link hover-op\"} activeClassName={\"header__links__link--active\"} id={`farming-nav-link`} to={\"/farming\"}>\n                    <span>\n                        <Trans>Farming</Trans>\n                    </span>\n                    <span className={\"header__farming-circle\"} />\n                </NavLink>\n                <NavLink className={\"header__links__link hover-op\"} activeClassName={\"header__links__link--active\"} id={`info-nav-link`} to={\"/info\"}>\n                    <Trans>Info</Trans>\n                </NavLink>\n            </div>\n\n            <div className={\"header__account flex-s-between\"}>\n                {account && (\n                    <>\n                        <input id=\"preferences\" type=\"checkbox\" className=\"preferences-menu__checkbox\" />\n                        <label htmlFor=\"preferences\" role=\"button\" tabIndex={0} className=\"preferences-menu__toggler f br-8\" onBlur={handleBlur}>\n                            <NetworkCard />\n                            <div className=\"preferences-menu__inner\" onClick={(e) => e.preventDefault()}>\n                                <HeaderMenu />\n                            </div>\n                        </label>\n\n                        {(chainId === AlgebraConfig.CHAIN_PARAMS[chainId || 56].chainId && account && userEthBalance) || networkFailed ? (\n                            <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" fontWeight={500}>\n                                {_userEthBalance?.toFixed(5)} {!isMobile && chainValue}\n                            </BalanceText>\n                        ) : null}\n                    </>\n                )}\n                <Web3Status />\n                <div className=\"header__theme-switcher\">\n                    <ThemeSwitcher />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { AlertCircle, CheckCircle } from \"react-feather\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { ExternalLink } from \"../../theme\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport { t, Trans } from \"@lingui/macro\";\n\ninterface TransactionPopupProps {\n    hash: string;\n    success?: boolean;\n    summary?: string;\n}\n\nexport default function TransactionPopup({ hash, success, summary }: TransactionPopupProps) {\n    const { chainId } = useActiveWeb3React();\n\n    return (\n        <div id={success ? `transaction-success-toast` : `transaction-failed-toast`} className={`${hash} f f-ac`}>\n            <div className={\"pr-1\"}>{success ? <CheckCircle color={\"var(--green)\"} size={\"1.5rem\"} /> : <AlertCircle color={\"var(--red)\"} size={\"1.5rem\"} />}</div>\n            <div>\n                <div className={\"mb-025\"}>{summary ?? t`Hash: ` + hash.slice(0, 8) + \"...\" + hash.slice(58, 65)}</div>\n                {chainId && (\n                    <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)} style={{color: \"var(--primary)\"}}>\n                        <Trans>View on Explorer</Trans>\n                    </ExternalLink>\n                )}\n            </div>\n        </div>\n    );\n}\n","import { useCallback, useEffect } from \"react\";\nimport { PopupContent } from \"../../state/application/actions\";\nimport { useRemovePopup } from \"../../state/application/hooks\";\nimport TransactionPopup from \"./TransactionPopup\";\nimport \"./index.scss\";\nimport { X } from \"react-feather\";\n\ninterface PopupItemProps {\n    removeAfterMs: number | null;\n    content: PopupContent;\n    popKey: string;\n}\n\nexport default function PopupItem({ removeAfterMs, content, popKey }: PopupItemProps) {\n    const removePopup = useRemovePopup();\n    const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n    useEffect(() => {\n        if (removeAfterMs === null) return undefined;\n\n        const timeout = setTimeout(() => {\n            removeThisPopup();\n        }, removeAfterMs);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [removeAfterMs, removeThisPopup]);\n\n    let popupContent;\n    if (\"txn\" in content) {\n        const {\n            txn: { hash, success, summary },\n        } = content;\n        popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />;\n    }\n\n    return (\n        <div className={\"popup w-100 br-8 pos-r p-1\"}>\n            <span className={\"popup__close\"} onClick={removeThisPopup}>\n                <X stroke={\"var(--icon)\"} />\n            </span>\n            {popupContent}\n        </div>\n    );\n}\n","import styled from 'styled-components/macro'\nimport { AutoColumn } from '../Column'\nimport { MEDIA_WIDTHS } from 'theme'\nimport { X } from 'react-feather'\nimport { AutoRow } from '../Row'\n\n\n//index\nexport const MobilePopupWrapper = styled.div<{ height: string | number }>`\n  position: relative;\n  max-width: 100%;\n  display: none;\n  height: ${({ height }) => height};\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: block;\n  `};\n`\nexport const MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\nexport const StopOverflowQuery = `@media screen and (min-width: ${MEDIA_WIDTHS.upToMedium + 1}px) and (max-width: ${MEDIA_WIDTHS.upToMedium + 500\n    }px)`\nexport const FixedPopupColumn = styled(AutoColumn) <{ extraPadding: boolean; xlPadding: boolean }>`\n  position: fixed;\n  top: ${({ extraPadding }) => (extraPadding ? '134px' : '56px')};\n  right: 1rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 1000000;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n\n  ${StopOverflowQuery} {\n    top: ${({ extraPadding, xlPadding }) => (xlPadding ? '134px' : extraPadding ? '134px' : '56px')};\n  }\n`\n\n//PopupItem\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em 35px 1rem 1rem;\n  position: relative;\n  border-radius: 10px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  `}\n`\n\n//TransactionPopup\nexport const RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n","import { useActivePopups } from \"../../state/application/hooks\";\nimport PopupItem from \"./PopupItem\";\nimport { useURLWarningVisible } from \"../../state/user/hooks\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { FixedPopupColumn, MobilePopupInner, MobilePopupWrapper } from \"./styled\";\n\nimport AlgebraConfig from \"algebra.config\";\n\nexport default function Popups() {\n    // get all popups\n    const activePopups = useActivePopups();\n\n    const urlWarningActive = useURLWarningVisible();\n\n    // need extra padding if network is not L1 Ethereum\n    const { chainId } = useActiveWeb3React();\n    const isNotOnMainnet = Boolean(chainId && chainId !== AlgebraConfig.CHAIN_PARAMS[chainId || 56].chainId);\n\n    return (\n        <>\n            <FixedPopupColumn gap=\"20px\" extraPadding={urlWarningActive} xlPadding={isNotOnMainnet}>\n                {activePopups.map((item) => (\n                    <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n                ))}\n            </FixedPopupColumn>\n            <MobilePopupWrapper height={activePopups?.length > 0 ? \"fit-content\" : 0}>\n                <MobilePopupInner>\n                    {activePopups // reverse so new items up front\n                        .slice(0)\n                        .reverse()\n                        .map((item) => (\n                            <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n                        ))}\n                </MobilePopupInner>\n            </MobilePopupWrapper>\n        </>\n    );\n}\n","import styled from 'styled-components/macro'\n\nexport const MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\nexport const Message = styled.h2`\n  color: ${({ theme }) => 'var(--secondary1)'};\n`\n","import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Trans } from \"@lingui/macro\";\nimport { network } from \"../../connectors\";\nimport { useEagerConnect, useInactiveListener } from \"../../hooks/web3\";\nimport { NetworkContextName } from \"../../constants/misc\";\nimport { Message, MessageWrapper } from \"./styled\";\n\nexport default function Web3ReactManager({ children }: { children: JSX.Element }) {\n    const { active } = useWeb3React();\n    const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName);\n\n    // try to eagerly connect to an injected provider, if it exists and has granted access already\n    const triedEager = useEagerConnect();\n\n    // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n    useEffect(() => {\n        if (triedEager && !networkActive && !networkError && !active) {\n            activateNetwork(network);\n        }\n    }, [triedEager, networkActive, networkError, activateNetwork, active]);\n\n    // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n    useInactiveListener(!triedEager);\n\n    // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n    if (triedEager && !active && networkError) {\n        return (\n            <MessageWrapper>\n                <Message>\n                    <Trans>Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device.</Trans>\n                </Message>\n            </MessageWrapper>\n        );\n    }\n\n    return children;\n}\n","import { useEffect } from 'react'\n\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { useAppDispatch } from 'state/hooks'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        if (!search) return\n        if (search.length < 2) return\n\n        const parsed = parse(search, {\n            parseArrays: false,\n            ignoreQueryPrefix: true\n        })\n\n        const theme = parsed.theme\n\n        if (typeof theme !== 'string') return\n\n        if (theme.toLowerCase() === 'light') {\n            dispatch(updateUserDarkMode({ userDarkMode: false }))\n        } else if (theme.toLowerCase() === 'dark') {\n            dispatch(updateUserDarkMode({ userDarkMode: true }))\n        }\n    }, [dispatch, search])\n\n    return null\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, setAddLiquidityTxHash, updateCurrentStep, setFullRange, setInitialTokenPrice, setInitialUSDPrices, setShowNewestPosition, typeInput, typeLeftRangeInput, typeRightRangeInput, typeStartPriceInput, updateDynamicFee, updateSelectedPreset } from './actions'\n\nexport type FullRange = true\n\nexport enum Presets {\n    SAFE,\n    RISK,\n    NORMAL,\n    FULL,\n    STABLE,\n}\n\ninterface MintState {\n    readonly independentField: Field\n    readonly typedValue: string\n    readonly startPriceTypedValue: string // for the case when there's no liquidity\n    readonly leftRangeTypedValue: string | FullRange\n    readonly rightRangeTypedValue: string | FullRange\n    readonly dynamicFee: number\n    readonly preset: Presets | null\n    readonly txHash: string\n    readonly showNewestPosition: boolean\n    readonly initialUSDPrices: { [Field.CURRENCY_A]: string, [Field.CURRENCY_B]: string }\n    readonly initialTokenPrice: string\n    readonly currentStep: number\n}\n\nconst initialState: MintState = {\n    independentField: Field.CURRENCY_A,\n    typedValue: '',\n    startPriceTypedValue: '',\n    leftRangeTypedValue: '',\n    rightRangeTypedValue: '',\n    dynamicFee: 0,\n    preset: null,\n    txHash: '',\n    showNewestPosition: false,\n    initialUSDPrices: { [Field.CURRENCY_A]: '', [Field.CURRENCY_B]: '' },\n    initialTokenPrice: '',\n    currentStep: 0\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n    builder\n        .addCase(updateDynamicFee, (state, { payload: { dynamicFee } }) => {\n            return {\n                ...state,\n                dynamicFee\n            }\n        })\n        .addCase(resetMintState, () => initialState)\n        .addCase(setFullRange, (state) => {\n            return {\n                ...state,\n                leftRangeTypedValue: true,\n                rightRangeTypedValue: true\n            }\n        })\n        .addCase(typeStartPriceInput, (state, { payload: { typedValue } }) => {\n            return {\n                ...state,\n                startPriceTypedValue: typedValue\n            }\n        })\n        .addCase(typeLeftRangeInput, (state, { payload: { typedValue } }) => {\n            return {\n                ...state,\n                leftRangeTypedValue: typedValue\n            }\n        })\n        .addCase(typeRightRangeInput, (state, { payload: { typedValue } }) => {\n            return {\n                ...state,\n                rightRangeTypedValue: typedValue\n            }\n        })\n        .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n            if (noLiquidity) {\n                // they're typing into the field they've last typed in\n                if (field === state.independentField) {\n                    return {\n                        ...state,\n                        independentField: field,\n                        typedValue\n                    }\n                }\n                // they're typing into a new field, store the other value\n                else {\n                    return {\n                        ...state,\n                        independentField: field,\n                        typedValue\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    independentField: field,\n                    typedValue\n                }\n            }\n        })\n        .addCase(updateSelectedPreset, (state, { payload: { preset } }) => {\n            return {\n                ...state,\n                preset\n            }\n        })\n        .addCase(setAddLiquidityTxHash, (state, { payload: { txHash } }) => {\n            return {\n                ...state,\n                txHash\n            }\n        })\n        .addCase(setShowNewestPosition, (state, { payload: { showNewestPosition } }) => {\n            return {\n                ...state,\n                showNewestPosition\n            }\n        })\n        .addCase(setInitialUSDPrices, (state, { payload: { field, typedValue } }) => {\n            return {\n                ...state,\n                initialUSDPrices: {\n                    ...state.initialUSDPrices,\n                    [field]: typedValue\n                }\n            }\n        })\n        .addCase(setInitialTokenPrice, (state, { payload: { typedValue } }) => {\n            return {\n                ...state,\n                initialTokenPrice: typedValue\n            }\n        })\n        .addCase(updateCurrentStep, (state, { payload: { currentStep } }) => {\n            return {\n                ...state,\n                currentStep\n            }\n        })\n)\n","import { Trans } from \"@lingui/macro\";\nimport Toggle from \"components/Toggle\";\nimport { useState } from \"react\";\nimport \"./index.scss\";\n\nexport enum PriceFormats {\n    TOKEN,\n    USD,\n}\n\ninterface IPriceFormatToggler {\n    handlePriceFormat: (format: PriceFormats) => void;\n    currentFormat: PriceFormats;\n}\n\nexport function PriceFormatToggler({ handlePriceFormat, currentFormat }: IPriceFormatToggler) {\n    const [inputType, setInputType] = useState(currentFormat);\n\n    return (\n        <div className=\"f price-format-toggler\">\n            <Toggle\n                isActive={!!inputType}\n                toggle={() => {\n                    handlePriceFormat(+!inputType);\n                    setInputType(+!inputType);\n                }}\n                checked={<Trans>USD</Trans>}\n                unchecked={<Trans>Tokens</Trans>}\n            />\n        </div>\n    );\n}\n","import { t, Trans } from \"@lingui/macro\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport { STABLE_TOKEN_FOR_USD_PRICE_BNB, STABLE_TOKEN_FOR_USD_PRICE_PULSE, STABLE_TOKENS_PULSE } from \"constants/tokens\";\nimport useUSDCPrice from \"hooks/useUSDCPrice\";\nimport { useMemo } from \"react\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { IDerivedMintInfo, useActivePreset, useInitialUSDPrices } from \"state/mint/v3/hooks\";\nimport { Presets } from \"state/mint/v3/reducer\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\n\nimport \"./index.scss\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { ChainId } from \"constants/addresses\";\n\ninterface IStepperNavigation {\n    isEnabled: boolean;\n    step: number;\n    link: string;\n}\n\ninterface IStepper {\n    completedSteps: number[];\n    stepLinks: { link: string; title: string }[];\n    currencyA: Currency | undefined;\n    currencyB: Currency | undefined;\n    mintInfo: IDerivedMintInfo;\n    end: boolean;\n    handleNavigation: (navigate: IStepperNavigation) => void;\n    priceFormat: PriceFormats;\n}\n\nexport function Stepper({ completedSteps, stepLinks, currencyA, currencyB, mintInfo, end, handleNavigation, priceFormat }: IStepper) {\n    const { chainId } = useActiveWeb3React();\n\n    const baseTokenUSD = useUSDCPrice(currencyA);\n    const rangeTokenUSD = useUSDCPrice(currencyB);\n\n    const initialUSDPrices = useInitialUSDPrices();\n\n    const stableToken = {\n        [ChainId.BNB]: STABLE_TOKEN_FOR_USD_PRICE_BNB,\n        [ChainId.PULSE]: STABLE_TOKEN_FOR_USD_PRICE_PULSE,\n    };\n\n    const isUSD = useMemo(() => {\n        return priceFormat === PriceFormats.USD;\n    }, [priceFormat]);\n\n    const isUSDCB = useMemo(() => {\n        return currencyB && currencyB.wrapped.address === stableToken[chainId || ChainId.BNB].address;\n    }, [currencyB, chainId]);\n\n    const isUSDCA = useMemo(() => {\n        return currencyA && currencyA.wrapped.address === stableToken[chainId || ChainId.BNB].address;\n    }, [currencyA, chainId]);\n\n    const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = mintInfo.pricesAtTicks;\n\n    const isSorted = useMemo(() => {\n        return currencyA && currencyB && currencyA.wrapped.sortsBefore(currencyB.wrapped);\n    }, [currencyA, currencyB]);\n\n    const leftPrice = useMemo(() => {\n        return isSorted ? priceLower : priceUpper?.invert();\n    }, [isSorted, priceLower, priceUpper]);\n\n    const rightPrice = useMemo(() => {\n        return isSorted ? priceUpper : priceLower?.invert();\n    }, [isSorted, priceUpper, priceLower]);\n\n    const preset = useActivePreset();\n\n    const steps = useMemo(() => {\n        const _steps = stepLinks;\n\n        if (!currencyA || !currencyB || !mintInfo) return _steps;\n\n        if (currencyA && currencyB && completedSteps.length >= 1) {\n            _steps[0].title = `${currencyA.symbol} / ${currencyB.symbol}`;\n        }\n\n        if (mintInfo.noLiquidity) {\n            const rangeUSD = initialUSDPrices.CURRENCY_B || rangeTokenUSD?.toSignificant(8);\n\n            if (mintInfo.price && rangeUSD && completedSteps.length >= 2) {\n                _steps[1].title = t`Initial price: 1 ${currencyA.symbol} = ${isUSD ? \"$\" : \"\"}${\n                    isUSD\n                        ? isSorted\n                            ? parseFloat(mintInfo.price.toSignificant(8))\n                            : parseFloat((+mintInfo.price.invert().toSignificant(8) * +rangeUSD).toFixed(4))\n                        : isSorted\n                        ? parseFloat(mintInfo.price.toSignificant(5))\n                        : parseFloat(mintInfo.price.invert().toSignificant(5))\n                } ${isUSD ? \"\" : ` ${currencyB.symbol}`}`;\n            }\n\n            if (mintInfo.price && !rangeUSD && completedSteps.length >= 2) {\n                _steps[1].title = t`Initial price: 1 ${currencyA.symbol} = ${isSorted ? parseFloat(mintInfo.price.toSignificant(8)) : parseFloat(mintInfo.price.invert().toSignificant(8))} ${\n                    currencyB.symbol\n                }`;\n            }\n\n            if (leftPrice && rightPrice && completedSteps.length >= 3) {\n                if (preset !== Presets.FULL && rightPrice.toSignificant(5) !== \"3384900000000000000000000000000000000000000000000\") {\n                    _steps[2].title = t`Range: ${isUSD && rangeUSD ? \"$\" : \"\"}${\n                        isUSD && rangeUSD && !isUSDCB ? (+leftPrice.toSignificant(8) * +rangeUSD).toFixed(6).slice(0, -1) : +leftPrice.toSignificant(8)\n                    } — ${isUSD && rangeUSD ? \"$\" : \"\"}${isUSD && rangeUSD && !isUSDCB ? (+rightPrice.toSignificant(8) * +rangeUSD).toFixed(6).slice(0, -1) : rightPrice.toSignificant(8)}`;\n                } else {\n                    _steps[2].title = t`Range: 0 — ∞`;\n                }\n            }\n\n            if (baseTokenUSD && rangeUSD && mintInfo.parsedAmounts.CURRENCY_A && mintInfo.parsedAmounts.CURRENCY_B && end) {\n                const parsedA = parseFloat(String(Number(mintInfo.parsedAmounts.CURRENCY_A.toSignificant(5)).toFixed(4)));\n                const parsedB = parseFloat(String(Number(mintInfo.parsedAmounts.CURRENCY_B.toSignificant(5)).toFixed(4)));\n\n                let tokenA;\n                let tokenB;\n\n                if (isUSD) {\n                    const tokenAUSD = Number(baseTokenUSD.toSignificant(5)).toFixed(4);\n                    const tokenBUSD = Number(rangeUSD).toFixed(4);\n\n                    tokenA = isUSDCA ? parsedA : parseFloat((parsedA * +tokenAUSD).toFixed(4));\n                    tokenB = isUSDCB ? parsedB : parseFloat((parsedB * +tokenBUSD).toFixed(4));\n\n                    _steps[3].title = t`Liquidity: $${tokenA + tokenB}`;\n                } else {\n                    tokenA = parsedA;\n                    tokenB = parsedB;\n\n                    _steps[3].title = t`Liquidity: ${tokenA} ${currencyA.symbol}, ${tokenB} ${currencyB.symbol}`;\n                }\n            }\n        } else {\n            if (leftPrice && rightPrice && completedSteps.length >= 2) {\n                if (preset !== Presets.FULL) {\n                    _steps[1].title = t`Range: ${isUSD ? \"$\" : \"\"}${\n                        isUSD && rangeTokenUSD && !isUSDCB ? (+leftPrice.toSignificant(8) * +rangeTokenUSD.toSignificant(8)).toFixed(6).slice(0, -1) : Number(leftPrice.toSignificant(8)).toFixed(4)\n                    } — ${isUSD ? \"$\" : \"\"}${\n                        isUSD && rangeTokenUSD && !isUSDCB ? (+rightPrice.toSignificant(8) * +rangeTokenUSD.toSignificant(8)).toFixed(6).slice(0, -1) : Number(rightPrice.toSignificant(8)).toFixed(4)\n                    }`;\n                } else {\n                    _steps[1].title = t`Range: 0 — ∞`;\n                }\n            }\n\n            if (baseTokenUSD && rangeTokenUSD && mintInfo.parsedAmounts.CURRENCY_A && mintInfo.parsedAmounts.CURRENCY_B && end) {\n                const parsedA = parseFloat(String(Number(mintInfo.parsedAmounts.CURRENCY_A.toSignificant(5)).toFixed(4)));\n                const parsedB = parseFloat(String(Number(mintInfo.parsedAmounts.CURRENCY_B.toSignificant(5)).toFixed(4)));\n\n                let tokenA;\n                let tokenB;\n\n                if (isUSD) {\n                    const tokenAUSD = Number(baseTokenUSD.toSignificant(5)).toFixed(4);\n                    const tokenBUSD = Number(rangeTokenUSD.toSignificant(5)).toFixed(4);\n\n                    tokenA = isUSDCA ? parsedA : parseFloat((parsedA * +tokenAUSD).toFixed(4));\n                    tokenB = isUSDCB ? parsedB : parseFloat((parsedB * +tokenBUSD).toFixed(4));\n\n                    _steps[2].title = t`Liquidity: $${tokenA + tokenB}`;\n                } else {\n                    tokenA = parsedA;\n                    tokenB = parsedB;\n\n                    _steps[2].title = t`Liquidity: ${tokenA} ${currencyA.symbol}, ${tokenB} ${currencyB.symbol}`;\n                }\n            }\n        }\n\n        return _steps;\n    }, [completedSteps, stepLinks, currencyA, currencyB, mintInfo, isUSD, initialUSDPrices, rangeTokenUSD]);\n\n    return (\n        <div className=\"f w-100\" style={{ justifyContent: \"space-between\" }}>\n            {isMobileOnly ? (\n                <div className={\"f f-ac f-js w-100\"}>\n                    <div\n                        className={\"progress-circle-wrapper\"}\n                        style={{\n                            background: `conic-gradient(rgb(3, 133, 255)${(100 / steps.length) * (completedSteps.length + 1)}%,rgb(242, 242, 242)${\n                                (100 / steps.length) * (completedSteps.length + 1)\n                            }%)`,\n                        }}\n                    >\n                        <div className={\"progress-circle fs-085\"}>\n                            {completedSteps.length + 1} of {steps.length}\n                        </div>\n                    </div>\n\n                    <div className={\"ml-1\"}>\n                        <h3 style={{ whiteSpace: \"break-spaces\", lineHeight: \"1.1rem\" }} className={\"mb-025\"}>\n                            {steps[completedSteps.length]?.title}\n                        </h3>\n                        <h4 className={\"fs-085 c-lg l\"}>\n                            <Trans>Next step: </Trans>\n                            {steps[completedSteps.length + 1] ? steps[completedSteps.length + 1].title : t`Finish`}\n                        </h4>\n                    </div>\n                </div>\n            ) : (\n                steps.map((el, i) => (\n                    <div\n                        key={i}\n                        className={`stepper__step f f-ac ${completedSteps.length - 1 >= i && !end ? \"clickable\" : \"\"}`}\n                        onClick={() => handleNavigation({ isEnabled: completedSteps.length - 1 >= i && !end, step: i, link: el.link })}\n                    >\n                        <div className={`stepper__circle mr-1 f f-ac f-jc ${i === completedSteps.length && !end ? \"current\" : \"\"} ${completedSteps.length - 1 >= i || end ? \"done\" : \"\"} `}>\n                            {i + 1}\n                        </div>\n                        <div className={`${i === completedSteps.length && !end ? \"stepper__circle-current\" : \"\"}`}>{el.title}</div>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n}\n","import { Check, Lock } from \"react-feather\";\n\nimport { Currency, CurrencyAmount, Token } from \"@uniswap/sdk-core\";\n\nimport \"./index.scss\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { WrappedCurrency } from \"models/types\";\nimport { useCurrencyBalance } from \"state/wallet/hooks\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport useUSDCPrice, { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Input from \"components/NumericalInput\";\nimport Loader from \"components/Loader\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\nimport { tryParseAmount } from \"state/swap/hooks\";\nimport { useBestV3TradeExactIn } from \"hooks/useBestV3Trade\";\nimport { STABLE_TOKEN_FOR_USD_PRICE_BNB, STABLE_TOKEN_FOR_USD_PRICE_PULSE } from \"constants/tokens\";\nimport { useInitialTokenPrice, useInitialUSDPrices } from \"state/mint/v3/hooks\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { ChainId } from \"constants/addresses\";\n\ninterface ITokenAmountCard {\n    currency: Currency | undefined | null;\n    otherCurrency: Currency | undefined | null;\n    value: string;\n    fiatValue: CurrencyAmount<Token> | null;\n    handleMax: () => void;\n    handleInput: (value: string) => void;\n    showApproval: boolean | undefined;\n    handleApprove: () => void;\n    isApproving: boolean;\n    disabled: boolean;\n    locked: boolean;\n    isMax: boolean;\n    error: string | undefined;\n    priceFormat: PriceFormats;\n    isBase: boolean;\n}\n\nexport function TokenAmountCard({\n    currency,\n    otherCurrency,\n    value,\n    fiatValue,\n    handleMax,\n    handleInput,\n    showApproval,\n    handleApprove,\n    isApproving,\n    disabled,\n    locked,\n    isMax,\n    error,\n    priceFormat,\n    isBase,\n}: ITokenAmountCard) {\n    const { account, chainId } = useActiveWeb3React();\n\n    const balance = useCurrencyBalance(account ?? undefined, currency ?? undefined);\n    const balanceUSD = useUSDCPrice(currency ?? undefined);\n\n    const [localUSDValue, setLocalUSDValue] = useState(\"\");\n    const [localTokenValue, setLocalTokenValue] = useState(\"\");\n\n    const stableToken = {\n        [ChainId.BNB]: STABLE_TOKEN_FOR_USD_PRICE_BNB,\n        [ChainId.PULSE]: STABLE_TOKEN_FOR_USD_PRICE_PULSE,\n    };\n\n    const valueUSD = useUSDCValue(tryParseAmount(value, currency ? (currency.isNative ? currency.wrapped : currency) : undefined), true);\n    const tokenValue = useBestV3TradeExactIn(tryParseAmount(\"1\", stableToken[chainId || ChainId.BNB]), currency ?? undefined);\n\n    const currencyPrice = useUSDCPrice(currency ?? undefined);\n    const otherCurrencyPrice = useUSDCPrice(otherCurrency ?? undefined);\n\n    const initialUSDPrices = useInitialUSDPrices();\n    const initialTokenPrice = useInitialTokenPrice();\n\n    const isUSD = useMemo(() => {\n        return priceFormat === PriceFormats.USD;\n    }, [priceFormat]);\n\n    const handleOnBlur = useCallback(() => {\n        if (currency?.wrapped.address === stableToken[chainId || ChainId.BNB].address) {\n            handleInput(localUSDValue);\n            return;\n        }\n\n        if (isUSD && currencyPrice) {\n            handleInput(String(+localUSDValue / +currencyPrice.toSignificant(5)));\n            setLocalTokenValue(String(+localUSDValue / +currencyPrice.toSignificant(5)));\n        } else if (isUSD && isBase && initialTokenPrice && otherCurrencyPrice) {\n            handleInput(String(+localUSDValue * +initialTokenPrice * +otherCurrencyPrice.toSignificant(5)));\n            setLocalTokenValue(String(+localUSDValue * +initialTokenPrice * +otherCurrencyPrice.toSignificant(5)));\n        } else if (isUSD && initialUSDPrices.CURRENCY_A && initialUSDPrices.CURRENCY_B) {\n            const initialUSDPrice = isBase ? initialUSDPrices.CURRENCY_B : initialUSDPrices.CURRENCY_A;\n            handleInput(String(+localUSDValue / +initialUSDPrice));\n            setLocalTokenValue(String(+localUSDValue / +initialUSDPrice));\n        } else if (isUSD && initialTokenPrice && !isBase && otherCurrencyPrice) {\n            handleInput(String(+localUSDValue * +initialTokenPrice * +otherCurrencyPrice.toSignificant(5)));\n            setLocalTokenValue(String(+localUSDValue * +initialTokenPrice * +otherCurrencyPrice.toSignificant(5)));\n        } else if (!isUSD) {\n            if (currencyPrice) {\n                setLocalUSDValue(String(+localTokenValue * +currencyPrice.toSignificant(5)));\n            } else if (isBase && initialUSDPrices.CURRENCY_B) {\n                setLocalUSDValue(String(+localTokenValue * +initialUSDPrices.CURRENCY_B));\n            } else if (!isBase && initialUSDPrices.CURRENCY_A) {\n                setLocalUSDValue(String(+localTokenValue * +initialUSDPrices.CURRENCY_A));\n            }\n            handleInput(localTokenValue);\n        }\n    }, [localTokenValue, localUSDValue, tokenValue, valueUSD, currencyPrice, handleInput]);\n\n    useEffect(() => {\n        if (value) {\n            if (currencyPrice) {\n                setLocalUSDValue(String(+value * +currencyPrice.toSignificant(5)));\n            } else if (isBase && initialUSDPrices.CURRENCY_B) {\n                setLocalUSDValue(String(+value * +initialUSDPrices.CURRENCY_B));\n            } else if (!isBase && initialUSDPrices.CURRENCY_A) {\n                setLocalUSDValue(String(+value * +initialUSDPrices.CURRENCY_A));\n            } else if (initialTokenPrice && otherCurrencyPrice) {\n                setLocalUSDValue(String(+value * +initialTokenPrice * +otherCurrencyPrice.toSignificant(5)));\n            }\n\n            setLocalTokenValue(value);\n        }\n    }, [initialTokenPrice, initialUSDPrices, currencyPrice, otherCurrencyPrice, value]);\n\n    const balanceString = useMemo(() => {\n        if (!balance || !currency) return <Loader stroke={\"var(--loader)\"} />;\n\n        const _balance =\n            isUSD && balanceUSD\n                ? String(parseFloat(String((+balance.toSignificant(5) * +balanceUSD.toSignificant(5)).toFixed(5))))\n                : String(parseFloat(String(Number(balance.toSignificant(5)).toFixed(5))));\n\n        if (_balance.split(\".\")[0].length > 10) {\n            return `${isUSD ? \"$ \" : \"\"}${_balance.slice(0, 7)}...${isUSD ? \"\" : ` ${currency.symbol}`}`;\n        }\n\n        if (+balance.toFixed() === 0) {\n            return `${isUSD ? \"$ \" : \"\"}0${isUSD ? \"\" : ` ${currency.symbol}`}`;\n        }\n        if (+balance.toFixed() < 0.0001) {\n            return `< ${isUSD ? \"$ \" : \"\"}0.0001${isUSD ? \"\" : ` ${currency.symbol}`}`;\n        }\n\n        return `${isUSD ? \"$ \" : \"\"}${_balance}${isUSD ? \"\" : ` ${currency.symbol}`}`;\n    }, [balance, isUSD, fiatValue, currency]);\n\n    return (\n        <div className=\"token-amount-card-wrapper p-1 f c pos-r mxs_w-100 ms_w-100 mm_w-100\">\n            {locked && (\n                <div className=\"token-amount-card__locked w-100 full-h pos-a f c f-ac f-jc\">\n                    <div>\n                        <Trans>Price is outside specified price range.</Trans>\n                    </div>\n                    <div className=\"mt-05\">\n                        <Trans>Single-asset deposit only.</Trans>\n                    </div>\n                </div>\n            )}\n            <div className=\"f f-ac mb-1\" style={{ pointerEvents: locked ? \"none\" : \"unset\" }}>\n                <div className=\"token-amount-card__logo\">\n                    <CurrencyLogo size={\"35px\"} currency={currency as WrappedCurrency}></CurrencyLogo>\n                </div>\n                <div className=\"ml-1\">\n                    <div className=\"f f-ac mxs_fd-c ms_f-as\">\n                        <span className=\"mr-05 mb-025\">\n                            <Trans>Balance: </Trans>\n                        </span>\n                        <span>{balanceString}</span>\n                    </div>\n                    <div>\n                        <button onClick={handleMax} disabled={isMax || balance?.toSignificant(5) === \"0\"} className=\"token-amount-card__max-btn\">\n                            <Trans>MAX</Trans>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"ml-a\">\n                    {showApproval ? (\n                        isApproving ? (\n                            <button className=\"token-amount-card__approve-btn f f-ac\" disabled>\n                                <Loader style={{ marginRight: \"3px\" }} stroke={\"var(--white)\"} />\n                                <span>\n                                    <Trans>Approving</Trans>\n                                </span>\n                            </button>\n                        ) : (\n                            <button className=\"token-amount-card__approve-btn\" onClick={handleApprove}>\n                                <Trans>Approve</Trans>\n                            </button>\n                        )\n                    ) : showApproval !== undefined ? (\n                        <div className=\"token-amount-card__approved f f-ac\">\n                            <span>\n                                <Check size={16} />\n                            </span>\n                            <span className=\"fs-085\" style={{ marginLeft: \"3px\" }}>\n                                <Trans>Approved</Trans>\n                            </span>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            <div className=\"f pos-r f-ac\">\n                {isUSD && (\n                    <label htmlFor={`amount-${currency?.symbol}`} className=\"token-amount-card__usd\">\n                        $\n                    </label>\n                )}\n                <Input\n                    value={isUSD ? localUSDValue : localTokenValue}\n                    id={`amount-${currency?.symbol}`}\n                    disabled={locked}\n                    onBlur={handleOnBlur}\n                    onUserInput={(val) => (isUSD ? setLocalUSDValue(val.trim()) : setLocalTokenValue(val.trim()))}\n                    className={`token-amount-card__input ${isUSD ? \"is-usd\" : \"\"} mb-05 w-100`}\n                    placeholder={t`Enter an amount`}\n                />\n            </div>\n            {error && <div className=\"token-amount-card__error mt-05\">{error}</div>}\n        </div>\n    );\n}\n","import { Trans } from \"@lingui/macro\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Divide } from \"react-feather\";\n\nimport \"./index.scss\";\nimport { invert } from \"polished\";\n\ninterface ITokenRatio {\n    currencyA: Currency | null | undefined;\n    currencyB: Currency | null | undefined;\n    token0Ratio: string;\n    token1Ratio: string;\n    decrementLeft: () => string;\n    decrementRight: (rate?: number) => string;\n    incrementLeft: (rate?: number) => string;\n    incrementRight: () => string;\n    onUserLeftInput: (a: string) => void;\n    onUserRightInput: (a: string) => void;\n    decrementDisabled?: boolean;\n    incrementDisabled?: boolean;\n    disabled: boolean;\n    lowerPrice: string | undefined;\n    upperPrice: string | undefined;\n}\n\nexport function TokenRatio({\n    currencyA,\n    currencyB,\n    token0Ratio,\n    token1Ratio,\n    decrementLeft,\n    decrementRight,\n    incrementLeft,\n    incrementRight,\n    onUserLeftInput,\n    onUserRightInput,\n    decrementDisabled = false,\n    incrementDisabled = false,\n    disabled,\n    lowerPrice,\n    upperPrice,\n}: ITokenRatio) {\n    const isEmpty = useMemo(() => {\n        return token0Ratio === \"0\" && token1Ratio === \"0\";\n    }, [token0Ratio, token1Ratio]);\n    const [disableRightDecButton, setRDecButton] = useState(false);\n    const [disableLeftIncButton, setLIncButton] = useState(false);\n\n    // for button clicks\n    const handleDecrementLeft = useCallback(() => {\n        if (disableLeftIncButton) {\n            setLIncButton(false);\n        }\n        if (disableRightDecButton) {\n            setRDecButton(false);\n        }\n        onUserLeftInput(decrementLeft());\n    }, [disableLeftIncButton, decrementLeft, onUserLeftInput]);\n\n    const handleDecrementRight = useCallback(() => {\n        onUserRightInput(decrementRight());\n    }, [decrementRight, onUserRightInput]);\n\n    useEffect(() => {\n        if (!lowerPrice) return;\n\n        const decr = decrementRight(2);\n\n        if (+decr <= +lowerPrice) {\n            setRDecButton(true);\n            return;\n        }\n    }, [handleDecrementRight, decrementRight, lowerPrice]);\n\n    const handleIncrementLeft = useCallback(() => {\n        onUserLeftInput(incrementLeft());\n    }, [incrementLeft, onUserLeftInput]);\n\n    useEffect(() => {\n        if (!upperPrice) return;\n\n        const incr = incrementLeft(2);\n\n        if (+incr >= +upperPrice) {\n            setLIncButton(true);\n            return;\n        }\n    }, [handleIncrementLeft, incrementLeft, upperPrice]);\n\n    const handleIncrementRight = useCallback(() => {\n        if (disableLeftIncButton) {\n            setLIncButton(false);\n        }\n        if (disableRightDecButton) {\n            setRDecButton(false);\n        }\n        onUserRightInput(incrementRight());\n    }, [disableRightDecButton, upperPrice, lowerPrice, incrementRight, onUserRightInput]);\n\n    return (\n        <div className={\"preset-ranges-wrapper pl-1 mxs_pl-0 mxs_mb-1 ms_pl-0 ms_mb-1\"}>\n            <div className=\"mb-1 f f-ac\">\n                <Divide style={{ display: \"block\", fill: \"currentcolor\" }} size={15} />\n                <span className=\"ml-05\">\n                    <Trans>Token ratio</Trans>\n                </span>\n            </div>\n            <div className=\"f full-h pos-r\">\n                <div className=\"token-ratio f ms_w-100\" style={{ opacity: isEmpty ? \"0.5\" : \"1\" }}>\n                    <div className=\"token-ratio__part full-h\" style={{ width: `${token0Ratio}%`, background: \"#707eff\", borderRadius: +token0Ratio === 100 ? \"8px\" : \"8px 0 0 8px\" }}></div>\n                    <div className=\"token-ratio__part full-h\" style={{ width: `${token1Ratio}%`, background: \"#ec92ff\", borderRadius: +token1Ratio === 100 ? \"8px\" : \"0 8px 8px 0\" }}></div>\n                </div>\n            </div>\n            <div className=\"mt-1\" style={{ opacity: isEmpty ? 0.5 : \"1\" }}>\n                <div className=\"f mb-1 f-ac\">\n                    <div style={{ width: \"16px\", height: \"16px\", borderRadius: \"50%\", backgroundColor: \"#707eff\" }}></div>\n                    <div className=\"ml-05\">{currencyA?.symbol}</div>\n                    <div className=\"ml-a mr-1\">{`${Number(token0Ratio).toPrecision(3)}%`}</div>\n                    <div className=\"\">\n                        <button onClick={handleDecrementLeft} disabled={decrementDisabled || disabled} className=\"range-input__btn\">\n                            -\n                        </button>\n                        <button onClick={handleIncrementLeft} disabled={disableLeftIncButton || incrementDisabled || disabled} className=\"range-input__btn\">\n                            +\n                        </button>\n                    </div>\n                </div>\n                <div className=\"f f-ac\">\n                    <div style={{ width: \"16px\", height: \"16px\", borderRadius: \"50%\", backgroundColor: \"#ec92ff\" }}></div>\n                    <div className=\"ml-05\">{currencyB?.symbol}</div>\n                    <div className=\"ml-a mr-1\">{`${isEmpty ? 0 : (100 - +token0Ratio).toPrecision(3)}%`}</div>\n                    <div className=\"\">\n                        <button onClick={handleDecrementRight} disabled={disableRightDecButton || decrementDisabled || disabled} className=\"range-input__btn\">\n                            +\n                        </button>\n                        <button onClick={handleIncrementRight} disabled={incrementDisabled || disabled} className=\"range-input__btn\">\n                            -\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <p className={\"mt-1 fs-085\"}>\n                <Trans>Token ratio depends on selected price range.</Trans>\n            </p>\n            <p className={\"mt-05 fs-085\"}>\n                <Trans>Ratio adjustment moves it.</Trans>\n            </p>\n        </div>\n    );\n}\n","import { Check } from \"react-feather\";\nimport { Helmet } from \"react-helmet\";\nimport \"./index.scss\";\n\ninterface IStepTitle {\n    title: string;\n    isCompleted: boolean;\n    step: number;\n}\n\nexport function StepTitle({ title, isCompleted, step }: IStepTitle) {\n    return (\n        <div className=\"f f-ac mb-2\">\n            <Helmet>\n                <title>{`LitX — ${title}`}</title>\n            </Helmet>\n            <div className={`step-title__circle ${isCompleted ? \"done\" : \"\"} f f-ac f-jc`}>{isCompleted ? <Check stroke={\"white\"} strokeWidth={3} size={15} /> : step}</div>\n            <div className=\"step-title__text ml-1\">{title}</div>\n        </div>\n    );\n}\n","import { TokenAmountCard } from \"pages/NewAddLiquidity/components/TokenAmountCard\";\nimport { TokenRatio } from \"pages/NewAddLiquidity/components/TokenRatio\";\n\nimport { Currency, CurrencyAmount } from \"@uniswap/sdk-core\";\n\nimport \"./index.scss\";\nimport { Field } from \"state/mint/actions\";\nimport { IDerivedMintInfo, useRangeHopCallbacks, useV3MintActionHandlers, useV3MintState } from \"state/mint/v3/hooks\";\nimport { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { maxAmountSpend } from \"utils/maxAmountSpend\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from \"constants/addresses\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { Bound, updateCurrentStep } from \"state/mint/v3/actions\";\nimport { useEffect, useMemo } from \"react\";\nimport { tryParseAmount } from \"state/swap/hooks\";\n\nimport { StepTitle } from \"pages/NewAddLiquidity/components/StepTitle\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { t, Trans } from \"@lingui/macro\";\n\ninterface IEnterAmounts {\n    currencyA: Currency | undefined;\n    currencyB: Currency | undefined;\n    mintInfo: IDerivedMintInfo;\n    isCompleted: boolean;\n    additionalStep: boolean;\n    priceFormat: PriceFormats;\n    backStep: number;\n}\n\nexport function EnterAmounts({ currencyA, currencyB, mintInfo, isCompleted, additionalStep, priceFormat, backStep }: IEnterAmounts) {\n    const { chainId } = useActiveWeb3React();\n\n    const { independentField, typedValue } = useV3MintState();\n\n    const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(mintInfo.noLiquidity);\n\n    // get value and prices at ticks\n    const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = useMemo(() => {\n        return mintInfo.ticks;\n    }, [mintInfo]);\n\n    const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n        currencyA ?? undefined,\n        currencyB ?? undefined,\n        mintInfo.dynamicFee,\n        tickLower,\n        tickUpper,\n        mintInfo.pool\n    );\n\n    // get formatted amounts\n    const formattedAmounts = {\n        [independentField]: typedValue,\n        [mintInfo.dependentField]: mintInfo.parsedAmounts[mintInfo.dependentField]?.toSignificant(6) ?? \"\",\n    };\n\n    const usdcValues = {\n        [Field.CURRENCY_A]: useUSDCValue(mintInfo.parsedAmounts[Field.CURRENCY_A], true),\n        [Field.CURRENCY_B]: useUSDCValue(mintInfo.parsedAmounts[Field.CURRENCY_B], true),\n    };\n\n    // get the max amounts user can add\n    const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n        return {\n            ...accumulator,\n            [field]: maxAmountSpend(mintInfo.currencyBalances[field]),\n        };\n    }, {});\n\n    const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n        return {\n            ...accumulator,\n            [field]: maxAmounts[field]?.equalTo(mintInfo.parsedAmounts[field] ?? \"0\"),\n        };\n    }, {});\n\n    // check whether the user has approved the router on the tokens\n    const [approvalA, approveACallback] = useApproveCallback(\n        mintInfo.parsedAmounts[Field.CURRENCY_A] || tryParseAmount(\"1000000000000000000000\", currencyA),\n        chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n    );\n    const [approvalB, approveBCallback] = useApproveCallback(\n        mintInfo.parsedAmounts[Field.CURRENCY_B] || tryParseAmount(\"1000000000000000000000\", currencyB),\n        chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n    );\n\n    const showApprovalA = useMemo(() => {\n        if (approvalA === ApprovalState.UNKNOWN) return undefined;\n\n        if (approvalA === ApprovalState.NOT_APPROVED) return true;\n\n        return approvalA !== ApprovalState.APPROVED;\n    }, [approvalA]);\n\n    const showApprovalB = useMemo(() => {\n        if (approvalB === ApprovalState.UNKNOWN) return undefined;\n\n        if (approvalB === ApprovalState.NOT_APPROVED) return true;\n\n        return approvalB !== ApprovalState.APPROVED;\n    }, [approvalB]);\n\n    const [token0Ratio, token1Ratio] = useMemo(() => {\n        const currentPrice = mintInfo.price?.toSignificant(5);\n\n        const left = mintInfo.lowerPrice.toSignificant(5);\n        const right = mintInfo.upperPrice.toSignificant(5);\n\n        //TODO\n        if (right === \"338490000000000000000000000000000000000000000000000\" || right === \"338490000000000000000000000000000000000\") return [\"50\", \"50\"];\n\n        if (!currentPrice) return [\"0\", \"0\"];\n\n        if (!left && !right) return [\"0\", \"0\"];\n\n        if (!left && right) return [\"0\", \"100\"];\n\n        if (!right && left) return [\"100\", \"0\"];\n\n        if (mintInfo.depositADisabled) {\n            return [\"0\", \"100\"];\n        }\n\n        if (mintInfo.depositBDisabled) {\n            return [\"100\", \"0\"];\n        }\n\n        if (left && right && currentPrice) {\n            const leftRange = +currentPrice - +left;\n            const rightRange = +right - +currentPrice;\n\n            const totalSum = +leftRange + +rightRange;\n\n            const leftRate = (+leftRange * 100) / totalSum;\n            const rightRate = (+rightRange * 100) / totalSum;\n\n            if (mintInfo.invertPrice) {\n                return [String(leftRate), String(rightRate)];\n            } else {\n                return [String(rightRate), String(leftRate)];\n            }\n        }\n\n        return [\"0\", \"0\"];\n    }, [currencyA, currencyB, mintInfo]);\n\n    const currencyAError = useMemo(() => {\n        if ((mintInfo.errorCode !== 4 && mintInfo.errorCode !== 5) || !mintInfo.errorMessage || !currencyA) return;\n\n        const erroredToken = mintInfo.errorMessage.split(\" \")[1];\n\n        if (currencyA.wrapped.symbol === erroredToken) return mintInfo.errorMessage;\n\n        return;\n    }, [mintInfo, currencyA]);\n\n    const currencyBError = useMemo(() => {\n        if ((mintInfo.errorCode !== 5 && mintInfo.errorCode !== 4) || !mintInfo.errorMessage || !currencyB) return;\n\n        const erroredToken = mintInfo.errorMessage.split(\" \")[1];\n\n        if (currencyB.wrapped.symbol === erroredToken) return mintInfo.errorMessage;\n\n        return;\n    }, [mintInfo, currencyB]);\n\n    const history = useHistory();\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        return () => {\n            if (history.action === \"POP\") {\n                dispatch(updateCurrentStep({ currentStep: backStep }));\n            }\n        };\n    });\n\n    const leftPrice = useMemo(() => {\n        return mintInfo.invertPrice ? mintInfo.upperPrice.invert() : mintInfo.lowerPrice;\n    }, [mintInfo]);\n\n    const rightPrice = useMemo(() => {\n        return mintInfo.invertPrice ? mintInfo.lowerPrice.invert() : mintInfo.upperPrice;\n    }, [mintInfo]);\n\n    return (\n        <div className=\"f c\">\n            <StepTitle title={t`Enter amounts`} isCompleted={isCompleted} step={additionalStep ? 4 : 3} />\n            {mintInfo.invalidRange && (\n                <div className=\"range__notification error w-100\">\n                    <Trans>Invalid range</Trans>\n                </div>\n            )}\n            <div className=\"f mxs_fd-cr ms_fd-cr mm_fd-cr\">\n                <div className=\"f c mxs_w-100\">\n                    <div className=\"mb-1\" style={{ borderRadius: \"8px\" }}>\n                        <TokenAmountCard\n                            currency={currencyA}\n                            otherCurrency={currencyB}\n                            value={formattedAmounts[Field.CURRENCY_A]}\n                            fiatValue={usdcValues[Field.CURRENCY_A]}\n                            handleInput={onFieldAInput}\n                            handleMax={() => onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\")}\n                            showApproval={showApprovalA}\n                            isApproving={approvalA === ApprovalState.PENDING}\n                            handleApprove={approveACallback}\n                            disabled={true}\n                            locked={mintInfo.depositADisabled}\n                            isMax={!!atMaxAmounts[Field.CURRENCY_A]}\n                            error={currencyAError}\n                            priceFormat={priceFormat}\n                            isBase={false}\n                        />\n                    </div>\n                    <div>\n                        <TokenAmountCard\n                            currency={currencyB}\n                            otherCurrency={currencyA}\n                            value={formattedAmounts[Field.CURRENCY_B]}\n                            fiatValue={usdcValues[Field.CURRENCY_B]}\n                            handleInput={onFieldBInput}\n                            handleMax={() => onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\")}\n                            showApproval={showApprovalB}\n                            isApproving={approvalB === ApprovalState.PENDING}\n                            handleApprove={approveBCallback}\n                            disabled={false}\n                            locked={mintInfo.depositBDisabled}\n                            isMax={!!atMaxAmounts[Field.CURRENCY_B]}\n                            error={currencyBError}\n                            priceFormat={priceFormat}\n                            isBase={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"full-h ml-2 mxs_ml-0 mxs_mb-2 ms_ml-0 mm_ml-0 mm_mb-1\">\n                    <TokenRatio\n                        currencyA={currencyA}\n                        currencyB={currencyB}\n                        token0Ratio={token0Ratio}\n                        token1Ratio={token1Ratio}\n                        decrementLeft={mintInfo.invertPrice ? getIncrementUpper : getDecrementLower}\n                        decrementRight={mintInfo.invertPrice ? getIncrementLower : getDecrementUpper}\n                        incrementLeft={mintInfo.invertPrice ? getDecrementUpper : getIncrementLower}\n                        incrementRight={mintInfo.invertPrice ? getDecrementLower : getIncrementUpper}\n                        incrementDisabled={mintInfo.ticksAtLimit[Bound.UPPER]}\n                        decrementDisabled={mintInfo.ticksAtLimit[Bound.UPPER]}\n                        onUserLeftInput={onLeftRangeInput}\n                        onUserRightInput={onRightRangeInput}\n                        lowerPrice={leftPrice?.toSignificant(5)}\n                        upperPrice={rightPrice?.toSignificant(5)}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { t } from \"@lingui/macro\";\nimport Loader from \"components/Loader\";\nimport { ReactElement } from \"react\";\nimport \"./index.scss\";\n\ninterface IPoolStats {\n    fee: string | ReactElement;\n    apr: string | ReactElement | undefined;\n    noLiquidity: boolean | undefined;\n    loading: boolean;\n}\n\nexport function PoolStats({ fee, apr, noLiquidity, loading }: IPoolStats) {\n    if (loading)\n        return (\n            <div className=\"pool-stats-wrapper f f-ac f-jc w-100\" style={{ padding: \"0.5rem 1rem\" }}>\n                <Loader stroke={\"var(--loader)\"} />\n            </div>\n        );\n\n    return (\n        <div className=\"pool-stats-wrapper f f-jb mxs_fd-c w-100\">\n            <div className=\"pool-stats__title f w-100\">{noLiquidity ? t`New pool` : t`Current pool stats`}</div>\n            <div className=\"f\">\n                <div className={`pool-stats__fee ${!apr && \"single\"}`}>\n                    <span>{fee}</span>\n                </div>\n                {apr && (\n                    <div className=\"pool-stats__apr\">\n                        <span>{apr}</span>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n","import { Trans } from \"@lingui/macro\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport Loader from \"components/Loader\";\nimport { useToken } from \"hooks/Tokens\";\nimport { WrappedCurrency } from \"models/types\";\nimport { Star, Zap } from \"react-feather\";\n\nimport \"./index.scss\";\nimport { ChainId } from \"constants/addresses\";\nimport { useActiveWeb3React } from \"hooks/web3\";\n\nimport AlgebraConfig from \"algebra.config\";\n\ninterface IPopularPairs {\n    pairs: [string, string][] | undefined;\n    handlePopularPairSelection: (pair: [string, string]) => void;\n}\n\nexport function PopularPairs({ pairs, handlePopularPairSelection }: IPopularPairs) {\n    return (\n        <div>\n            <div className={\"pair-list-wrapper pl-1 mm_pl-0\"}>\n                <div className=\"mb-1 f f-ac\">\n                    <Star style={{ display: \"block\" }} fill={\"white\"} size={15} />\n                    <span className=\"ml-05\">\n                        <Trans>Popular pairs</Trans>\n                    </span>\n                </div>\n                {pairs ? (\n                    <div className=\"mb-1\">\n                        <ul className=\"pair-list\">\n                            {pairs.map((pair, key) => (\n                                <li key={key} className=\"pair-list-item\">\n                                    <PopularPair handlePopularPairSelection={handlePopularPairSelection} pair={pair} />\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                ) : (\n                    <div className=\"mb-1\">\n                        <Loader stroke={\"var(--loader)\"} />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction PopularPair({ pair, handlePopularPairSelection }: { pair: [string, string]; handlePopularPairSelection: (pair: [string, string]) => void }) {\n    const tokenA = useToken(pair[1]);\n    const tokenB = useToken(pair[0]);\n\n    const { chainId } = useActiveWeb3React();\n\n    if (!tokenA || !tokenB) return <div></div>;\n\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n\n    const WMATIC = AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.address;\n\n    return (\n        <div onClick={() => handlePopularPairSelection([token0.address.toLowerCase(), token1.address.toLowerCase()])} className={`f f-ac f-jc popular-pair`}>\n            <span className=\"popular-pair__logo\">\n                <CurrencyLogo currency={token0 as WrappedCurrency} size={\"16px\"} />\n            </span>\n            <span>{token0.address.toLowerCase() === WMATIC ? AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol : token0.symbol}</span>\n            <span className=\"popular-pair__plus\">+</span>\n            <span className=\"popular-pair__logo\">\n                <CurrencyLogo currency={token1 as WrappedCurrency} size={\"16px\"} />\n            </span>\n            <span>{token1.address.toLowerCase() === WMATIC ? AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol : token1.symbol}</span>\n        </div>\n    );\n}\n","import { WrappedCurrency } from \"models/types\";\nimport { Token, Currency } from \"@uniswap/sdk-core\";\n\nimport \"./index.scss\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { ChevronRight } from \"react-feather\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport CurrencySearchModal from \"components/SearchModal/CurrencySearchModal\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { useCurrencyBalance } from \"state/wallet/hooks\";\nimport useUSDCPrice, { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\nimport { t, Trans } from \"@lingui/macro\";\n\ninterface ITokenCard {\n    handleTokenSelection: (currency: Currency) => void;\n    currency: Currency | null | undefined;\n    otherCurrency: Currency | null | undefined;\n    priceFormat: PriceFormats;\n}\n\nexport function TokenCard({ handleTokenSelection, currency, otherCurrency, priceFormat }: ITokenCard) {\n    const [selectModal, toggleSelectModal] = useState(false);\n\n    const { account } = useActiveWeb3React();\n\n    const balance = useCurrencyBalance(account ?? undefined, currency ?? undefined);\n    const balanceUSD = useUSDCPrice(currency ?? undefined);\n\n    const handleDismissSearch = useCallback(() => {\n        toggleSelectModal(false);\n    }, [toggleSelectModal]);\n\n    const _balance = useMemo(() => {\n        if (priceFormat === PriceFormats.USD) {\n            if (balance && balanceUSD) {\n                return parseFloat(Number(+balance?.toSignificant(5) * +balanceUSD.toSignificant(5)).toFixed(4));\n            }\n        }\n        if (balance) {\n            return parseFloat(balance.toSignificant(5));\n        }\n\n        return \"0\";\n    }, [priceFormat, balance, balanceUSD]);\n\n    return (\n        <div className=\"token-card p-1 mxs_w-100 mm_w-100\" onClick={() => toggleSelectModal(true)}>\n            {selectModal && (\n                <CurrencySearchModal\n                    isOpen={selectModal}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={handleTokenSelection}\n                    selectedCurrency={currency}\n                    otherSelectedCurrency={otherCurrency}\n                    showCommonBases={true}\n                    showCurrencyAmount={true}\n                    disableNonToken={true}\n                ></CurrencySearchModal>\n            )}\n            <div className=\"f mb-1\">\n                <div className=\"token-card-logo\">\n                    <CurrencyLogo size={\"35px\"} currency={currency as WrappedCurrency}></CurrencyLogo>\n                </div>\n                <div className={\"f c f-jc ml-1\"}>\n                    {currency && (\n                        <div className=\"token-card__balance b\">\n                            <Trans>BALANCE</Trans>\n                        </div>\n                    )}\n                    <div>{`${priceFormat === PriceFormats.USD && currency ? \"$\" : \"\"} ${currency ? _balance : t`Not selected`}`}</div>\n                </div>\n            </div>\n            <div className=\"token-card-selector\">\n                <button className=\"token-card-selector__btn f f-ac w-100 f-jb\" onClick={() => toggleSelectModal(true)}>\n                    <span>{currency ? currency.symbol : \"Select a token\"}</span>\n                    <span className=\"token-card-selector__btn-chevron\">\n                        <ChevronRight className=\"ml-05\" size={18} />\n                    </span>\n                </button>\n            </div>\n        </div>\n    );\n}\n","import { PoolStats } from \"pages/NewAddLiquidity/components/PoolStats\";\nimport { PopularPairs } from \"pages/NewAddLiquidity/components/PopularPairs\";\nimport { TokenCard } from \"pages/NewAddLiquidity/components/TokenCard\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Plus } from \"react-feather\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport \"./index.scss\";\nimport { fetchPoolsAPR } from \"utils/api\";\nimport { computePoolAddress } from \"hooks/computePoolAddress\";\nimport { ChainId, POOL_DEPLOYER_ADDRESS } from \"constants/addresses\";\nimport { useInfoLiquidity } from \"hooks/subgraph/useInfoLiquidity\";\nimport Loader from \"components/Loader\";\nimport { IDerivedMintInfo } from \"state/mint/v3/hooks\";\nimport { PoolState } from \"hooks/usePools\";\nimport { StepTitle } from \"pages/NewAddLiquidity/components/StepTitle\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\nimport { useHistory } from \"react-router-dom\";\nimport { t } from \"@lingui/macro\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport { useActiveWeb3React } from \"hooks/web3\";\n\ninterface ISelectPair {\n    baseCurrency: Currency | null | undefined;\n    quoteCurrency: Currency | null | undefined;\n    mintInfo: IDerivedMintInfo;\n    isCompleted: boolean;\n    priceFormat: PriceFormats;\n    handleCurrencySwap: () => void;\n    handleCurrencyASelect: (newCurrency: Currency) => void;\n    handleCurrencyBSelect: (newCurrency: Currency) => void;\n    handlePopularPairSelection: (pair: [string, string]) => void;\n}\n\nexport function SelectPair({\n    baseCurrency,\n    quoteCurrency,\n    mintInfo,\n    isCompleted,\n    priceFormat,\n    handleCurrencySwap,\n    handleCurrencyASelect,\n    handleCurrencyBSelect,\n    handlePopularPairSelection,\n}: ISelectPair) {\n    const history = useHistory();\n\n    const { chainId } = useActiveWeb3React();\n\n    const [aprs, setAprs] = useState<undefined | { [key: string]: number }>();\n\n    const {\n        fetchPopularPools: { popularPools, popularPoolsLoading, fetchPopularPoolsFn },\n    } = useInfoLiquidity();\n\n    useEffect(() => {\n        fetchPoolsAPR(chainId || ChainId.BNB).then(setAprs);\n        fetchPopularPoolsFn();\n    }, [chainId]);\n\n    const feeString = useMemo(() => {\n        if (mintInfo.poolState === PoolState.INVALID || mintInfo.poolState === PoolState.LOADING) return <Loader stroke=\"#22dc96\" />;\n\n        if (mintInfo.noLiquidity) return t`0.01% fee`;\n\n        return t`${(mintInfo.dynamicFee / 10000).toFixed(3)}% fee`;\n    }, [mintInfo]);\n\n    const aprString = useMemo(() => {\n        if (!aprs || !baseCurrency || !quoteCurrency || !chainId) return <Loader stroke=\"#22dc22\" />;\n\n        const poolAddress = computePoolAddress({\n            poolDeployer: POOL_DEPLOYER_ADDRESS[chainId],\n            tokenA: baseCurrency.wrapped,\n            tokenB: quoteCurrency.wrapped,\n        }).toLowerCase();\n\n        return aprs[poolAddress] ? `${aprs[poolAddress].toFixed(2)}% APR` : undefined;\n    }, [baseCurrency, quoteCurrency, aprs]);\n\n    useEffect(() => {\n        return () => {\n            if (history.action === \"POP\") {\n                history.push(\"/pool\");\n            }\n        };\n    }, []);\n\n    return (\n        <div className=\"select-pair-wrapper f c\">\n            <StepTitle title={\"Select a pair\"} isCompleted={isCompleted} step={1} />\n            <div className=\"f mxs_fd-cr mxs_fd-cr ms_fd-cr mm_fd-cr\">\n                <div className=\"token-pairs-wrapper f c\">\n                    <div className=\"f mxs_fd-c ms_fd-cr\">\n                        <TokenCard currency={baseCurrency} otherCurrency={quoteCurrency} handleTokenSelection={handleCurrencyASelect} priceFormat={priceFormat}></TokenCard>\n                        <div className={`token-pairs-plus ${baseCurrency && quoteCurrency ? \"swap-btn\" : \"\"} mh-1 mt-a mb-a f f-ac f-jc ms_mt-1 ms_mb-1 ms_ml-a ms_mr-a`}>\n                            {baseCurrency && quoteCurrency && (\n                                <div className=\"f f-ac f-jc full-wh\" onClick={handleCurrencySwap}>\n                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M2.64645 3.64645C2.45118 3.84171 2.45118 4.15829 2.64645 4.35355L5.82843 7.53553C6.02369 7.7308 6.34027 7.7308 6.53553 7.53553C6.7308 7.34027 6.7308 7.02369 6.53553 6.82843L3.70711 4L6.53553 1.17157C6.7308 0.976311 6.7308 0.659728 6.53553 0.464466C6.34027 0.269204 6.02369 0.269204 5.82843 0.464466L2.64645 3.64645ZM13 3.5L3 3.5V4.5L13 4.5V3.5Z\"\n                                            fill=\"#6d3ce9\"\n                                        />\n                                        <path\n                                            d=\"M13.3536 12.3536C13.5488 12.1583 13.5488 11.8417 13.3536 11.6464L10.1716 8.46447C9.97631 8.26921 9.65973 8.26921 9.46447 8.46447C9.2692 8.65973 9.2692 8.97631 9.46447 9.17157L12.2929 12L9.46447 14.8284C9.2692 15.0237 9.2692 15.3403 9.46447 15.5355C9.65973 15.7308 9.97631 15.7308 10.1716 15.5355L13.3536 12.3536ZM3 12.5L13 12.5L13 11.5L3 11.5L3 12.5Z\"\n                                            fill=\"#6d3ce9\"\n                                        />\n                                    </svg>\n                                </div>\n                            )}\n                            {(!baseCurrency || !quoteCurrency) && <Plus size={16} />}\n                        </div>\n                        <TokenCard currency={quoteCurrency} otherCurrency={baseCurrency} handleTokenSelection={handleCurrencyBSelect} priceFormat={priceFormat}></TokenCard>\n                    </div>\n\n                    <div className=\"mt-1\">\n                        {baseCurrency && quoteCurrency && (\n                            <PoolStats\n                                fee={feeString}\n                                apr={aprString}\n                                loading={mintInfo.poolState === PoolState.LOADING || mintInfo.poolState === PoolState.INVALID}\n                                noLiquidity={mintInfo.noLiquidity}\n                            ></PoolStats>\n                        )}\n                    </div>\n                </div>\n                <div className=\"token-pairs__popular-wrapper mh-2 mxs_ml-0 mxs_mr-0 mm_ml-0 mm_mr-0\">\n                    <PopularPairs handlePopularPairSelection={handlePopularPairSelection} pairs={popularPools}></PopularPairs>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { SubgraphResponse } from \"models/interfaces\"\nimport { useState } from \"react\"\nimport { FETCH_POPULAR_POOLS } from \"utils/graphql-queries\"\nimport { useClients } from \"./useClients\"\n\nexport function useInfoLiquidity() {\n\n    const { dataClient } = useClients()\n\n    const [popularPools, setPopularPools] = useState<[string, string][] | undefined>()\n    const [popularPoolsLoading, setPopularPoolsLoading] = useState<boolean>(false)\n\n    async function fetchPopularPools() {\n\n        try {\n\n            setPopularPoolsLoading(true)\n\n            const { data: { pools }, error: error } = await dataClient.query<SubgraphResponse<any[]>>({\n                query: FETCH_POPULAR_POOLS(),\n                fetchPolicy: 'network-only'\n            })\n\n            if (error) {\n                return\n            }\n\n            setPopularPools(pools.map(({ token0, token1 }) => [token0.id.toLowerCase(), token1.id.toLowerCase()]))\n\n        } catch (err) {\n            console.error('total stats failed', err)\n            // setTotalStats('Failed')\n        }\n        setPopularPoolsLoading(false)\n    }\n\n    return {\n        fetchPopularPools: { popularPools, popularPoolsLoading, fetchPopularPoolsFn: fetchPopularPools }\n    }\n}","import { t, Trans } from \"@lingui/macro\";\nimport { useMemo } from \"react\";\nimport { Layers } from \"react-feather\";\nimport { Presets } from \"state/mint/v3/reducer\";\nimport \"./index.scss\";\n\nexport interface IPresetArgs {\n    type: Presets;\n    min: number;\n    max: number;\n}\n\ninterface IPresetRanges {\n    isInvalid: boolean;\n    outOfRange: boolean;\n    isStablecoinPair: boolean;\n    activePreset: Presets | null;\n    handlePresetRangeSelection: (preset: IPresetArgs | null) => void;\n    priceLower: string | undefined;\n    priceUpper: string | undefined;\n    price: string | undefined;\n}\n\nenum PresetProfits {\n    VERY_LOW,\n    LOW,\n    MEDIUM,\n    HIGH,\n}\n\nexport function PresetRanges({ isStablecoinPair, activePreset, handlePresetRangeSelection, priceLower, price, priceUpper, isInvalid, outOfRange }: IPresetRanges) {\n    const ranges = useMemo(() => {\n        if (isStablecoinPair)\n            return [\n                {\n                    type: Presets.STABLE,\n                    title: t`Stablecoins`,\n                    min: 0.984,\n                    max: 1.01,\n                    risk: PresetProfits.VERY_LOW,\n                    profit: PresetProfits.HIGH,\n                },\n            ];\n\n        return [\n            {\n                type: Presets.FULL,\n                title: t`Full range`,\n                min: 0,\n                max: Infinity,\n                risk: PresetProfits.VERY_LOW,\n                profit: PresetProfits.VERY_LOW,\n            },\n            {\n                type: Presets.SAFE,\n                title: t`Safe`,\n                min: 0.8,\n                max: 1.4,\n                risk: PresetProfits.LOW,\n                profit: PresetProfits.LOW,\n            },\n            {\n                type: Presets.NORMAL,\n                title: t`Common`,\n                min: 0.9,\n                max: 1.2,\n                risk: PresetProfits.MEDIUM,\n                profit: PresetProfits.MEDIUM,\n            },\n            {\n                type: Presets.RISK,\n                title: t`Expert`,\n                min: 0.95,\n                max: 1.1,\n                risk: PresetProfits.HIGH,\n                profit: PresetProfits.HIGH,\n            },\n        ];\n    }, [isStablecoinPair]);\n\n    const risk = useMemo(() => {\n        if (!priceUpper || !priceLower || !price) return;\n\n        const upperPercent = 100 - (+price / +priceUpper) * 100;\n        const lowerPercent = Math.abs(100 - (+price / +priceLower) * 100);\n\n        const rangePercent = +priceLower > +price && +priceUpper > 0 ? upperPercent - lowerPercent : upperPercent + lowerPercent;\n\n        if (rangePercent < 7.5) {\n            return 5;\n        } else if (rangePercent < 15) {\n            return (15 - rangePercent) / 7.5 + 4;\n        } else if (rangePercent < 30) {\n            return (30 - rangePercent) / 15 + 3;\n        } else if (rangePercent < 60) {\n            return (60 - rangePercent) / 30 + 2;\n        } else if (rangePercent < 120) {\n            return (120 - rangePercent) / 60 + 1;\n        } else {\n            return 1;\n        }\n    }, [price, priceLower, priceUpper]);\n\n    const _risk = useMemo(() => {\n        const res: any[] = [];\n        const split = risk?.toString().split(\".\");\n\n        if (!split) return;\n\n        for (let i = 0; i < 5; i++) {\n            if (i < +split[0]) {\n                res.push(100);\n            } else if (i === +split[0]) {\n                res.push(parseFloat(\"0.\" + split[1]) * 100);\n            } else {\n                res.push(0);\n            }\n        }\n\n        return res;\n    }, [risk]);\n\n    return (\n        <div className={\"preset-ranges-wrapper pl-1 mxs_pl-0 mxs_mb-2 ms_pl-0 ms_mb-2\"}>\n            <div className=\"mb-1 f f-ac\">\n                <Layers style={{ display: \"block\", transform: \"rotate(90deg)\" }} size={15} />\n                <span className=\"ml-05\">\n                    <Trans>Preset ranges</Trans>\n                </span>\n            </div>\n            {ranges.map((range, i) => (\n                <div className=\"i-f\" key={i}>\n                    <button\n                        className={`preset-ranges__button ${activePreset === range.type ? \"active\" : \"\"} mr-05`}\n                        onClick={() => {\n                            handlePresetRangeSelection(range);\n                            if (activePreset == range.type) {\n                                handlePresetRangeSelection(null);\n                            } else {\n                                handlePresetRangeSelection(range);\n                            }\n                        }}\n                        key={i}\n                    >\n                        <div>{range.title}</div>\n                    </button>\n                </div>\n            ))}\n            {_risk && !isInvalid && !isStablecoinPair && (\n                <div className={`preset-ranges__description ${outOfRange && \"mt-2\"}`}>\n                    <div className=\"f mb-05\">\n                        <span>\n                            <Trans>Risk:</Trans>\n                        </span>\n                        <div className=\"f f-ac f-jc ml-a\">\n                            {[1, 2, 3, 4, 5].map((_, i) => (\n                                <div key={i} className=\"preset-ranges__circle\" style={{ background: \"var(--circle-bg)\" }}>\n                                    <div key={i} className=\"preset-ranges__circle--active\" style={{ left: `calc(-100% + ${_risk[i]}%)` }} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"f\">\n                        <span>\n                            <Trans>Profit:</Trans>\n                        </span>\n                        <div className=\"f f-ac f-jc ml-a\">\n                            {[1, 2, 3, 4, 5].map((_, i) => (\n                                <div key={i} className=\"preset-ranges__circle\" style={{ background: \"var(--circle-bg)\" }}>\n                                    <div key={i} className=\"preset-ranges__circle--active\" style={{ left: `calc(-100% + ${_risk[i]}%)` }} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { t } from \"@lingui/macro\";\nimport { Price, Token, Currency } from \"@uniswap/sdk-core\";\nimport Input from \"components/NumericalInput\";\nimport { STABLE_TOKEN_FOR_USD_PRICE_BNB, STABLE_TOKEN_FOR_USD_PRICE_PULSE } from \"constants/tokens\";\nimport { useBestV3TradeExactIn } from \"hooks/useBestV3Trade\";\nimport useUSDCPrice, { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { Bound, updateSelectedPreset } from \"state/mint/v3/actions\";\nimport { IDerivedMintInfo, useInitialTokenPrice, useInitialUSDPrices } from \"state/mint/v3/hooks\";\nimport { tryParseAmount } from \"state/swap/hooks\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\n\nimport \"./index.scss\";\nimport { ChainId } from \"constants/addresses\";\nimport { useActiveWeb3React } from \"hooks/web3\";\n\ninterface IRangeSelector {\n    priceLower: Price<Token, Token> | undefined;\n    priceUpper: Price<Token, Token> | undefined;\n    onLeftRangeInput: (typedValue: string) => void;\n    onRightRangeInput: (typedValue: string) => void;\n    getDecrementLower: () => string;\n    getIncrementLower: () => string;\n    getDecrementUpper: () => string;\n    getIncrementUpper: () => string;\n    currencyA: Currency | null | undefined;\n    currencyB: Currency | null | undefined;\n    initial: boolean;\n    disabled: boolean;\n    isBeforePrice: boolean;\n    isAfterPrice: boolean;\n    priceFormat: PriceFormats;\n    mintInfo: IDerivedMintInfo;\n}\n\ninterface IRangePart {\n    value: string;\n    onUserInput: (value: string) => void;\n    decrement: () => string;\n    increment: () => string;\n    decrementDisabled?: boolean;\n    incrementDisabled?: boolean;\n    // feeAmount?: FeeAmount;\n    label?: string;\n    width?: string;\n    locked?: boolean; // disable input\n    // title: ReactNode;\n    tokenA: Currency | undefined;\n    tokenB: Currency | undefined;\n    initialPrice: Price<Token, Token> | undefined;\n    disabled: boolean;\n    // style?: CSSProperties;\n    title: string;\n    priceFormat: PriceFormats;\n}\n\nexport function RangeSelector({\n    priceLower,\n    priceUpper,\n    onLeftRangeInput,\n    onRightRangeInput,\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper,\n    currencyA,\n    currencyB,\n    initial,\n    disabled,\n    isBeforePrice,\n    isAfterPrice,\n    priceFormat,\n    mintInfo,\n}: IRangeSelector) {\n    const tokenA = (currencyA ?? undefined)?.wrapped;\n    const tokenB = (currencyB ?? undefined)?.wrapped;\n\n    const isUSD = useMemo(() => priceFormat === PriceFormats.USD, [priceFormat]);\n    const currentPriceInUSD = useUSDCValue(\n        tryParseAmount(\n            mintInfo.price ? (mintInfo.invertPrice ? Number(mintInfo.price.invert().toSignificant(5)).toFixed(5) : Number(mintInfo.price.toSignificant(5)).toFixed(5)) : undefined,\n            currencyB ?? undefined\n        ),\n        true\n    );\n\n    const currentPriceInUSDB = useUSDCValue(\n        tryParseAmount(\n            mintInfo.price ? (mintInfo.invertPrice ? Number(mintInfo.price.invert().toSignificant(5)).toFixed(5) : Number(mintInfo.price.toSignificant(5)).toFixed(5)) : undefined,\n            currencyA ?? undefined\n        ),\n        true\n    );\n\n    const initialUSDPrices = useInitialUSDPrices();\n    const initialTokenPrice = useInitialTokenPrice();\n\n    const isSorted = useMemo(() => {\n        return tokenA && tokenB && tokenA.sortsBefore(tokenB);\n    }, [tokenA, tokenB]);\n\n    const leftPrice = useMemo(() => {\n        return isSorted ? priceLower : priceUpper?.invert();\n    }, [isSorted, priceLower, priceUpper]);\n\n    const rightPrice = useMemo(() => {\n        return isSorted ? priceUpper : priceLower?.invert();\n    }, [isSorted, priceUpper, priceLower]);\n\n    const currentPrice = useMemo(() => {\n        if (!mintInfo.price) return;\n\n        const isInitialInUSD = Boolean(initialUSDPrices.CURRENCY_A && initialUSDPrices.CURRENCY_B);\n\n        let _price;\n\n        if (!isUSD) {\n            _price =\n                isUSD && currentPriceInUSD\n                    ? parseFloat(currentPriceInUSD?.toSignificant(5))\n                    : mintInfo.invertPrice\n                    ? parseFloat(mintInfo.price.invert().toSignificant(5))\n                    : parseFloat(mintInfo.price.toSignificant(5));\n        } else {\n            if (isInitialInUSD) {\n                _price = parseFloat(initialUSDPrices.CURRENCY_A);\n            } else if (currentPriceInUSD) {\n                _price = parseFloat(currentPriceInUSD.toSignificant(5));\n            } else if (currentPriceInUSDB) {\n                _price = parseFloat(currentPriceInUSDB.toSignificant(5));\n            }\n        }\n\n        if (Number(_price) <= 0.0001) {\n            return `< ${isUSD && (currentPriceInUSD || isInitialInUSD) ? \"$ \" : \"\"}0.0001${isUSD && (currentPriceInUSD || isInitialInUSD) ? \"\" : ` ${currencyB?.symbol}`}`;\n        } else {\n            return `${isUSD && (currentPriceInUSD || isInitialInUSD) ? \"$ \" : \"\"}${_price}${isUSD && (currentPriceInUSD || isInitialInUSD) ? \"\" : ` ${currencyB?.symbol}`}`;\n        }\n    }, [mintInfo.price, isUSD, initialUSDPrices, initialTokenPrice, currentPriceInUSD]);\n\n    return (\n        <div className=\"f f-jb mxs_fd-c\">\n            <div className={`min-price mxs_mb-1`} style={{ order: isAfterPrice ? 2 : 1 }}>\n                <RangePart\n                    value={mintInfo.ticksAtLimit[Bound.LOWER] ? \"0\" : leftPrice?.toSignificant(5) ?? \"\"}\n                    onUserInput={onLeftRangeInput}\n                    width=\"100%\"\n                    decrement={isSorted ? getDecrementLower : getIncrementUpper}\n                    increment={isSorted ? getIncrementLower : getDecrementUpper}\n                    decrementDisabled={mintInfo.ticksAtLimit[Bound.LOWER]}\n                    incrementDisabled={mintInfo.ticksAtLimit[Bound.LOWER]}\n                    label={leftPrice ? `${currencyB?.symbol}` : \"-\"}\n                    tokenA={currencyA ?? undefined}\n                    tokenB={currencyB ?? undefined}\n                    initialPrice={mintInfo.price}\n                    disabled={disabled}\n                    title={t`Min price`}\n                    priceFormat={priceFormat}\n                />\n            </div>\n            {mintInfo.price && (\n                <div className=\"current-price f f-ac mxs_fd-c\" style={{ order: isAfterPrice ? 1 : isBeforePrice ? 3 : 2 }}>\n                    <div className=\"mb-05 mxs_mt-05\" style={{ whiteSpace: \"nowrap\" }}>\n                        {initial ? t`Initial ${currencyA?.symbol} to ${isUSD ? \"USD\" : currencyB?.symbol} price` : t`Current ${currencyA?.symbol} to ${isUSD ? \"USD\" : currencyB?.symbol} price`}\n                    </div>\n                    <div className=\"current-price-tip ta-c\">{`${currentPrice || t`Loading...`}`}</div>\n                </div>\n            )}\n            <div className=\"max-price mxs_mt-1\" style={{ order: isBeforePrice ? 2 : 3 }}>\n                <RangePart\n                    value={mintInfo.ticksAtLimit[Bound.UPPER] ? \"∞\" : rightPrice?.toSignificant(5) ?? \"\"}\n                    onUserInput={onRightRangeInput}\n                    decrement={isSorted ? getDecrementUpper : getIncrementLower}\n                    increment={isSorted ? getIncrementUpper : getDecrementLower}\n                    incrementDisabled={mintInfo.ticksAtLimit[Bound.UPPER]}\n                    decrementDisabled={mintInfo.ticksAtLimit[Bound.UPPER]}\n                    label={rightPrice ? `${currencyB?.symbol}` : \"-\"}\n                    tokenA={currencyA ?? undefined}\n                    tokenB={currencyB ?? undefined}\n                    initialPrice={mintInfo.price}\n                    disabled={disabled}\n                    title={t`Max price`}\n                    priceFormat={priceFormat}\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction RangePart({\n    value,\n    decrement,\n    increment,\n    decrementDisabled = false,\n    tokenA,\n    tokenB,\n    incrementDisabled = false,\n    width,\n    locked,\n    onUserInput,\n    initialPrice,\n    disabled,\n    title,\n    priceFormat,\n}: IRangePart) {\n    const [localUSDValue, setLocalUSDValue] = useState(\"\");\n    const [localTokenValue, setLocalTokenValue] = useState(\"\");\n\n    const { chainId } = useActiveWeb3React();\n\n    const dispatch = useAppDispatch();\n\n    const isUSD = useMemo(() => {\n        return priceFormat === PriceFormats.USD;\n    }, [priceFormat]);\n\n    const stableToken = {\n        [ChainId.BNB]: STABLE_TOKEN_FOR_USD_PRICE_BNB,\n        [ChainId.PULSE]: STABLE_TOKEN_FOR_USD_PRICE_PULSE,\n    };\n\n    const valueUSD = useUSDCValue(tryParseAmount(value === \"∞\" || value === \"0\" ? undefined : Number(value).toFixed(5), tokenB), true);\n    const tokenValue = useBestV3TradeExactIn(tryParseAmount(\"1\", stableToken[chainId || ChainId.BNB]), tokenB);\n    const usdPriceA = useUSDCPrice(tokenA ?? undefined);\n    const usdPriceB = useUSDCPrice(tokenB ?? undefined);\n\n    const initialUSDPrices = useInitialUSDPrices();\n    const initialTokenPrice = useInitialTokenPrice();\n\n    const handleOnBlur = useCallback(() => {\n        if (isUSD && usdPriceB) {\n            if (tokenB?.wrapped.address === stableToken[chainId || ChainId.BNB].address) {\n                onUserInput(localUSDValue);\n            } else {\n                if (tokenValue && tokenValue.trade) {\n                    onUserInput(String(+localUSDValue * +tokenValue.trade?.outputAmount.toSignificant(5)));\n                    setLocalTokenValue(String(+localUSDValue * +usdPriceB.toSignificant(5)));\n                } else {\n                    onUserInput(localUSDValue);\n                    setLocalTokenValue(localUSDValue);\n                }\n            }\n        } else if (isUSD && initialUSDPrices.CURRENCY_B) {\n            if (tokenB?.wrapped.address === stableToken[chainId || ChainId.BNB].address) {\n                onUserInput(localUSDValue);\n            } else {\n                onUserInput(String(+localUSDValue / +initialUSDPrices.CURRENCY_B));\n                setLocalTokenValue(String(+localUSDValue / +initialUSDPrices.CURRENCY_B));\n            }\n        } else if (isUSD && initialTokenPrice && usdPriceA) {\n            if (tokenB?.wrapped.address === stableToken[chainId || ChainId.BNB].address) {\n                onUserInput(localUSDValue);\n            } else {\n                onUserInput(String(+localUSDValue * +initialTokenPrice * +usdPriceA.toSignificant(5)));\n                setLocalTokenValue(String(+localUSDValue * +initialTokenPrice * +usdPriceA.toSignificant(5)));\n            }\n        } else if (!isUSD) {\n            if (usdPriceB) {\n                setLocalUSDValue(String(+localTokenValue * +usdPriceB.toSignificant(5)));\n            } else if (initialUSDPrices.CURRENCY_B) {\n                setLocalUSDValue(String(+localTokenValue * +initialUSDPrices.CURRENCY_B));\n            }\n            onUserInput(localTokenValue);\n        }\n    }, [localTokenValue, localUSDValue, tokenValue, valueUSD, usdPriceB, onUserInput]);\n\n    // for button clicks\n    const handleDecrement = useCallback(() => {\n        onUserInput(decrement());\n    }, [decrement, onUserInput]);\n\n    const handleIncrement = useCallback(() => {\n        onUserInput(increment());\n    }, [increment, onUserInput]);\n\n    useEffect(() => {\n        if (value) {\n            setLocalTokenValue(value);\n            if (value === \"∞\") {\n                setLocalUSDValue(value);\n                return;\n            }\n            if (usdPriceB) {\n                setLocalUSDValue(String(+value * +usdPriceB.toSignificant(5)));\n            } else if (initialUSDPrices.CURRENCY_B) {\n                setLocalUSDValue(String(+value * +initialUSDPrices.CURRENCY_B));\n            } else if (initialTokenPrice && usdPriceA) {\n                setLocalUSDValue(String(+value * +initialTokenPrice * +usdPriceA.toSignificant(5)));\n            }\n        } else if (value === \"\") {\n            setLocalTokenValue(\"\");\n            setLocalUSDValue(\"\");\n        }\n    }, [usdPriceB, initialTokenPrice, initialUSDPrices, value]);\n\n    return (\n        <div>\n            <div className=\"mb-05 f f-ac\">\n                <div>{title}</div>\n                <div className=\"ml-a\">\n                    <button onClick={handleDecrement} disabled={decrementDisabled || disabled} className=\"range-input__btn\">\n                        -\n                    </button>\n                    <button onClick={handleIncrement} disabled={incrementDisabled || disabled} className=\"range-input__btn\">\n                        +\n                    </button>\n                </div>\n            </div>\n            <div className=\"f pos-r f-ac\">\n                {isUSD && valueUSD && (\n                    <label htmlFor={title} className=\"range-input__usd\">\n                        $\n                    </label>\n                )}\n                <Input\n                    value={isUSD ? localUSDValue : localTokenValue}\n                    id={title}\n                    onBlur={handleOnBlur}\n                    className={`range-input ${isUSD && valueUSD ? \"is-usd\" : \"\"}`}\n                    disabled={disabled || locked}\n                    onUserInput={(val) => {\n                        isUSD ? setLocalUSDValue(val.trim()) : setLocalTokenValue(val.trim());\n                        dispatch(updateSelectedPreset({ preset: null }));\n                    }}\n                    placeholder=\"0.00\"\n                />\n            </div>\n        </div>\n    );\n}\n","import styled from 'styled-components/macro'\nimport { ButtonGray } from '../Button'\n\n//index\nexport const ChartWrapper = styled.div`\n    position: relative;\n    justify-content: center;\n    align-content: center;\n`\n\n//Area\nexport const Path = styled.path<{ fill: string | undefined }>`\n    opacity: 1;\n    stroke: ${({ fill }) => fill ? 'var(--secondary)' : '#192732'};\n    stroke-width: 2px;\n    fill: ${({ fill }) => fill ? 'url(#liquidity-chart-gradient)' : 'rgba(255,255,255,0.02)'};\n`\n\n//AxisBottom\nexport const StyledGroup = styled.g`\n    line {\n        display: none;\n    }\n\n    text {\n        color: var(--text1);\n        transform: translateY(5px);\n        font-family: Montserrat, sans-serif;\n    }\n`\n\n//Brush\nexport const LabelGroup = styled.g<{ visible: boolean }>`\n    opacity: ${({ visible }) => (visible ? '1' : '0')};\n    transition: opacity 300ms;\n`\nexport const TooltipBackground = styled.rect`\n    fill: ${({ theme }) => 'var(--secondary)'};\n`\nexport const Tooltip = styled.text`\n    text-anchor: middle;\n    font-size: 9px;\n    font-family: Montserrat, sans-serif;\n    fill: white;\n`\n\n//Line\nexport const StyledLine = styled.line`\n    opacity: 0.5;\n    stroke-width: 1;\n    stroke: var(--secondary);\n    stroke-dasharray: 3;\n    fill: none;\n`\n\n//Zoom\nexport const Wrapper = styled.div<{ count: number }>`\n    display: grid;\n    grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\n    grid-gap: 6px;\n    position: absolute;\n    border-radius: 4px;\n    top: 0;\n    right: 0;\n`\nexport const Button = styled(ButtonGray)`\n    &:hover {\n        background-color: transparent;\n        color: var(--white);\n    }\n\n    width: 32px;\n    height: 32px;\n    padding: 4px;\n    background-color: transparent;\n`\nexport const ZoomOverlay = styled.rect`\n    fill: transparent;\n`\n","import React, { useMemo } from \"react\";\nimport { area, curveStepAfter, ScaleLinear } from \"d3\";\nimport { Path } from \"./styled\";\nimport { ChartEntry } from \"./types\";\nimport inRange from \"lodash/inRange\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\n\nexport const Area = ({\n    series,\n    xScale,\n    yScale,\n    xValue,\n    yValue,\n    fill,\n    priceFormat\n}: {\n    series: ChartEntry[];\n    xScale: ScaleLinear<number, number>;\n    yScale: ScaleLinear<number, number>;\n    xValue: (d: ChartEntry) => number;\n    yValue: (d: ChartEntry) => number;\n    fill?: string | undefined;\n    priceFormat: PriceFormats\n}) =>\n    useMemo(\n        () => (\n            <Path\n                fill={fill}\n                d={\n                    area()\n                        .curve(curveStepAfter)\n                        .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n                        .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n                        .y0(yScale(0))(series.filter((d) => inRange(xScale(xValue(d)), 0, innerWidth)) as Iterable<[number, number]>) ?? undefined\n                }\n            />\n        ),\n        [fill, series, xScale, xValue, yScale, yValue, priceFormat]\n    );\n","import React, { useEffect, useMemo } from \"react\";\nimport { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from \"d3\";\nimport { StyledGroup } from \"./styled\";\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n    const axisRef = (axis: SVGGElement) => {\n        axis && select(axis).call(axisGenerator);\n        // .call((g) => g.select('.domain').remove())\n    };\n\n    return <g ref={axisRef} />;\n};\n\nexport const AxisBottom = ({ xScale, innerHeight, offset = 0 }: { xScale: ScaleLinear<number, number>; innerHeight: number; offset?: number }) => {\n    useEffect(() => {\n        // const firstTickText = select('.tick').attr('transform', (v) => {\n        //   return v === 0 || v === 0.0 ? 'translate(10,0)' : ''\n        // })\n        // if (firstTickText && (firstTickText === '0' || firstTickText === '0.0')) {\n        //   select('.tick:first-child').attr('transform', 'translate(10,0)')\n        // }\n    }, [xScale, offset, innerHeight]);\n\n    return useMemo(\n        () => (\n            <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n                <Axis axisGenerator={axisBottom(xScale).ticks(6).tickSizeOuter(0)} />\n            </StyledGroup>\n        ),\n        [innerHeight, offset, xScale]\n    );\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { BrushBehavior, brushX, D3BrushEvent, ScaleLinear, select } from \"d3\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { LabelGroup, Tooltip, TooltipBackground } from \"./styled\";\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20;\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2;\n\nconst compare = (a: [number, number], b: [number, number], xScale: ScaleLinear<number, number>): boolean => {\n    // normalize pixels to 1 decimals\n    const aNorm = a.map((x) => xScale(x).toFixed(1));\n    const bNorm = b.map((x) => xScale(x).toFixed(1));\n    return aNorm.every((v, i) => v === bNorm[i]);\n};\n\nexport const Brush = ({\n    id,\n    xScale,\n    interactive,\n    brushLabelValue,\n    brushExtent,\n    setBrushExtent,\n    innerWidth,\n    innerHeight,\n}: {\n    id: string;\n    xScale: ScaleLinear<number, number>;\n    interactive: boolean;\n    brushLabelValue: (d: \"w\" | \"e\", x: number) => string;\n    brushExtent: [number, number];\n    setBrushExtent: (extent: [number, number], mode: string | undefined) => void;\n    innerWidth: number;\n    innerHeight: number;\n}) => {\n    const brushRef = useRef<SVGGElement | null>(null);\n    const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null);\n\n    // only used to drag the handles on brush for performance\n    const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent);\n    const [showLabels, setShowLabels] = useState(false);\n    const [hovering, setHovering] = useState(false);\n\n    const previousBrushExtent = usePrevious(brushExtent);\n\n    const brushed = useCallback(\n        ({ type, selection, mode }: D3BrushEvent<unknown>) => {\n            if (!selection) {\n                setLocalBrushExtent(null);\n                return;\n            }\n\n            if (selection[0] === 0 && selection[1] === innerWidth) {\n                setLocalBrushExtent(null);\n                return;\n            }\n\n            const scaled = (selection as [number, number]).map(xScale.invert) as [number, number];\n\n            // avoid infinite render loop by checking for change\n            if (type === \"end\" && compare(brushExtent, scaled, xScale)) {\n                setBrushExtent(scaled, mode);\n            }\n\n            setLocalBrushExtent(scaled);\n        },\n        [xScale, brushExtent, setBrushExtent]\n    );\n\n    // keep local and external brush extent in sync\n    // i.e. snap to ticks on bruhs end\n    useEffect(() => {\n        //L-3\n        setLocalBrushExtent(brushExtent);\n    }, [brushExtent]);\n\n    // initialize the brush\n    useEffect(() => {\n        if (!brushRef.current) return;\n\n        brushBehavior.current = brushX<SVGGElement>()\n            .extent([\n                // [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n                // [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n                [0, 0],\n                [0, 0],\n            ])\n            .handleSize(30)\n            .filter(() => interactive)\n            .on(\"brush end\", brushed);\n\n        brushBehavior.current(select(brushRef.current));\n\n        if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n            select(brushRef.current)\n                // .transition()\n                .call(brushBehavior.current.move as any, brushExtent.map(xScale));\n        }\n        // brush linear gradient\n        select(brushRef.current).selectAll(\".selection\").attr(\"stroke\", \"none\").attr(\"fill\", \"none\");\n        // .attr('fill', `url(#${id}-gradient-selection)`)\n    }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale]);\n\n    // respond to xScale changes only\n    useEffect(() => {\n        if (!brushRef.current || !brushBehavior.current) return;\n\n        brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any);\n    }, [brushExtent, xScale]);\n\n    // show labels when local brush changes\n    useEffect(() => {\n        setShowLabels(true);\n        const timeout = setTimeout(() => setShowLabels(false), 1500);\n        return () => clearTimeout(timeout);\n    }, [localBrushExtent]);\n\n    // variables to help render the SVGs\n    const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX;\n    const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX;\n\n    const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0);\n    const showEastArrow = localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth);\n\n    const westHandleInView = localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth;\n    const eastHandleInView = localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth;\n\n    return useMemo(\n        () => (\n            <>\n                <defs>\n                    <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n                        <stop />\n                        <stop offset=\"1\" />\n                    </linearGradient>\n\n                    <linearGradient id=\"gradient-area\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"rgba(39, 151, 255, 0.75)\"></stop>\n                        <stop offset=\"100%\" stopColor=\"rgba(39, 151, 255, 0)\"></stop>\n                    </linearGradient>\n\n                    {/* clips at exactly the svg area */}\n                    <clipPath id={`${id}-brush-clip`}>\n                        <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n                    </clipPath>\n                </defs>\n\n                <style>{`\n                    g {\n                    cursor: default !important;\n                }\n                g > * {\n                    cursor: default !important;\n                    }\n                `}</style>\n\n                {/* custom brush handles */}\n                {localBrushExtent && (\n                    <>\n                        {/* west handle */}\n                        <g cursor={\"default\"} transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0)`}>\n                            <svg width={xScale(localBrushExtent[1]) - xScale(localBrushExtent[0])}>\n                                <line stroke=\"var(--secondary)\" strokeWidth=\"2\" x1=\"0\" x2={xScale(localBrushExtent[1])} y1={innerHeight} y2={innerHeight}></line>\n                            </svg>\n                        </g>\n\n                        {westHandleInView ? (\n                            <g cursor={\"default\"} transform={`translate(${Math.max(0, xScale(localBrushExtent[0])) + 7}, ${innerHeight - 9}), scale(${flipWestHandle ? \"-1\" : \"1\"}, 1)`}>\n                                <g style={{ userSelect: \"none\", pointerEvents: \"none\" }}>\n                                    <line x1={7} x2={7} y1={9} y2={-innerHeight - 20} stroke=\"var(--secondary)\" strokeWidth=\"1\"></line>\n                                </g>\n\n                                <LabelGroup visible={true} transform={`translate(0,${-innerHeight + 30}), scale(${flipWestHandle ? \"1\" : \"-1\"}, 1)`}>\n                                    <TooltipBackground y=\"0\" x=\"12\" height=\"15\" width=\"30\" rx=\"4\" />\n                                    <Tooltip y=\"8\" x=\"-27\" transform={`scale(-1, 1)`} dominantBaseline=\"middle\">\n                                        {brushLabelValue(\"e\", localBrushExtent[0])}\n                                    </Tooltip>\n                                </LabelGroup>\n                            </g>\n                        ) : null}\n\n                        {/* east handle */}\n                        {eastHandleInView ? (\n                            <g cursor={\"default\"} transform={`translate(${xScale(localBrushExtent[1]) - 7}, ${innerHeight - 9}), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`}>\n                                <g style={{ userSelect: \"none\", pointerEvents: \"none\" }}>\n                                    <line x1={7} x2={7} y1={9} y2={-innerHeight - 20} stroke=\"var(--secondary)\" strokeWidth=\"1\"></line>\n                                </g>\n\n                                <LabelGroup transform={`translate(0,${-innerHeight + 30}), scale(${flipEastHandle ? \"-1\" : \"1\"}, 1)`} visible={true}>\n                                    <TooltipBackground y=\"0\" x=\"12\" height=\"15\" width=\"30\" rx=\"4\" />\n                                    <Tooltip y=\"8\" x=\"27\" dominantBaseline=\"middle\">\n                                        {brushLabelValue(\"e\", localBrushExtent[1])}\n                                    </Tooltip>\n                                </LabelGroup>\n                            </g>\n                        ) : null}\n                        {/* will host the d3 brush */}\n                        <g cursor={\"default\"} ref={brushRef} clipPath={`url(#${id}-brush-clip)`} onMouseEnter={() => setHovering(true)} onMouseLeave={() => setHovering(false)} />\n                    </>\n                )}\n            </>\n        ),\n        [brushLabelValue, eastHandleInView, flipEastHandle, flipWestHandle, hovering, id, innerHeight, innerWidth, localBrushExtent, showEastArrow, showLabels, showWestArrow, westHandleInView, xScale]\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { ScaleLinear } from \"d3\";\nimport { StyledLine } from \"./styled\";\nimport { Trans } from \"@lingui/macro\";\n\nexport const Line = ({ value, xScale, innerHeight }: { value: number; xScale: ScaleLinear<number, number>; innerHeight: number }) =>\n    useMemo(\n        () => (\n            <>\n                <StyledLine x1={xScale(value)} y1=\"0\" x2={xScale(value)} y2={innerHeight - 1} />\n                <rect x={xScale(value) - 22} y={0} width={44} height={15} fill={\"var(--secondary)\"} rx={4} />\n                <text fill={\"white\"} fontSize={8} x={xScale(value) - 18} y={10}>\n                    <Trans>Curr. price</Trans>\n                </text>\n            </>\n        ),\n        [value, xScale, innerHeight]\n    );\n","import React, { useEffect, useMemo, useRef } from \"react\";\nimport { Button, Wrapper } from \"./styled\";\nimport { ScaleLinear, select, zoom, ZoomBehavior, ZoomTransform } from \"d3\";\nimport { RefreshCcw, ZoomIn, ZoomOut } from \"react-feather\";\nimport { ZoomLevels } from \"./types\";\n\nexport default function Zoom({\n    svg,\n    xScale,\n    setZoom,\n    width,\n    height,\n    showClear,\n    zoomLevels,\n}: {\n    svg: SVGElement | null;\n    xScale: ScaleLinear<number, number>;\n    setZoom: (transform: ZoomTransform) => void;\n    width: number;\n    height: number;\n    showClear: boolean;\n    zoomLevels: ZoomLevels;\n}) {\n    const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>();\n\n    const [zoomIn, zoomOut, reset, initial] = useMemo(\n        () => [\n            () =>\n                svg &&\n                zoomBehavior.current &&\n                select(svg as Element)\n                    .transition()\n                    .call(zoomBehavior.current.scaleBy, 2),\n            () =>\n                svg &&\n                zoomBehavior.current &&\n                select(svg as Element)\n                    .transition()\n                    .call(zoomBehavior.current.scaleBy, 0.5),\n            () =>\n                svg &&\n                zoomBehavior.current &&\n                select(svg as Element)\n                    .transition()\n                    .call(zoomBehavior.current.scaleTo, 1),\n            () =>\n                svg &&\n                zoomBehavior.current &&\n                select(svg as Element)\n                    .transition()\n                    .call(zoomBehavior.current.scaleTo, 0.5),\n        ],\n        [svg, zoomBehavior]\n    );\n\n    useEffect(() => {\n        if (!svg) return;\n\n        zoomBehavior.current = zoom()\n            .scaleExtent([zoomLevels.min, zoomLevels.max])\n            .extent([\n                [0, 0],\n                [width, height],\n            ])\n            .on(\"zoom\", ({ transform }: { transform: ZoomTransform }) => setZoom(transform));\n\n        select(svg as Element).call(zoomBehavior.current);\n    }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min]);\n\n    useEffect(() => {\n        // reset zoom to initial on zoomLevel change\n        initial();\n    }, [initial, zoomLevels]);\n\n    return <div></div>\n}\n","import { max, scaleLinear, select, ZoomTransform } from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Area } from \"./Area\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { Brush } from \"./Brush\";\nimport { Line } from \"./Line\";\nimport { ChartEntry, LiquidityChartRangeInputProps } from \"./types\";\nimport Zoom from \"./Zoom\";\n\nexport const xAccessor = (d: ChartEntry) => d.price0;\nexport const yAccessor = (d: ChartEntry) => d.activeLiquidity;\n\nexport function Chart({\n    id = \"liquidityChartRangeInput\",\n    data: { series, current },\n    styles,\n    dimensions: { width, height },\n    margins,\n    interactive = true,\n    brushDomain,\n    brushLabels,\n    onBrushDomainChange,\n    zoomLevels,\n    priceFormat\n}: LiquidityChartRangeInputProps) {\n    const zoomRef = useRef<SVGRectElement | null>(null);\n\n    const [zoom, setZoom] = useState<ZoomTransform | null>(null);\n\n    const [innerHeight, innerWidth] = useMemo(() => [height - margins.top - margins.bottom, width - margins.left - margins.right], [width, height, margins]);\n\n    const maxXScale = useMemo(() => series.reduce((acc, el) => (el.price0 > acc ? el.price0 : acc), 0), [series]);\n\n    const { xScale, yScale } = useMemo(() => {\n\n        const scales = {\n            xScale: scaleLinear()\n                .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n                .range([0, innerWidth]),\n            yScale: scaleLinear()\n                .domain([0, max(series, yAccessor)] as number[])\n                .range([innerHeight, 0]),\n        };\n\n        if (zoom) {\n            const newXscale = zoom.rescaleX(scales.xScale);\n            scales.xScale.domain(newXscale.domain());\n        }\n\n        return scales;\n    }, [priceFormat, current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom]);\n\n    useEffect(() => {\n        // reset zoom as necessary\n        setZoom(null);\n    }, [zoomLevels, priceFormat]);\n\n    useEffect(() => {\n        if (!brushDomain && current) {\n            //L-1\n            // const initialLowPrice = current * 0.75;\n            // const initialHighPrice = current * 1.5;\n            // onBrushDomainChange([initialLowPrice, initialHighPrice], undefined);\n        }\n    }, [brushDomain, current, onBrushDomainChange, xScale, priceFormat]);\n\n    useEffect(() => {\n        select(\".tick:first-child\").attr(\"transform\", \"translate(10,0)\");\n    }, []);\n\n    return (\n        <>\n         <Zoom\n                svg={zoomRef.current}\n                xScale={xScale}\n                setZoom={setZoom}\n                width={innerWidth}\n                height={\n                    // allow zooming inside the x-axis\n                    height\n                }\n                showClear={false}\n                zoomLevels={zoomLevels}\n            />\n            <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`}>\n                <defs>\n                    <clipPath id={`${id}-chart-clip`}>\n                        <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n                    </clipPath>\n\n                    <linearGradient id=\"liquidity-chart-gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"rgba(39, 151, 255, 0.2)\"></stop>\n                        <stop offset=\"100%\" stopColor=\"rgba(39, 151, 255, 0)\"></stop>\n                    </linearGradient>\n                    {brushDomain && (\n                        // mask to highlight selected area\n                        <mask id={`${id}-chart-area-mask`}>\n                            <rect fill=\"white\" x={xScale(brushDomain[0])} y=\"0\" width={xScale(brushDomain[1]) - xScale(brushDomain[0])} height={innerHeight} />\n                        </mask>\n                    )}\n                </defs>\n\n                <g transform={`translate(${margins.left},${margins.top})`}>\n                    <g clipPath={`url(#${id}-chart-clip)`}>\n                        <Area priceFormat={priceFormat} series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n                        {brushDomain && (\n                            // duplicate area chart with mask for selected area\n                            <g mask={`url(#${id}-chart-area-mask)`}>\n                                <Area priceFormat={priceFormat} series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} fill={styles.area.selection} />\n                            </g>\n                        )}\n\n                        <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n                        <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n                    </g>\n\n                    <Brush\n                        id={id}\n                        xScale={xScale}\n                        interactive={interactive}\n                        brushLabelValue={brushLabels}\n                        brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n                        innerWidth={innerWidth}\n                        innerHeight={innerHeight}\n                        setBrushExtent={onBrushDomainChange}\n                    />\n                </g>\n            </svg>\n        </>\n    );\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from 'lib/src'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\nimport { AllV3TicksQuery } from 'state/data/generated'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n    token0: Token,\n    token1: Token,\n    activeTickProcessed: TickProcessed,\n    sortedTickData: AllV3TicksQuery['ticks'],\n    pivot: number,\n    ascending: boolean\n): TickProcessed[] {\n    let previousTickProcessed: TickProcessed = {\n        ...activeTickProcessed\n    }\n    // Iterate outwards (either up or down depending on direction) from the active tick,\n    // building active liquidity for every tick.\n    let processedTicks: TickProcessed[] = []\n    for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n        const tickIdx = Number(sortedTickData[i].tickIdx)\n        const currentTickProcessed: TickProcessed = {\n            liquidityActive: previousTickProcessed.liquidityActive,\n            tickIdx,\n            liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n            price0: tickToPrice(token0, token1, tickIdx).toFixed(PRICE_FIXED_DIGITS)\n        }\n\n        // Update the active liquidity.\n        // If we are iterating ascending and we found an initialized tick we immediately apply\n        // it to the current processed tick we are building.\n        // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n        if (ascending) {\n            currentTickProcessed.liquidityActive = JSBI.add(\n                previousTickProcessed.liquidityActive,\n                JSBI.BigInt(sortedTickData[i].liquidityNet)\n            )\n        } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n            // We are iterating descending, so look at the previous tick and apply any net liquidity.\n            currentTickProcessed.liquidityActive = JSBI.subtract(\n                previousTickProcessed.liquidityActive,\n                previousTickProcessed.liquidityNet\n            )\n        }\n\n        processedTicks.push(currentTickProcessed)\n        previousTickProcessed = currentTickProcessed\n    }\n\n    if (!ascending) {\n        processedTicks = processedTicks.reverse()\n    }\n\n    return processedTicks\n}\n","import { api } from './slice';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigDecimal: any;\n  BigInt: any;\n  Bytes: any;\n  /**\n   * 8 bytes signed integer\n   *\n   */\n  Int8: any;\n};\n\n\n\n\nexport type AlgebraDayData = {\n  __typename?: 'AlgebraDayData';\n  date: Scalars['Int'];\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  tvlUSD: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  volumeMatic: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n  volumeUSDUntracked: Scalars['BigDecimal'];\n};\n\nexport type AlgebraDayData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<AlgebraDayData_Filter>>>;\n  date?: Maybe<Scalars['Int']>;\n  date_gt?: Maybe<Scalars['Int']>;\n  date_gte?: Maybe<Scalars['Int']>;\n  date_in?: Maybe<Array<Scalars['Int']>>;\n  date_lt?: Maybe<Scalars['Int']>;\n  date_lte?: Maybe<Scalars['Int']>;\n  date_not?: Maybe<Scalars['Int']>;\n  date_not_in?: Maybe<Array<Scalars['Int']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  or?: Maybe<Array<Maybe<AlgebraDayData_Filter>>>;\n  tvlUSD?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tvlUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  volumeMatic?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_not?: Maybe<Scalars['BigDecimal']>;\n  volumeMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSDUntracked_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSDUntracked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum AlgebraDayData_OrderBy {\n  Date = 'date',\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  TvlUsd = 'tvlUSD',\n  TxCount = 'txCount',\n  VolumeMatic = 'volumeMatic',\n  VolumeUsd = 'volumeUSD',\n  VolumeUsdUntracked = 'volumeUSDUntracked'\n}\n\n\n\nexport type Block = {\n  __typename?: 'Block';\n  author?: Maybe<Scalars['String']>;\n  difficulty?: Maybe<Scalars['BigInt']>;\n  gasLimit?: Maybe<Scalars['BigInt']>;\n  gasUsed?: Maybe<Scalars['BigInt']>;\n  id: Scalars['ID'];\n  number: Scalars['BigInt'];\n  parentHash?: Maybe<Scalars['String']>;\n  receiptsRoot?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['BigInt']>;\n  stateRoot?: Maybe<Scalars['String']>;\n  timestamp: Scalars['BigInt'];\n  totalDifficulty?: Maybe<Scalars['BigInt']>;\n  transactionsRoot?: Maybe<Scalars['String']>;\n  unclesHash?: Maybe<Scalars['String']>;\n};\n\nexport type BlockChangedFilter = {\n  number_gte: Scalars['Int'];\n};\n\nexport type Block_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Block_Filter>>>;\n  author?: Maybe<Scalars['String']>;\n  author_contains?: Maybe<Scalars['String']>;\n  author_contains_nocase?: Maybe<Scalars['String']>;\n  author_ends_with?: Maybe<Scalars['String']>;\n  author_ends_with_nocase?: Maybe<Scalars['String']>;\n  author_gt?: Maybe<Scalars['String']>;\n  author_gte?: Maybe<Scalars['String']>;\n  author_in?: Maybe<Array<Scalars['String']>>;\n  author_lt?: Maybe<Scalars['String']>;\n  author_lte?: Maybe<Scalars['String']>;\n  author_not?: Maybe<Scalars['String']>;\n  author_not_contains?: Maybe<Scalars['String']>;\n  author_not_contains_nocase?: Maybe<Scalars['String']>;\n  author_not_ends_with?: Maybe<Scalars['String']>;\n  author_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  author_not_in?: Maybe<Array<Scalars['String']>>;\n  author_not_starts_with?: Maybe<Scalars['String']>;\n  author_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  author_starts_with?: Maybe<Scalars['String']>;\n  author_starts_with_nocase?: Maybe<Scalars['String']>;\n  difficulty?: Maybe<Scalars['BigInt']>;\n  difficulty_gt?: Maybe<Scalars['BigInt']>;\n  difficulty_gte?: Maybe<Scalars['BigInt']>;\n  difficulty_in?: Maybe<Array<Scalars['BigInt']>>;\n  difficulty_lt?: Maybe<Scalars['BigInt']>;\n  difficulty_lte?: Maybe<Scalars['BigInt']>;\n  difficulty_not?: Maybe<Scalars['BigInt']>;\n  difficulty_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasLimit?: Maybe<Scalars['BigInt']>;\n  gasLimit_gt?: Maybe<Scalars['BigInt']>;\n  gasLimit_gte?: Maybe<Scalars['BigInt']>;\n  gasLimit_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasLimit_lt?: Maybe<Scalars['BigInt']>;\n  gasLimit_lte?: Maybe<Scalars['BigInt']>;\n  gasLimit_not?: Maybe<Scalars['BigInt']>;\n  gasLimit_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasUsed?: Maybe<Scalars['BigInt']>;\n  gasUsed_gt?: Maybe<Scalars['BigInt']>;\n  gasUsed_gte?: Maybe<Scalars['BigInt']>;\n  gasUsed_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasUsed_lt?: Maybe<Scalars['BigInt']>;\n  gasUsed_lte?: Maybe<Scalars['BigInt']>;\n  gasUsed_not?: Maybe<Scalars['BigInt']>;\n  gasUsed_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  number?: Maybe<Scalars['BigInt']>;\n  number_gt?: Maybe<Scalars['BigInt']>;\n  number_gte?: Maybe<Scalars['BigInt']>;\n  number_in?: Maybe<Array<Scalars['BigInt']>>;\n  number_lt?: Maybe<Scalars['BigInt']>;\n  number_lte?: Maybe<Scalars['BigInt']>;\n  number_not?: Maybe<Scalars['BigInt']>;\n  number_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Block_Filter>>>;\n  parentHash?: Maybe<Scalars['String']>;\n  parentHash_contains?: Maybe<Scalars['String']>;\n  parentHash_contains_nocase?: Maybe<Scalars['String']>;\n  parentHash_ends_with?: Maybe<Scalars['String']>;\n  parentHash_ends_with_nocase?: Maybe<Scalars['String']>;\n  parentHash_gt?: Maybe<Scalars['String']>;\n  parentHash_gte?: Maybe<Scalars['String']>;\n  parentHash_in?: Maybe<Array<Scalars['String']>>;\n  parentHash_lt?: Maybe<Scalars['String']>;\n  parentHash_lte?: Maybe<Scalars['String']>;\n  parentHash_not?: Maybe<Scalars['String']>;\n  parentHash_not_contains?: Maybe<Scalars['String']>;\n  parentHash_not_contains_nocase?: Maybe<Scalars['String']>;\n  parentHash_not_ends_with?: Maybe<Scalars['String']>;\n  parentHash_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  parentHash_not_in?: Maybe<Array<Scalars['String']>>;\n  parentHash_not_starts_with?: Maybe<Scalars['String']>;\n  parentHash_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  parentHash_starts_with?: Maybe<Scalars['String']>;\n  parentHash_starts_with_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot?: Maybe<Scalars['String']>;\n  receiptsRoot_contains?: Maybe<Scalars['String']>;\n  receiptsRoot_contains_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot_ends_with?: Maybe<Scalars['String']>;\n  receiptsRoot_ends_with_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot_gt?: Maybe<Scalars['String']>;\n  receiptsRoot_gte?: Maybe<Scalars['String']>;\n  receiptsRoot_in?: Maybe<Array<Scalars['String']>>;\n  receiptsRoot_lt?: Maybe<Scalars['String']>;\n  receiptsRoot_lte?: Maybe<Scalars['String']>;\n  receiptsRoot_not?: Maybe<Scalars['String']>;\n  receiptsRoot_not_contains?: Maybe<Scalars['String']>;\n  receiptsRoot_not_contains_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot_not_ends_with?: Maybe<Scalars['String']>;\n  receiptsRoot_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot_not_in?: Maybe<Array<Scalars['String']>>;\n  receiptsRoot_not_starts_with?: Maybe<Scalars['String']>;\n  receiptsRoot_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  receiptsRoot_starts_with?: Maybe<Scalars['String']>;\n  receiptsRoot_starts_with_nocase?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['BigInt']>;\n  size_gt?: Maybe<Scalars['BigInt']>;\n  size_gte?: Maybe<Scalars['BigInt']>;\n  size_in?: Maybe<Array<Scalars['BigInt']>>;\n  size_lt?: Maybe<Scalars['BigInt']>;\n  size_lte?: Maybe<Scalars['BigInt']>;\n  size_not?: Maybe<Scalars['BigInt']>;\n  size_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  stateRoot?: Maybe<Scalars['String']>;\n  stateRoot_contains?: Maybe<Scalars['String']>;\n  stateRoot_contains_nocase?: Maybe<Scalars['String']>;\n  stateRoot_ends_with?: Maybe<Scalars['String']>;\n  stateRoot_ends_with_nocase?: Maybe<Scalars['String']>;\n  stateRoot_gt?: Maybe<Scalars['String']>;\n  stateRoot_gte?: Maybe<Scalars['String']>;\n  stateRoot_in?: Maybe<Array<Scalars['String']>>;\n  stateRoot_lt?: Maybe<Scalars['String']>;\n  stateRoot_lte?: Maybe<Scalars['String']>;\n  stateRoot_not?: Maybe<Scalars['String']>;\n  stateRoot_not_contains?: Maybe<Scalars['String']>;\n  stateRoot_not_contains_nocase?: Maybe<Scalars['String']>;\n  stateRoot_not_ends_with?: Maybe<Scalars['String']>;\n  stateRoot_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  stateRoot_not_in?: Maybe<Array<Scalars['String']>>;\n  stateRoot_not_starts_with?: Maybe<Scalars['String']>;\n  stateRoot_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  stateRoot_starts_with?: Maybe<Scalars['String']>;\n  stateRoot_starts_with_nocase?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  totalDifficulty?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_gt?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_gte?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_in?: Maybe<Array<Scalars['BigInt']>>;\n  totalDifficulty_lt?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_lte?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_not?: Maybe<Scalars['BigInt']>;\n  totalDifficulty_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  transactionsRoot?: Maybe<Scalars['String']>;\n  transactionsRoot_contains?: Maybe<Scalars['String']>;\n  transactionsRoot_contains_nocase?: Maybe<Scalars['String']>;\n  transactionsRoot_ends_with?: Maybe<Scalars['String']>;\n  transactionsRoot_ends_with_nocase?: Maybe<Scalars['String']>;\n  transactionsRoot_gt?: Maybe<Scalars['String']>;\n  transactionsRoot_gte?: Maybe<Scalars['String']>;\n  transactionsRoot_in?: Maybe<Array<Scalars['String']>>;\n  transactionsRoot_lt?: Maybe<Scalars['String']>;\n  transactionsRoot_lte?: Maybe<Scalars['String']>;\n  transactionsRoot_not?: Maybe<Scalars['String']>;\n  transactionsRoot_not_contains?: Maybe<Scalars['String']>;\n  transactionsRoot_not_contains_nocase?: Maybe<Scalars['String']>;\n  transactionsRoot_not_ends_with?: Maybe<Scalars['String']>;\n  transactionsRoot_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transactionsRoot_not_in?: Maybe<Array<Scalars['String']>>;\n  transactionsRoot_not_starts_with?: Maybe<Scalars['String']>;\n  transactionsRoot_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transactionsRoot_starts_with?: Maybe<Scalars['String']>;\n  transactionsRoot_starts_with_nocase?: Maybe<Scalars['String']>;\n  unclesHash?: Maybe<Scalars['String']>;\n  unclesHash_contains?: Maybe<Scalars['String']>;\n  unclesHash_contains_nocase?: Maybe<Scalars['String']>;\n  unclesHash_ends_with?: Maybe<Scalars['String']>;\n  unclesHash_ends_with_nocase?: Maybe<Scalars['String']>;\n  unclesHash_gt?: Maybe<Scalars['String']>;\n  unclesHash_gte?: Maybe<Scalars['String']>;\n  unclesHash_in?: Maybe<Array<Scalars['String']>>;\n  unclesHash_lt?: Maybe<Scalars['String']>;\n  unclesHash_lte?: Maybe<Scalars['String']>;\n  unclesHash_not?: Maybe<Scalars['String']>;\n  unclesHash_not_contains?: Maybe<Scalars['String']>;\n  unclesHash_not_contains_nocase?: Maybe<Scalars['String']>;\n  unclesHash_not_ends_with?: Maybe<Scalars['String']>;\n  unclesHash_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  unclesHash_not_in?: Maybe<Array<Scalars['String']>>;\n  unclesHash_not_starts_with?: Maybe<Scalars['String']>;\n  unclesHash_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  unclesHash_starts_with?: Maybe<Scalars['String']>;\n  unclesHash_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport type Block_Height = {\n  hash?: Maybe<Scalars['Bytes']>;\n  number?: Maybe<Scalars['Int']>;\n  number_gte?: Maybe<Scalars['Int']>;\n};\n\nexport enum Block_OrderBy {\n  Author = 'author',\n  Difficulty = 'difficulty',\n  GasLimit = 'gasLimit',\n  GasUsed = 'gasUsed',\n  Id = 'id',\n  Number = 'number',\n  ParentHash = 'parentHash',\n  ReceiptsRoot = 'receiptsRoot',\n  Size = 'size',\n  StateRoot = 'stateRoot',\n  Timestamp = 'timestamp',\n  TotalDifficulty = 'totalDifficulty',\n  TransactionsRoot = 'transactionsRoot',\n  UnclesHash = 'unclesHash'\n}\n\nexport type Bundle = {\n  __typename?: 'Bundle';\n  id: Scalars['ID'];\n  maticPriceUSD: Scalars['BigDecimal'];\n};\n\nexport type Bundle_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Bundle_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  maticPriceUSD?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  maticPriceUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_not?: Maybe<Scalars['BigDecimal']>;\n  maticPriceUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  or?: Maybe<Array<Maybe<Bundle_Filter>>>;\n};\n\nexport enum Bundle_OrderBy {\n  Id = 'id',\n  MaticPriceUsd = 'maticPriceUSD'\n}\n\nexport type Burn = {\n  __typename?: 'Burn';\n  amount: Scalars['BigInt'];\n  amount0: Scalars['BigDecimal'];\n  amount1: Scalars['BigDecimal'];\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  id: Scalars['ID'];\n  logIndex?: Maybe<Scalars['BigInt']>;\n  origin: Scalars['Bytes'];\n  owner?: Maybe<Scalars['Bytes']>;\n  pool: Pool;\n  tickLower: Scalars['BigInt'];\n  tickUpper: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  token0: Token;\n  token1: Token;\n  transaction: Transaction;\n};\n\nexport type Burn_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount?: Maybe<Scalars['BigInt']>;\n  amount0?: Maybe<Scalars['BigDecimal']>;\n  amount0_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0_not?: Maybe<Scalars['BigDecimal']>;\n  amount0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1?: Maybe<Scalars['BigDecimal']>;\n  amount1_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1_not?: Maybe<Scalars['BigDecimal']>;\n  amount1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount_gt?: Maybe<Scalars['BigInt']>;\n  amount_gte?: Maybe<Scalars['BigInt']>;\n  amount_in?: Maybe<Array<Scalars['BigInt']>>;\n  amount_lt?: Maybe<Scalars['BigInt']>;\n  amount_lte?: Maybe<Scalars['BigInt']>;\n  amount_not?: Maybe<Scalars['BigInt']>;\n  amount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  and?: Maybe<Array<Maybe<Burn_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  logIndex?: Maybe<Scalars['BigInt']>;\n  logIndex_gt?: Maybe<Scalars['BigInt']>;\n  logIndex_gte?: Maybe<Scalars['BigInt']>;\n  logIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex_lt?: Maybe<Scalars['BigInt']>;\n  logIndex_lte?: Maybe<Scalars['BigInt']>;\n  logIndex_not?: Maybe<Scalars['BigInt']>;\n  logIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Burn_Filter>>>;\n  origin?: Maybe<Scalars['Bytes']>;\n  origin_contains?: Maybe<Scalars['Bytes']>;\n  origin_gt?: Maybe<Scalars['Bytes']>;\n  origin_gte?: Maybe<Scalars['Bytes']>;\n  origin_in?: Maybe<Array<Scalars['Bytes']>>;\n  origin_lt?: Maybe<Scalars['Bytes']>;\n  origin_lte?: Maybe<Scalars['Bytes']>;\n  origin_not?: Maybe<Scalars['Bytes']>;\n  origin_not_contains?: Maybe<Scalars['Bytes']>;\n  origin_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickLower?: Maybe<Scalars['BigInt']>;\n  tickLower_gt?: Maybe<Scalars['BigInt']>;\n  tickLower_gte?: Maybe<Scalars['BigInt']>;\n  tickLower_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickLower_lt?: Maybe<Scalars['BigInt']>;\n  tickLower_lte?: Maybe<Scalars['BigInt']>;\n  tickLower_not?: Maybe<Scalars['BigInt']>;\n  tickLower_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper?: Maybe<Scalars['BigInt']>;\n  tickUpper_gt?: Maybe<Scalars['BigInt']>;\n  tickUpper_gte?: Maybe<Scalars['BigInt']>;\n  tickUpper_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper_lt?: Maybe<Scalars['BigInt']>;\n  tickUpper_lte?: Maybe<Scalars['BigInt']>;\n  tickUpper_not?: Maybe<Scalars['BigInt']>;\n  tickUpper_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  token0?: Maybe<Scalars['String']>;\n  token0_?: Maybe<Token_Filter>;\n  token0_contains?: Maybe<Scalars['String']>;\n  token0_contains_nocase?: Maybe<Scalars['String']>;\n  token0_ends_with?: Maybe<Scalars['String']>;\n  token0_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_gt?: Maybe<Scalars['String']>;\n  token0_gte?: Maybe<Scalars['String']>;\n  token0_in?: Maybe<Array<Scalars['String']>>;\n  token0_lt?: Maybe<Scalars['String']>;\n  token0_lte?: Maybe<Scalars['String']>;\n  token0_not?: Maybe<Scalars['String']>;\n  token0_not_contains?: Maybe<Scalars['String']>;\n  token0_not_contains_nocase?: Maybe<Scalars['String']>;\n  token0_not_ends_with?: Maybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_not_in?: Maybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: Maybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0_starts_with?: Maybe<Scalars['String']>;\n  token0_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1?: Maybe<Scalars['String']>;\n  token1_?: Maybe<Token_Filter>;\n  token1_contains?: Maybe<Scalars['String']>;\n  token1_contains_nocase?: Maybe<Scalars['String']>;\n  token1_ends_with?: Maybe<Scalars['String']>;\n  token1_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_gt?: Maybe<Scalars['String']>;\n  token1_gte?: Maybe<Scalars['String']>;\n  token1_in?: Maybe<Array<Scalars['String']>>;\n  token1_lt?: Maybe<Scalars['String']>;\n  token1_lte?: Maybe<Scalars['String']>;\n  token1_not?: Maybe<Scalars['String']>;\n  token1_not_contains?: Maybe<Scalars['String']>;\n  token1_not_contains_nocase?: Maybe<Scalars['String']>;\n  token1_not_ends_with?: Maybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_not_in?: Maybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: Maybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1_starts_with?: Maybe<Scalars['String']>;\n  token1_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum Burn_OrderBy {\n  Amount = 'amount',\n  Amount0 = 'amount0',\n  Amount1 = 'amount1',\n  AmountUsd = 'amountUSD',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Origin = 'origin',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  TickLower = 'tickLower',\n  TickUpper = 'tickUpper',\n  Timestamp = 'timestamp',\n  Token0 = 'token0',\n  Token0Decimals = 'token0__decimals',\n  Token0DerivedMatic = 'token0__derivedMatic',\n  Token0FeesUsd = 'token0__feesUSD',\n  Token0Id = 'token0__id',\n  Token0Name = 'token0__name',\n  Token0PoolCount = 'token0__poolCount',\n  Token0Symbol = 'token0__symbol',\n  Token0TotalSupply = 'token0__totalSupply',\n  Token0TotalValueLocked = 'token0__totalValueLocked',\n  Token0TotalValueLockedUsd = 'token0__totalValueLockedUSD',\n  Token0TotalValueLockedUsdUntracked = 'token0__totalValueLockedUSDUntracked',\n  Token0TxCount = 'token0__txCount',\n  Token0UntrackedVolumeUsd = 'token0__untrackedVolumeUSD',\n  Token0Volume = 'token0__volume',\n  Token0VolumeUsd = 'token0__volumeUSD',\n  Token1 = 'token1',\n  Token1Decimals = 'token1__decimals',\n  Token1DerivedMatic = 'token1__derivedMatic',\n  Token1FeesUsd = 'token1__feesUSD',\n  Token1Id = 'token1__id',\n  Token1Name = 'token1__name',\n  Token1PoolCount = 'token1__poolCount',\n  Token1Symbol = 'token1__symbol',\n  Token1TotalSupply = 'token1__totalSupply',\n  Token1TotalValueLocked = 'token1__totalValueLocked',\n  Token1TotalValueLockedUsd = 'token1__totalValueLockedUSD',\n  Token1TotalValueLockedUsdUntracked = 'token1__totalValueLockedUSDUntracked',\n  Token1TxCount = 'token1__txCount',\n  Token1UntrackedVolumeUsd = 'token1__untrackedVolumeUSD',\n  Token1Volume = 'token1__volume',\n  Token1VolumeUsd = 'token1__volumeUSD',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp'\n}\n\n\nexport type Collect = {\n  __typename?: 'Collect';\n  amount0: Scalars['BigDecimal'];\n  amount1: Scalars['BigDecimal'];\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  id: Scalars['ID'];\n  logIndex?: Maybe<Scalars['BigInt']>;\n  owner?: Maybe<Scalars['Bytes']>;\n  pool: Pool;\n  tickLower: Scalars['BigInt'];\n  tickUpper: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  transaction: Transaction;\n};\n\nexport type Collect_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount0?: Maybe<Scalars['BigDecimal']>;\n  amount0_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0_not?: Maybe<Scalars['BigDecimal']>;\n  amount0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1?: Maybe<Scalars['BigDecimal']>;\n  amount1_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1_not?: Maybe<Scalars['BigDecimal']>;\n  amount1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  and?: Maybe<Array<Maybe<Collect_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  logIndex?: Maybe<Scalars['BigInt']>;\n  logIndex_gt?: Maybe<Scalars['BigInt']>;\n  logIndex_gte?: Maybe<Scalars['BigInt']>;\n  logIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex_lt?: Maybe<Scalars['BigInt']>;\n  logIndex_lte?: Maybe<Scalars['BigInt']>;\n  logIndex_not?: Maybe<Scalars['BigInt']>;\n  logIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Collect_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickLower?: Maybe<Scalars['BigInt']>;\n  tickLower_gt?: Maybe<Scalars['BigInt']>;\n  tickLower_gte?: Maybe<Scalars['BigInt']>;\n  tickLower_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickLower_lt?: Maybe<Scalars['BigInt']>;\n  tickLower_lte?: Maybe<Scalars['BigInt']>;\n  tickLower_not?: Maybe<Scalars['BigInt']>;\n  tickLower_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper?: Maybe<Scalars['BigInt']>;\n  tickUpper_gt?: Maybe<Scalars['BigInt']>;\n  tickUpper_gte?: Maybe<Scalars['BigInt']>;\n  tickUpper_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper_lt?: Maybe<Scalars['BigInt']>;\n  tickUpper_lte?: Maybe<Scalars['BigInt']>;\n  tickUpper_not?: Maybe<Scalars['BigInt']>;\n  tickUpper_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum Collect_OrderBy {\n  Amount0 = 'amount0',\n  Amount1 = 'amount1',\n  AmountUsd = 'amountUSD',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  TickLower = 'tickLower',\n  TickUpper = 'tickUpper',\n  Timestamp = 'timestamp',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp'\n}\n\nexport type Deposit = {\n  __typename?: 'Deposit';\n  L2tokenId: Scalars['BigInt'];\n  enteredInEternalFarming?: Maybe<Scalars['BigInt']>;\n  eternalFarming?: Maybe<Scalars['Bytes']>;\n  id: Scalars['ID'];\n  limitFarming?: Maybe<Scalars['Bytes']>;\n  liquidity: Scalars['BigInt'];\n  onFarmingCenter: Scalars['Boolean'];\n  owner: Scalars['Bytes'];\n  pool: Scalars['Bytes'];\n  rangeLength: Scalars['BigInt'];\n  tierEternal: Scalars['BigInt'];\n  tierLimit: Scalars['BigInt'];\n  tokensLockedEternal: Scalars['BigInt'];\n  tokensLockedLimit: Scalars['BigInt'];\n};\n\nexport type Deposit_Filter = {\n  L2tokenId?: Maybe<Scalars['BigInt']>;\n  L2tokenId_gt?: Maybe<Scalars['BigInt']>;\n  L2tokenId_gte?: Maybe<Scalars['BigInt']>;\n  L2tokenId_in?: Maybe<Array<Scalars['BigInt']>>;\n  L2tokenId_lt?: Maybe<Scalars['BigInt']>;\n  L2tokenId_lte?: Maybe<Scalars['BigInt']>;\n  L2tokenId_not?: Maybe<Scalars['BigInt']>;\n  L2tokenId_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Deposit_Filter>>>;\n  enteredInEternalFarming?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_gt?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_gte?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_in?: Maybe<Array<Scalars['BigInt']>>;\n  enteredInEternalFarming_lt?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_lte?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_not?: Maybe<Scalars['BigInt']>;\n  enteredInEternalFarming_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  eternalFarming?: Maybe<Scalars['Bytes']>;\n  eternalFarming_contains?: Maybe<Scalars['Bytes']>;\n  eternalFarming_gt?: Maybe<Scalars['Bytes']>;\n  eternalFarming_gte?: Maybe<Scalars['Bytes']>;\n  eternalFarming_in?: Maybe<Array<Scalars['Bytes']>>;\n  eternalFarming_lt?: Maybe<Scalars['Bytes']>;\n  eternalFarming_lte?: Maybe<Scalars['Bytes']>;\n  eternalFarming_not?: Maybe<Scalars['Bytes']>;\n  eternalFarming_not_contains?: Maybe<Scalars['Bytes']>;\n  eternalFarming_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  limitFarming?: Maybe<Scalars['Bytes']>;\n  limitFarming_contains?: Maybe<Scalars['Bytes']>;\n  limitFarming_gt?: Maybe<Scalars['Bytes']>;\n  limitFarming_gte?: Maybe<Scalars['Bytes']>;\n  limitFarming_in?: Maybe<Array<Scalars['Bytes']>>;\n  limitFarming_lt?: Maybe<Scalars['Bytes']>;\n  limitFarming_lte?: Maybe<Scalars['Bytes']>;\n  limitFarming_not?: Maybe<Scalars['Bytes']>;\n  limitFarming_not_contains?: Maybe<Scalars['Bytes']>;\n  limitFarming_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  onFarmingCenter?: Maybe<Scalars['Boolean']>;\n  onFarmingCenter_in?: Maybe<Array<Scalars['Boolean']>>;\n  onFarmingCenter_not?: Maybe<Scalars['Boolean']>;\n  onFarmingCenter_not_in?: Maybe<Array<Scalars['Boolean']>>;\n  or?: Maybe<Array<Maybe<Deposit_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['Bytes']>;\n  pool_contains?: Maybe<Scalars['Bytes']>;\n  pool_gt?: Maybe<Scalars['Bytes']>;\n  pool_gte?: Maybe<Scalars['Bytes']>;\n  pool_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool_lt?: Maybe<Scalars['Bytes']>;\n  pool_lte?: Maybe<Scalars['Bytes']>;\n  pool_not?: Maybe<Scalars['Bytes']>;\n  pool_not_contains?: Maybe<Scalars['Bytes']>;\n  pool_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  rangeLength?: Maybe<Scalars['BigInt']>;\n  rangeLength_gt?: Maybe<Scalars['BigInt']>;\n  rangeLength_gte?: Maybe<Scalars['BigInt']>;\n  rangeLength_in?: Maybe<Array<Scalars['BigInt']>>;\n  rangeLength_lt?: Maybe<Scalars['BigInt']>;\n  rangeLength_lte?: Maybe<Scalars['BigInt']>;\n  rangeLength_not?: Maybe<Scalars['BigInt']>;\n  rangeLength_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tierEternal?: Maybe<Scalars['BigInt']>;\n  tierEternal_gt?: Maybe<Scalars['BigInt']>;\n  tierEternal_gte?: Maybe<Scalars['BigInt']>;\n  tierEternal_in?: Maybe<Array<Scalars['BigInt']>>;\n  tierEternal_lt?: Maybe<Scalars['BigInt']>;\n  tierEternal_lte?: Maybe<Scalars['BigInt']>;\n  tierEternal_not?: Maybe<Scalars['BigInt']>;\n  tierEternal_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tierLimit?: Maybe<Scalars['BigInt']>;\n  tierLimit_gt?: Maybe<Scalars['BigInt']>;\n  tierLimit_gte?: Maybe<Scalars['BigInt']>;\n  tierLimit_in?: Maybe<Array<Scalars['BigInt']>>;\n  tierLimit_lt?: Maybe<Scalars['BigInt']>;\n  tierLimit_lte?: Maybe<Scalars['BigInt']>;\n  tierLimit_not?: Maybe<Scalars['BigInt']>;\n  tierLimit_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokensLockedEternal?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_gt?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_gte?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokensLockedEternal_lt?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_lte?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_not?: Maybe<Scalars['BigInt']>;\n  tokensLockedEternal_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokensLockedLimit?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_gt?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_gte?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokensLockedLimit_lt?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_lte?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_not?: Maybe<Scalars['BigInt']>;\n  tokensLockedLimit_not_in?: Maybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Deposit_OrderBy {\n  L2tokenId = 'L2tokenId',\n  EnteredInEternalFarming = 'enteredInEternalFarming',\n  EternalFarming = 'eternalFarming',\n  Id = 'id',\n  LimitFarming = 'limitFarming',\n  Liquidity = 'liquidity',\n  OnFarmingCenter = 'onFarmingCenter',\n  Owner = 'owner',\n  Pool = 'pool',\n  RangeLength = 'rangeLength',\n  TierEternal = 'tierEternal',\n  TierLimit = 'tierLimit',\n  TokensLockedEternal = 'tokensLockedEternal',\n  TokensLockedLimit = 'tokensLockedLimit'\n}\n\nexport type EternalFarming = {\n  __typename?: 'EternalFarming';\n  bonusReward: Scalars['BigInt'];\n  bonusRewardRate: Scalars['BigInt'];\n  bonusRewardToken: Scalars['Bytes'];\n  endTime: Scalars['BigInt'];\n  id: Scalars['ID'];\n  isDetached?: Maybe<Scalars['Boolean']>;\n  minRangeLength: Scalars['BigInt'];\n  multiplierToken: Scalars['Bytes'];\n  pool: Scalars['Bytes'];\n  reward: Scalars['BigInt'];\n  rewardRate: Scalars['BigInt'];\n  rewardToken: Scalars['Bytes'];\n  startTime: Scalars['BigInt'];\n  tier1Multiplier: Scalars['BigInt'];\n  tier2Multiplier: Scalars['BigInt'];\n  tier3Multiplier: Scalars['BigInt'];\n  tokenAmountForTier1: Scalars['BigInt'];\n  tokenAmountForTier2: Scalars['BigInt'];\n  tokenAmountForTier3: Scalars['BigInt'];\n  virtualPool: Scalars['Bytes'];\n};\n\nexport type EternalFarming_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<EternalFarming_Filter>>>;\n  bonusReward?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_gt?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_gte?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_in?: Maybe<Array<Scalars['BigInt']>>;\n  bonusRewardRate_lt?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_lte?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_not?: Maybe<Scalars['BigInt']>;\n  bonusRewardRate_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  bonusRewardToken?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_contains?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_gt?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_gte?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  bonusRewardToken_lt?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_lte?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not_contains?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  bonusReward_gt?: Maybe<Scalars['BigInt']>;\n  bonusReward_gte?: Maybe<Scalars['BigInt']>;\n  bonusReward_in?: Maybe<Array<Scalars['BigInt']>>;\n  bonusReward_lt?: Maybe<Scalars['BigInt']>;\n  bonusReward_lte?: Maybe<Scalars['BigInt']>;\n  bonusReward_not?: Maybe<Scalars['BigInt']>;\n  bonusReward_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  endTime?: Maybe<Scalars['BigInt']>;\n  endTime_gt?: Maybe<Scalars['BigInt']>;\n  endTime_gte?: Maybe<Scalars['BigInt']>;\n  endTime_in?: Maybe<Array<Scalars['BigInt']>>;\n  endTime_lt?: Maybe<Scalars['BigInt']>;\n  endTime_lte?: Maybe<Scalars['BigInt']>;\n  endTime_not?: Maybe<Scalars['BigInt']>;\n  endTime_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  isDetached?: Maybe<Scalars['Boolean']>;\n  isDetached_in?: Maybe<Array<Scalars['Boolean']>>;\n  isDetached_not?: Maybe<Scalars['Boolean']>;\n  isDetached_not_in?: Maybe<Array<Scalars['Boolean']>>;\n  minRangeLength?: Maybe<Scalars['BigInt']>;\n  minRangeLength_gt?: Maybe<Scalars['BigInt']>;\n  minRangeLength_gte?: Maybe<Scalars['BigInt']>;\n  minRangeLength_in?: Maybe<Array<Scalars['BigInt']>>;\n  minRangeLength_lt?: Maybe<Scalars['BigInt']>;\n  minRangeLength_lte?: Maybe<Scalars['BigInt']>;\n  minRangeLength_not?: Maybe<Scalars['BigInt']>;\n  minRangeLength_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  multiplierToken?: Maybe<Scalars['Bytes']>;\n  multiplierToken_contains?: Maybe<Scalars['Bytes']>;\n  multiplierToken_gt?: Maybe<Scalars['Bytes']>;\n  multiplierToken_gte?: Maybe<Scalars['Bytes']>;\n  multiplierToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  multiplierToken_lt?: Maybe<Scalars['Bytes']>;\n  multiplierToken_lte?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not_contains?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  or?: Maybe<Array<Maybe<EternalFarming_Filter>>>;\n  pool?: Maybe<Scalars['Bytes']>;\n  pool_contains?: Maybe<Scalars['Bytes']>;\n  pool_gt?: Maybe<Scalars['Bytes']>;\n  pool_gte?: Maybe<Scalars['Bytes']>;\n  pool_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool_lt?: Maybe<Scalars['Bytes']>;\n  pool_lte?: Maybe<Scalars['Bytes']>;\n  pool_not?: Maybe<Scalars['Bytes']>;\n  pool_not_contains?: Maybe<Scalars['Bytes']>;\n  pool_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  reward?: Maybe<Scalars['BigInt']>;\n  rewardRate?: Maybe<Scalars['BigInt']>;\n  rewardRate_gt?: Maybe<Scalars['BigInt']>;\n  rewardRate_gte?: Maybe<Scalars['BigInt']>;\n  rewardRate_in?: Maybe<Array<Scalars['BigInt']>>;\n  rewardRate_lt?: Maybe<Scalars['BigInt']>;\n  rewardRate_lte?: Maybe<Scalars['BigInt']>;\n  rewardRate_not?: Maybe<Scalars['BigInt']>;\n  rewardRate_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  rewardToken?: Maybe<Scalars['Bytes']>;\n  rewardToken_contains?: Maybe<Scalars['Bytes']>;\n  rewardToken_gt?: Maybe<Scalars['Bytes']>;\n  rewardToken_gte?: Maybe<Scalars['Bytes']>;\n  rewardToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  rewardToken_lt?: Maybe<Scalars['Bytes']>;\n  rewardToken_lte?: Maybe<Scalars['Bytes']>;\n  rewardToken_not?: Maybe<Scalars['Bytes']>;\n  rewardToken_not_contains?: Maybe<Scalars['Bytes']>;\n  rewardToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  reward_gt?: Maybe<Scalars['BigInt']>;\n  reward_gte?: Maybe<Scalars['BigInt']>;\n  reward_in?: Maybe<Array<Scalars['BigInt']>>;\n  reward_lt?: Maybe<Scalars['BigInt']>;\n  reward_lte?: Maybe<Scalars['BigInt']>;\n  reward_not?: Maybe<Scalars['BigInt']>;\n  reward_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  startTime?: Maybe<Scalars['BigInt']>;\n  startTime_gt?: Maybe<Scalars['BigInt']>;\n  startTime_gte?: Maybe<Scalars['BigInt']>;\n  startTime_in?: Maybe<Array<Scalars['BigInt']>>;\n  startTime_lt?: Maybe<Scalars['BigInt']>;\n  startTime_lte?: Maybe<Scalars['BigInt']>;\n  startTime_not?: Maybe<Scalars['BigInt']>;\n  startTime_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier1Multiplier?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier1Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier2Multiplier?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier2Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier3Multiplier?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier3Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier1?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier1_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier2?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier2_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier3?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier3_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  virtualPool?: Maybe<Scalars['Bytes']>;\n  virtualPool_contains?: Maybe<Scalars['Bytes']>;\n  virtualPool_gt?: Maybe<Scalars['Bytes']>;\n  virtualPool_gte?: Maybe<Scalars['Bytes']>;\n  virtualPool_in?: Maybe<Array<Scalars['Bytes']>>;\n  virtualPool_lt?: Maybe<Scalars['Bytes']>;\n  virtualPool_lte?: Maybe<Scalars['Bytes']>;\n  virtualPool_not?: Maybe<Scalars['Bytes']>;\n  virtualPool_not_contains?: Maybe<Scalars['Bytes']>;\n  virtualPool_not_in?: Maybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum EternalFarming_OrderBy {\n  BonusReward = 'bonusReward',\n  BonusRewardRate = 'bonusRewardRate',\n  BonusRewardToken = 'bonusRewardToken',\n  EndTime = 'endTime',\n  Id = 'id',\n  IsDetached = 'isDetached',\n  MinRangeLength = 'minRangeLength',\n  MultiplierToken = 'multiplierToken',\n  Pool = 'pool',\n  Reward = 'reward',\n  RewardRate = 'rewardRate',\n  RewardToken = 'rewardToken',\n  StartTime = 'startTime',\n  Tier1Multiplier = 'tier1Multiplier',\n  Tier2Multiplier = 'tier2Multiplier',\n  Tier3Multiplier = 'tier3Multiplier',\n  TokenAmountForTier1 = 'tokenAmountForTier1',\n  TokenAmountForTier2 = 'tokenAmountForTier2',\n  TokenAmountForTier3 = 'tokenAmountForTier3',\n  VirtualPool = 'virtualPool'\n}\n\nexport type Factory = {\n  __typename?: 'Factory';\n  id: Scalars['ID'];\n  owner: Scalars['ID'];\n  poolCount: Scalars['BigInt'];\n  totalFeesMatic: Scalars['BigDecimal'];\n  totalFeesUSD: Scalars['BigDecimal'];\n  totalValueLockedMatic: Scalars['BigDecimal'];\n  totalValueLockedMaticUntracked: Scalars['BigDecimal'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  totalValueLockedUSDUntracked: Scalars['BigDecimal'];\n  totalVolumeMatic: Scalars['BigDecimal'];\n  totalVolumeUSD: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n};\n\nexport type Factory_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Factory_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  or?: Maybe<Array<Maybe<Factory_Filter>>>;\n  owner?: Maybe<Scalars['ID']>;\n  owner_gt?: Maybe<Scalars['ID']>;\n  owner_gte?: Maybe<Scalars['ID']>;\n  owner_in?: Maybe<Array<Scalars['ID']>>;\n  owner_lt?: Maybe<Scalars['ID']>;\n  owner_lte?: Maybe<Scalars['ID']>;\n  owner_not?: Maybe<Scalars['ID']>;\n  owner_not_in?: Maybe<Array<Scalars['ID']>>;\n  poolCount?: Maybe<Scalars['BigInt']>;\n  poolCount_gt?: Maybe<Scalars['BigInt']>;\n  poolCount_gte?: Maybe<Scalars['BigInt']>;\n  poolCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  poolCount_lt?: Maybe<Scalars['BigInt']>;\n  poolCount_lte?: Maybe<Scalars['BigInt']>;\n  poolCount_not?: Maybe<Scalars['BigInt']>;\n  poolCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  totalFeesMatic?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalFeesMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_not?: Maybe<Scalars['BigDecimal']>;\n  totalFeesMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalFeesUSD?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalFeesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalFeesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedMatic?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedMaticUntracked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMaticUntracked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSDUntracked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeMatic?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_not?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Factory_OrderBy {\n  Id = 'id',\n  Owner = 'owner',\n  PoolCount = 'poolCount',\n  TotalFeesMatic = 'totalFeesMatic',\n  TotalFeesUsd = 'totalFeesUSD',\n  TotalValueLockedMatic = 'totalValueLockedMatic',\n  TotalValueLockedMaticUntracked = 'totalValueLockedMaticUntracked',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  TotalValueLockedUsdUntracked = 'totalValueLockedUSDUntracked',\n  TotalVolumeMatic = 'totalVolumeMatic',\n  TotalVolumeUsd = 'totalVolumeUSD',\n  TxCount = 'txCount',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD'\n}\n\nexport type FeeHourData = {\n  __typename?: 'FeeHourData';\n  changesCount: Scalars['BigInt'];\n  endFee: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  id: Scalars['ID'];\n  maxFee: Scalars['BigInt'];\n  minFee: Scalars['BigInt'];\n  pool: Scalars['String'];\n  startFee: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n};\n\nexport type FeeHourData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<FeeHourData_Filter>>>;\n  changesCount?: Maybe<Scalars['BigInt']>;\n  changesCount_gt?: Maybe<Scalars['BigInt']>;\n  changesCount_gte?: Maybe<Scalars['BigInt']>;\n  changesCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  changesCount_lt?: Maybe<Scalars['BigInt']>;\n  changesCount_lte?: Maybe<Scalars['BigInt']>;\n  changesCount_not?: Maybe<Scalars['BigInt']>;\n  changesCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  endFee?: Maybe<Scalars['BigInt']>;\n  endFee_gt?: Maybe<Scalars['BigInt']>;\n  endFee_gte?: Maybe<Scalars['BigInt']>;\n  endFee_in?: Maybe<Array<Scalars['BigInt']>>;\n  endFee_lt?: Maybe<Scalars['BigInt']>;\n  endFee_lte?: Maybe<Scalars['BigInt']>;\n  endFee_not?: Maybe<Scalars['BigInt']>;\n  endFee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee?: Maybe<Scalars['BigInt']>;\n  fee_gt?: Maybe<Scalars['BigInt']>;\n  fee_gte?: Maybe<Scalars['BigInt']>;\n  fee_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee_lt?: Maybe<Scalars['BigInt']>;\n  fee_lte?: Maybe<Scalars['BigInt']>;\n  fee_not?: Maybe<Scalars['BigInt']>;\n  fee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  maxFee?: Maybe<Scalars['BigInt']>;\n  maxFee_gt?: Maybe<Scalars['BigInt']>;\n  maxFee_gte?: Maybe<Scalars['BigInt']>;\n  maxFee_in?: Maybe<Array<Scalars['BigInt']>>;\n  maxFee_lt?: Maybe<Scalars['BigInt']>;\n  maxFee_lte?: Maybe<Scalars['BigInt']>;\n  maxFee_not?: Maybe<Scalars['BigInt']>;\n  maxFee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  minFee?: Maybe<Scalars['BigInt']>;\n  minFee_gt?: Maybe<Scalars['BigInt']>;\n  minFee_gte?: Maybe<Scalars['BigInt']>;\n  minFee_in?: Maybe<Array<Scalars['BigInt']>>;\n  minFee_lt?: Maybe<Scalars['BigInt']>;\n  minFee_lte?: Maybe<Scalars['BigInt']>;\n  minFee_not?: Maybe<Scalars['BigInt']>;\n  minFee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<FeeHourData_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  startFee?: Maybe<Scalars['BigInt']>;\n  startFee_gt?: Maybe<Scalars['BigInt']>;\n  startFee_gte?: Maybe<Scalars['BigInt']>;\n  startFee_in?: Maybe<Array<Scalars['BigInt']>>;\n  startFee_lt?: Maybe<Scalars['BigInt']>;\n  startFee_lte?: Maybe<Scalars['BigInt']>;\n  startFee_not?: Maybe<Scalars['BigInt']>;\n  startFee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum FeeHourData_OrderBy {\n  ChangesCount = 'changesCount',\n  EndFee = 'endFee',\n  Fee = 'fee',\n  Id = 'id',\n  MaxFee = 'maxFee',\n  MinFee = 'minFee',\n  Pool = 'pool',\n  StartFee = 'startFee',\n  Timestamp = 'timestamp'\n}\n\nexport type Flash = {\n  __typename?: 'Flash';\n  amount0: Scalars['BigDecimal'];\n  amount0Paid: Scalars['BigDecimal'];\n  amount1: Scalars['BigDecimal'];\n  amount1Paid: Scalars['BigDecimal'];\n  amountUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  logIndex?: Maybe<Scalars['BigInt']>;\n  pool: Pool;\n  recipient: Scalars['Bytes'];\n  sender: Scalars['Bytes'];\n  timestamp: Scalars['BigInt'];\n  transaction: Transaction;\n};\n\nexport type Flash_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount0?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0Paid_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_not?: Maybe<Scalars['BigDecimal']>;\n  amount0Paid_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0_not?: Maybe<Scalars['BigDecimal']>;\n  amount0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1Paid_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_not?: Maybe<Scalars['BigDecimal']>;\n  amount1Paid_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1_not?: Maybe<Scalars['BigDecimal']>;\n  amount1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  and?: Maybe<Array<Maybe<Flash_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  logIndex?: Maybe<Scalars['BigInt']>;\n  logIndex_gt?: Maybe<Scalars['BigInt']>;\n  logIndex_gte?: Maybe<Scalars['BigInt']>;\n  logIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex_lt?: Maybe<Scalars['BigInt']>;\n  logIndex_lte?: Maybe<Scalars['BigInt']>;\n  logIndex_not?: Maybe<Scalars['BigInt']>;\n  logIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Flash_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  recipient?: Maybe<Scalars['Bytes']>;\n  recipient_contains?: Maybe<Scalars['Bytes']>;\n  recipient_gt?: Maybe<Scalars['Bytes']>;\n  recipient_gte?: Maybe<Scalars['Bytes']>;\n  recipient_in?: Maybe<Array<Scalars['Bytes']>>;\n  recipient_lt?: Maybe<Scalars['Bytes']>;\n  recipient_lte?: Maybe<Scalars['Bytes']>;\n  recipient_not?: Maybe<Scalars['Bytes']>;\n  recipient_not_contains?: Maybe<Scalars['Bytes']>;\n  recipient_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  sender?: Maybe<Scalars['Bytes']>;\n  sender_contains?: Maybe<Scalars['Bytes']>;\n  sender_gt?: Maybe<Scalars['Bytes']>;\n  sender_gte?: Maybe<Scalars['Bytes']>;\n  sender_in?: Maybe<Array<Scalars['Bytes']>>;\n  sender_lt?: Maybe<Scalars['Bytes']>;\n  sender_lte?: Maybe<Scalars['Bytes']>;\n  sender_not?: Maybe<Scalars['Bytes']>;\n  sender_not_contains?: Maybe<Scalars['Bytes']>;\n  sender_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum Flash_OrderBy {\n  Amount0 = 'amount0',\n  Amount0Paid = 'amount0Paid',\n  Amount1 = 'amount1',\n  Amount1Paid = 'amount1Paid',\n  AmountUsd = 'amountUSD',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Recipient = 'recipient',\n  Sender = 'sender',\n  Timestamp = 'timestamp',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp'\n}\n\n\nexport type LimitFarming = {\n  __typename?: 'LimitFarming';\n  bonusReward: Scalars['BigInt'];\n  bonusRewardToken: Scalars['Bytes'];\n  createdAtTimestamp: Scalars['BigInt'];\n  endTime: Scalars['BigInt'];\n  enterStartTime: Scalars['BigInt'];\n  id: Scalars['ID'];\n  isDetached?: Maybe<Scalars['Boolean']>;\n  minRangeLength: Scalars['BigInt'];\n  multiplierToken: Scalars['Bytes'];\n  pool: Scalars['Bytes'];\n  reward: Scalars['BigInt'];\n  rewardToken: Scalars['Bytes'];\n  startTime: Scalars['BigInt'];\n  tier1Multiplier: Scalars['BigInt'];\n  tier2Multiplier: Scalars['BigInt'];\n  tier3Multiplier: Scalars['BigInt'];\n  tokenAmountForTier1: Scalars['BigInt'];\n  tokenAmountForTier2: Scalars['BigInt'];\n  tokenAmountForTier3: Scalars['BigInt'];\n};\n\nexport type LimitFarming_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<LimitFarming_Filter>>>;\n  bonusReward?: Maybe<Scalars['BigInt']>;\n  bonusRewardToken?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_contains?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_gt?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_gte?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  bonusRewardToken_lt?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_lte?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not_contains?: Maybe<Scalars['Bytes']>;\n  bonusRewardToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  bonusReward_gt?: Maybe<Scalars['BigInt']>;\n  bonusReward_gte?: Maybe<Scalars['BigInt']>;\n  bonusReward_in?: Maybe<Array<Scalars['BigInt']>>;\n  bonusReward_lt?: Maybe<Scalars['BigInt']>;\n  bonusReward_lte?: Maybe<Scalars['BigInt']>;\n  bonusReward_not?: Maybe<Scalars['BigInt']>;\n  bonusReward_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp_lt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_lte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  endTime?: Maybe<Scalars['BigInt']>;\n  endTime_gt?: Maybe<Scalars['BigInt']>;\n  endTime_gte?: Maybe<Scalars['BigInt']>;\n  endTime_in?: Maybe<Array<Scalars['BigInt']>>;\n  endTime_lt?: Maybe<Scalars['BigInt']>;\n  endTime_lte?: Maybe<Scalars['BigInt']>;\n  endTime_not?: Maybe<Scalars['BigInt']>;\n  endTime_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  enterStartTime?: Maybe<Scalars['BigInt']>;\n  enterStartTime_gt?: Maybe<Scalars['BigInt']>;\n  enterStartTime_gte?: Maybe<Scalars['BigInt']>;\n  enterStartTime_in?: Maybe<Array<Scalars['BigInt']>>;\n  enterStartTime_lt?: Maybe<Scalars['BigInt']>;\n  enterStartTime_lte?: Maybe<Scalars['BigInt']>;\n  enterStartTime_not?: Maybe<Scalars['BigInt']>;\n  enterStartTime_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  isDetached?: Maybe<Scalars['Boolean']>;\n  isDetached_in?: Maybe<Array<Scalars['Boolean']>>;\n  isDetached_not?: Maybe<Scalars['Boolean']>;\n  isDetached_not_in?: Maybe<Array<Scalars['Boolean']>>;\n  minRangeLength?: Maybe<Scalars['BigInt']>;\n  minRangeLength_gt?: Maybe<Scalars['BigInt']>;\n  minRangeLength_gte?: Maybe<Scalars['BigInt']>;\n  minRangeLength_in?: Maybe<Array<Scalars['BigInt']>>;\n  minRangeLength_lt?: Maybe<Scalars['BigInt']>;\n  minRangeLength_lte?: Maybe<Scalars['BigInt']>;\n  minRangeLength_not?: Maybe<Scalars['BigInt']>;\n  minRangeLength_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  multiplierToken?: Maybe<Scalars['Bytes']>;\n  multiplierToken_contains?: Maybe<Scalars['Bytes']>;\n  multiplierToken_gt?: Maybe<Scalars['Bytes']>;\n  multiplierToken_gte?: Maybe<Scalars['Bytes']>;\n  multiplierToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  multiplierToken_lt?: Maybe<Scalars['Bytes']>;\n  multiplierToken_lte?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not_contains?: Maybe<Scalars['Bytes']>;\n  multiplierToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  or?: Maybe<Array<Maybe<LimitFarming_Filter>>>;\n  pool?: Maybe<Scalars['Bytes']>;\n  pool_contains?: Maybe<Scalars['Bytes']>;\n  pool_gt?: Maybe<Scalars['Bytes']>;\n  pool_gte?: Maybe<Scalars['Bytes']>;\n  pool_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool_lt?: Maybe<Scalars['Bytes']>;\n  pool_lte?: Maybe<Scalars['Bytes']>;\n  pool_not?: Maybe<Scalars['Bytes']>;\n  pool_not_contains?: Maybe<Scalars['Bytes']>;\n  pool_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  reward?: Maybe<Scalars['BigInt']>;\n  rewardToken?: Maybe<Scalars['Bytes']>;\n  rewardToken_contains?: Maybe<Scalars['Bytes']>;\n  rewardToken_gt?: Maybe<Scalars['Bytes']>;\n  rewardToken_gte?: Maybe<Scalars['Bytes']>;\n  rewardToken_in?: Maybe<Array<Scalars['Bytes']>>;\n  rewardToken_lt?: Maybe<Scalars['Bytes']>;\n  rewardToken_lte?: Maybe<Scalars['Bytes']>;\n  rewardToken_not?: Maybe<Scalars['Bytes']>;\n  rewardToken_not_contains?: Maybe<Scalars['Bytes']>;\n  rewardToken_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  reward_gt?: Maybe<Scalars['BigInt']>;\n  reward_gte?: Maybe<Scalars['BigInt']>;\n  reward_in?: Maybe<Array<Scalars['BigInt']>>;\n  reward_lt?: Maybe<Scalars['BigInt']>;\n  reward_lte?: Maybe<Scalars['BigInt']>;\n  reward_not?: Maybe<Scalars['BigInt']>;\n  reward_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  startTime?: Maybe<Scalars['BigInt']>;\n  startTime_gt?: Maybe<Scalars['BigInt']>;\n  startTime_gte?: Maybe<Scalars['BigInt']>;\n  startTime_in?: Maybe<Array<Scalars['BigInt']>>;\n  startTime_lt?: Maybe<Scalars['BigInt']>;\n  startTime_lte?: Maybe<Scalars['BigInt']>;\n  startTime_not?: Maybe<Scalars['BigInt']>;\n  startTime_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier1Multiplier?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier1Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier1Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier2Multiplier?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier2Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier2Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier3Multiplier?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_gt?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_gte?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_in?: Maybe<Array<Scalars['BigInt']>>;\n  tier3Multiplier_lt?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_lte?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_not?: Maybe<Scalars['BigInt']>;\n  tier3Multiplier_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier1?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier1_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier1_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier2?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier2_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier2_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier3?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_gt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_gte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_in?: Maybe<Array<Scalars['BigInt']>>;\n  tokenAmountForTier3_lt?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_lte?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_not?: Maybe<Scalars['BigInt']>;\n  tokenAmountForTier3_not_in?: Maybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum LimitFarming_OrderBy {\n  BonusReward = 'bonusReward',\n  BonusRewardToken = 'bonusRewardToken',\n  CreatedAtTimestamp = 'createdAtTimestamp',\n  EndTime = 'endTime',\n  EnterStartTime = 'enterStartTime',\n  Id = 'id',\n  IsDetached = 'isDetached',\n  MinRangeLength = 'minRangeLength',\n  MultiplierToken = 'multiplierToken',\n  Pool = 'pool',\n  Reward = 'reward',\n  RewardToken = 'rewardToken',\n  StartTime = 'startTime',\n  Tier1Multiplier = 'tier1Multiplier',\n  Tier2Multiplier = 'tier2Multiplier',\n  Tier3Multiplier = 'tier3Multiplier',\n  TokenAmountForTier1 = 'tokenAmountForTier1',\n  TokenAmountForTier2 = 'tokenAmountForTier2',\n  TokenAmountForTier3 = 'tokenAmountForTier3'\n}\n\nexport type Mint = {\n  __typename?: 'Mint';\n  amount: Scalars['BigInt'];\n  amount0: Scalars['BigDecimal'];\n  amount1: Scalars['BigDecimal'];\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  id: Scalars['ID'];\n  logIndex?: Maybe<Scalars['BigInt']>;\n  origin: Scalars['Bytes'];\n  owner: Scalars['Bytes'];\n  pool: Pool;\n  sender?: Maybe<Scalars['Bytes']>;\n  tickLower: Scalars['BigInt'];\n  tickUpper: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  token0: Token;\n  token1: Token;\n  transaction: Transaction;\n};\n\nexport type Mint_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount?: Maybe<Scalars['BigInt']>;\n  amount0?: Maybe<Scalars['BigDecimal']>;\n  amount0_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0_not?: Maybe<Scalars['BigDecimal']>;\n  amount0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1?: Maybe<Scalars['BigDecimal']>;\n  amount1_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1_not?: Maybe<Scalars['BigDecimal']>;\n  amount1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount_gt?: Maybe<Scalars['BigInt']>;\n  amount_gte?: Maybe<Scalars['BigInt']>;\n  amount_in?: Maybe<Array<Scalars['BigInt']>>;\n  amount_lt?: Maybe<Scalars['BigInt']>;\n  amount_lte?: Maybe<Scalars['BigInt']>;\n  amount_not?: Maybe<Scalars['BigInt']>;\n  amount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  and?: Maybe<Array<Maybe<Mint_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  logIndex?: Maybe<Scalars['BigInt']>;\n  logIndex_gt?: Maybe<Scalars['BigInt']>;\n  logIndex_gte?: Maybe<Scalars['BigInt']>;\n  logIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex_lt?: Maybe<Scalars['BigInt']>;\n  logIndex_lte?: Maybe<Scalars['BigInt']>;\n  logIndex_not?: Maybe<Scalars['BigInt']>;\n  logIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Mint_Filter>>>;\n  origin?: Maybe<Scalars['Bytes']>;\n  origin_contains?: Maybe<Scalars['Bytes']>;\n  origin_gt?: Maybe<Scalars['Bytes']>;\n  origin_gte?: Maybe<Scalars['Bytes']>;\n  origin_in?: Maybe<Array<Scalars['Bytes']>>;\n  origin_lt?: Maybe<Scalars['Bytes']>;\n  origin_lte?: Maybe<Scalars['Bytes']>;\n  origin_not?: Maybe<Scalars['Bytes']>;\n  origin_not_contains?: Maybe<Scalars['Bytes']>;\n  origin_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  sender?: Maybe<Scalars['Bytes']>;\n  sender_contains?: Maybe<Scalars['Bytes']>;\n  sender_gt?: Maybe<Scalars['Bytes']>;\n  sender_gte?: Maybe<Scalars['Bytes']>;\n  sender_in?: Maybe<Array<Scalars['Bytes']>>;\n  sender_lt?: Maybe<Scalars['Bytes']>;\n  sender_lte?: Maybe<Scalars['Bytes']>;\n  sender_not?: Maybe<Scalars['Bytes']>;\n  sender_not_contains?: Maybe<Scalars['Bytes']>;\n  sender_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  tickLower?: Maybe<Scalars['BigInt']>;\n  tickLower_gt?: Maybe<Scalars['BigInt']>;\n  tickLower_gte?: Maybe<Scalars['BigInt']>;\n  tickLower_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickLower_lt?: Maybe<Scalars['BigInt']>;\n  tickLower_lte?: Maybe<Scalars['BigInt']>;\n  tickLower_not?: Maybe<Scalars['BigInt']>;\n  tickLower_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper?: Maybe<Scalars['BigInt']>;\n  tickUpper_gt?: Maybe<Scalars['BigInt']>;\n  tickUpper_gte?: Maybe<Scalars['BigInt']>;\n  tickUpper_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickUpper_lt?: Maybe<Scalars['BigInt']>;\n  tickUpper_lte?: Maybe<Scalars['BigInt']>;\n  tickUpper_not?: Maybe<Scalars['BigInt']>;\n  tickUpper_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  token0?: Maybe<Scalars['String']>;\n  token0_?: Maybe<Token_Filter>;\n  token0_contains?: Maybe<Scalars['String']>;\n  token0_contains_nocase?: Maybe<Scalars['String']>;\n  token0_ends_with?: Maybe<Scalars['String']>;\n  token0_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_gt?: Maybe<Scalars['String']>;\n  token0_gte?: Maybe<Scalars['String']>;\n  token0_in?: Maybe<Array<Scalars['String']>>;\n  token0_lt?: Maybe<Scalars['String']>;\n  token0_lte?: Maybe<Scalars['String']>;\n  token0_not?: Maybe<Scalars['String']>;\n  token0_not_contains?: Maybe<Scalars['String']>;\n  token0_not_contains_nocase?: Maybe<Scalars['String']>;\n  token0_not_ends_with?: Maybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_not_in?: Maybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: Maybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0_starts_with?: Maybe<Scalars['String']>;\n  token0_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1?: Maybe<Scalars['String']>;\n  token1_?: Maybe<Token_Filter>;\n  token1_contains?: Maybe<Scalars['String']>;\n  token1_contains_nocase?: Maybe<Scalars['String']>;\n  token1_ends_with?: Maybe<Scalars['String']>;\n  token1_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_gt?: Maybe<Scalars['String']>;\n  token1_gte?: Maybe<Scalars['String']>;\n  token1_in?: Maybe<Array<Scalars['String']>>;\n  token1_lt?: Maybe<Scalars['String']>;\n  token1_lte?: Maybe<Scalars['String']>;\n  token1_not?: Maybe<Scalars['String']>;\n  token1_not_contains?: Maybe<Scalars['String']>;\n  token1_not_contains_nocase?: Maybe<Scalars['String']>;\n  token1_not_ends_with?: Maybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_not_in?: Maybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: Maybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1_starts_with?: Maybe<Scalars['String']>;\n  token1_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum Mint_OrderBy {\n  Amount = 'amount',\n  Amount0 = 'amount0',\n  Amount1 = 'amount1',\n  AmountUsd = 'amountUSD',\n  Id = 'id',\n  LogIndex = 'logIndex',\n  Origin = 'origin',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Sender = 'sender',\n  TickLower = 'tickLower',\n  TickUpper = 'tickUpper',\n  Timestamp = 'timestamp',\n  Token0 = 'token0',\n  Token0Decimals = 'token0__decimals',\n  Token0DerivedMatic = 'token0__derivedMatic',\n  Token0FeesUsd = 'token0__feesUSD',\n  Token0Id = 'token0__id',\n  Token0Name = 'token0__name',\n  Token0PoolCount = 'token0__poolCount',\n  Token0Symbol = 'token0__symbol',\n  Token0TotalSupply = 'token0__totalSupply',\n  Token0TotalValueLocked = 'token0__totalValueLocked',\n  Token0TotalValueLockedUsd = 'token0__totalValueLockedUSD',\n  Token0TotalValueLockedUsdUntracked = 'token0__totalValueLockedUSDUntracked',\n  Token0TxCount = 'token0__txCount',\n  Token0UntrackedVolumeUsd = 'token0__untrackedVolumeUSD',\n  Token0Volume = 'token0__volume',\n  Token0VolumeUsd = 'token0__volumeUSD',\n  Token1 = 'token1',\n  Token1Decimals = 'token1__decimals',\n  Token1DerivedMatic = 'token1__derivedMatic',\n  Token1FeesUsd = 'token1__feesUSD',\n  Token1Id = 'token1__id',\n  Token1Name = 'token1__name',\n  Token1PoolCount = 'token1__poolCount',\n  Token1Symbol = 'token1__symbol',\n  Token1TotalSupply = 'token1__totalSupply',\n  Token1TotalValueLocked = 'token1__totalValueLocked',\n  Token1TotalValueLockedUsd = 'token1__totalValueLockedUSD',\n  Token1TotalValueLockedUsdUntracked = 'token1__totalValueLockedUSDUntracked',\n  Token1TxCount = 'token1__txCount',\n  Token1UntrackedVolumeUsd = 'token1__untrackedVolumeUSD',\n  Token1Volume = 'token1__volume',\n  Token1VolumeUsd = 'token1__volumeUSD',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp'\n}\n\n/** Defines the order direction, either ascending or descending */\nexport enum OrderDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type Pool = {\n  __typename?: 'Pool';\n  burns: Array<Burn>;\n  collectedFeesToken0: Scalars['BigDecimal'];\n  collectedFeesToken1: Scalars['BigDecimal'];\n  collectedFeesUSD: Scalars['BigDecimal'];\n  collects: Array<Collect>;\n  communityFee0: Scalars['BigInt'];\n  communityFee1: Scalars['BigInt'];\n  createdAtBlockNumber: Scalars['BigInt'];\n  createdAtTimestamp: Scalars['BigInt'];\n  fee: Scalars['BigInt'];\n  feeGrowthGlobal0X128: Scalars['BigInt'];\n  feeGrowthGlobal1X128: Scalars['BigInt'];\n  feesToken0: Scalars['BigDecimal'];\n  feesToken1: Scalars['BigDecimal'];\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  liquidityProviderCount: Scalars['BigInt'];\n  mints: Array<Mint>;\n  observationIndex: Scalars['BigInt'];\n  poolDayData: Array<PoolDayData>;\n  poolHourData: Array<PoolHourData>;\n  sqrtPrice: Scalars['BigInt'];\n  swaps: Array<Swap>;\n  tick: Scalars['BigInt'];\n  ticks: Array<Tick>;\n  token0: Token;\n  token0Price: Scalars['BigDecimal'];\n  token1: Token;\n  token1Price: Scalars['BigDecimal'];\n  totalValueLockedMatic: Scalars['BigDecimal'];\n  totalValueLockedToken0: Scalars['BigDecimal'];\n  totalValueLockedToken1: Scalars['BigDecimal'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  totalValueLockedUSDUntracked: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  untrackedFeesUSD: Scalars['BigDecimal'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\n\nexport type PoolBurnsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Burn_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Burn_Filter>;\n};\n\n\nexport type PoolCollectsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Collect_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Collect_Filter>;\n};\n\n\nexport type PoolMintsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Mint_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Mint_Filter>;\n};\n\n\nexport type PoolPoolDayDataArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<PoolDayData_Filter>;\n};\n\n\nexport type PoolPoolHourDataArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<PoolHourData_Filter>;\n};\n\n\nexport type PoolSwapsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Swap_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Swap_Filter>;\n};\n\n\nexport type PoolTicksArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Tick_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Tick_Filter>;\n};\n\nexport type PoolDayData = {\n  __typename?: 'PoolDayData';\n  close: Scalars['BigDecimal'];\n  date: Scalars['Int'];\n  feeGrowthGlobal0X128: Scalars['BigInt'];\n  feeGrowthGlobal1X128: Scalars['BigInt'];\n  feesToken0: Scalars['BigDecimal'];\n  feesToken1: Scalars['BigDecimal'];\n  feesUSD: Scalars['BigDecimal'];\n  high: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  low: Scalars['BigDecimal'];\n  open: Scalars['BigDecimal'];\n  pool: Pool;\n  sqrtPrice: Scalars['BigInt'];\n  tick?: Maybe<Scalars['BigInt']>;\n  token0Price: Scalars['BigDecimal'];\n  token1Price: Scalars['BigDecimal'];\n  tvlUSD: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type PoolDayData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<PoolDayData_Filter>>>;\n  close?: Maybe<Scalars['BigDecimal']>;\n  close_gt?: Maybe<Scalars['BigDecimal']>;\n  close_gte?: Maybe<Scalars['BigDecimal']>;\n  close_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  close_lt?: Maybe<Scalars['BigDecimal']>;\n  close_lte?: Maybe<Scalars['BigDecimal']>;\n  close_not?: Maybe<Scalars['BigDecimal']>;\n  close_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  date?: Maybe<Scalars['Int']>;\n  date_gt?: Maybe<Scalars['Int']>;\n  date_gte?: Maybe<Scalars['Int']>;\n  date_in?: Maybe<Array<Scalars['Int']>>;\n  date_lt?: Maybe<Scalars['Int']>;\n  date_lte?: Maybe<Scalars['Int']>;\n  date_not?: Maybe<Scalars['Int']>;\n  date_not_in?: Maybe<Array<Scalars['Int']>>;\n  feeGrowthGlobal0X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal0X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feesToken0?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken1?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high?: Maybe<Scalars['BigDecimal']>;\n  high_gt?: Maybe<Scalars['BigDecimal']>;\n  high_gte?: Maybe<Scalars['BigDecimal']>;\n  high_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high_lt?: Maybe<Scalars['BigDecimal']>;\n  high_lte?: Maybe<Scalars['BigDecimal']>;\n  high_not?: Maybe<Scalars['BigDecimal']>;\n  high_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  low?: Maybe<Scalars['BigDecimal']>;\n  low_gt?: Maybe<Scalars['BigDecimal']>;\n  low_gte?: Maybe<Scalars['BigDecimal']>;\n  low_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  low_lt?: Maybe<Scalars['BigDecimal']>;\n  low_lte?: Maybe<Scalars['BigDecimal']>;\n  low_not?: Maybe<Scalars['BigDecimal']>;\n  low_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open?: Maybe<Scalars['BigDecimal']>;\n  open_gt?: Maybe<Scalars['BigDecimal']>;\n  open_gte?: Maybe<Scalars['BigDecimal']>;\n  open_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open_lt?: Maybe<Scalars['BigDecimal']>;\n  open_lte?: Maybe<Scalars['BigDecimal']>;\n  open_not?: Maybe<Scalars['BigDecimal']>;\n  open_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  or?: Maybe<Array<Maybe<PoolDayData_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  sqrtPrice?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_in?: Maybe<Array<Scalars['BigInt']>>;\n  sqrtPrice_lt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_lte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick?: Maybe<Scalars['BigInt']>;\n  tick_gt?: Maybe<Scalars['BigInt']>;\n  tick_gte?: Maybe<Scalars['BigInt']>;\n  tick_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick_lt?: Maybe<Scalars['BigInt']>;\n  tick_lte?: Maybe<Scalars['BigInt']>;\n  tick_not?: Maybe<Scalars['BigInt']>;\n  tick_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  token0Price?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Price?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tvlUSD?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tvlUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum PoolDayData_OrderBy {\n  Close = 'close',\n  Date = 'date',\n  FeeGrowthGlobal0X128 = 'feeGrowthGlobal0X128',\n  FeeGrowthGlobal1X128 = 'feeGrowthGlobal1X128',\n  FeesToken0 = 'feesToken0',\n  FeesToken1 = 'feesToken1',\n  FeesUsd = 'feesUSD',\n  High = 'high',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  Low = 'low',\n  Open = 'open',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  SqrtPrice = 'sqrtPrice',\n  Tick = 'tick',\n  Token0Price = 'token0Price',\n  Token1Price = 'token1Price',\n  TvlUsd = 'tvlUSD',\n  TxCount = 'txCount',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type PoolFeeData = {\n  __typename?: 'PoolFeeData';\n  fee: Scalars['BigInt'];\n  id: Scalars['ID'];\n  pool?: Maybe<Scalars['String']>;\n  timestamp: Scalars['BigInt'];\n};\n\nexport type PoolFeeData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<PoolFeeData_Filter>>>;\n  fee?: Maybe<Scalars['BigInt']>;\n  fee_gt?: Maybe<Scalars['BigInt']>;\n  fee_gte?: Maybe<Scalars['BigInt']>;\n  fee_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee_lt?: Maybe<Scalars['BigInt']>;\n  fee_lte?: Maybe<Scalars['BigInt']>;\n  fee_not?: Maybe<Scalars['BigInt']>;\n  fee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  or?: Maybe<Array<Maybe<PoolFeeData_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum PoolFeeData_OrderBy {\n  Fee = 'fee',\n  Id = 'id',\n  Pool = 'pool',\n  Timestamp = 'timestamp'\n}\n\nexport type PoolHourData = {\n  __typename?: 'PoolHourData';\n  close: Scalars['BigDecimal'];\n  feeGrowthGlobal0X128: Scalars['BigInt'];\n  feeGrowthGlobal1X128: Scalars['BigInt'];\n  feesUSD: Scalars['BigDecimal'];\n  high: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  low: Scalars['BigDecimal'];\n  open: Scalars['BigDecimal'];\n  periodStartUnix: Scalars['Int'];\n  pool: Pool;\n  sqrtPrice: Scalars['BigInt'];\n  tick?: Maybe<Scalars['BigInt']>;\n  token0Price: Scalars['BigDecimal'];\n  token1Price: Scalars['BigDecimal'];\n  tvlUSD: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type PoolHourData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<PoolHourData_Filter>>>;\n  close?: Maybe<Scalars['BigDecimal']>;\n  close_gt?: Maybe<Scalars['BigDecimal']>;\n  close_gte?: Maybe<Scalars['BigDecimal']>;\n  close_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  close_lt?: Maybe<Scalars['BigDecimal']>;\n  close_lte?: Maybe<Scalars['BigDecimal']>;\n  close_not?: Maybe<Scalars['BigDecimal']>;\n  close_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feeGrowthGlobal0X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal0X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high?: Maybe<Scalars['BigDecimal']>;\n  high_gt?: Maybe<Scalars['BigDecimal']>;\n  high_gte?: Maybe<Scalars['BigDecimal']>;\n  high_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high_lt?: Maybe<Scalars['BigDecimal']>;\n  high_lte?: Maybe<Scalars['BigDecimal']>;\n  high_not?: Maybe<Scalars['BigDecimal']>;\n  high_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  low?: Maybe<Scalars['BigDecimal']>;\n  low_gt?: Maybe<Scalars['BigDecimal']>;\n  low_gte?: Maybe<Scalars['BigDecimal']>;\n  low_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  low_lt?: Maybe<Scalars['BigDecimal']>;\n  low_lte?: Maybe<Scalars['BigDecimal']>;\n  low_not?: Maybe<Scalars['BigDecimal']>;\n  low_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open?: Maybe<Scalars['BigDecimal']>;\n  open_gt?: Maybe<Scalars['BigDecimal']>;\n  open_gte?: Maybe<Scalars['BigDecimal']>;\n  open_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open_lt?: Maybe<Scalars['BigDecimal']>;\n  open_lte?: Maybe<Scalars['BigDecimal']>;\n  open_not?: Maybe<Scalars['BigDecimal']>;\n  open_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  or?: Maybe<Array<Maybe<PoolHourData_Filter>>>;\n  periodStartUnix?: Maybe<Scalars['Int']>;\n  periodStartUnix_gt?: Maybe<Scalars['Int']>;\n  periodStartUnix_gte?: Maybe<Scalars['Int']>;\n  periodStartUnix_in?: Maybe<Array<Scalars['Int']>>;\n  periodStartUnix_lt?: Maybe<Scalars['Int']>;\n  periodStartUnix_lte?: Maybe<Scalars['Int']>;\n  periodStartUnix_not?: Maybe<Scalars['Int']>;\n  periodStartUnix_not_in?: Maybe<Array<Scalars['Int']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  sqrtPrice?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_in?: Maybe<Array<Scalars['BigInt']>>;\n  sqrtPrice_lt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_lte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick?: Maybe<Scalars['BigInt']>;\n  tick_gt?: Maybe<Scalars['BigInt']>;\n  tick_gte?: Maybe<Scalars['BigInt']>;\n  tick_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick_lt?: Maybe<Scalars['BigInt']>;\n  tick_lte?: Maybe<Scalars['BigInt']>;\n  tick_not?: Maybe<Scalars['BigInt']>;\n  tick_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  token0Price?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Price?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tvlUSD?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tvlUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not?: Maybe<Scalars['BigDecimal']>;\n  tvlUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum PoolHourData_OrderBy {\n  Close = 'close',\n  FeeGrowthGlobal0X128 = 'feeGrowthGlobal0X128',\n  FeeGrowthGlobal1X128 = 'feeGrowthGlobal1X128',\n  FeesUsd = 'feesUSD',\n  High = 'high',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  Low = 'low',\n  Open = 'open',\n  PeriodStartUnix = 'periodStartUnix',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  SqrtPrice = 'sqrtPrice',\n  Tick = 'tick',\n  Token0Price = 'token0Price',\n  Token1Price = 'token1Price',\n  TvlUsd = 'tvlUSD',\n  TxCount = 'txCount',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type PoolPosition = {\n  __typename?: 'PoolPosition';\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  lowerTick: Tick;\n  owner: Scalars['Bytes'];\n  pool: Pool;\n  upperTick: Tick;\n};\n\nexport type PoolPosition_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<PoolPosition_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  lowerTick?: Maybe<Scalars['String']>;\n  lowerTick_?: Maybe<Tick_Filter>;\n  lowerTick_contains?: Maybe<Scalars['String']>;\n  lowerTick_contains_nocase?: Maybe<Scalars['String']>;\n  lowerTick_ends_with?: Maybe<Scalars['String']>;\n  lowerTick_ends_with_nocase?: Maybe<Scalars['String']>;\n  lowerTick_gt?: Maybe<Scalars['String']>;\n  lowerTick_gte?: Maybe<Scalars['String']>;\n  lowerTick_in?: Maybe<Array<Scalars['String']>>;\n  lowerTick_lt?: Maybe<Scalars['String']>;\n  lowerTick_lte?: Maybe<Scalars['String']>;\n  lowerTick_not?: Maybe<Scalars['String']>;\n  lowerTick_not_contains?: Maybe<Scalars['String']>;\n  lowerTick_not_contains_nocase?: Maybe<Scalars['String']>;\n  lowerTick_not_ends_with?: Maybe<Scalars['String']>;\n  lowerTick_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  lowerTick_not_in?: Maybe<Array<Scalars['String']>>;\n  lowerTick_not_starts_with?: Maybe<Scalars['String']>;\n  lowerTick_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  lowerTick_starts_with?: Maybe<Scalars['String']>;\n  lowerTick_starts_with_nocase?: Maybe<Scalars['String']>;\n  or?: Maybe<Array<Maybe<PoolPosition_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  upperTick?: Maybe<Scalars['String']>;\n  upperTick_?: Maybe<Tick_Filter>;\n  upperTick_contains?: Maybe<Scalars['String']>;\n  upperTick_contains_nocase?: Maybe<Scalars['String']>;\n  upperTick_ends_with?: Maybe<Scalars['String']>;\n  upperTick_ends_with_nocase?: Maybe<Scalars['String']>;\n  upperTick_gt?: Maybe<Scalars['String']>;\n  upperTick_gte?: Maybe<Scalars['String']>;\n  upperTick_in?: Maybe<Array<Scalars['String']>>;\n  upperTick_lt?: Maybe<Scalars['String']>;\n  upperTick_lte?: Maybe<Scalars['String']>;\n  upperTick_not?: Maybe<Scalars['String']>;\n  upperTick_not_contains?: Maybe<Scalars['String']>;\n  upperTick_not_contains_nocase?: Maybe<Scalars['String']>;\n  upperTick_not_ends_with?: Maybe<Scalars['String']>;\n  upperTick_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  upperTick_not_in?: Maybe<Array<Scalars['String']>>;\n  upperTick_not_starts_with?: Maybe<Scalars['String']>;\n  upperTick_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  upperTick_starts_with?: Maybe<Scalars['String']>;\n  upperTick_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum PoolPosition_OrderBy {\n  Id = 'id',\n  Liquidity = 'liquidity',\n  LowerTick = 'lowerTick',\n  LowerTickCollectedFeesToken0 = 'lowerTick__collectedFeesToken0',\n  LowerTickCollectedFeesToken1 = 'lowerTick__collectedFeesToken1',\n  LowerTickCollectedFeesUsd = 'lowerTick__collectedFeesUSD',\n  LowerTickCreatedAtBlockNumber = 'lowerTick__createdAtBlockNumber',\n  LowerTickCreatedAtTimestamp = 'lowerTick__createdAtTimestamp',\n  LowerTickFeeGrowthOutside0X128 = 'lowerTick__feeGrowthOutside0X128',\n  LowerTickFeeGrowthOutside1X128 = 'lowerTick__feeGrowthOutside1X128',\n  LowerTickFeesUsd = 'lowerTick__feesUSD',\n  LowerTickId = 'lowerTick__id',\n  LowerTickLiquidityGross = 'lowerTick__liquidityGross',\n  LowerTickLiquidityNet = 'lowerTick__liquidityNet',\n  LowerTickLiquidityProviderCount = 'lowerTick__liquidityProviderCount',\n  LowerTickPoolAddress = 'lowerTick__poolAddress',\n  LowerTickPrice0 = 'lowerTick__price0',\n  LowerTickPrice1 = 'lowerTick__price1',\n  LowerTickTickIdx = 'lowerTick__tickIdx',\n  LowerTickUntrackedVolumeUsd = 'lowerTick__untrackedVolumeUSD',\n  LowerTickVolumeToken0 = 'lowerTick__volumeToken0',\n  LowerTickVolumeToken1 = 'lowerTick__volumeToken1',\n  LowerTickVolumeUsd = 'lowerTick__volumeUSD',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  UpperTick = 'upperTick',\n  UpperTickCollectedFeesToken0 = 'upperTick__collectedFeesToken0',\n  UpperTickCollectedFeesToken1 = 'upperTick__collectedFeesToken1',\n  UpperTickCollectedFeesUsd = 'upperTick__collectedFeesUSD',\n  UpperTickCreatedAtBlockNumber = 'upperTick__createdAtBlockNumber',\n  UpperTickCreatedAtTimestamp = 'upperTick__createdAtTimestamp',\n  UpperTickFeeGrowthOutside0X128 = 'upperTick__feeGrowthOutside0X128',\n  UpperTickFeeGrowthOutside1X128 = 'upperTick__feeGrowthOutside1X128',\n  UpperTickFeesUsd = 'upperTick__feesUSD',\n  UpperTickId = 'upperTick__id',\n  UpperTickLiquidityGross = 'upperTick__liquidityGross',\n  UpperTickLiquidityNet = 'upperTick__liquidityNet',\n  UpperTickLiquidityProviderCount = 'upperTick__liquidityProviderCount',\n  UpperTickPoolAddress = 'upperTick__poolAddress',\n  UpperTickPrice0 = 'upperTick__price0',\n  UpperTickPrice1 = 'upperTick__price1',\n  UpperTickTickIdx = 'upperTick__tickIdx',\n  UpperTickUntrackedVolumeUsd = 'upperTick__untrackedVolumeUSD',\n  UpperTickVolumeToken0 = 'upperTick__volumeToken0',\n  UpperTickVolumeToken1 = 'upperTick__volumeToken1',\n  UpperTickVolumeUsd = 'upperTick__volumeUSD'\n}\n\nexport type Pool_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Pool_Filter>>>;\n  burns_?: Maybe<Burn_Filter>;\n  collectedFeesToken0?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesUSD?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collects_?: Maybe<Collect_Filter>;\n  communityFee0?: Maybe<Scalars['BigInt']>;\n  communityFee0_gt?: Maybe<Scalars['BigInt']>;\n  communityFee0_gte?: Maybe<Scalars['BigInt']>;\n  communityFee0_in?: Maybe<Array<Scalars['BigInt']>>;\n  communityFee0_lt?: Maybe<Scalars['BigInt']>;\n  communityFee0_lte?: Maybe<Scalars['BigInt']>;\n  communityFee0_not?: Maybe<Scalars['BigInt']>;\n  communityFee0_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  communityFee1?: Maybe<Scalars['BigInt']>;\n  communityFee1_gt?: Maybe<Scalars['BigInt']>;\n  communityFee1_gte?: Maybe<Scalars['BigInt']>;\n  communityFee1_in?: Maybe<Array<Scalars['BigInt']>>;\n  communityFee1_lt?: Maybe<Scalars['BigInt']>;\n  communityFee1_lte?: Maybe<Scalars['BigInt']>;\n  communityFee1_not?: Maybe<Scalars['BigInt']>;\n  communityFee1_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtBlockNumber?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_gt?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_gte?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtBlockNumber_lt?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_lte?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_not?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp_lt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_lte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal0X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal0X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthGlobal1X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthGlobal1X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee_gt?: Maybe<Scalars['BigInt']>;\n  fee_gte?: Maybe<Scalars['BigInt']>;\n  fee_in?: Maybe<Array<Scalars['BigInt']>>;\n  fee_lt?: Maybe<Scalars['BigInt']>;\n  fee_lte?: Maybe<Scalars['BigInt']>;\n  fee_not?: Maybe<Scalars['BigInt']>;\n  fee_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feesToken0?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  feesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken1?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  feesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_gt?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_gte?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityProviderCount_lt?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_lte?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_not?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  mints_?: Maybe<Mint_Filter>;\n  observationIndex?: Maybe<Scalars['BigInt']>;\n  observationIndex_gt?: Maybe<Scalars['BigInt']>;\n  observationIndex_gte?: Maybe<Scalars['BigInt']>;\n  observationIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  observationIndex_lt?: Maybe<Scalars['BigInt']>;\n  observationIndex_lte?: Maybe<Scalars['BigInt']>;\n  observationIndex_not?: Maybe<Scalars['BigInt']>;\n  observationIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Pool_Filter>>>;\n  poolDayData_?: Maybe<PoolDayData_Filter>;\n  poolHourData_?: Maybe<PoolHourData_Filter>;\n  sqrtPrice?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_gte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_in?: Maybe<Array<Scalars['BigInt']>>;\n  sqrtPrice_lt?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_lte?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not?: Maybe<Scalars['BigInt']>;\n  sqrtPrice_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  swaps_?: Maybe<Swap_Filter>;\n  tick?: Maybe<Scalars['BigInt']>;\n  tick_gt?: Maybe<Scalars['BigInt']>;\n  tick_gte?: Maybe<Scalars['BigInt']>;\n  tick_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick_lt?: Maybe<Scalars['BigInt']>;\n  tick_lte?: Maybe<Scalars['BigInt']>;\n  tick_not?: Maybe<Scalars['BigInt']>;\n  tick_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  ticks_?: Maybe<Tick_Filter>;\n  token0?: Maybe<Scalars['String']>;\n  token0Price?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token0Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not?: Maybe<Scalars['BigDecimal']>;\n  token0Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0_?: Maybe<Token_Filter>;\n  token0_contains?: Maybe<Scalars['String']>;\n  token0_contains_nocase?: Maybe<Scalars['String']>;\n  token0_ends_with?: Maybe<Scalars['String']>;\n  token0_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_gt?: Maybe<Scalars['String']>;\n  token0_gte?: Maybe<Scalars['String']>;\n  token0_in?: Maybe<Array<Scalars['String']>>;\n  token0_lt?: Maybe<Scalars['String']>;\n  token0_lte?: Maybe<Scalars['String']>;\n  token0_not?: Maybe<Scalars['String']>;\n  token0_not_contains?: Maybe<Scalars['String']>;\n  token0_not_contains_nocase?: Maybe<Scalars['String']>;\n  token0_not_ends_with?: Maybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_not_in?: Maybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: Maybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0_starts_with?: Maybe<Scalars['String']>;\n  token0_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1?: Maybe<Scalars['String']>;\n  token1Price?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_gte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Price_lt?: Maybe<Scalars['BigDecimal']>;\n  token1Price_lte?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not?: Maybe<Scalars['BigDecimal']>;\n  token1Price_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1_?: Maybe<Token_Filter>;\n  token1_contains?: Maybe<Scalars['String']>;\n  token1_contains_nocase?: Maybe<Scalars['String']>;\n  token1_ends_with?: Maybe<Scalars['String']>;\n  token1_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_gt?: Maybe<Scalars['String']>;\n  token1_gte?: Maybe<Scalars['String']>;\n  token1_in?: Maybe<Array<Scalars['String']>>;\n  token1_lt?: Maybe<Scalars['String']>;\n  token1_lte?: Maybe<Scalars['String']>;\n  token1_not?: Maybe<Scalars['String']>;\n  token1_not_contains?: Maybe<Scalars['String']>;\n  token1_not_contains_nocase?: Maybe<Scalars['String']>;\n  token1_not_ends_with?: Maybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_not_in?: Maybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: Maybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1_starts_with?: Maybe<Scalars['String']>;\n  token1_starts_with_nocase?: Maybe<Scalars['String']>;\n  totalValueLockedMatic?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedToken0?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedToken1?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSDUntracked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedFeesUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedFeesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedFeesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Pool_OrderBy {\n  Burns = 'burns',\n  CollectedFeesToken0 = 'collectedFeesToken0',\n  CollectedFeesToken1 = 'collectedFeesToken1',\n  CollectedFeesUsd = 'collectedFeesUSD',\n  Collects = 'collects',\n  CommunityFee0 = 'communityFee0',\n  CommunityFee1 = 'communityFee1',\n  CreatedAtBlockNumber = 'createdAtBlockNumber',\n  CreatedAtTimestamp = 'createdAtTimestamp',\n  Fee = 'fee',\n  FeeGrowthGlobal0X128 = 'feeGrowthGlobal0X128',\n  FeeGrowthGlobal1X128 = 'feeGrowthGlobal1X128',\n  FeesToken0 = 'feesToken0',\n  FeesToken1 = 'feesToken1',\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  LiquidityProviderCount = 'liquidityProviderCount',\n  Mints = 'mints',\n  ObservationIndex = 'observationIndex',\n  PoolDayData = 'poolDayData',\n  PoolHourData = 'poolHourData',\n  SqrtPrice = 'sqrtPrice',\n  Swaps = 'swaps',\n  Tick = 'tick',\n  Ticks = 'ticks',\n  Token0 = 'token0',\n  Token0Price = 'token0Price',\n  Token0Decimals = 'token0__decimals',\n  Token0DerivedMatic = 'token0__derivedMatic',\n  Token0FeesUsd = 'token0__feesUSD',\n  Token0Id = 'token0__id',\n  Token0Name = 'token0__name',\n  Token0PoolCount = 'token0__poolCount',\n  Token0Symbol = 'token0__symbol',\n  Token0TotalSupply = 'token0__totalSupply',\n  Token0TotalValueLocked = 'token0__totalValueLocked',\n  Token0TotalValueLockedUsd = 'token0__totalValueLockedUSD',\n  Token0TotalValueLockedUsdUntracked = 'token0__totalValueLockedUSDUntracked',\n  Token0TxCount = 'token0__txCount',\n  Token0UntrackedVolumeUsd = 'token0__untrackedVolumeUSD',\n  Token0Volume = 'token0__volume',\n  Token0VolumeUsd = 'token0__volumeUSD',\n  Token1 = 'token1',\n  Token1Price = 'token1Price',\n  Token1Decimals = 'token1__decimals',\n  Token1DerivedMatic = 'token1__derivedMatic',\n  Token1FeesUsd = 'token1__feesUSD',\n  Token1Id = 'token1__id',\n  Token1Name = 'token1__name',\n  Token1PoolCount = 'token1__poolCount',\n  Token1Symbol = 'token1__symbol',\n  Token1TotalSupply = 'token1__totalSupply',\n  Token1TotalValueLocked = 'token1__totalValueLocked',\n  Token1TotalValueLockedUsd = 'token1__totalValueLockedUSD',\n  Token1TotalValueLockedUsdUntracked = 'token1__totalValueLockedUSDUntracked',\n  Token1TxCount = 'token1__txCount',\n  Token1UntrackedVolumeUsd = 'token1__untrackedVolumeUSD',\n  Token1Volume = 'token1__volume',\n  Token1VolumeUsd = 'token1__volumeUSD',\n  TotalValueLockedMatic = 'totalValueLockedMatic',\n  TotalValueLockedToken0 = 'totalValueLockedToken0',\n  TotalValueLockedToken1 = 'totalValueLockedToken1',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  TotalValueLockedUsdUntracked = 'totalValueLockedUSDUntracked',\n  TxCount = 'txCount',\n  UntrackedFeesUsd = 'untrackedFeesUSD',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type Position = {\n  __typename?: 'Position';\n  collectedFeesToken0: Scalars['BigDecimal'];\n  collectedFeesToken1: Scalars['BigDecimal'];\n  collectedToken0: Scalars['BigDecimal'];\n  collectedToken1: Scalars['BigDecimal'];\n  depositedToken0: Scalars['BigDecimal'];\n  depositedToken1: Scalars['BigDecimal'];\n  feeGrowthInside0LastX128: Scalars['BigInt'];\n  feeGrowthInside1LastX128: Scalars['BigInt'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  owner: Scalars['Bytes'];\n  pool: Pool;\n  tickLower: Tick;\n  tickUpper: Tick;\n  token0: Token;\n  token0Tvl?: Maybe<Scalars['BigDecimal']>;\n  token1: Token;\n  token1Tvl?: Maybe<Scalars['BigDecimal']>;\n  transaction: Transaction;\n  withdrawnToken0: Scalars['BigDecimal'];\n  withdrawnToken1: Scalars['BigDecimal'];\n};\n\nexport type PositionSnapshot = {\n  __typename?: 'PositionSnapshot';\n  blockNumber: Scalars['BigInt'];\n  collectedFeesToken0: Scalars['BigDecimal'];\n  collectedFeesToken1: Scalars['BigDecimal'];\n  depositedToken0: Scalars['BigDecimal'];\n  depositedToken1: Scalars['BigDecimal'];\n  feeGrowthInside0LastX128: Scalars['BigInt'];\n  feeGrowthInside1LastX128: Scalars['BigInt'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  owner: Scalars['Bytes'];\n  pool: Pool;\n  position: Position;\n  timestamp: Scalars['BigInt'];\n  transaction: Transaction;\n  withdrawnToken0: Scalars['BigDecimal'];\n  withdrawnToken1: Scalars['BigDecimal'];\n};\n\nexport type PositionSnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<PositionSnapshot_Filter>>>;\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  blockNumber_gt?: Maybe<Scalars['BigInt']>;\n  blockNumber_gte?: Maybe<Scalars['BigInt']>;\n  blockNumber_in?: Maybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: Maybe<Scalars['BigInt']>;\n  blockNumber_lte?: Maybe<Scalars['BigInt']>;\n  blockNumber_not?: Maybe<Scalars['BigInt']>;\n  blockNumber_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  collectedFeesToken0?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken0?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_not?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken1?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_not?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feeGrowthInside0LastX128?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside0LastX128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside1LastX128?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside1LastX128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<PositionSnapshot_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  position?: Maybe<Scalars['String']>;\n  position_?: Maybe<Position_Filter>;\n  position_contains?: Maybe<Scalars['String']>;\n  position_contains_nocase?: Maybe<Scalars['String']>;\n  position_ends_with?: Maybe<Scalars['String']>;\n  position_ends_with_nocase?: Maybe<Scalars['String']>;\n  position_gt?: Maybe<Scalars['String']>;\n  position_gte?: Maybe<Scalars['String']>;\n  position_in?: Maybe<Array<Scalars['String']>>;\n  position_lt?: Maybe<Scalars['String']>;\n  position_lte?: Maybe<Scalars['String']>;\n  position_not?: Maybe<Scalars['String']>;\n  position_not_contains?: Maybe<Scalars['String']>;\n  position_not_contains_nocase?: Maybe<Scalars['String']>;\n  position_not_ends_with?: Maybe<Scalars['String']>;\n  position_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  position_not_in?: Maybe<Array<Scalars['String']>>;\n  position_not_starts_with?: Maybe<Scalars['String']>;\n  position_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  position_starts_with?: Maybe<Scalars['String']>;\n  position_starts_with_nocase?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n  withdrawnToken0?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_not?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken1?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_not?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum PositionSnapshot_OrderBy {\n  BlockNumber = 'blockNumber',\n  CollectedFeesToken0 = 'collectedFeesToken0',\n  CollectedFeesToken1 = 'collectedFeesToken1',\n  DepositedToken0 = 'depositedToken0',\n  DepositedToken1 = 'depositedToken1',\n  FeeGrowthInside0LastX128 = 'feeGrowthInside0LastX128',\n  FeeGrowthInside1LastX128 = 'feeGrowthInside1LastX128',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Position = 'position',\n  PositionCollectedFeesToken0 = 'position__collectedFeesToken0',\n  PositionCollectedFeesToken1 = 'position__collectedFeesToken1',\n  PositionCollectedToken0 = 'position__collectedToken0',\n  PositionCollectedToken1 = 'position__collectedToken1',\n  PositionDepositedToken0 = 'position__depositedToken0',\n  PositionDepositedToken1 = 'position__depositedToken1',\n  PositionFeeGrowthInside0LastX128 = 'position__feeGrowthInside0LastX128',\n  PositionFeeGrowthInside1LastX128 = 'position__feeGrowthInside1LastX128',\n  PositionId = 'position__id',\n  PositionLiquidity = 'position__liquidity',\n  PositionOwner = 'position__owner',\n  PositionToken0Tvl = 'position__token0Tvl',\n  PositionToken1Tvl = 'position__token1Tvl',\n  PositionWithdrawnToken0 = 'position__withdrawnToken0',\n  PositionWithdrawnToken1 = 'position__withdrawnToken1',\n  Timestamp = 'timestamp',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp',\n  WithdrawnToken0 = 'withdrawnToken0',\n  WithdrawnToken1 = 'withdrawnToken1'\n}\n\nexport type Position_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Position_Filter>>>;\n  collectedFeesToken0?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedToken0?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_not?: Maybe<Scalars['BigDecimal']>;\n  collectedToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedToken1?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_not?: Maybe<Scalars['BigDecimal']>;\n  collectedToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken0?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_not?: Maybe<Scalars['BigDecimal']>;\n  depositedToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken1?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  depositedToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_not?: Maybe<Scalars['BigDecimal']>;\n  depositedToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feeGrowthInside0LastX128?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside0LastX128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside0LastX128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside1LastX128?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthInside1LastX128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthInside1LastX128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Position_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickLower?: Maybe<Scalars['String']>;\n  tickLower_?: Maybe<Tick_Filter>;\n  tickLower_contains?: Maybe<Scalars['String']>;\n  tickLower_contains_nocase?: Maybe<Scalars['String']>;\n  tickLower_ends_with?: Maybe<Scalars['String']>;\n  tickLower_ends_with_nocase?: Maybe<Scalars['String']>;\n  tickLower_gt?: Maybe<Scalars['String']>;\n  tickLower_gte?: Maybe<Scalars['String']>;\n  tickLower_in?: Maybe<Array<Scalars['String']>>;\n  tickLower_lt?: Maybe<Scalars['String']>;\n  tickLower_lte?: Maybe<Scalars['String']>;\n  tickLower_not?: Maybe<Scalars['String']>;\n  tickLower_not_contains?: Maybe<Scalars['String']>;\n  tickLower_not_contains_nocase?: Maybe<Scalars['String']>;\n  tickLower_not_ends_with?: Maybe<Scalars['String']>;\n  tickLower_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  tickLower_not_in?: Maybe<Array<Scalars['String']>>;\n  tickLower_not_starts_with?: Maybe<Scalars['String']>;\n  tickLower_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickLower_starts_with?: Maybe<Scalars['String']>;\n  tickLower_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickUpper?: Maybe<Scalars['String']>;\n  tickUpper_?: Maybe<Tick_Filter>;\n  tickUpper_contains?: Maybe<Scalars['String']>;\n  tickUpper_contains_nocase?: Maybe<Scalars['String']>;\n  tickUpper_ends_with?: Maybe<Scalars['String']>;\n  tickUpper_ends_with_nocase?: Maybe<Scalars['String']>;\n  tickUpper_gt?: Maybe<Scalars['String']>;\n  tickUpper_gte?: Maybe<Scalars['String']>;\n  tickUpper_in?: Maybe<Array<Scalars['String']>>;\n  tickUpper_lt?: Maybe<Scalars['String']>;\n  tickUpper_lte?: Maybe<Scalars['String']>;\n  tickUpper_not?: Maybe<Scalars['String']>;\n  tickUpper_not_contains?: Maybe<Scalars['String']>;\n  tickUpper_not_contains_nocase?: Maybe<Scalars['String']>;\n  tickUpper_not_ends_with?: Maybe<Scalars['String']>;\n  tickUpper_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  tickUpper_not_in?: Maybe<Array<Scalars['String']>>;\n  tickUpper_not_starts_with?: Maybe<Scalars['String']>;\n  tickUpper_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  tickUpper_starts_with?: Maybe<Scalars['String']>;\n  tickUpper_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0?: Maybe<Scalars['String']>;\n  token0Tvl?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_gt?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_gte?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0Tvl_lt?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_lte?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_not?: Maybe<Scalars['BigDecimal']>;\n  token0Tvl_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token0_?: Maybe<Token_Filter>;\n  token0_contains?: Maybe<Scalars['String']>;\n  token0_contains_nocase?: Maybe<Scalars['String']>;\n  token0_ends_with?: Maybe<Scalars['String']>;\n  token0_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_gt?: Maybe<Scalars['String']>;\n  token0_gte?: Maybe<Scalars['String']>;\n  token0_in?: Maybe<Array<Scalars['String']>>;\n  token0_lt?: Maybe<Scalars['String']>;\n  token0_lte?: Maybe<Scalars['String']>;\n  token0_not?: Maybe<Scalars['String']>;\n  token0_not_contains?: Maybe<Scalars['String']>;\n  token0_not_contains_nocase?: Maybe<Scalars['String']>;\n  token0_not_ends_with?: Maybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_not_in?: Maybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: Maybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0_starts_with?: Maybe<Scalars['String']>;\n  token0_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1?: Maybe<Scalars['String']>;\n  token1Tvl?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_gt?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_gte?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1Tvl_lt?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_lte?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_not?: Maybe<Scalars['BigDecimal']>;\n  token1Tvl_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token1_?: Maybe<Token_Filter>;\n  token1_contains?: Maybe<Scalars['String']>;\n  token1_contains_nocase?: Maybe<Scalars['String']>;\n  token1_ends_with?: Maybe<Scalars['String']>;\n  token1_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_gt?: Maybe<Scalars['String']>;\n  token1_gte?: Maybe<Scalars['String']>;\n  token1_in?: Maybe<Array<Scalars['String']>>;\n  token1_lt?: Maybe<Scalars['String']>;\n  token1_lte?: Maybe<Scalars['String']>;\n  token1_not?: Maybe<Scalars['String']>;\n  token1_not_contains?: Maybe<Scalars['String']>;\n  token1_not_contains_nocase?: Maybe<Scalars['String']>;\n  token1_not_ends_with?: Maybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_not_in?: Maybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: Maybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1_starts_with?: Maybe<Scalars['String']>;\n  token1_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n  withdrawnToken0?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_not?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken1?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  withdrawnToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_not?: Maybe<Scalars['BigDecimal']>;\n  withdrawnToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Position_OrderBy {\n  CollectedFeesToken0 = 'collectedFeesToken0',\n  CollectedFeesToken1 = 'collectedFeesToken1',\n  CollectedToken0 = 'collectedToken0',\n  CollectedToken1 = 'collectedToken1',\n  DepositedToken0 = 'depositedToken0',\n  DepositedToken1 = 'depositedToken1',\n  FeeGrowthInside0LastX128 = 'feeGrowthInside0LastX128',\n  FeeGrowthInside1LastX128 = 'feeGrowthInside1LastX128',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  Owner = 'owner',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  TickLower = 'tickLower',\n  TickLowerCollectedFeesToken0 = 'tickLower__collectedFeesToken0',\n  TickLowerCollectedFeesToken1 = 'tickLower__collectedFeesToken1',\n  TickLowerCollectedFeesUsd = 'tickLower__collectedFeesUSD',\n  TickLowerCreatedAtBlockNumber = 'tickLower__createdAtBlockNumber',\n  TickLowerCreatedAtTimestamp = 'tickLower__createdAtTimestamp',\n  TickLowerFeeGrowthOutside0X128 = 'tickLower__feeGrowthOutside0X128',\n  TickLowerFeeGrowthOutside1X128 = 'tickLower__feeGrowthOutside1X128',\n  TickLowerFeesUsd = 'tickLower__feesUSD',\n  TickLowerId = 'tickLower__id',\n  TickLowerLiquidityGross = 'tickLower__liquidityGross',\n  TickLowerLiquidityNet = 'tickLower__liquidityNet',\n  TickLowerLiquidityProviderCount = 'tickLower__liquidityProviderCount',\n  TickLowerPoolAddress = 'tickLower__poolAddress',\n  TickLowerPrice0 = 'tickLower__price0',\n  TickLowerPrice1 = 'tickLower__price1',\n  TickLowerTickIdx = 'tickLower__tickIdx',\n  TickLowerUntrackedVolumeUsd = 'tickLower__untrackedVolumeUSD',\n  TickLowerVolumeToken0 = 'tickLower__volumeToken0',\n  TickLowerVolumeToken1 = 'tickLower__volumeToken1',\n  TickLowerVolumeUsd = 'tickLower__volumeUSD',\n  TickUpper = 'tickUpper',\n  TickUpperCollectedFeesToken0 = 'tickUpper__collectedFeesToken0',\n  TickUpperCollectedFeesToken1 = 'tickUpper__collectedFeesToken1',\n  TickUpperCollectedFeesUsd = 'tickUpper__collectedFeesUSD',\n  TickUpperCreatedAtBlockNumber = 'tickUpper__createdAtBlockNumber',\n  TickUpperCreatedAtTimestamp = 'tickUpper__createdAtTimestamp',\n  TickUpperFeeGrowthOutside0X128 = 'tickUpper__feeGrowthOutside0X128',\n  TickUpperFeeGrowthOutside1X128 = 'tickUpper__feeGrowthOutside1X128',\n  TickUpperFeesUsd = 'tickUpper__feesUSD',\n  TickUpperId = 'tickUpper__id',\n  TickUpperLiquidityGross = 'tickUpper__liquidityGross',\n  TickUpperLiquidityNet = 'tickUpper__liquidityNet',\n  TickUpperLiquidityProviderCount = 'tickUpper__liquidityProviderCount',\n  TickUpperPoolAddress = 'tickUpper__poolAddress',\n  TickUpperPrice0 = 'tickUpper__price0',\n  TickUpperPrice1 = 'tickUpper__price1',\n  TickUpperTickIdx = 'tickUpper__tickIdx',\n  TickUpperUntrackedVolumeUsd = 'tickUpper__untrackedVolumeUSD',\n  TickUpperVolumeToken0 = 'tickUpper__volumeToken0',\n  TickUpperVolumeToken1 = 'tickUpper__volumeToken1',\n  TickUpperVolumeUsd = 'tickUpper__volumeUSD',\n  Token0 = 'token0',\n  Token0Tvl = 'token0Tvl',\n  Token0Decimals = 'token0__decimals',\n  Token0DerivedMatic = 'token0__derivedMatic',\n  Token0FeesUsd = 'token0__feesUSD',\n  Token0Id = 'token0__id',\n  Token0Name = 'token0__name',\n  Token0PoolCount = 'token0__poolCount',\n  Token0Symbol = 'token0__symbol',\n  Token0TotalSupply = 'token0__totalSupply',\n  Token0TotalValueLocked = 'token0__totalValueLocked',\n  Token0TotalValueLockedUsd = 'token0__totalValueLockedUSD',\n  Token0TotalValueLockedUsdUntracked = 'token0__totalValueLockedUSDUntracked',\n  Token0TxCount = 'token0__txCount',\n  Token0UntrackedVolumeUsd = 'token0__untrackedVolumeUSD',\n  Token0Volume = 'token0__volume',\n  Token0VolumeUsd = 'token0__volumeUSD',\n  Token1 = 'token1',\n  Token1Tvl = 'token1Tvl',\n  Token1Decimals = 'token1__decimals',\n  Token1DerivedMatic = 'token1__derivedMatic',\n  Token1FeesUsd = 'token1__feesUSD',\n  Token1Id = 'token1__id',\n  Token1Name = 'token1__name',\n  Token1PoolCount = 'token1__poolCount',\n  Token1Symbol = 'token1__symbol',\n  Token1TotalSupply = 'token1__totalSupply',\n  Token1TotalValueLocked = 'token1__totalValueLocked',\n  Token1TotalValueLockedUsd = 'token1__totalValueLockedUSD',\n  Token1TotalValueLockedUsdUntracked = 'token1__totalValueLockedUSDUntracked',\n  Token1TxCount = 'token1__txCount',\n  Token1UntrackedVolumeUsd = 'token1__untrackedVolumeUSD',\n  Token1Volume = 'token1__volume',\n  Token1VolumeUsd = 'token1__volumeUSD',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp',\n  WithdrawnToken0 = 'withdrawnToken0',\n  WithdrawnToken1 = 'withdrawnToken1'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  algebraDayData?: Maybe<AlgebraDayData>;\n  algebraDayDatas: Array<AlgebraDayData>;\n  block?: Maybe<Block>;\n  blocks: Array<Block>;\n  bundle?: Maybe<Bundle>;\n  bundles: Array<Bundle>;\n  burn?: Maybe<Burn>;\n  burns: Array<Burn>;\n  collect?: Maybe<Collect>;\n  collects: Array<Collect>;\n  deposit?: Maybe<Deposit>;\n  deposits: Array<Deposit>;\n  eternalFarming?: Maybe<EternalFarming>;\n  eternalFarmings: Array<EternalFarming>;\n  factories: Array<Factory>;\n  factory?: Maybe<Factory>;\n  feeHourData?: Maybe<FeeHourData>;\n  feeHourDatas: Array<FeeHourData>;\n  flash?: Maybe<Flash>;\n  flashes: Array<Flash>;\n  limitFarming?: Maybe<LimitFarming>;\n  limitFarmings: Array<LimitFarming>;\n  mint?: Maybe<Mint>;\n  mints: Array<Mint>;\n  pool?: Maybe<Pool>;\n  poolDayData?: Maybe<PoolDayData>;\n  poolDayDatas: Array<PoolDayData>;\n  poolFeeData?: Maybe<PoolFeeData>;\n  poolFeeDatas: Array<PoolFeeData>;\n  poolHourData?: Maybe<PoolHourData>;\n  poolHourDatas: Array<PoolHourData>;\n  poolPosition?: Maybe<PoolPosition>;\n  poolPositions: Array<PoolPosition>;\n  pools: Array<Pool>;\n  position?: Maybe<Position>;\n  positionSnapshot?: Maybe<PositionSnapshot>;\n  positionSnapshots: Array<PositionSnapshot>;\n  positions: Array<Position>;\n  reward?: Maybe<Reward>;\n  rewards: Array<Reward>;\n  swap?: Maybe<Swap>;\n  swaps: Array<Swap>;\n  tick?: Maybe<Tick>;\n  tickDayData?: Maybe<TickDayData>;\n  tickDayDatas: Array<TickDayData>;\n  tickHourData?: Maybe<TickHourData>;\n  tickHourDatas: Array<TickHourData>;\n  ticks: Array<Tick>;\n  token?: Maybe<Token>;\n  tokenDayData?: Maybe<TokenDayData>;\n  tokenDayDatas: Array<TokenDayData>;\n  tokenHourData?: Maybe<TokenHourData>;\n  tokenHourDatas: Array<TokenHourData>;\n  tokens: Array<Token>;\n  transaction?: Maybe<Transaction>;\n  transactions: Array<Transaction>;\n};\n\n\nexport type Query_MetaArgs = {\n  block?: Maybe<Block_Height>;\n};\n\n\nexport type QueryAlgebraDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryAlgebraDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<AlgebraDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<AlgebraDayData_Filter>;\n};\n\n\nexport type QueryBlockArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBlocksArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Block_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Block_Filter>;\n};\n\n\nexport type QueryBundleArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBundlesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Bundle_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Bundle_Filter>;\n};\n\n\nexport type QueryBurnArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBurnsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Burn_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Burn_Filter>;\n};\n\n\nexport type QueryCollectArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryCollectsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Collect_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Collect_Filter>;\n};\n\n\nexport type QueryDepositArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryDepositsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Deposit_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Deposit_Filter>;\n};\n\n\nexport type QueryEternalFarmingArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryEternalFarmingsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<EternalFarming_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<EternalFarming_Filter>;\n};\n\n\nexport type QueryFactoriesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Factory_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Factory_Filter>;\n};\n\n\nexport type QueryFactoryArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFeeHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFeeHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<FeeHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<FeeHourData_Filter>;\n};\n\n\nexport type QueryFlashArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryFlashesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Flash_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Flash_Filter>;\n};\n\n\nexport type QueryLimitFarmingArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryLimitFarmingsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<LimitFarming_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<LimitFarming_Filter>;\n};\n\n\nexport type QueryMintArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryMintsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Mint_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Mint_Filter>;\n};\n\n\nexport type QueryPoolArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolDayData_Filter>;\n};\n\n\nexport type QueryPoolFeeDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolFeeDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolFeeData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolFeeData_Filter>;\n};\n\n\nexport type QueryPoolHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolHourData_Filter>;\n};\n\n\nexport type QueryPoolPositionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolPositionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolPosition_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolPosition_Filter>;\n};\n\n\nexport type QueryPoolsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Pool_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Pool_Filter>;\n};\n\n\nexport type QueryPositionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPositionSnapshotArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPositionSnapshotsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PositionSnapshot_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PositionSnapshot_Filter>;\n};\n\n\nexport type QueryPositionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Position_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Position_Filter>;\n};\n\n\nexport type QueryRewardArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRewardsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Reward_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Reward_Filter>;\n};\n\n\nexport type QuerySwapArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySwapsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Swap_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Swap_Filter>;\n};\n\n\nexport type QueryTickArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTickDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTickDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TickDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TickDayData_Filter>;\n};\n\n\nexport type QueryTickHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTickHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TickHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TickHourData_Filter>;\n};\n\n\nexport type QueryTicksArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Tick_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Tick_Filter>;\n};\n\n\nexport type QueryTokenArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TokenDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TokenDayData_Filter>;\n};\n\n\nexport type QueryTokenHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TokenHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TokenHourData_Filter>;\n};\n\n\nexport type QueryTokensArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Token_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Token_Filter>;\n};\n\n\nexport type QueryTransactionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTransactionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Transaction_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Transaction_Filter>;\n};\n\nexport type Reward = {\n  __typename?: 'Reward';\n  amount: Scalars['BigInt'];\n  id: Scalars['ID'];\n  owner: Scalars['Bytes'];\n  rewardAddress: Scalars['Bytes'];\n};\n\nexport type Reward_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount?: Maybe<Scalars['BigInt']>;\n  amount_gt?: Maybe<Scalars['BigInt']>;\n  amount_gte?: Maybe<Scalars['BigInt']>;\n  amount_in?: Maybe<Array<Scalars['BigInt']>>;\n  amount_lt?: Maybe<Scalars['BigInt']>;\n  amount_lte?: Maybe<Scalars['BigInt']>;\n  amount_not?: Maybe<Scalars['BigInt']>;\n  amount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  and?: Maybe<Array<Maybe<Reward_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  or?: Maybe<Array<Maybe<Reward_Filter>>>;\n  owner?: Maybe<Scalars['Bytes']>;\n  owner_contains?: Maybe<Scalars['Bytes']>;\n  owner_gt?: Maybe<Scalars['Bytes']>;\n  owner_gte?: Maybe<Scalars['Bytes']>;\n  owner_in?: Maybe<Array<Scalars['Bytes']>>;\n  owner_lt?: Maybe<Scalars['Bytes']>;\n  owner_lte?: Maybe<Scalars['Bytes']>;\n  owner_not?: Maybe<Scalars['Bytes']>;\n  owner_not_contains?: Maybe<Scalars['Bytes']>;\n  owner_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  rewardAddress?: Maybe<Scalars['Bytes']>;\n  rewardAddress_contains?: Maybe<Scalars['Bytes']>;\n  rewardAddress_gt?: Maybe<Scalars['Bytes']>;\n  rewardAddress_gte?: Maybe<Scalars['Bytes']>;\n  rewardAddress_in?: Maybe<Array<Scalars['Bytes']>>;\n  rewardAddress_lt?: Maybe<Scalars['Bytes']>;\n  rewardAddress_lte?: Maybe<Scalars['Bytes']>;\n  rewardAddress_not?: Maybe<Scalars['Bytes']>;\n  rewardAddress_not_contains?: Maybe<Scalars['Bytes']>;\n  rewardAddress_not_in?: Maybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum Reward_OrderBy {\n  Amount = 'amount',\n  Id = 'id',\n  Owner = 'owner',\n  RewardAddress = 'rewardAddress'\n}\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  algebraDayData?: Maybe<AlgebraDayData>;\n  algebraDayDatas: Array<AlgebraDayData>;\n  block?: Maybe<Block>;\n  blocks: Array<Block>;\n  bundle?: Maybe<Bundle>;\n  bundles: Array<Bundle>;\n  burn?: Maybe<Burn>;\n  burns: Array<Burn>;\n  collect?: Maybe<Collect>;\n  collects: Array<Collect>;\n  deposit?: Maybe<Deposit>;\n  deposits: Array<Deposit>;\n  eternalFarming?: Maybe<EternalFarming>;\n  eternalFarmings: Array<EternalFarming>;\n  factories: Array<Factory>;\n  factory?: Maybe<Factory>;\n  feeHourData?: Maybe<FeeHourData>;\n  feeHourDatas: Array<FeeHourData>;\n  flash?: Maybe<Flash>;\n  flashes: Array<Flash>;\n  limitFarming?: Maybe<LimitFarming>;\n  limitFarmings: Array<LimitFarming>;\n  mint?: Maybe<Mint>;\n  mints: Array<Mint>;\n  pool?: Maybe<Pool>;\n  poolDayData?: Maybe<PoolDayData>;\n  poolDayDatas: Array<PoolDayData>;\n  poolFeeData?: Maybe<PoolFeeData>;\n  poolFeeDatas: Array<PoolFeeData>;\n  poolHourData?: Maybe<PoolHourData>;\n  poolHourDatas: Array<PoolHourData>;\n  poolPosition?: Maybe<PoolPosition>;\n  poolPositions: Array<PoolPosition>;\n  pools: Array<Pool>;\n  position?: Maybe<Position>;\n  positionSnapshot?: Maybe<PositionSnapshot>;\n  positionSnapshots: Array<PositionSnapshot>;\n  positions: Array<Position>;\n  reward?: Maybe<Reward>;\n  rewards: Array<Reward>;\n  swap?: Maybe<Swap>;\n  swaps: Array<Swap>;\n  tick?: Maybe<Tick>;\n  tickDayData?: Maybe<TickDayData>;\n  tickDayDatas: Array<TickDayData>;\n  tickHourData?: Maybe<TickHourData>;\n  tickHourDatas: Array<TickHourData>;\n  ticks: Array<Tick>;\n  token?: Maybe<Token>;\n  tokenDayData?: Maybe<TokenDayData>;\n  tokenDayDatas: Array<TokenDayData>;\n  tokenHourData?: Maybe<TokenHourData>;\n  tokenHourDatas: Array<TokenHourData>;\n  tokens: Array<Token>;\n  transaction?: Maybe<Transaction>;\n  transactions: Array<Transaction>;\n};\n\n\nexport type Subscription_MetaArgs = {\n  block?: Maybe<Block_Height>;\n};\n\n\nexport type SubscriptionAlgebraDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionAlgebraDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<AlgebraDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<AlgebraDayData_Filter>;\n};\n\n\nexport type SubscriptionBlockArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBlocksArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Block_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Block_Filter>;\n};\n\n\nexport type SubscriptionBundleArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBundlesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Bundle_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Bundle_Filter>;\n};\n\n\nexport type SubscriptionBurnArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBurnsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Burn_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Burn_Filter>;\n};\n\n\nexport type SubscriptionCollectArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionCollectsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Collect_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Collect_Filter>;\n};\n\n\nexport type SubscriptionDepositArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionDepositsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Deposit_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Deposit_Filter>;\n};\n\n\nexport type SubscriptionEternalFarmingArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionEternalFarmingsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<EternalFarming_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<EternalFarming_Filter>;\n};\n\n\nexport type SubscriptionFactoriesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Factory_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Factory_Filter>;\n};\n\n\nexport type SubscriptionFactoryArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFeeHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFeeHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<FeeHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<FeeHourData_Filter>;\n};\n\n\nexport type SubscriptionFlashArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionFlashesArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Flash_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Flash_Filter>;\n};\n\n\nexport type SubscriptionLimitFarmingArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionLimitFarmingsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<LimitFarming_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<LimitFarming_Filter>;\n};\n\n\nexport type SubscriptionMintArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionMintsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Mint_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Mint_Filter>;\n};\n\n\nexport type SubscriptionPoolArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolDayData_Filter>;\n};\n\n\nexport type SubscriptionPoolFeeDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolFeeDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolFeeData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolFeeData_Filter>;\n};\n\n\nexport type SubscriptionPoolHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolHourData_Filter>;\n};\n\n\nexport type SubscriptionPoolPositionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolPositionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PoolPosition_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PoolPosition_Filter>;\n};\n\n\nexport type SubscriptionPoolsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Pool_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Pool_Filter>;\n};\n\n\nexport type SubscriptionPositionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPositionSnapshotArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPositionSnapshotsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<PositionSnapshot_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<PositionSnapshot_Filter>;\n};\n\n\nexport type SubscriptionPositionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Position_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Position_Filter>;\n};\n\n\nexport type SubscriptionRewardArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRewardsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Reward_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Reward_Filter>;\n};\n\n\nexport type SubscriptionSwapArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSwapsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Swap_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Swap_Filter>;\n};\n\n\nexport type SubscriptionTickArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTickDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTickDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TickDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TickDayData_Filter>;\n};\n\n\nexport type SubscriptionTickHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTickHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TickHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TickHourData_Filter>;\n};\n\n\nexport type SubscriptionTicksArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Tick_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Tick_Filter>;\n};\n\n\nexport type SubscriptionTokenArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenDayDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenDayDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TokenDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TokenDayData_Filter>;\n};\n\n\nexport type SubscriptionTokenHourDataArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenHourDatasArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TokenHourData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<TokenHourData_Filter>;\n};\n\n\nexport type SubscriptionTokensArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Token_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Token_Filter>;\n};\n\n\nexport type SubscriptionTransactionArgs = {\n  block?: Maybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTransactionsArgs = {\n  block?: Maybe<Block_Height>;\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Transaction_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: Maybe<Transaction_Filter>;\n};\n\nexport type Swap = {\n  __typename?: 'Swap';\n  amount0: Scalars['BigDecimal'];\n  amount1: Scalars['BigDecimal'];\n  amountUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidity: Scalars['BigInt'];\n  logIndex?: Maybe<Scalars['BigInt']>;\n  origin: Scalars['Bytes'];\n  pool: Pool;\n  price: Scalars['BigInt'];\n  recipient: Scalars['Bytes'];\n  sender: Scalars['Bytes'];\n  tick: Scalars['BigInt'];\n  timestamp: Scalars['BigInt'];\n  token0: Token;\n  token1: Token;\n  transaction: Transaction;\n};\n\nexport type Swap_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  amount0?: Maybe<Scalars['BigDecimal']>;\n  amount0_gt?: Maybe<Scalars['BigDecimal']>;\n  amount0_gte?: Maybe<Scalars['BigDecimal']>;\n  amount0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount0_lt?: Maybe<Scalars['BigDecimal']>;\n  amount0_lte?: Maybe<Scalars['BigDecimal']>;\n  amount0_not?: Maybe<Scalars['BigDecimal']>;\n  amount0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1?: Maybe<Scalars['BigDecimal']>;\n  amount1_gt?: Maybe<Scalars['BigDecimal']>;\n  amount1_gte?: Maybe<Scalars['BigDecimal']>;\n  amount1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amount1_lt?: Maybe<Scalars['BigDecimal']>;\n  amount1_lte?: Maybe<Scalars['BigDecimal']>;\n  amount1_not?: Maybe<Scalars['BigDecimal']>;\n  amount1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  amountUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not?: Maybe<Scalars['BigDecimal']>;\n  amountUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  and?: Maybe<Array<Maybe<Swap_Filter>>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidity?: Maybe<Scalars['BigInt']>;\n  liquidity_gt?: Maybe<Scalars['BigInt']>;\n  liquidity_gte?: Maybe<Scalars['BigInt']>;\n  liquidity_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidity_lt?: Maybe<Scalars['BigInt']>;\n  liquidity_lte?: Maybe<Scalars['BigInt']>;\n  liquidity_not?: Maybe<Scalars['BigInt']>;\n  liquidity_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex?: Maybe<Scalars['BigInt']>;\n  logIndex_gt?: Maybe<Scalars['BigInt']>;\n  logIndex_gte?: Maybe<Scalars['BigInt']>;\n  logIndex_in?: Maybe<Array<Scalars['BigInt']>>;\n  logIndex_lt?: Maybe<Scalars['BigInt']>;\n  logIndex_lte?: Maybe<Scalars['BigInt']>;\n  logIndex_not?: Maybe<Scalars['BigInt']>;\n  logIndex_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Swap_Filter>>>;\n  origin?: Maybe<Scalars['Bytes']>;\n  origin_contains?: Maybe<Scalars['Bytes']>;\n  origin_gt?: Maybe<Scalars['Bytes']>;\n  origin_gte?: Maybe<Scalars['Bytes']>;\n  origin_in?: Maybe<Array<Scalars['Bytes']>>;\n  origin_lt?: Maybe<Scalars['Bytes']>;\n  origin_lte?: Maybe<Scalars['Bytes']>;\n  origin_not?: Maybe<Scalars['Bytes']>;\n  origin_not_contains?: Maybe<Scalars['Bytes']>;\n  origin_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['BigInt']>;\n  price_gt?: Maybe<Scalars['BigInt']>;\n  price_gte?: Maybe<Scalars['BigInt']>;\n  price_in?: Maybe<Array<Scalars['BigInt']>>;\n  price_lt?: Maybe<Scalars['BigInt']>;\n  price_lte?: Maybe<Scalars['BigInt']>;\n  price_not?: Maybe<Scalars['BigInt']>;\n  price_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  recipient?: Maybe<Scalars['Bytes']>;\n  recipient_contains?: Maybe<Scalars['Bytes']>;\n  recipient_gt?: Maybe<Scalars['Bytes']>;\n  recipient_gte?: Maybe<Scalars['Bytes']>;\n  recipient_in?: Maybe<Array<Scalars['Bytes']>>;\n  recipient_lt?: Maybe<Scalars['Bytes']>;\n  recipient_lte?: Maybe<Scalars['Bytes']>;\n  recipient_not?: Maybe<Scalars['Bytes']>;\n  recipient_not_contains?: Maybe<Scalars['Bytes']>;\n  recipient_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  sender?: Maybe<Scalars['Bytes']>;\n  sender_contains?: Maybe<Scalars['Bytes']>;\n  sender_gt?: Maybe<Scalars['Bytes']>;\n  sender_gte?: Maybe<Scalars['Bytes']>;\n  sender_in?: Maybe<Array<Scalars['Bytes']>>;\n  sender_lt?: Maybe<Scalars['Bytes']>;\n  sender_lte?: Maybe<Scalars['Bytes']>;\n  sender_not?: Maybe<Scalars['Bytes']>;\n  sender_not_contains?: Maybe<Scalars['Bytes']>;\n  sender_not_in?: Maybe<Array<Scalars['Bytes']>>;\n  tick?: Maybe<Scalars['BigInt']>;\n  tick_gt?: Maybe<Scalars['BigInt']>;\n  tick_gte?: Maybe<Scalars['BigInt']>;\n  tick_in?: Maybe<Array<Scalars['BigInt']>>;\n  tick_lt?: Maybe<Scalars['BigInt']>;\n  tick_lte?: Maybe<Scalars['BigInt']>;\n  tick_not?: Maybe<Scalars['BigInt']>;\n  tick_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  token0?: Maybe<Scalars['String']>;\n  token0_?: Maybe<Token_Filter>;\n  token0_contains?: Maybe<Scalars['String']>;\n  token0_contains_nocase?: Maybe<Scalars['String']>;\n  token0_ends_with?: Maybe<Scalars['String']>;\n  token0_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_gt?: Maybe<Scalars['String']>;\n  token0_gte?: Maybe<Scalars['String']>;\n  token0_in?: Maybe<Array<Scalars['String']>>;\n  token0_lt?: Maybe<Scalars['String']>;\n  token0_lte?: Maybe<Scalars['String']>;\n  token0_not?: Maybe<Scalars['String']>;\n  token0_not_contains?: Maybe<Scalars['String']>;\n  token0_not_contains_nocase?: Maybe<Scalars['String']>;\n  token0_not_ends_with?: Maybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token0_not_in?: Maybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: Maybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token0_starts_with?: Maybe<Scalars['String']>;\n  token0_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1?: Maybe<Scalars['String']>;\n  token1_?: Maybe<Token_Filter>;\n  token1_contains?: Maybe<Scalars['String']>;\n  token1_contains_nocase?: Maybe<Scalars['String']>;\n  token1_ends_with?: Maybe<Scalars['String']>;\n  token1_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_gt?: Maybe<Scalars['String']>;\n  token1_gte?: Maybe<Scalars['String']>;\n  token1_in?: Maybe<Array<Scalars['String']>>;\n  token1_lt?: Maybe<Scalars['String']>;\n  token1_lte?: Maybe<Scalars['String']>;\n  token1_not?: Maybe<Scalars['String']>;\n  token1_not_contains?: Maybe<Scalars['String']>;\n  token1_not_contains_nocase?: Maybe<Scalars['String']>;\n  token1_not_ends_with?: Maybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token1_not_in?: Maybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: Maybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token1_starts_with?: Maybe<Scalars['String']>;\n  token1_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction?: Maybe<Scalars['String']>;\n  transaction_?: Maybe<Transaction_Filter>;\n  transaction_contains?: Maybe<Scalars['String']>;\n  transaction_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_ends_with?: Maybe<Scalars['String']>;\n  transaction_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_gt?: Maybe<Scalars['String']>;\n  transaction_gte?: Maybe<Scalars['String']>;\n  transaction_in?: Maybe<Array<Scalars['String']>>;\n  transaction_lt?: Maybe<Scalars['String']>;\n  transaction_lte?: Maybe<Scalars['String']>;\n  transaction_not?: Maybe<Scalars['String']>;\n  transaction_not_contains?: Maybe<Scalars['String']>;\n  transaction_not_contains_nocase?: Maybe<Scalars['String']>;\n  transaction_not_ends_with?: Maybe<Scalars['String']>;\n  transaction_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  transaction_not_in?: Maybe<Array<Scalars['String']>>;\n  transaction_not_starts_with?: Maybe<Scalars['String']>;\n  transaction_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  transaction_starts_with?: Maybe<Scalars['String']>;\n  transaction_starts_with_nocase?: Maybe<Scalars['String']>;\n};\n\nexport enum Swap_OrderBy {\n  Amount0 = 'amount0',\n  Amount1 = 'amount1',\n  AmountUsd = 'amountUSD',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  LogIndex = 'logIndex',\n  Origin = 'origin',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Price = 'price',\n  Recipient = 'recipient',\n  Sender = 'sender',\n  Tick = 'tick',\n  Timestamp = 'timestamp',\n  Token0 = 'token0',\n  Token0Decimals = 'token0__decimals',\n  Token0DerivedMatic = 'token0__derivedMatic',\n  Token0FeesUsd = 'token0__feesUSD',\n  Token0Id = 'token0__id',\n  Token0Name = 'token0__name',\n  Token0PoolCount = 'token0__poolCount',\n  Token0Symbol = 'token0__symbol',\n  Token0TotalSupply = 'token0__totalSupply',\n  Token0TotalValueLocked = 'token0__totalValueLocked',\n  Token0TotalValueLockedUsd = 'token0__totalValueLockedUSD',\n  Token0TotalValueLockedUsdUntracked = 'token0__totalValueLockedUSDUntracked',\n  Token0TxCount = 'token0__txCount',\n  Token0UntrackedVolumeUsd = 'token0__untrackedVolumeUSD',\n  Token0Volume = 'token0__volume',\n  Token0VolumeUsd = 'token0__volumeUSD',\n  Token1 = 'token1',\n  Token1Decimals = 'token1__decimals',\n  Token1DerivedMatic = 'token1__derivedMatic',\n  Token1FeesUsd = 'token1__feesUSD',\n  Token1Id = 'token1__id',\n  Token1Name = 'token1__name',\n  Token1PoolCount = 'token1__poolCount',\n  Token1Symbol = 'token1__symbol',\n  Token1TotalSupply = 'token1__totalSupply',\n  Token1TotalValueLocked = 'token1__totalValueLocked',\n  Token1TotalValueLockedUsd = 'token1__totalValueLockedUSD',\n  Token1TotalValueLockedUsdUntracked = 'token1__totalValueLockedUSDUntracked',\n  Token1TxCount = 'token1__txCount',\n  Token1UntrackedVolumeUsd = 'token1__untrackedVolumeUSD',\n  Token1Volume = 'token1__volume',\n  Token1VolumeUsd = 'token1__volumeUSD',\n  Transaction = 'transaction',\n  TransactionBlockNumber = 'transaction__blockNumber',\n  TransactionGasLimit = 'transaction__gasLimit',\n  TransactionGasPrice = 'transaction__gasPrice',\n  TransactionId = 'transaction__id',\n  TransactionTimestamp = 'transaction__timestamp'\n}\n\nexport type Tick = {\n  __typename?: 'Tick';\n  collectedFeesToken0: Scalars['BigDecimal'];\n  collectedFeesToken1: Scalars['BigDecimal'];\n  collectedFeesUSD: Scalars['BigDecimal'];\n  createdAtBlockNumber: Scalars['BigInt'];\n  createdAtTimestamp: Scalars['BigInt'];\n  feeGrowthOutside0X128: Scalars['BigInt'];\n  feeGrowthOutside1X128: Scalars['BigInt'];\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidityGross: Scalars['BigInt'];\n  liquidityNet: Scalars['BigInt'];\n  liquidityProviderCount: Scalars['BigInt'];\n  pool: Pool;\n  poolAddress?: Maybe<Scalars['String']>;\n  price0: Scalars['BigDecimal'];\n  price1: Scalars['BigDecimal'];\n  tickIdx: Scalars['BigInt'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TickDayData = {\n  __typename?: 'TickDayData';\n  date: Scalars['Int'];\n  feeGrowthOutside0X128: Scalars['BigInt'];\n  feeGrowthOutside1X128: Scalars['BigInt'];\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidityGross: Scalars['BigInt'];\n  liquidityNet: Scalars['BigInt'];\n  pool: Pool;\n  tick: Tick;\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TickDayData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<TickDayData_Filter>>>;\n  date?: Maybe<Scalars['Int']>;\n  date_gt?: Maybe<Scalars['Int']>;\n  date_gte?: Maybe<Scalars['Int']>;\n  date_in?: Maybe<Array<Scalars['Int']>>;\n  date_lt?: Maybe<Scalars['Int']>;\n  date_lte?: Maybe<Scalars['Int']>;\n  date_not?: Maybe<Scalars['Int']>;\n  date_not_in?: Maybe<Array<Scalars['Int']>>;\n  feeGrowthOutside0X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside0X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside1X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside1X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidityGross?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityGross_lt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_lte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet_lt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_lte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<TickDayData_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  tick?: Maybe<Scalars['String']>;\n  tick_?: Maybe<Tick_Filter>;\n  tick_contains?: Maybe<Scalars['String']>;\n  tick_contains_nocase?: Maybe<Scalars['String']>;\n  tick_ends_with?: Maybe<Scalars['String']>;\n  tick_ends_with_nocase?: Maybe<Scalars['String']>;\n  tick_gt?: Maybe<Scalars['String']>;\n  tick_gte?: Maybe<Scalars['String']>;\n  tick_in?: Maybe<Array<Scalars['String']>>;\n  tick_lt?: Maybe<Scalars['String']>;\n  tick_lte?: Maybe<Scalars['String']>;\n  tick_not?: Maybe<Scalars['String']>;\n  tick_not_contains?: Maybe<Scalars['String']>;\n  tick_not_contains_nocase?: Maybe<Scalars['String']>;\n  tick_not_ends_with?: Maybe<Scalars['String']>;\n  tick_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  tick_not_in?: Maybe<Array<Scalars['String']>>;\n  tick_not_starts_with?: Maybe<Scalars['String']>;\n  tick_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  tick_starts_with?: Maybe<Scalars['String']>;\n  tick_starts_with_nocase?: Maybe<Scalars['String']>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TickDayData_OrderBy {\n  Date = 'date',\n  FeeGrowthOutside0X128 = 'feeGrowthOutside0X128',\n  FeeGrowthOutside1X128 = 'feeGrowthOutside1X128',\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  LiquidityGross = 'liquidityGross',\n  LiquidityNet = 'liquidityNet',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Tick = 'tick',\n  TickCollectedFeesToken0 = 'tick__collectedFeesToken0',\n  TickCollectedFeesToken1 = 'tick__collectedFeesToken1',\n  TickCollectedFeesUsd = 'tick__collectedFeesUSD',\n  TickCreatedAtBlockNumber = 'tick__createdAtBlockNumber',\n  TickCreatedAtTimestamp = 'tick__createdAtTimestamp',\n  TickFeeGrowthOutside0X128 = 'tick__feeGrowthOutside0X128',\n  TickFeeGrowthOutside1X128 = 'tick__feeGrowthOutside1X128',\n  TickFeesUsd = 'tick__feesUSD',\n  TickId = 'tick__id',\n  TickLiquidityGross = 'tick__liquidityGross',\n  TickLiquidityNet = 'tick__liquidityNet',\n  TickLiquidityProviderCount = 'tick__liquidityProviderCount',\n  TickPoolAddress = 'tick__poolAddress',\n  TickPrice0 = 'tick__price0',\n  TickPrice1 = 'tick__price1',\n  TickTickIdx = 'tick__tickIdx',\n  TickUntrackedVolumeUsd = 'tick__untrackedVolumeUSD',\n  TickVolumeToken0 = 'tick__volumeToken0',\n  TickVolumeToken1 = 'tick__volumeToken1',\n  TickVolumeUsd = 'tick__volumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type TickHourData = {\n  __typename?: 'TickHourData';\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  liquidityGross: Scalars['BigInt'];\n  liquidityNet: Scalars['BigInt'];\n  periodStartUnix: Scalars['Int'];\n  pool: Pool;\n  tick: Tick;\n  volumeToken0: Scalars['BigDecimal'];\n  volumeToken1: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TickHourData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<TickHourData_Filter>>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidityGross?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityGross_lt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_lte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet_lt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_lte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<TickHourData_Filter>>>;\n  periodStartUnix?: Maybe<Scalars['Int']>;\n  periodStartUnix_gt?: Maybe<Scalars['Int']>;\n  periodStartUnix_gte?: Maybe<Scalars['Int']>;\n  periodStartUnix_in?: Maybe<Array<Scalars['Int']>>;\n  periodStartUnix_lt?: Maybe<Scalars['Int']>;\n  periodStartUnix_lte?: Maybe<Scalars['Int']>;\n  periodStartUnix_not?: Maybe<Scalars['Int']>;\n  periodStartUnix_not_in?: Maybe<Array<Scalars['Int']>>;\n  pool?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  tick?: Maybe<Scalars['String']>;\n  tick_?: Maybe<Tick_Filter>;\n  tick_contains?: Maybe<Scalars['String']>;\n  tick_contains_nocase?: Maybe<Scalars['String']>;\n  tick_ends_with?: Maybe<Scalars['String']>;\n  tick_ends_with_nocase?: Maybe<Scalars['String']>;\n  tick_gt?: Maybe<Scalars['String']>;\n  tick_gte?: Maybe<Scalars['String']>;\n  tick_in?: Maybe<Array<Scalars['String']>>;\n  tick_lt?: Maybe<Scalars['String']>;\n  tick_lte?: Maybe<Scalars['String']>;\n  tick_not?: Maybe<Scalars['String']>;\n  tick_not_contains?: Maybe<Scalars['String']>;\n  tick_not_contains_nocase?: Maybe<Scalars['String']>;\n  tick_not_ends_with?: Maybe<Scalars['String']>;\n  tick_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  tick_not_in?: Maybe<Array<Scalars['String']>>;\n  tick_not_starts_with?: Maybe<Scalars['String']>;\n  tick_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  tick_starts_with?: Maybe<Scalars['String']>;\n  tick_starts_with_nocase?: Maybe<Scalars['String']>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TickHourData_OrderBy {\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  LiquidityGross = 'liquidityGross',\n  LiquidityNet = 'liquidityNet',\n  PeriodStartUnix = 'periodStartUnix',\n  Pool = 'pool',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Tick = 'tick',\n  TickCollectedFeesToken0 = 'tick__collectedFeesToken0',\n  TickCollectedFeesToken1 = 'tick__collectedFeesToken1',\n  TickCollectedFeesUsd = 'tick__collectedFeesUSD',\n  TickCreatedAtBlockNumber = 'tick__createdAtBlockNumber',\n  TickCreatedAtTimestamp = 'tick__createdAtTimestamp',\n  TickFeeGrowthOutside0X128 = 'tick__feeGrowthOutside0X128',\n  TickFeeGrowthOutside1X128 = 'tick__feeGrowthOutside1X128',\n  TickFeesUsd = 'tick__feesUSD',\n  TickId = 'tick__id',\n  TickLiquidityGross = 'tick__liquidityGross',\n  TickLiquidityNet = 'tick__liquidityNet',\n  TickLiquidityProviderCount = 'tick__liquidityProviderCount',\n  TickPoolAddress = 'tick__poolAddress',\n  TickPrice0 = 'tick__price0',\n  TickPrice1 = 'tick__price1',\n  TickTickIdx = 'tick__tickIdx',\n  TickUntrackedVolumeUsd = 'tick__untrackedVolumeUSD',\n  TickVolumeToken0 = 'tick__volumeToken0',\n  TickVolumeToken1 = 'tick__volumeToken1',\n  TickVolumeUsd = 'tick__volumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type Tick_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Tick_Filter>>>;\n  collectedFeesToken0?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesUSD?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  collectedFeesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  collectedFeesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  createdAtBlockNumber?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_gt?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_gte?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtBlockNumber_lt?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_lte?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_not?: Maybe<Scalars['BigInt']>;\n  createdAtBlockNumber_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_gte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  createdAtTimestamp_lt?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_lte?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not?: Maybe<Scalars['BigInt']>;\n  createdAtTimestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside0X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside0X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside0X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside1X128?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_gt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_gte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_in?: Maybe<Array<Scalars['BigInt']>>;\n  feeGrowthOutside1X128_lt?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_lte?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_not?: Maybe<Scalars['BigInt']>;\n  feeGrowthOutside1X128_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  liquidityGross?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_gte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityGross_lt?: Maybe<Scalars['BigInt']>;\n  liquidityGross_lte?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not?: Maybe<Scalars['BigInt']>;\n  liquidityGross_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_gte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityNet_lt?: Maybe<Scalars['BigInt']>;\n  liquidityNet_lte?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not?: Maybe<Scalars['BigInt']>;\n  liquidityNet_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityProviderCount?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_gt?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_gte?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  liquidityProviderCount_lt?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_lte?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_not?: Maybe<Scalars['BigInt']>;\n  liquidityProviderCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  or?: Maybe<Array<Maybe<Tick_Filter>>>;\n  pool?: Maybe<Scalars['String']>;\n  poolAddress?: Maybe<Scalars['String']>;\n  poolAddress_contains?: Maybe<Scalars['String']>;\n  poolAddress_contains_nocase?: Maybe<Scalars['String']>;\n  poolAddress_ends_with?: Maybe<Scalars['String']>;\n  poolAddress_ends_with_nocase?: Maybe<Scalars['String']>;\n  poolAddress_gt?: Maybe<Scalars['String']>;\n  poolAddress_gte?: Maybe<Scalars['String']>;\n  poolAddress_in?: Maybe<Array<Scalars['String']>>;\n  poolAddress_lt?: Maybe<Scalars['String']>;\n  poolAddress_lte?: Maybe<Scalars['String']>;\n  poolAddress_not?: Maybe<Scalars['String']>;\n  poolAddress_not_contains?: Maybe<Scalars['String']>;\n  poolAddress_not_contains_nocase?: Maybe<Scalars['String']>;\n  poolAddress_not_ends_with?: Maybe<Scalars['String']>;\n  poolAddress_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  poolAddress_not_in?: Maybe<Array<Scalars['String']>>;\n  poolAddress_not_starts_with?: Maybe<Scalars['String']>;\n  poolAddress_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  poolAddress_starts_with?: Maybe<Scalars['String']>;\n  poolAddress_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_?: Maybe<Pool_Filter>;\n  pool_contains?: Maybe<Scalars['String']>;\n  pool_contains_nocase?: Maybe<Scalars['String']>;\n  pool_ends_with?: Maybe<Scalars['String']>;\n  pool_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_gt?: Maybe<Scalars['String']>;\n  pool_gte?: Maybe<Scalars['String']>;\n  pool_in?: Maybe<Array<Scalars['String']>>;\n  pool_lt?: Maybe<Scalars['String']>;\n  pool_lte?: Maybe<Scalars['String']>;\n  pool_not?: Maybe<Scalars['String']>;\n  pool_not_contains?: Maybe<Scalars['String']>;\n  pool_not_contains_nocase?: Maybe<Scalars['String']>;\n  pool_not_ends_with?: Maybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  pool_not_in?: Maybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: Maybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  pool_starts_with?: Maybe<Scalars['String']>;\n  pool_starts_with_nocase?: Maybe<Scalars['String']>;\n  price0?: Maybe<Scalars['BigDecimal']>;\n  price0_gt?: Maybe<Scalars['BigDecimal']>;\n  price0_gte?: Maybe<Scalars['BigDecimal']>;\n  price0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  price0_lt?: Maybe<Scalars['BigDecimal']>;\n  price0_lte?: Maybe<Scalars['BigDecimal']>;\n  price0_not?: Maybe<Scalars['BigDecimal']>;\n  price0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  price1?: Maybe<Scalars['BigDecimal']>;\n  price1_gt?: Maybe<Scalars['BigDecimal']>;\n  price1_gte?: Maybe<Scalars['BigDecimal']>;\n  price1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  price1_lt?: Maybe<Scalars['BigDecimal']>;\n  price1_lte?: Maybe<Scalars['BigDecimal']>;\n  price1_not?: Maybe<Scalars['BigDecimal']>;\n  price1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  tickIdx?: Maybe<Scalars['BigInt']>;\n  tickIdx_gt?: Maybe<Scalars['BigInt']>;\n  tickIdx_gte?: Maybe<Scalars['BigInt']>;\n  tickIdx_in?: Maybe<Array<Scalars['BigInt']>>;\n  tickIdx_lt?: Maybe<Scalars['BigInt']>;\n  tickIdx_lte?: Maybe<Scalars['BigInt']>;\n  tickIdx_not?: Maybe<Scalars['BigInt']>;\n  tickIdx_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken0_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken0_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeToken1_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not?: Maybe<Scalars['BigDecimal']>;\n  volumeToken1_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Tick_OrderBy {\n  CollectedFeesToken0 = 'collectedFeesToken0',\n  CollectedFeesToken1 = 'collectedFeesToken1',\n  CollectedFeesUsd = 'collectedFeesUSD',\n  CreatedAtBlockNumber = 'createdAtBlockNumber',\n  CreatedAtTimestamp = 'createdAtTimestamp',\n  FeeGrowthOutside0X128 = 'feeGrowthOutside0X128',\n  FeeGrowthOutside1X128 = 'feeGrowthOutside1X128',\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  LiquidityGross = 'liquidityGross',\n  LiquidityNet = 'liquidityNet',\n  LiquidityProviderCount = 'liquidityProviderCount',\n  Pool = 'pool',\n  PoolAddress = 'poolAddress',\n  PoolCollectedFeesToken0 = 'pool__collectedFeesToken0',\n  PoolCollectedFeesToken1 = 'pool__collectedFeesToken1',\n  PoolCollectedFeesUsd = 'pool__collectedFeesUSD',\n  PoolCommunityFee0 = 'pool__communityFee0',\n  PoolCommunityFee1 = 'pool__communityFee1',\n  PoolCreatedAtBlockNumber = 'pool__createdAtBlockNumber',\n  PoolCreatedAtTimestamp = 'pool__createdAtTimestamp',\n  PoolFee = 'pool__fee',\n  PoolFeeGrowthGlobal0X128 = 'pool__feeGrowthGlobal0X128',\n  PoolFeeGrowthGlobal1X128 = 'pool__feeGrowthGlobal1X128',\n  PoolFeesToken0 = 'pool__feesToken0',\n  PoolFeesToken1 = 'pool__feesToken1',\n  PoolFeesUsd = 'pool__feesUSD',\n  PoolId = 'pool__id',\n  PoolLiquidity = 'pool__liquidity',\n  PoolLiquidityProviderCount = 'pool__liquidityProviderCount',\n  PoolObservationIndex = 'pool__observationIndex',\n  PoolSqrtPrice = 'pool__sqrtPrice',\n  PoolTick = 'pool__tick',\n  PoolToken0Price = 'pool__token0Price',\n  PoolToken1Price = 'pool__token1Price',\n  PoolTotalValueLockedMatic = 'pool__totalValueLockedMatic',\n  PoolTotalValueLockedToken0 = 'pool__totalValueLockedToken0',\n  PoolTotalValueLockedToken1 = 'pool__totalValueLockedToken1',\n  PoolTotalValueLockedUsd = 'pool__totalValueLockedUSD',\n  PoolTotalValueLockedUsdUntracked = 'pool__totalValueLockedUSDUntracked',\n  PoolTxCount = 'pool__txCount',\n  PoolUntrackedFeesUsd = 'pool__untrackedFeesUSD',\n  PoolUntrackedVolumeUsd = 'pool__untrackedVolumeUSD',\n  PoolVolumeToken0 = 'pool__volumeToken0',\n  PoolVolumeToken1 = 'pool__volumeToken1',\n  PoolVolumeUsd = 'pool__volumeUSD',\n  Price0 = 'price0',\n  Price1 = 'price1',\n  TickIdx = 'tickIdx',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  VolumeToken0 = 'volumeToken0',\n  VolumeToken1 = 'volumeToken1',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type Token = {\n  __typename?: 'Token';\n  decimals: Scalars['BigInt'];\n  derivedMatic: Scalars['BigDecimal'];\n  feesUSD: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  poolCount: Scalars['BigInt'];\n  symbol: Scalars['String'];\n  tokenDayData: Array<TokenDayData>;\n  totalSupply: Scalars['BigInt'];\n  totalValueLocked: Scalars['BigDecimal'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  totalValueLockedUSDUntracked: Scalars['BigDecimal'];\n  txCount: Scalars['BigInt'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volume: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n  whitelistPools: Array<Pool>;\n};\n\n\nexport type TokenTokenDayDataArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<TokenDayData_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<TokenDayData_Filter>;\n};\n\n\nexport type TokenWhitelistPoolsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Pool_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Pool_Filter>;\n};\n\nexport type TokenDayData = {\n  __typename?: 'TokenDayData';\n  close: Scalars['BigDecimal'];\n  date: Scalars['Int'];\n  feesUSD: Scalars['BigDecimal'];\n  high: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  low: Scalars['BigDecimal'];\n  open: Scalars['BigDecimal'];\n  priceUSD: Scalars['BigDecimal'];\n  token: Token;\n  totalValueLocked: Scalars['BigDecimal'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volume: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TokenDayData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<TokenDayData_Filter>>>;\n  close?: Maybe<Scalars['BigDecimal']>;\n  close_gt?: Maybe<Scalars['BigDecimal']>;\n  close_gte?: Maybe<Scalars['BigDecimal']>;\n  close_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  close_lt?: Maybe<Scalars['BigDecimal']>;\n  close_lte?: Maybe<Scalars['BigDecimal']>;\n  close_not?: Maybe<Scalars['BigDecimal']>;\n  close_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  date?: Maybe<Scalars['Int']>;\n  date_gt?: Maybe<Scalars['Int']>;\n  date_gte?: Maybe<Scalars['Int']>;\n  date_in?: Maybe<Array<Scalars['Int']>>;\n  date_lt?: Maybe<Scalars['Int']>;\n  date_lte?: Maybe<Scalars['Int']>;\n  date_not?: Maybe<Scalars['Int']>;\n  date_not_in?: Maybe<Array<Scalars['Int']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high?: Maybe<Scalars['BigDecimal']>;\n  high_gt?: Maybe<Scalars['BigDecimal']>;\n  high_gte?: Maybe<Scalars['BigDecimal']>;\n  high_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high_lt?: Maybe<Scalars['BigDecimal']>;\n  high_lte?: Maybe<Scalars['BigDecimal']>;\n  high_not?: Maybe<Scalars['BigDecimal']>;\n  high_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  low?: Maybe<Scalars['BigDecimal']>;\n  low_gt?: Maybe<Scalars['BigDecimal']>;\n  low_gte?: Maybe<Scalars['BigDecimal']>;\n  low_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  low_lt?: Maybe<Scalars['BigDecimal']>;\n  low_lte?: Maybe<Scalars['BigDecimal']>;\n  low_not?: Maybe<Scalars['BigDecimal']>;\n  low_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open?: Maybe<Scalars['BigDecimal']>;\n  open_gt?: Maybe<Scalars['BigDecimal']>;\n  open_gte?: Maybe<Scalars['BigDecimal']>;\n  open_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open_lt?: Maybe<Scalars['BigDecimal']>;\n  open_lte?: Maybe<Scalars['BigDecimal']>;\n  open_not?: Maybe<Scalars['BigDecimal']>;\n  open_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  or?: Maybe<Array<Maybe<TokenDayData_Filter>>>;\n  priceUSD?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  priceUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_not?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token?: Maybe<Scalars['String']>;\n  token_?: Maybe<Token_Filter>;\n  token_contains?: Maybe<Scalars['String']>;\n  token_contains_nocase?: Maybe<Scalars['String']>;\n  token_ends_with?: Maybe<Scalars['String']>;\n  token_ends_with_nocase?: Maybe<Scalars['String']>;\n  token_gt?: Maybe<Scalars['String']>;\n  token_gte?: Maybe<Scalars['String']>;\n  token_in?: Maybe<Array<Scalars['String']>>;\n  token_lt?: Maybe<Scalars['String']>;\n  token_lte?: Maybe<Scalars['String']>;\n  token_not?: Maybe<Scalars['String']>;\n  token_not_contains?: Maybe<Scalars['String']>;\n  token_not_contains_nocase?: Maybe<Scalars['String']>;\n  token_not_ends_with?: Maybe<Scalars['String']>;\n  token_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token_not_in?: Maybe<Array<Scalars['String']>>;\n  token_not_starts_with?: Maybe<Scalars['String']>;\n  token_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token_starts_with?: Maybe<Scalars['String']>;\n  token_starts_with_nocase?: Maybe<Scalars['String']>;\n  totalValueLocked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_gt?: Maybe<Scalars['BigDecimal']>;\n  volume_gte?: Maybe<Scalars['BigDecimal']>;\n  volume_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_lt?: Maybe<Scalars['BigDecimal']>;\n  volume_lte?: Maybe<Scalars['BigDecimal']>;\n  volume_not?: Maybe<Scalars['BigDecimal']>;\n  volume_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TokenDayData_OrderBy {\n  Close = 'close',\n  Date = 'date',\n  FeesUsd = 'feesUSD',\n  High = 'high',\n  Id = 'id',\n  Low = 'low',\n  Open = 'open',\n  PriceUsd = 'priceUSD',\n  Token = 'token',\n  TokenDecimals = 'token__decimals',\n  TokenDerivedMatic = 'token__derivedMatic',\n  TokenFeesUsd = 'token__feesUSD',\n  TokenId = 'token__id',\n  TokenName = 'token__name',\n  TokenPoolCount = 'token__poolCount',\n  TokenSymbol = 'token__symbol',\n  TokenTotalSupply = 'token__totalSupply',\n  TokenTotalValueLocked = 'token__totalValueLocked',\n  TokenTotalValueLockedUsd = 'token__totalValueLockedUSD',\n  TokenTotalValueLockedUsdUntracked = 'token__totalValueLockedUSDUntracked',\n  TokenTxCount = 'token__txCount',\n  TokenUntrackedVolumeUsd = 'token__untrackedVolumeUSD',\n  TokenVolume = 'token__volume',\n  TokenVolumeUsd = 'token__volumeUSD',\n  TotalValueLocked = 'totalValueLocked',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  Volume = 'volume',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type TokenHourData = {\n  __typename?: 'TokenHourData';\n  close: Scalars['BigDecimal'];\n  feesUSD: Scalars['BigDecimal'];\n  high: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  low: Scalars['BigDecimal'];\n  open: Scalars['BigDecimal'];\n  periodStartUnix: Scalars['Int'];\n  priceUSD: Scalars['BigDecimal'];\n  token: Token;\n  totalValueLocked: Scalars['BigDecimal'];\n  totalValueLockedUSD: Scalars['BigDecimal'];\n  untrackedVolumeUSD: Scalars['BigDecimal'];\n  volume: Scalars['BigDecimal'];\n  volumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TokenHourData_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<TokenHourData_Filter>>>;\n  close?: Maybe<Scalars['BigDecimal']>;\n  close_gt?: Maybe<Scalars['BigDecimal']>;\n  close_gte?: Maybe<Scalars['BigDecimal']>;\n  close_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  close_lt?: Maybe<Scalars['BigDecimal']>;\n  close_lte?: Maybe<Scalars['BigDecimal']>;\n  close_not?: Maybe<Scalars['BigDecimal']>;\n  close_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high?: Maybe<Scalars['BigDecimal']>;\n  high_gt?: Maybe<Scalars['BigDecimal']>;\n  high_gte?: Maybe<Scalars['BigDecimal']>;\n  high_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  high_lt?: Maybe<Scalars['BigDecimal']>;\n  high_lte?: Maybe<Scalars['BigDecimal']>;\n  high_not?: Maybe<Scalars['BigDecimal']>;\n  high_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  low?: Maybe<Scalars['BigDecimal']>;\n  low_gt?: Maybe<Scalars['BigDecimal']>;\n  low_gte?: Maybe<Scalars['BigDecimal']>;\n  low_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  low_lt?: Maybe<Scalars['BigDecimal']>;\n  low_lte?: Maybe<Scalars['BigDecimal']>;\n  low_not?: Maybe<Scalars['BigDecimal']>;\n  low_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open?: Maybe<Scalars['BigDecimal']>;\n  open_gt?: Maybe<Scalars['BigDecimal']>;\n  open_gte?: Maybe<Scalars['BigDecimal']>;\n  open_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  open_lt?: Maybe<Scalars['BigDecimal']>;\n  open_lte?: Maybe<Scalars['BigDecimal']>;\n  open_not?: Maybe<Scalars['BigDecimal']>;\n  open_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  or?: Maybe<Array<Maybe<TokenHourData_Filter>>>;\n  periodStartUnix?: Maybe<Scalars['Int']>;\n  periodStartUnix_gt?: Maybe<Scalars['Int']>;\n  periodStartUnix_gte?: Maybe<Scalars['Int']>;\n  periodStartUnix_in?: Maybe<Array<Scalars['Int']>>;\n  periodStartUnix_lt?: Maybe<Scalars['Int']>;\n  periodStartUnix_lte?: Maybe<Scalars['Int']>;\n  periodStartUnix_not?: Maybe<Scalars['Int']>;\n  periodStartUnix_not_in?: Maybe<Array<Scalars['Int']>>;\n  priceUSD?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  priceUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_not?: Maybe<Scalars['BigDecimal']>;\n  priceUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  token?: Maybe<Scalars['String']>;\n  token_?: Maybe<Token_Filter>;\n  token_contains?: Maybe<Scalars['String']>;\n  token_contains_nocase?: Maybe<Scalars['String']>;\n  token_ends_with?: Maybe<Scalars['String']>;\n  token_ends_with_nocase?: Maybe<Scalars['String']>;\n  token_gt?: Maybe<Scalars['String']>;\n  token_gte?: Maybe<Scalars['String']>;\n  token_in?: Maybe<Array<Scalars['String']>>;\n  token_lt?: Maybe<Scalars['String']>;\n  token_lte?: Maybe<Scalars['String']>;\n  token_not?: Maybe<Scalars['String']>;\n  token_not_contains?: Maybe<Scalars['String']>;\n  token_not_contains_nocase?: Maybe<Scalars['String']>;\n  token_not_ends_with?: Maybe<Scalars['String']>;\n  token_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  token_not_in?: Maybe<Array<Scalars['String']>>;\n  token_not_starts_with?: Maybe<Scalars['String']>;\n  token_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  token_starts_with?: Maybe<Scalars['String']>;\n  token_starts_with_nocase?: Maybe<Scalars['String']>;\n  totalValueLocked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_gt?: Maybe<Scalars['BigDecimal']>;\n  volume_gte?: Maybe<Scalars['BigDecimal']>;\n  volume_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_lt?: Maybe<Scalars['BigDecimal']>;\n  volume_lte?: Maybe<Scalars['BigDecimal']>;\n  volume_not?: Maybe<Scalars['BigDecimal']>;\n  volume_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TokenHourData_OrderBy {\n  Close = 'close',\n  FeesUsd = 'feesUSD',\n  High = 'high',\n  Id = 'id',\n  Low = 'low',\n  Open = 'open',\n  PeriodStartUnix = 'periodStartUnix',\n  PriceUsd = 'priceUSD',\n  Token = 'token',\n  TokenDecimals = 'token__decimals',\n  TokenDerivedMatic = 'token__derivedMatic',\n  TokenFeesUsd = 'token__feesUSD',\n  TokenId = 'token__id',\n  TokenName = 'token__name',\n  TokenPoolCount = 'token__poolCount',\n  TokenSymbol = 'token__symbol',\n  TokenTotalSupply = 'token__totalSupply',\n  TokenTotalValueLocked = 'token__totalValueLocked',\n  TokenTotalValueLockedUsd = 'token__totalValueLockedUSD',\n  TokenTotalValueLockedUsdUntracked = 'token__totalValueLockedUSDUntracked',\n  TokenTxCount = 'token__txCount',\n  TokenUntrackedVolumeUsd = 'token__untrackedVolumeUSD',\n  TokenVolume = 'token__volume',\n  TokenVolumeUsd = 'token__volumeUSD',\n  TotalValueLocked = 'totalValueLocked',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  Volume = 'volume',\n  VolumeUsd = 'volumeUSD'\n}\n\nexport type Token_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Token_Filter>>>;\n  decimals?: Maybe<Scalars['BigInt']>;\n  decimals_gt?: Maybe<Scalars['BigInt']>;\n  decimals_gte?: Maybe<Scalars['BigInt']>;\n  decimals_in?: Maybe<Array<Scalars['BigInt']>>;\n  decimals_lt?: Maybe<Scalars['BigInt']>;\n  decimals_lte?: Maybe<Scalars['BigInt']>;\n  decimals_not?: Maybe<Scalars['BigInt']>;\n  decimals_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  derivedMatic?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_gt?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_gte?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  derivedMatic_lt?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_lte?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_not?: Maybe<Scalars['BigDecimal']>;\n  derivedMatic_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  feesUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not?: Maybe<Scalars['BigDecimal']>;\n  feesUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  name?: Maybe<Scalars['String']>;\n  name_contains?: Maybe<Scalars['String']>;\n  name_contains_nocase?: Maybe<Scalars['String']>;\n  name_ends_with?: Maybe<Scalars['String']>;\n  name_ends_with_nocase?: Maybe<Scalars['String']>;\n  name_gt?: Maybe<Scalars['String']>;\n  name_gte?: Maybe<Scalars['String']>;\n  name_in?: Maybe<Array<Scalars['String']>>;\n  name_lt?: Maybe<Scalars['String']>;\n  name_lte?: Maybe<Scalars['String']>;\n  name_not?: Maybe<Scalars['String']>;\n  name_not_contains?: Maybe<Scalars['String']>;\n  name_not_contains_nocase?: Maybe<Scalars['String']>;\n  name_not_ends_with?: Maybe<Scalars['String']>;\n  name_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  name_not_in?: Maybe<Array<Scalars['String']>>;\n  name_not_starts_with?: Maybe<Scalars['String']>;\n  name_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  name_starts_with?: Maybe<Scalars['String']>;\n  name_starts_with_nocase?: Maybe<Scalars['String']>;\n  or?: Maybe<Array<Maybe<Token_Filter>>>;\n  poolCount?: Maybe<Scalars['BigInt']>;\n  poolCount_gt?: Maybe<Scalars['BigInt']>;\n  poolCount_gte?: Maybe<Scalars['BigInt']>;\n  poolCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  poolCount_lt?: Maybe<Scalars['BigInt']>;\n  poolCount_lte?: Maybe<Scalars['BigInt']>;\n  poolCount_not?: Maybe<Scalars['BigInt']>;\n  poolCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  symbol?: Maybe<Scalars['String']>;\n  symbol_contains?: Maybe<Scalars['String']>;\n  symbol_contains_nocase?: Maybe<Scalars['String']>;\n  symbol_ends_with?: Maybe<Scalars['String']>;\n  symbol_ends_with_nocase?: Maybe<Scalars['String']>;\n  symbol_gt?: Maybe<Scalars['String']>;\n  symbol_gte?: Maybe<Scalars['String']>;\n  symbol_in?: Maybe<Array<Scalars['String']>>;\n  symbol_lt?: Maybe<Scalars['String']>;\n  symbol_lte?: Maybe<Scalars['String']>;\n  symbol_not?: Maybe<Scalars['String']>;\n  symbol_not_contains?: Maybe<Scalars['String']>;\n  symbol_not_contains_nocase?: Maybe<Scalars['String']>;\n  symbol_not_ends_with?: Maybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: Maybe<Scalars['String']>;\n  symbol_not_in?: Maybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: Maybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: Maybe<Scalars['String']>;\n  symbol_starts_with?: Maybe<Scalars['String']>;\n  symbol_starts_with_nocase?: Maybe<Scalars['String']>;\n  tokenDayData_?: Maybe<TokenDayData_Filter>;\n  totalSupply?: Maybe<Scalars['BigInt']>;\n  totalSupply_gt?: Maybe<Scalars['BigInt']>;\n  totalSupply_gte?: Maybe<Scalars['BigInt']>;\n  totalSupply_in?: Maybe<Array<Scalars['BigInt']>>;\n  totalSupply_lt?: Maybe<Scalars['BigInt']>;\n  totalSupply_lte?: Maybe<Scalars['BigInt']>;\n  totalSupply_not?: Maybe<Scalars['BigInt']>;\n  totalSupply_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  totalValueLocked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSDUntracked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSDUntracked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLockedUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLockedUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_gt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_gte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  totalValueLocked_lt?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_lte?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not?: Maybe<Scalars['BigDecimal']>;\n  totalValueLocked_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  txCount?: Maybe<Scalars['BigInt']>;\n  txCount_gt?: Maybe<Scalars['BigInt']>;\n  txCount_gte?: Maybe<Scalars['BigInt']>;\n  txCount_in?: Maybe<Array<Scalars['BigInt']>>;\n  txCount_lt?: Maybe<Scalars['BigInt']>;\n  txCount_lte?: Maybe<Scalars['BigInt']>;\n  txCount_not?: Maybe<Scalars['BigInt']>;\n  txCount_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  untrackedVolumeUSD?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  untrackedVolumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  untrackedVolumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_gte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volumeUSD_lt?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_lte?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not?: Maybe<Scalars['BigDecimal']>;\n  volumeUSD_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_gt?: Maybe<Scalars['BigDecimal']>;\n  volume_gte?: Maybe<Scalars['BigDecimal']>;\n  volume_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  volume_lt?: Maybe<Scalars['BigDecimal']>;\n  volume_lte?: Maybe<Scalars['BigDecimal']>;\n  volume_not?: Maybe<Scalars['BigDecimal']>;\n  volume_not_in?: Maybe<Array<Scalars['BigDecimal']>>;\n  whitelistPools?: Maybe<Array<Scalars['String']>>;\n  whitelistPools_?: Maybe<Pool_Filter>;\n  whitelistPools_contains?: Maybe<Array<Scalars['String']>>;\n  whitelistPools_contains_nocase?: Maybe<Array<Scalars['String']>>;\n  whitelistPools_not?: Maybe<Array<Scalars['String']>>;\n  whitelistPools_not_contains?: Maybe<Array<Scalars['String']>>;\n  whitelistPools_not_contains_nocase?: Maybe<Array<Scalars['String']>>;\n};\n\nexport enum Token_OrderBy {\n  Decimals = 'decimals',\n  DerivedMatic = 'derivedMatic',\n  FeesUsd = 'feesUSD',\n  Id = 'id',\n  Name = 'name',\n  PoolCount = 'poolCount',\n  Symbol = 'symbol',\n  TokenDayData = 'tokenDayData',\n  TotalSupply = 'totalSupply',\n  TotalValueLocked = 'totalValueLocked',\n  TotalValueLockedUsd = 'totalValueLockedUSD',\n  TotalValueLockedUsdUntracked = 'totalValueLockedUSDUntracked',\n  TxCount = 'txCount',\n  UntrackedVolumeUsd = 'untrackedVolumeUSD',\n  Volume = 'volume',\n  VolumeUsd = 'volumeUSD',\n  WhitelistPools = 'whitelistPools'\n}\n\nexport type Transaction = {\n  __typename?: 'Transaction';\n  blockNumber: Scalars['BigInt'];\n  burns: Array<Burn>;\n  collects: Array<Collect>;\n  flashed: Array<Flash>;\n  gasLimit: Scalars['BigInt'];\n  gasPrice: Scalars['BigInt'];\n  id: Scalars['ID'];\n  mints: Array<Mint>;\n  swaps: Array<Swap>;\n  timestamp: Scalars['BigInt'];\n};\n\n\nexport type TransactionBurnsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Burn_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Burn_Filter>;\n};\n\n\nexport type TransactionCollectsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Collect_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Collect_Filter>;\n};\n\n\nexport type TransactionFlashedArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Flash_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Flash_Filter>;\n};\n\n\nexport type TransactionMintsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Mint_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Mint_Filter>;\n};\n\n\nexport type TransactionSwapsArgs = {\n  first?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Swap_OrderBy>;\n  orderDirection?: Maybe<OrderDirection>;\n  skip?: Maybe<Scalars['Int']>;\n  where?: Maybe<Swap_Filter>;\n};\n\nexport type Transaction_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: Maybe<BlockChangedFilter>;\n  and?: Maybe<Array<Maybe<Transaction_Filter>>>;\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  blockNumber_gt?: Maybe<Scalars['BigInt']>;\n  blockNumber_gte?: Maybe<Scalars['BigInt']>;\n  blockNumber_in?: Maybe<Array<Scalars['BigInt']>>;\n  blockNumber_lt?: Maybe<Scalars['BigInt']>;\n  blockNumber_lte?: Maybe<Scalars['BigInt']>;\n  blockNumber_not?: Maybe<Scalars['BigInt']>;\n  blockNumber_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  burns_?: Maybe<Burn_Filter>;\n  collects_?: Maybe<Collect_Filter>;\n  flashed_?: Maybe<Flash_Filter>;\n  gasLimit?: Maybe<Scalars['BigInt']>;\n  gasLimit_gt?: Maybe<Scalars['BigInt']>;\n  gasLimit_gte?: Maybe<Scalars['BigInt']>;\n  gasLimit_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasLimit_lt?: Maybe<Scalars['BigInt']>;\n  gasLimit_lte?: Maybe<Scalars['BigInt']>;\n  gasLimit_not?: Maybe<Scalars['BigInt']>;\n  gasLimit_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasPrice?: Maybe<Scalars['BigInt']>;\n  gasPrice_gt?: Maybe<Scalars['BigInt']>;\n  gasPrice_gte?: Maybe<Scalars['BigInt']>;\n  gasPrice_in?: Maybe<Array<Scalars['BigInt']>>;\n  gasPrice_lt?: Maybe<Scalars['BigInt']>;\n  gasPrice_lte?: Maybe<Scalars['BigInt']>;\n  gasPrice_not?: Maybe<Scalars['BigInt']>;\n  gasPrice_not_in?: Maybe<Array<Scalars['BigInt']>>;\n  id?: Maybe<Scalars['ID']>;\n  id_gt?: Maybe<Scalars['ID']>;\n  id_gte?: Maybe<Scalars['ID']>;\n  id_in?: Maybe<Array<Scalars['ID']>>;\n  id_lt?: Maybe<Scalars['ID']>;\n  id_lte?: Maybe<Scalars['ID']>;\n  id_not?: Maybe<Scalars['ID']>;\n  id_not_in?: Maybe<Array<Scalars['ID']>>;\n  mints_?: Maybe<Mint_Filter>;\n  or?: Maybe<Array<Maybe<Transaction_Filter>>>;\n  swaps_?: Maybe<Swap_Filter>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n  timestamp_gt?: Maybe<Scalars['BigInt']>;\n  timestamp_gte?: Maybe<Scalars['BigInt']>;\n  timestamp_in?: Maybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: Maybe<Scalars['BigInt']>;\n  timestamp_lte?: Maybe<Scalars['BigInt']>;\n  timestamp_not?: Maybe<Scalars['BigInt']>;\n  timestamp_not_in?: Maybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum Transaction_OrderBy {\n  BlockNumber = 'blockNumber',\n  Burns = 'burns',\n  Collects = 'collects',\n  Flashed = 'flashed',\n  GasLimit = 'gasLimit',\n  GasPrice = 'gasPrice',\n  Id = 'id',\n  Mints = 'mints',\n  Swaps = 'swaps',\n  Timestamp = 'timestamp'\n}\n\nexport type _Block_ = {\n  __typename?: '_Block_';\n  /** The hash of the block */\n  hash?: Maybe<Scalars['Bytes']>;\n  /** The block number */\n  number: Scalars['Int'];\n  /** Integer representation of the timestamp stored in blocks for the chain */\n  timestamp?: Maybe<Scalars['Int']>;\n};\n\n/** The type for the top-level _meta field */\nexport type _Meta_ = {\n  __typename?: '_Meta_';\n  /**\n   * Information about a specific subgraph block. The hash of the block\n   * will be null if the _meta field has a block constraint that asks for\n   * a block number. It will be filled if the _meta field has no block constraint\n   * and therefore asks for the latest  block\n   */\n  block: _Block_;\n  /** The deployment ID */\n  deployment: Scalars['String'];\n  /** If `true`, the subgraph encountered indexing errors at some past block */\n  hasIndexingErrors: Scalars['Boolean'];\n};\n\nexport enum _SubgraphErrorPolicy_ {\n  /** Data will be returned even if the subgraph has indexing errors */\n  Allow = 'allow',\n  /** If the subgraph has indexing errors, data will be omitted. The default. */\n  Deny = 'deny'\n}\n\nexport type PricesQueryVariables = Exact<{\n  block24: Scalars['Int'];\n  block48: Scalars['Int'];\n  blockWeek: Scalars['Int'];\n}>;\n\n\nexport type PricesQuery = (\n  { __typename?: 'Query' }\n  & { current: Array<(\n    { __typename?: 'Bundle' }\n    & Pick<Bundle, 'maticPriceUSD'>\n  )>, oneDay: Array<(\n    { __typename?: 'Bundle' }\n    & Pick<Bundle, 'maticPriceUSD'>\n  )>, twoDay: Array<(\n    { __typename?: 'Bundle' }\n    & Pick<Bundle, 'maticPriceUSD'>\n  )>, oneWeek: Array<(\n    { __typename?: 'Bundle' }\n    & Pick<Bundle, 'maticPriceUSD'>\n  )> }\n);\n\nexport type AllV3TicksQueryVariables = Exact<{\n  poolAddress: Scalars['String'];\n  skip: Scalars['Int'];\n}>;\n\n\nexport type AllV3TicksQuery = (\n  { __typename?: 'Query' }\n  & { ticks: Array<(\n    { __typename?: 'Tick' }\n    & Pick<Tick, 'tickIdx' | 'liquidityNet' | 'price0' | 'price1'>\n  )> }\n);\n\nexport type FeeTierDistributionQueryVariables = Exact<{\n  token0: Scalars['String'];\n  token1: Scalars['String'];\n}>;\n\n\nexport type FeeTierDistributionQuery = (\n  { __typename?: 'Query' }\n  & { _meta?: Maybe<(\n    { __typename?: '_Meta_' }\n    & { block: (\n      { __typename?: '_Block_' }\n      & Pick<_Block_, 'number'>\n    ) }\n  )>, asToken0: Array<(\n    { __typename?: 'Pool' }\n    & Pick<Pool, 'fee' | 'totalValueLockedToken0' | 'totalValueLockedToken1'>\n  )>, asToken1: Array<(\n    { __typename?: 'Pool' }\n    & Pick<Pool, 'fee' | 'totalValueLockedToken0' | 'totalValueLockedToken1'>\n  )> }\n);\n\nexport type LimitFarmQueryVariables = Exact<{\n  time?: Maybe<Scalars['BigInt']>;\n}>;\n\n\nexport type LimitFarmQuery = (\n  { __typename?: 'Query' }\n  & { limitFarmings: Array<(\n    { __typename?: 'LimitFarming' }\n    & Pick<LimitFarming, 'startTime' | 'endTime'>\n  )> }\n);\n\nexport type EternalFarmQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type EternalFarmQuery = (\n  { __typename?: 'Query' }\n  & { eternalFarmings: Array<(\n    { __typename?: 'EternalFarming' }\n    & Pick<EternalFarming, 'startTime' | 'endTime'>\n  )> }\n);\n\nexport type FetchRewardsQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type FetchRewardsQuery = (\n  { __typename?: 'Query' }\n  & { rewards: Array<(\n    { __typename?: 'Reward' }\n    & Pick<Reward, 'id' | 'rewardAddress' | 'amount' | 'owner'>\n  )> }\n);\n\nexport type FetchTokenQueryVariables = Exact<{\n  tokenId?: Maybe<Scalars['ID']>;\n}>;\n\n\nexport type FetchTokenQuery = (\n  { __typename?: 'Query' }\n  & { tokens: Array<(\n    { __typename?: 'Token' }\n    & Pick<Token, 'id' | 'symbol' | 'name' | 'decimals'>\n  )> }\n);\n\nexport type FetchLimitQueryVariables = Exact<{\n  limitFarmingId?: Maybe<Scalars['ID']>;\n}>;\n\n\nexport type FetchLimitQuery = (\n  { __typename?: 'Query' }\n  & { limitFarmings: Array<(\n    { __typename?: 'LimitFarming' }\n    & Pick<LimitFarming, 'id' | 'rewardToken' | 'bonusRewardToken' | 'pool' | 'startTime' | 'endTime' | 'reward' | 'bonusReward' | 'multiplierToken' | 'createdAtTimestamp' | 'tier1Multiplier' | 'tier2Multiplier' | 'tier3Multiplier' | 'tokenAmountForTier1' | 'tokenAmountForTier2' | 'tokenAmountForTier3' | 'enterStartTime' | 'isDetached'>\n  )> }\n);\n\nexport type FetchEternalFarmQueryVariables = Exact<{\n  farmId?: Maybe<Scalars['ID']>;\n}>;\n\n\nexport type FetchEternalFarmQuery = (\n  { __typename?: 'Query' }\n  & { eternalFarmings: Array<(\n    { __typename?: 'EternalFarming' }\n    & Pick<EternalFarming, 'id' | 'rewardToken' | 'bonusRewardToken' | 'pool' | 'startTime' | 'endTime' | 'reward' | 'bonusReward' | 'rewardRate' | 'bonusRewardRate' | 'isDetached' | 'tier1Multiplier' | 'tier2Multiplier' | 'tier3Multiplier' | 'tokenAmountForTier1' | 'tokenAmountForTier2' | 'tokenAmountForTier3' | 'multiplierToken'>\n  )> }\n);\n\nexport type FetchPoolQueryVariables = Exact<{\n  poolId?: Maybe<Scalars['ID']>;\n}>;\n\n\nexport type FetchPoolQuery = (\n  { __typename?: 'Query' }\n  & { pools: Array<(\n    { __typename?: 'Pool' }\n    & Pick<Pool, 'id' | 'fee' | 'sqrtPrice' | 'liquidity' | 'tick' | 'feesUSD' | 'untrackedFeesUSD'>\n    & { token0: (\n      { __typename?: 'Token' }\n      & Pick<Token, 'id' | 'decimals' | 'symbol'>\n    ), token1: (\n      { __typename?: 'Token' }\n      & Pick<Token, 'id' | 'decimals' | 'symbol'>\n    ) }\n  )> }\n);\n\nexport type FeeHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n  startTimestamp?: Maybe<Scalars['BigInt']>;\n  endTimestamp?: Maybe<Scalars['BigInt']>;\n}>;\n\n\nexport type FeeHourDataQuery = (\n  { __typename?: 'Query' }\n  & { feeHourDatas: Array<(\n    { __typename?: 'FeeHourData' }\n    & Pick<FeeHourData, 'id' | 'pool' | 'fee' | 'changesCount' | 'timestamp' | 'minFee' | 'maxFee' | 'startFee' | 'endFee'>\n  )> }\n);\n\nexport type LastFeeHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type LastFeeHourDataQuery = (\n  { __typename?: 'Query' }\n  & { feeHourDatas: Array<(\n    { __typename?: 'FeeHourData' }\n    & Pick<FeeHourData, 'id' | 'pool' | 'fee' | 'changesCount' | 'timestamp' | 'minFee' | 'maxFee' | 'startFee' | 'endFee'>\n  )> }\n);\n\nexport type LastNotEmptyHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['BigInt']>;\n}>;\n\n\nexport type LastNotEmptyHourDataQuery = (\n  { __typename?: 'Query' }\n  & { feeHourDatas: Array<(\n    { __typename?: 'FeeHourData' }\n    & Pick<FeeHourData, 'id' | 'pool' | 'fee' | 'changesCount' | 'timestamp' | 'minFee' | 'maxFee' | 'startFee' | 'endFee'>\n  )> }\n);\n\nexport type LastNotEmptyPoolHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['Int']>;\n}>;\n\n\nexport type LastNotEmptyPoolHourDataQuery = (\n  { __typename?: 'Query' }\n  & { poolHourDatas: Array<(\n    { __typename?: 'PoolHourData' }\n    & Pick<PoolHourData, 'periodStartUnix' | 'volumeUSD' | 'tvlUSD' | 'feesUSD' | 'untrackedVolumeUSD' | 'token1Price' | 'token0Price'>\n  )> }\n);\n\nexport type LastPoolHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type LastPoolHourDataQuery = (\n  { __typename?: 'Query' }\n  & { poolHourDatas: Array<(\n    { __typename?: 'PoolHourData' }\n    & Pick<PoolHourData, 'periodStartUnix' | 'volumeUSD' | 'tvlUSD' | 'feesUSD' | 'untrackedVolumeUSD'>\n  )> }\n);\n\nexport type PoolHourDataQueryVariables = Exact<{\n  pool?: Maybe<Scalars['String']>;\n  startTimestamp?: Maybe<Scalars['Int']>;\n  endTimestamp?: Maybe<Scalars['Int']>;\n}>;\n\n\nexport type PoolHourDataQuery = (\n  { __typename?: 'Query' }\n  & { poolHourDatas: Array<(\n    { __typename?: 'PoolHourData' }\n    & Pick<PoolHourData, 'periodStartUnix' | 'volumeUSD' | 'tvlUSD' | 'feesUSD' | 'untrackedVolumeUSD' | 'token0Price' | 'token1Price'>\n  )> }\n);\n\nexport type LastEventQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LastEventQuery = (\n  { __typename?: 'Query' }\n  & { limitFarmings: Array<(\n    { __typename?: 'LimitFarming' }\n    & Pick<LimitFarming, 'createdAtTimestamp' | 'id' | 'startTime' | 'endTime'>\n  )> }\n);\n\nexport type FutureEventsQueryVariables = Exact<{\n  timestamp?: Maybe<Scalars['BigInt']>;\n}>;\n\n\nexport type FutureEventsQuery = (\n  { __typename?: 'Query' }\n  & { limitFarmings: Array<(\n    { __typename?: 'LimitFarming' }\n    & Pick<LimitFarming, 'id' | 'createdAtTimestamp' | 'rewardToken' | 'bonusReward' | 'bonusRewardToken' | 'pool' | 'startTime' | 'endTime' | 'reward' | 'tier1Multiplier' | 'tier2Multiplier' | 'tier3Multiplier' | 'tokenAmountForTier1' | 'tokenAmountForTier2' | 'tokenAmountForTier3' | 'multiplierToken' | 'enterStartTime' | 'isDetached'>\n  )> }\n);\n\nexport type CurrentEventsQueryVariables = Exact<{\n  startTime?: Maybe<Scalars['BigInt']>;\n  endTime?: Maybe<Scalars['BigInt']>;\n}>;\n\n\nexport type CurrentEventsQuery = (\n  { __typename?: 'Query' }\n  & { limitFarmings: Array<(\n    { __typename?: 'LimitFarming' }\n    & Pick<LimitFarming, 'id' | 'rewardToken' | 'bonusReward' | 'bonusRewardToken' | 'pool' | 'startTime' | 'endTime' | 'reward' | 'tier1Multiplier' | 'tier2Multiplier' | 'tier3Multiplier' | 'tokenAmountForTier1' | 'tokenAmountForTier2' | 'tokenAmountForTier3' | 'enterStartTime' | 'multiplierToken' | 'isDetached'>\n  )> }\n);\n\nexport type TransferedPositionsQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type TransferedPositionsQuery = (\n  { __typename?: 'Query' }\n  & { deposits: Array<(\n    { __typename?: 'Deposit' }\n    & Pick<Deposit, 'id' | 'owner' | 'pool' | 'L2tokenId' | 'limitFarming' | 'eternalFarming' | 'onFarmingCenter'>\n  )> }\n);\n\nexport type HasTransferedPositionsQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type HasTransferedPositionsQuery = (\n  { __typename?: 'Query' }\n  & { deposits: Array<(\n    { __typename?: 'Deposit' }\n    & Pick<Deposit, 'id'>\n  )> }\n);\n\nexport type PositionsOnEternalFarmingQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type PositionsOnEternalFarmingQuery = (\n  { __typename?: 'Query' }\n  & { deposits: Array<(\n    { __typename?: 'Deposit' }\n    & Pick<Deposit, 'id' | 'owner' | 'pool' | 'L2tokenId' | 'eternalFarming' | 'onFarmingCenter' | 'enteredInEternalFarming'>\n  )> }\n);\n\nexport type TransferedPositionsForPoolQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n  pool?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type TransferedPositionsForPoolQuery = (\n  { __typename?: 'Query' }\n  & { deposits: Array<(\n    { __typename?: 'Deposit' }\n    & Pick<Deposit, 'id' | 'owner' | 'pool' | 'L2tokenId' | 'limitFarming' | 'eternalFarming' | 'onFarmingCenter' | 'enteredInEternalFarming' | 'tokensLockedLimit' | 'tokensLockedEternal' | 'tierLimit' | 'tierEternal'>\n  )> }\n);\n\nexport type PositionsOnFarmingQueryVariables = Exact<{\n  account?: Maybe<Scalars['Bytes']>;\n  pool?: Maybe<Scalars['Bytes']>;\n}>;\n\n\nexport type PositionsOnFarmingQuery = (\n  { __typename?: 'Query' }\n  & { deposits: Array<(\n    { __typename?: 'Deposit' }\n    & Pick<Deposit, 'id'>\n  )> }\n);\n\nexport type InfiniteFarmsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type InfiniteFarmsQuery = (\n  { __typename?: 'Query' }\n  & { eternalFarmings: Array<(\n    { __typename?: 'EternalFarming' }\n    & Pick<EternalFarming, 'id' | 'rewardToken' | 'bonusRewardToken' | 'pool' | 'startTime' | 'endTime' | 'reward' | 'bonusReward' | 'rewardRate' | 'bonusRewardRate' | 'tokenAmountForTier1' | 'tokenAmountForTier2' | 'tokenAmountForTier3' | 'tier1Multiplier' | 'tier2Multiplier' | 'tier3Multiplier' | 'multiplierToken'>\n  )> }\n);\n\nexport type TopPoolsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type TopPoolsQuery = (\n  { __typename?: 'Query' }\n  & { pools: Array<(\n    { __typename?: 'Pool' }\n    & Pick<Pool, 'id'>\n  )> }\n);\n\nexport type TopTokensQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type TopTokensQuery = (\n  { __typename?: 'Query' }\n  & { tokens: Array<(\n    { __typename?: 'Token' }\n    & Pick<Token, 'id'>\n  )> }\n);\n\nexport type SurroundingTicksQueryVariables = Exact<{\n  poolAddress: Scalars['String'];\n  tickIdxLowerBound: Scalars['BigInt'];\n  tickIdxUpperBound: Scalars['BigInt'];\n  skip: Scalars['Int'];\n}>;\n\n\nexport type SurroundingTicksQuery = (\n  { __typename?: 'Query' }\n  & { ticks: Array<(\n    { __typename?: 'Tick' }\n    & Pick<Tick, 'tickIdx' | 'liquidityGross' | 'liquidityNet' | 'price0' | 'price1'>\n  )> }\n);\n\nexport type PopularPoolsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type PopularPoolsQuery = (\n  { __typename?: 'Query' }\n  & { pools: Array<(\n    { __typename?: 'Pool' }\n    & { token0: (\n      { __typename?: 'Token' }\n      & Pick<Token, 'id'>\n    ), token1: (\n      { __typename?: 'Token' }\n      & Pick<Token, 'id'>\n    ) }\n  )> }\n);\n\n\nexport const PricesDocument = `\n    query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\n  current: bundles(first: 1, subgraphError: allow) {\n    maticPriceUSD\n  }\n  oneDay: bundles(first: 1, block: {number: $block24}, subgraphError: allow) {\n    maticPriceUSD\n  }\n  twoDay: bundles(first: 1, block: {number: $block48}, subgraphError: allow) {\n    maticPriceUSD\n  }\n  oneWeek: bundles(first: 1, block: {number: $blockWeek}, subgraphError: allow) {\n    maticPriceUSD\n  }\n}\n    `;\nexport const AllV3TicksDocument = `\n    query allV3Ticks($poolAddress: String!, $skip: Int!) {\n  ticks(\n    first: 1000\n    skip: $skip\n    where: {poolAddress: $poolAddress}\n    orderBy: tickIdx\n  ) {\n    tickIdx\n    liquidityNet\n    price0\n    price1\n  }\n}\n    `;\nexport const FeeTierDistributionDocument = `\n    query feeTierDistribution($token0: String!, $token1: String!) {\n  _meta {\n    block {\n      number\n    }\n  }\n  asToken0: pools(\n    orderBy: totalValueLockedToken0\n    orderDirection: desc\n    where: {token0: $token0, token1: $token1}\n  ) {\n    fee\n    totalValueLockedToken0\n    totalValueLockedToken1\n  }\n  asToken1: pools(\n    orderBy: totalValueLockedToken0\n    orderDirection: desc\n    where: {token0: $token1, token1: $token0}\n  ) {\n    fee\n    totalValueLockedToken0\n    totalValueLockedToken1\n  }\n}\n    `;\nexport const LimitFarmDocument = `\n    query limitFarm($time: BigInt) {\n  limitFarmings(\n    orderBy: createdAtTimestamp\n    orderDirection: desc\n    first: 1\n    where: {startTime_gt: $time, isDetached: false}\n  ) {\n    startTime\n    endTime\n  }\n}\n    `;\nexport const EternalFarmDocument = `\n    query eternalFarm {\n  eternalFarmings(where: {isDetached: false}, first: 1) {\n    startTime\n    endTime\n  }\n}\n    `;\nexport const FetchRewardsDocument = `\n    query fetchRewards($account: Bytes) {\n  rewards(orderBy: amount, orderDirection: desc, where: {owner: $account}) {\n    id\n    rewardAddress\n    amount\n    owner\n  }\n}\n    `;\nexport const FetchTokenDocument = `\n    query fetchToken($tokenId: ID) {\n  tokens(where: {id: $tokenId}) {\n    id\n    symbol\n    name\n    decimals\n  }\n}\n    `;\nexport const FetchLimitDocument = `\n    query fetchLimit($limitFarmingId: ID) {\n  limitFarmings(where: {id: $limitFarmingId}) {\n    id\n    rewardToken\n    bonusRewardToken\n    pool\n    startTime\n    endTime\n    reward\n    bonusReward\n    multiplierToken\n    createdAtTimestamp\n    tier1Multiplier\n    tier2Multiplier\n    tier3Multiplier\n    tokenAmountForTier1\n    tokenAmountForTier2\n    tokenAmountForTier3\n    enterStartTime\n    isDetached\n  }\n}\n    `;\nexport const FetchEternalFarmDocument = `\n    query fetchEternalFarm($farmId: ID) {\n  eternalFarmings(where: {id: $farmId}) {\n    id\n    rewardToken\n    bonusRewardToken\n    pool\n    startTime\n    endTime\n    reward\n    bonusReward\n    rewardRate\n    bonusRewardRate\n    isDetached\n    tier1Multiplier\n    tier2Multiplier\n    tier3Multiplier\n    tokenAmountForTier1\n    tokenAmountForTier2\n    tokenAmountForTier3\n    multiplierToken\n  }\n}\n    `;\nexport const FetchPoolDocument = `\n    query fetchPool($poolId: ID) {\n  pools(where: {id: $poolId}) {\n    id\n    fee\n    token0 {\n      id\n      decimals\n      symbol\n    }\n    token1 {\n      id\n      decimals\n      symbol\n    }\n    sqrtPrice\n    liquidity\n    tick\n    feesUSD\n    untrackedFeesUSD\n  }\n}\n    `;\nexport const FeeHourDataDocument = `\n    query feeHourData($pool: String, $startTimestamp: BigInt, $endTimestamp: BigInt) {\n  feeHourDatas(\n    first: 1000\n    where: {pool: $pool, timestamp_gte: $startTimestamp, timestamp_lte: $endTimestamp}\n  ) {\n    id\n    pool\n    fee\n    changesCount\n    timestamp\n    minFee\n    maxFee\n    startFee\n    endFee\n  }\n}\n    `;\nexport const LastFeeHourDataDocument = `\n    query lastFeeHourData($pool: String) {\n  feeHourDatas(\n    first: 1\n    orderBy: timestamp\n    orderDirection: desc\n    where: {pool: $pool}\n  ) {\n    id\n    pool\n    fee\n    changesCount\n    timestamp\n    minFee\n    maxFee\n    startFee\n    endFee\n  }\n}\n    `;\nexport const LastNotEmptyHourDataDocument = `\n    query lastNotEmptyHourData($pool: String, $timestamp: BigInt) {\n  feeHourDatas(\n    first: 1\n    orderBy: timestamp\n    orderDirection: desc\n    where: {pool: $pool, timestamp_lt: $timestamp}\n  ) {\n    id\n    pool\n    fee\n    changesCount\n    timestamp\n    minFee\n    maxFee\n    startFee\n    endFee\n  }\n}\n    `;\nexport const LastNotEmptyPoolHourDataDocument = `\n    query lastNotEmptyPoolHourData($pool: String, $timestamp: Int) {\n  poolHourDatas(\n    first: 1\n    orderBy: periodStartUnix\n    orderDirection: desc\n    where: {pool: $pool, periodStartUnix_lt: $timestamp}\n  ) {\n    periodStartUnix\n    volumeUSD\n    tvlUSD\n    feesUSD\n    untrackedVolumeUSD\n    token1Price\n    token0Price\n  }\n}\n    `;\nexport const LastPoolHourDataDocument = `\n    query lastPoolHourData($pool: String) {\n  poolHourDatas(\n    first: 1\n    where: {pool: $pool}\n    orderBy: periodStartUnix\n    orderDirection: desc\n  ) {\n    periodStartUnix\n    volumeUSD\n    tvlUSD\n    feesUSD\n    untrackedVolumeUSD\n  }\n}\n    `;\nexport const PoolHourDataDocument = `\n    query poolHourData($pool: String, $startTimestamp: Int, $endTimestamp: Int) {\n  poolHourDatas(\n    first: 1000\n    where: {pool: $pool, periodStartUnix_gte: $startTimestamp, periodStartUnix_lte: $endTimestamp}\n    orderBy: periodStartUnix\n    orderDirection: asc\n    subgraphError: allow\n  ) {\n    periodStartUnix\n    volumeUSD\n    tvlUSD\n    feesUSD\n    untrackedVolumeUSD\n    token0Price\n    token1Price\n  }\n}\n    `;\nexport const LastEventDocument = `\n    query lastEvent {\n  limitFarmings(\n    first: 1\n    orderDirection: desc\n    orderBy: createdAtTimestamp\n    where: {isDetached: false}\n  ) {\n    createdAtTimestamp\n    id\n    startTime\n    endTime\n  }\n}\n    `;\nexport const FutureEventsDocument = `\n    query futureEvents($timestamp: BigInt) {\n  limitFarmings(\n    orderBy: startTime\n    orderDirection: asc\n    where: {startTime_gt: $timestamp, isDetached: false}\n  ) {\n    id\n    createdAtTimestamp\n    rewardToken\n    bonusReward\n    bonusRewardToken\n    pool\n    startTime\n    endTime\n    reward\n    tier1Multiplier\n    tier2Multiplier\n    tier3Multiplier\n    tokenAmountForTier1\n    tokenAmountForTier2\n    tokenAmountForTier3\n    multiplierToken\n    enterStartTime\n    isDetached\n  }\n}\n    `;\nexport const CurrentEventsDocument = `\n    query currentEvents($startTime: BigInt, $endTime: BigInt) {\n  limitFarmings(\n    orderBy: endTime\n    orderDirection: desc\n    where: {startTime_lte: $startTime, endTime_gt: $endTime, isDetached: false}\n  ) {\n    id\n    rewardToken\n    bonusReward\n    bonusRewardToken\n    pool\n    startTime\n    endTime\n    reward\n    tier1Multiplier\n    tier2Multiplier\n    tier3Multiplier\n    tokenAmountForTier1\n    tokenAmountForTier2\n    tokenAmountForTier3\n    enterStartTime\n    multiplierToken\n    isDetached\n  }\n}\n    `;\nexport const TransferedPositionsDocument = `\n    query transferedPositions($account: Bytes) {\n  deposits(\n    orderBy: id\n    orderDirection: desc\n    where: {owner: $account, onFarmingCenter: true}\n  ) {\n    id\n    owner\n    pool\n    L2tokenId\n    limitFarming\n    eternalFarming\n    onFarmingCenter\n  }\n}\n    `;\nexport const HasTransferedPositionsDocument = `\n    query hasTransferedPositions($account: Bytes) {\n  deposits(first: 1, where: {owner: $account, onFarmingCenter: true}) {\n    id\n  }\n}\n    `;\nexport const PositionsOnEternalFarmingDocument = `\n    query positionsOnEternalFarming($account: Bytes) {\n  deposits(\n    orderBy: id\n    orderDirection: desc\n    where: {owner: $account, onFarmingCenter: true, eternalFarming_not: null}\n  ) {\n    id\n    owner\n    pool\n    L2tokenId\n    eternalFarming\n    onFarmingCenter\n    enteredInEternalFarming\n  }\n}\n    `;\nexport const TransferedPositionsForPoolDocument = `\n    query transferedPositionsForPool($account: Bytes, $pool: Bytes) {\n  deposits(\n    orderBy: id\n    orderDirection: desc\n    where: {owner: $account, pool: $pool, liquidity_not: \"0\"}\n  ) {\n    id\n    owner\n    pool\n    L2tokenId\n    limitFarming\n    eternalFarming\n    onFarmingCenter\n    enteredInEternalFarming\n    tokensLockedLimit\n    tokensLockedEternal\n    tierLimit\n    tierEternal\n  }\n}\n    `;\nexport const PositionsOnFarmingDocument = `\n    query positionsOnFarming($account: Bytes, $pool: Bytes) {\n  deposits(\n    orderBy: id\n    orderDirection: desc\n    where: {owner: $account, pool: $pool, onFarmingCenter: true}\n  ) {\n    id\n  }\n}\n    `;\nexport const InfiniteFarmsDocument = `\n    query infiniteFarms {\n  eternalFarmings(where: {isDetached: false}) {\n    id\n    rewardToken\n    bonusRewardToken\n    pool\n    startTime\n    endTime\n    reward\n    bonusReward\n    rewardRate\n    bonusRewardRate\n    tokenAmountForTier1\n    tokenAmountForTier2\n    tokenAmountForTier3\n    tier1Multiplier\n    tier2Multiplier\n    tier3Multiplier\n    multiplierToken\n  }\n}\n    `;\nexport const TopPoolsDocument = `\n    query topPools {\n  pools(\n    first: 50\n    orderBy: totalValueLockedUSD\n    orderDirection: desc\n    subgraphError: allow\n  ) {\n    id\n  }\n}\n    `;\nexport const TopTokensDocument = `\n    query topTokens {\n  tokens(\n    first: 50\n    orderBy: totalValueLockedUSD\n    orderDirection: desc\n    subgraphError: allow\n  ) {\n    id\n  }\n}\n    `;\nexport const SurroundingTicksDocument = `\n    query surroundingTicks($poolAddress: String!, $tickIdxLowerBound: BigInt!, $tickIdxUpperBound: BigInt!, $skip: Int!) {\n  ticks(\n    subgraphError: allow\n    first: 1000\n    skip: $skip\n    where: {poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound}\n  ) {\n    tickIdx\n    liquidityGross\n    liquidityNet\n    price0\n    price1\n  }\n}\n    `;\nexport const PopularPoolsDocument = `\n    query popularPools {\n  pools(orderBy: totalValueLockedUSD, orderDirection: desc, first: 6) {\n    token0 {\n      id\n    }\n    token1 {\n      id\n    }\n  }\n}\n    `;\n\nconst injectedRtkApi = api.injectEndpoints({\n  endpoints: (build) => ({\n    prices: build.query<PricesQuery, PricesQueryVariables>({\n      query: (variables) => ({ document: PricesDocument, variables })\n    }),\n    allV3Ticks: build.query<AllV3TicksQuery, AllV3TicksQueryVariables>({\n      query: (variables) => ({ document: AllV3TicksDocument, variables })\n    }),\n    feeTierDistribution: build.query<FeeTierDistributionQuery, FeeTierDistributionQueryVariables>({\n      query: (variables) => ({ document: FeeTierDistributionDocument, variables })\n    }),\n    limitFarm: build.query<LimitFarmQuery, LimitFarmQueryVariables | void>({\n      query: (variables) => ({ document: LimitFarmDocument, variables })\n    }),\n    eternalFarm: build.query<EternalFarmQuery, EternalFarmQueryVariables | void>({\n      query: (variables) => ({ document: EternalFarmDocument, variables })\n    }),\n    fetchRewards: build.query<FetchRewardsQuery, FetchRewardsQueryVariables | void>({\n      query: (variables) => ({ document: FetchRewardsDocument, variables })\n    }),\n    fetchToken: build.query<FetchTokenQuery, FetchTokenQueryVariables | void>({\n      query: (variables) => ({ document: FetchTokenDocument, variables })\n    }),\n    fetchLimit: build.query<FetchLimitQuery, FetchLimitQueryVariables | void>({\n      query: (variables) => ({ document: FetchLimitDocument, variables })\n    }),\n    fetchEternalFarm: build.query<FetchEternalFarmQuery, FetchEternalFarmQueryVariables | void>({\n      query: (variables) => ({ document: FetchEternalFarmDocument, variables })\n    }),\n    fetchPool: build.query<FetchPoolQuery, FetchPoolQueryVariables | void>({\n      query: (variables) => ({ document: FetchPoolDocument, variables })\n    }),\n    feeHourData: build.query<FeeHourDataQuery, FeeHourDataQueryVariables | void>({\n      query: (variables) => ({ document: FeeHourDataDocument, variables })\n    }),\n    lastFeeHourData: build.query<LastFeeHourDataQuery, LastFeeHourDataQueryVariables | void>({\n      query: (variables) => ({ document: LastFeeHourDataDocument, variables })\n    }),\n    lastNotEmptyHourData: build.query<LastNotEmptyHourDataQuery, LastNotEmptyHourDataQueryVariables | void>({\n      query: (variables) => ({ document: LastNotEmptyHourDataDocument, variables })\n    }),\n    lastNotEmptyPoolHourData: build.query<LastNotEmptyPoolHourDataQuery, LastNotEmptyPoolHourDataQueryVariables | void>({\n      query: (variables) => ({ document: LastNotEmptyPoolHourDataDocument, variables })\n    }),\n    lastPoolHourData: build.query<LastPoolHourDataQuery, LastPoolHourDataQueryVariables | void>({\n      query: (variables) => ({ document: LastPoolHourDataDocument, variables })\n    }),\n    poolHourData: build.query<PoolHourDataQuery, PoolHourDataQueryVariables | void>({\n      query: (variables) => ({ document: PoolHourDataDocument, variables })\n    }),\n    lastEvent: build.query<LastEventQuery, LastEventQueryVariables | void>({\n      query: (variables) => ({ document: LastEventDocument, variables })\n    }),\n    futureEvents: build.query<FutureEventsQuery, FutureEventsQueryVariables | void>({\n      query: (variables) => ({ document: FutureEventsDocument, variables })\n    }),\n    currentEvents: build.query<CurrentEventsQuery, CurrentEventsQueryVariables | void>({\n      query: (variables) => ({ document: CurrentEventsDocument, variables })\n    }),\n    transferedPositions: build.query<TransferedPositionsQuery, TransferedPositionsQueryVariables | void>({\n      query: (variables) => ({ document: TransferedPositionsDocument, variables })\n    }),\n    hasTransferedPositions: build.query<HasTransferedPositionsQuery, HasTransferedPositionsQueryVariables | void>({\n      query: (variables) => ({ document: HasTransferedPositionsDocument, variables })\n    }),\n    positionsOnEternalFarming: build.query<PositionsOnEternalFarmingQuery, PositionsOnEternalFarmingQueryVariables | void>({\n      query: (variables) => ({ document: PositionsOnEternalFarmingDocument, variables })\n    }),\n    transferedPositionsForPool: build.query<TransferedPositionsForPoolQuery, TransferedPositionsForPoolQueryVariables | void>({\n      query: (variables) => ({ document: TransferedPositionsForPoolDocument, variables })\n    }),\n    positionsOnFarming: build.query<PositionsOnFarmingQuery, PositionsOnFarmingQueryVariables | void>({\n      query: (variables) => ({ document: PositionsOnFarmingDocument, variables })\n    }),\n    infiniteFarms: build.query<InfiniteFarmsQuery, InfiniteFarmsQueryVariables | void>({\n      query: (variables) => ({ document: InfiniteFarmsDocument, variables })\n    }),\n    topPools: build.query<TopPoolsQuery, TopPoolsQueryVariables | void>({\n      query: (variables) => ({ document: TopPoolsDocument, variables })\n    }),\n    topTokens: build.query<TopTokensQuery, TopTokensQueryVariables | void>({\n      query: (variables) => ({ document: TopTokensDocument, variables })\n    }),\n    surroundingTicks: build.query<SurroundingTicksQuery, SurroundingTicksQueryVariables>({\n      query: (variables) => ({ document: SurroundingTicksDocument, variables })\n    }),\n    popularPools: build.query<PopularPoolsQuery, PopularPoolsQueryVariables | void>({\n      query: (variables) => ({ document: PopularPoolsDocument, variables })\n    }),\n  }),\n});\n\nexport { injectedRtkApi as api };\nexport const { usePricesQuery, useLazyPricesQuery, useAllV3TicksQuery, useLazyAllV3TicksQuery, useFeeTierDistributionQuery, useLazyFeeTierDistributionQuery, useLimitFarmQuery, useLazyLimitFarmQuery, useEternalFarmQuery, useLazyEternalFarmQuery, useFetchRewardsQuery, useLazyFetchRewardsQuery, useFetchTokenQuery, useLazyFetchTokenQuery, useFetchLimitQuery, useLazyFetchLimitQuery, useFetchEternalFarmQuery, useLazyFetchEternalFarmQuery, useFetchPoolQuery, useLazyFetchPoolQuery, useFeeHourDataQuery, useLazyFeeHourDataQuery, useLastFeeHourDataQuery, useLazyLastFeeHourDataQuery, useLastNotEmptyHourDataQuery, useLazyLastNotEmptyHourDataQuery, useLastNotEmptyPoolHourDataQuery, useLazyLastNotEmptyPoolHourDataQuery, useLastPoolHourDataQuery, useLazyLastPoolHourDataQuery, usePoolHourDataQuery, useLazyPoolHourDataQuery, useLastEventQuery, useLazyLastEventQuery, useFutureEventsQuery, useLazyFutureEventsQuery, useCurrentEventsQuery, useLazyCurrentEventsQuery, useTransferedPositionsQuery, useLazyTransferedPositionsQuery, useHasTransferedPositionsQuery, useLazyHasTransferedPositionsQuery, usePositionsOnEternalFarmingQuery, useLazyPositionsOnEternalFarmingQuery, useTransferedPositionsForPoolQuery, useLazyTransferedPositionsForPoolQuery, usePositionsOnFarmingQuery, useLazyPositionsOnFarmingQuery, useInfiniteFarmsQuery, useLazyInfiniteFarmsQuery, useTopPoolsQuery, useLazyTopPoolsQuery, useTopTokensQuery, useLazyTopTokensQuery, useSurroundingTicksQuery, useLazySurroundingTicksQuery, usePopularPoolsQuery, useLazyPopularPoolsQuery } = injectedRtkApi;\n\n","import { BaseQueryApi, BaseQueryFn } from '@reduxjs/toolkit/dist/query/baseQueryTypes'\nimport { createApi } from '@reduxjs/toolkit/query/react'\nimport { DocumentNode } from 'graphql'\nimport { ClientError, gql, GraphQLClient } from 'graphql-request'\nimport { AppState } from 'state'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\n// List of supported subgraphs. Note that the app currently only support one active subgraph at a time\nconst CHAIN_SUBGRAPH_URL: Record<number, string> = {\n    [ChainId.BNB]: AlgebraConfig.SUBGRAPH[ChainId.BNB].infoURL,\n    [ChainId.PULSE]: AlgebraConfig.SUBGRAPH[ChainId.PULSE].infoURL\n}\n\nexport const api = createApi({\n    reducerPath: 'dataApi',\n    baseQuery: graphqlRequestBaseQuery(),\n    endpoints: (builder) => ({\n        allV3Ticks: builder.query({\n            query: ({ poolAddress, skip = 0 }) => ({\n                document: gql`\n          query allV3Ticks($poolAddress: String!, $skip: Int!) {\n            ticks(first: 1000, skip: $skip, where: { poolAddress: $poolAddress }, orderBy: tickIdx) {\n              tickIdx\n              liquidityNet\n              price0\n              price1\n            }\n          }\n        `,\n                variables: {\n                    poolAddress,\n                    skip\n                }\n            })\n        }),\n        feeTierDistribution: builder.query({\n            query: ({ token0, token1 }) => ({\n                document: gql`\n          query feeTierDistribution($token0: String!, $token1: String!) {\n            _meta {\n              block {\n                number\n              }\n            }\n            asToken0: pools(\n              orderBy: totalValueLockedToken0\n              orderDirection: desc\n              where: { token0: $token0, token1: $token1 }\n            ) {\n              fee\n              totalValueLockedToken0\n              totalValueLockedToken1\n            }\n            asToken1: pools(\n              orderBy: totalValueLockedToken0\n              orderDirection: desc\n              where: { token0: $token1, token1: $token0 }\n            ) {\n              fee\n              totalValueLockedToken0\n              totalValueLockedToken1\n            }\n          }\n        `,\n                variables: {\n                    token0,\n                    token1\n                }\n            })\n        })\n    })\n})\n\n// Graphql query client wrapper that builds a dynamic url based on chain id\nfunction graphqlRequestBaseQuery(): BaseQueryFn<{ document: string | DocumentNode; variables?: any },\n    unknown,\n    Pick<ClientError, 'name' | 'message' | 'stack'>,\n    Partial<Pick<ClientError, 'request' | 'response'>>> {\n    return async ({ document, variables }, { getState }: BaseQueryApi) => {\n        try {\n            const chainId = (getState() as AppState).application.chainId\n\n            const subgraphUrl = chainId ? CHAIN_SUBGRAPH_URL[chainId] : undefined\n\n            if (!subgraphUrl) {\n                return {\n                    error: {\n                        name: 'UnsupportedChainId',\n                        message: `Subgraph queries against ChainId ${chainId} are not supported.`,\n                        stack: ''\n                    }\n                }\n            }\n\n            return {\n                data: await new GraphQLClient(subgraphUrl).request(document, variables),\n                meta: {}\n            }\n        } catch (error) {\n            if (error instanceof ClientError) {\n                const { name, message, stack, request, response } = error\n                return { error: { name, message, stack }, meta: { request, response } }\n            }\n            throw error\n        }\n    }\n}\n","import { api as generatedApi } from './generated'\n\n// tag that should be applied to queries that need to be invalidated when the chain changes\nexport const CHAIN_TAG = 'Chain'\n\n// enhanced api to provide/invalidate tags\nexport const api = generatedApi.enhanceEndpoints({\n    addTagTypes: [CHAIN_TAG],\n    endpoints: {\n        allV3Ticks: {\n            providesTags: [CHAIN_TAG]\n        },\n        feeTierDistribution: {\n            providesTags: [CHAIN_TAG]\n        }\n    }\n})\n\nexport const { useAllV3TicksQuery, useFeeTierDistributionQuery } = api\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, tickToPrice } from 'lib/src'\nimport JSBI from 'jsbi'\nimport { PoolState, usePool } from './usePools'\nimport { useMemo } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\nimport { useAllV3TicksQuery } from 'state/data/enhanced'\nimport { skipToken } from '@reduxjs/toolkit/query/react'\nimport ms from 'ms.macro'\nimport { AllV3TicksQuery } from 'state/data/generated'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n    tickIdx: number\n    liquidityActive: JSBI\n    liquidityNet: JSBI\n    price0: string\n}\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n    tickCurrent && feeAmount ? Math.floor(tickCurrent / 60) * 60 : undefined\n\n// Fetches all ticks for a given pool\nexport function useAllV3Ticks(\n    currencyA: Currency | undefined,\n    currencyB: Currency | undefined,\n    feeAmount: FeeAmount | undefined\n) {\n    const poolAddress =\n        currencyA && currencyB && feeAmount ? Pool.getAddress(currencyA?.wrapped, currencyB?.wrapped, feeAmount) : undefined\n\n    //TODO(judo): determine if pagination is necessary for this query\n    const { isLoading, isError, error, isUninitialized, data } = useAllV3TicksQuery(\n        poolAddress ? { poolAddress: poolAddress?.toLowerCase(), skip: 0 } : skipToken,\n        {\n            pollingInterval: ms`2m`\n        }\n    )\n\n    return {\n        isLoading,\n        isUninitialized,\n        isError,\n        error,\n        ticks: data?.ticks as AllV3TicksQuery['ticks']\n    }\n}\n\nexport function usePoolActiveLiquidity(\n    currencyA: Currency | undefined,\n    currencyB: Currency | undefined,\n    feeAmount: FeeAmount | undefined\n): {\n    isLoading: boolean\n    isUninitialized: boolean\n    isError: boolean\n    error: any\n    activeTick: number | undefined\n    data: TickProcessed[] | undefined\n} {\n    const pool = usePool(currencyA, currencyB)\n\n    // Find nearest valid tick for pool in case tick is not initialized.\n    const activeTick = useMemo(() => getActiveTick(pool[1]?.tickCurrent, feeAmount), [pool, feeAmount])\n\n    const {\n        isLoading,\n        isUninitialized,\n        isError,\n        error,\n        ticks\n    } = useAllV3Ticks(currencyA, currencyB, feeAmount)\n\n    return useMemo(() => {\n        if (\n            !currencyA ||\n            !currencyB ||\n            activeTick === undefined ||\n            pool[0] !== PoolState.EXISTS ||\n            !ticks ||\n            ticks.length === 0 ||\n            isLoading ||\n            isUninitialized\n        ) {\n            return {\n                isLoading: isLoading || pool[0] === PoolState.LOADING,\n                isUninitialized,\n                isError,\n                error,\n                activeTick,\n                data: undefined\n            }\n        }\n\n        const token0 = currencyA?.wrapped\n        const token1 = currencyB?.wrapped\n\n        // find where the active tick would be to partition the array\n        // if the active tick is initialized, the pivot will be an element\n        // if not, take the previous tick as pivot\n        const pivot = ticks.findIndex(({ tickIdx }) => tickIdx > activeTick) - 1\n\n        if (pivot < 0) {\n            // consider setting a local error\n            console.error('TickData pivot not found')\n            return {\n                isLoading,\n                isUninitialized,\n                isError,\n                error,\n                activeTick,\n                data: undefined\n            }\n        }\n\n        const activeTickProcessed: TickProcessed = {\n            liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n            tickIdx: activeTick,\n            liquidityNet:\n                Number(ticks[pivot].tickIdx) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n            price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS)\n        }\n\n        const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n        const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n        const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n        return {\n            isLoading,\n            isUninitialized,\n            isError: isError,\n            error,\n            activeTick,\n            data: ticksProcessed\n        }\n    }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, isUninitialized, isError, error])\n}\n","import React, { ReactNode, useCallback, useMemo } from \"react\";\nimport { Trans } from \"@lingui/macro\";\nimport { Currency, Price, Token } from \"@uniswap/sdk-core\";\nimport { AutoColumn, ColumnCenter } from \"components/Column\";\nimport Loader from \"components/Loader\";\nimport { CloudOff, Inbox } from \"react-feather\";\nimport { batch } from \"react-redux\";\nimport { TYPE } from \"../../theme\";\nimport { Chart } from \"./Chart\";\nimport { useDensityChartData } from \"./hooks\";\nimport { format } from \"d3\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { FeeAmount } from \"lib/src\";\nimport { ZoomLevels } from \"./types\";\nimport { ChartWrapper } from \"./styled\";\n\nimport ReactGA from \"react-ga\";\nimport { tryParseAmount } from \"state/swap/hooks\";\nimport useUSDCPrice, { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\nimport { useInitialTokenPrice, useInitialUSDPrices } from \"state/mint/v3/hooks\";\n\nconst ZOOM_LEVEL: ZoomLevels = {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.01,\n    max: 20,\n};\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n    return (\n        <ColumnCenter style={{ height: \"100%\", justifyContent: \"center\" }}>\n            {icon}\n            {message && (\n                <TYPE.mediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\n                    {message}\n                </TYPE.mediumHeader>\n            )}\n        </ColumnCenter>\n    );\n}\n\ninterface LiquidityChartRangeInputProps {\n    currencyA: Currency | undefined;\n    currencyB: Currency | undefined;\n    feeAmount?: FeeAmount;\n    ticksAtLimit: { [bound in Bound]?: boolean | undefined };\n    price: number | undefined;\n    priceLower?: Price<Token, Token>;\n    priceUpper?: Price<Token, Token>;\n    onLeftRangeInput: (typedValue: string) => void;\n    onRightRangeInput: (typedValue: string) => void;\n    interactive: boolean;\n    priceFormat: PriceFormats;\n}\n\nexport default function LiquidityChartRangeInput({\n    currencyA,\n    currencyB,\n    feeAmount,\n    ticksAtLimit,\n    price,\n    priceLower,\n    priceUpper,\n    onLeftRangeInput,\n    onRightRangeInput,\n    interactive,\n    priceFormat,\n}: LiquidityChartRangeInputProps) {\n    const { isLoading, isUninitialized, isError, error, formattedData } = useDensityChartData({\n        currencyA,\n        currencyB,\n        feeAmount,\n        priceFormat,\n    });\n\n    const initialPrice = useInitialTokenPrice();\n    const initialUSDPrices = useInitialUSDPrices();\n    const currencyBUSD = useUSDCPrice(currencyB);\n\n    const mockData = useMemo(() => {\n        if (formattedData) return [];\n\n        if (!initialPrice) return [];\n\n        if (priceFormat === PriceFormats.TOKEN) {\n            return [\n                { activeLiquidity: 0, price0: +initialPrice * ZOOM_LEVEL.initialMin },\n                { activeLiquidity: 0, price0: +initialPrice * ZOOM_LEVEL.initialMax },\n            ];\n        } else {\n            if (currencyBUSD || (initialUSDPrices.CURRENCY_B && initialPrice)) {\n                const price = currencyBUSD?.toSignificant(8) || initialUSDPrices.CURRENCY_B;\n                return [\n                    { activeLiquidity: 0, price0: +price * +initialPrice * ZOOM_LEVEL.initialMin },\n                    { activeLiquidity: 0, price0: +price * +initialPrice * ZOOM_LEVEL.initialMax },\n                ];\n            }\n            return [];\n        }\n    }, [initialPrice, initialUSDPrices, currencyBUSD, priceFormat]);\n\n    const mockPrice = useMemo(() => {\n        if (formattedData) return 0;\n\n        if (!initialPrice) return 0;\n\n        if (priceFormat === PriceFormats.TOKEN) {\n            if (initialPrice) return +initialPrice;\n        } else {\n            if (currencyBUSD) return +currencyBUSD.toSignificant(5) * +initialPrice;\n            if (initialUSDPrices.CURRENCY_B) return +initialUSDPrices.CURRENCY_B * +initialPrice;\n        }\n\n        return 0;\n    }, [initialPrice, initialUSDPrices, currencyBUSD, priceFormat]);\n\n    const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped);\n\n    const onBrushDomainChangeEnded = useCallback(\n        (domain: any[], mode: string) => {\n            let leftRangeValue = Number(domain[0]);\n            const rightRangeValue = Number(domain[1]);\n\n            if (leftRangeValue <= 0) {\n                leftRangeValue = 1 / 10 ** 6;\n            }\n\n            batch(() => {\n                //L-2\n                // simulate user input for auto-formatting and other validations\n                // if ((!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === \"handle\" || mode === \"reset\") && leftRangeValue > 0) {\n                //     onLeftRangeInput(leftRangeValue.toFixed(6));\n                // }\n                // if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === \"reset\") && rightRangeValue > 0) {\n                //     // todo: remove this check. Upper bound for large numbers\n                //     // sometimes fails to parse to tick.\n                //     if (rightRangeValue < 1e35) {\n                //         onRightRangeInput(rightRangeValue.toFixed(6));\n                //     }\n                // }\n            });\n        },\n        [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\n    );\n\n    interactive = interactive && Boolean(formattedData?.length);\n\n    const leftPrice = useMemo(() => {\n        return isSorted ? priceLower : priceUpper?.invert();\n    }, [isSorted, priceLower, priceUpper, priceFormat]);\n\n    //TODO\n    const leftPriceUSD = useUSDCValue(tryParseAmount(leftPrice ? (+leftPrice.toSignificant(5) < 0.00000001 ? undefined : Number(leftPrice.toSignificant(5)).toFixed(5)) : undefined, currencyB), true);\n\n    const rightPrice = useMemo(() => {\n        return isSorted ? priceUpper : priceLower?.invert();\n    }, [isSorted, priceLower, priceUpper, priceFormat]);\n\n    //TODO\n    const rightPriceUSD = useUSDCValue(\n        tryParseAmount(\n            rightPrice ? (rightPrice.toSignificant(5) === \"3384900000000000000000000000000000000000000000000\" ? undefined : Number(rightPrice.toSignificant(5)).toFixed(5)) : undefined,\n            currencyB\n        ),\n        true\n    );\n\n    const brushDomain: [number, number] | undefined = useMemo(() => {\n        if (!leftPrice || !rightPrice) return;\n\n        if (priceFormat === PriceFormats.USD && leftPriceUSD && rightPriceUSD) {\n            return [parseFloat(leftPriceUSD.toSignificant(5)), parseFloat(rightPriceUSD.toSignificant(5))];\n        }\n\n        if (priceFormat === PriceFormats.USD && initialUSDPrices.CURRENCY_B) {\n            return [parseFloat(String(+leftPrice.toSignificant(5) * +initialUSDPrices.CURRENCY_B)), parseFloat(String(+rightPrice.toSignificant(5) * +initialUSDPrices.CURRENCY_B))];\n        }\n\n        return [parseFloat(leftPrice.toSignificant(5)), parseFloat(rightPrice.toSignificant(5))];\n    }, [leftPrice, rightPrice, leftPriceUSD, rightPriceUSD, priceFormat]);\n\n    const brushLabelValue = useCallback(\n        (d: \"w\" | \"e\", x: number) => {\n            const _price = price || mockPrice;\n\n            if (!_price) return \"\";\n\n            if (d === \"w\" && ticksAtLimit[Bound.LOWER]) return \"0\";\n            if (d === \"e\" && ticksAtLimit[Bound.UPPER]) return \"∞\";\n\n            // const percent = (((x < price ? -1 : 1) * (Math.max(x, price) - Math.min(x, price))) / Math.min(x, price)) * 100\n\n            const percent = (x < _price ? -1 : 1) * ((Math.max(x, _price) - Math.min(x, _price)) / _price) * 100;\n\n            return _price ? `${format(Math.abs(percent) > 1 ? \".2~s\" : \".2~f\")(percent)}%` : \"\";\n        },\n        [price, priceFormat, ticksAtLimit, mockPrice]\n    );\n\n    if (isError) {\n        ReactGA.exception({\n            ...error,\n            category: \"Liquidity\",\n            fatal: false,\n        });\n    }\n\n    return (\n        <AutoColumn gap=\"md\" style={{ minHeight: \"260px\" }}>\n            {isUninitialized ? (\n                <InfoBox message={<Trans>Your position will appear here.</Trans>} icon={<Inbox size={56} />} />\n            ) : isLoading ? (\n                <InfoBox icon={<Loader size=\"40px\" stroke={\"var(--loader)\"} />} />\n            ) : isError ? (\n                <InfoBox message={<Trans>Liquidity data not available.</Trans>} icon={<CloudOff size={56} />} />\n            ) : !formattedData || formattedData === [] || !price ? (\n                // <InfoBox message={<Trans>There is no liquidity data.</Trans>} icon={<BarChart2 size={56} />} />\n                <ChartWrapper>\n                    <Chart\n                        data={{ series: mockData, current: mockPrice }}\n                        dimensions={{ width: 400, height: 175 }}\n                        margins={{ top: 10, right: 0, bottom: 20, left: 0 }}\n                        styles={{\n                            area: {\n                                selection: \"#008FFF\",\n                            },\n                        }}\n                        interactive={interactive}\n                        brushLabels={brushLabelValue}\n                        brushDomain={brushDomain}\n                        onBrushDomainChange={onBrushDomainChangeEnded}\n                        zoomLevels={ZOOM_LEVEL}\n                        priceFormat={priceFormat}\n                    />\n                </ChartWrapper>\n            ) : (\n                <ChartWrapper>\n                    <Chart\n                        data={{ series: formattedData, current: price }}\n                        dimensions={{ width: 400, height: 175 }}\n                        margins={{ top: 10, right: 0, bottom: 20, left: 0 }}\n                        styles={{\n                            area: {\n                                selection: \"#008FFF\",\n                            },\n                        }}\n                        interactive={interactive}\n                        brushLabels={brushLabelValue}\n                        brushDomain={brushDomain}\n                        onBrushDomainChange={onBrushDomainChangeEnded}\n                        zoomLevels={ZOOM_LEVEL}\n                        priceFormat={priceFormat}\n                    />\n                </ChartWrapper>\n            )}\n        </AutoColumn>\n    );\n}\n","import { useCallback, useMemo } from 'react'\nimport { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from 'lib/src'\nimport { usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { ChartEntry } from './types'\nimport JSBI from 'jsbi'\nimport { PriceFormats } from 'pages/NewAddLiquidity/components/PriceFomatToggler'\nimport useUSDCPrice from 'hooks/useUSDCPrice'\n\nexport interface TickProcessed {\n    liquidityActive: JSBI\n    price0: string\n}\n\nexport function useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount,\n    priceFormat\n}: {\n    currencyA: Currency | undefined\n    currencyB: Currency | undefined\n    feeAmount: FeeAmount | undefined\n    priceFormat: PriceFormats\n}) {\n    const {\n        isLoading,\n        isUninitialized,\n        isError,\n        error,\n        data\n    } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n    const currencyBUSD = useUSDCPrice(currencyB)\n\n    const formatData = useCallback(() => {\n        if (!data?.length) {\n            return undefined\n        }\n\n        if (priceFormat === PriceFormats.USD && !currencyBUSD) return\n\n        const newData: ChartEntry[] = []\n\n        for (let i = 0; i < data.length; i++) {\n            const t: TickProcessed = data[i]\n\n            const formattedPrice = priceFormat === PriceFormats.USD && currencyBUSD ? (parseFloat(t.price0) * +currencyBUSD.toSignificant(5)) : parseFloat(t.price0) \n\n            const chartEntry = {\n                activeLiquidity: parseFloat(t.liquidityActive.toString()),\n                price0: formattedPrice\n            }\n\n            if (chartEntry.activeLiquidity > 0) {\n                newData.push(chartEntry)\n            }\n        }\n        \n        return newData\n    }, [data, currencyBUSD, priceFormat])\n\n    return useMemo(() => {\n        return {\n            isLoading,\n            isUninitialized,\n            isError,\n            error,\n            formattedData: !isLoading && !isUninitialized ? formatData() : undefined\n        }\n    }, [isLoading, isUninitialized, isError, error, formatData, priceFormat])\n}\n","import { Trans } from \"@lingui/macro\";\nimport { DollarSign, StopCircle } from \"react-feather\";\n\nimport { Currency, Token, Price } from \"@uniswap/sdk-core\";\n\nimport \"./index.scss\";\nimport Loader from \"components/Loader\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useInitialTokenPrice, useInitialUSDPrices } from \"state/mint/v3/hooks\";\n\ninterface ISelectRangeUSDC {\n    currencyA: Currency;\n    currencyB: Currency;\n    currencyAUSDC: Price<Currency, Token> | undefined;\n    currencyBUSDC: Price<Currency, Token> | undefined;\n    priceFormat: PriceFormats;\n}\n\nexport function USDPrices({ currencyA, currencyB, currencyAUSDC, currencyBUSDC, priceFormat }: ISelectRangeUSDC) {\n    const isUSD = useMemo(() => {\n        return priceFormat === PriceFormats.USD;\n    }, [priceFormat]);\n\n    const userUSDPrices = useInitialUSDPrices();\n    const userTokenPrice = useInitialTokenPrice();\n\n    const [loadingTimedout, setLoadingTimedout] = useState(false);\n\n    const hasUSDPrices = useMemo(() => {\n        return Boolean(\n            userUSDPrices.CURRENCY_A || userUSDPrices.CURRENCY_B || currencyAUSDC || currencyBUSDC || userUSDPrices.CURRENCY_A || currencyBUSDC || userUSDPrices.CURRENCY_B || currencyAUSDC\n        );\n    }, [userUSDPrices, currencyAUSDC, currencyBUSDC]);\n\n    const usdA = useMemo(() => {\n        if (userUSDPrices.CURRENCY_A) return parseFloat(userUSDPrices.CURRENCY_A);\n        if (currencyAUSDC) return parseFloat(currencyAUSDC.toSignificant(8));\n        return;\n    }, [userUSDPrices, currencyAUSDC]);\n\n    const usdB = useMemo(() => {\n        if (userUSDPrices.CURRENCY_B) return parseFloat(userUSDPrices.CURRENCY_B);\n        if (currencyBUSDC) return parseFloat(currencyBUSDC.toSignificant(8));\n        return;\n    }, [userUSDPrices, currencyBUSDC]);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (!hasUSDPrices) {\n                setLoadingTimedout(true);\n            }\n        }, 5000);\n    }, [currencyAUSDC, currencyBUSDC, userUSDPrices]);\n\n    return (\n        <div className={\"preset-ranges-wrapper pl-1 mb-2 mxs_pl-0 mxs_mb-2 ms_pl-0 ms_mb-2\"}>\n            <div className=\"mb-1 f f-ac\">\n                {isUSD ? <StopCircle style={{ display: \"block\" }} size={15} /> : <DollarSign style={{ display: \"block\" }} size={15} />}\n                <span className=\"ml-05\">{isUSD ? <Trans>Token Prices</Trans> : <Trans>USD Prices</Trans>}</span>\n            </div>\n\n            {hasUSDPrices ? (\n                !isUSD ? (\n                    <div className=\"fs-085\">\n                        <div className=\"mb-05\">{`1 ${currencyA.symbol} = $ ${usdA || \"???\"}`}</div>\n                        <div className=\"mb-05\">{`1 ${currencyB.symbol} = $ ${usdB || \"???\"}`}</div>\n                    </div>\n                ) : (\n                    <div className=\"fs-085\">\n                        {usdA && usdB ? (\n                            <>\n                                <div className=\"mb-05\">{`1 ${currencyA.symbol} = ${parseFloat(String(+usdA / (+usdB || 1)))} ${currencyB.symbol}`}</div>\n                                <div className=\"mb-05\">{`1 ${currencyB.symbol} = ${parseFloat(String(+usdB / (+usdA || 1)))} ${currencyA.symbol}`}</div>\n                            </>\n                        ) : (\n                            <>\n                                <div className=\"mb-05\">{`1 ${currencyA.symbol} = ${usdA || \"???\"} ${currencyB.symbol}`}</div>\n                                <div className=\"mb-05\">{`1 ${currencyB.symbol} = ${usdB || \"???\"} ${currencyA.symbol}`}</div>\n                            </>\n                        )}\n                    </div>\n                )\n            ) : !loadingTimedout ? (\n                <Loader stroke={\"var(--loader)\"} />\n            ) : (\n                <div>\n                    <Trans>Can't fetch prices</Trans>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { IPresetArgs, PresetRanges } from \"pages/NewAddLiquidity/components/PresetRanges\";\nimport { RangeSelector } from \"pages/NewAddLiquidity/components/RangeSelector\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport \"./index.scss\";\nimport { Bound, updateCurrentStep, updateSelectedPreset } from \"state/mint/v3/actions\";\nimport { IDerivedMintInfo, useRangeHopCallbacks, useV3MintActionHandlers, useV3MintState } from \"state/mint/v3/hooks\";\nimport LiquidityChartRangeInput from \"components/LiquidityChartRangeInput\";\nimport { USDPrices } from \"pages/NewAddLiquidity/components/USDPrices\";\nimport useUSDCPrice, { useUSDCValue } from \"hooks/useUSDCPrice\";\nimport { STABLE_TOKEN_FOR_USD_PRICE_BNB, STABLE_TOKEN_FOR_USD_PRICE_PULSE } from \"constants/tokens\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { useActivePreset } from \"state/mint/v3/hooks\";\nimport { Presets } from \"state/mint/v3/reducer\";\nimport { StepTitle } from \"pages/NewAddLiquidity/components/StepTitle\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\nimport { tryParseAmount } from \"state/swap/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { Helmet } from \"react-helmet\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { ChainId } from \"constants/addresses\";\n\ninterface IRangeSelector {\n    currencyA: Currency | null | undefined;\n    currencyB: Currency | null | undefined;\n    mintInfo: IDerivedMintInfo;\n    isCompleted: boolean;\n    additionalStep: boolean;\n    priceFormat: PriceFormats;\n    disabled: boolean;\n    backStep: number;\n}\n\nexport function SelectRange({ currencyA, currencyB, mintInfo, isCompleted, additionalStep, priceFormat, backStep, disabled }: IRangeSelector) {\n    const { startPriceTypedValue } = useV3MintState();\n    const history = useHistory();\n\n    const { chainId } = useActiveWeb3React();\n\n    const dispatch = useAppDispatch();\n    const activePreset = useActivePreset();\n\n    const currencyAUSDC = useUSDCPrice(currencyA ?? undefined);\n    const currencyBUSDC = useUSDCPrice(currencyB ?? undefined);\n\n    //TODO - create one main isUSD\n    const isUSD = useMemo(() => {\n        return priceFormat === PriceFormats.USD;\n    }, []);\n\n    const stableToken = {\n        [ChainId.BNB]: STABLE_TOKEN_FOR_USD_PRICE_BNB,\n        [ChainId.PULSE]: STABLE_TOKEN_FOR_USD_PRICE_PULSE,\n    };\n\n    const isStablecoinPair = useMemo(() => {\n        if (!currencyA || !currencyB) return false;\n\n        const stablecoins = [stableToken[chainId || ChainId.BNB].address];\n\n        return stablecoins.includes(currencyA.wrapped.address) && stablecoins.includes(currencyB.wrapped.address);\n    }, [currencyA, currencyB, chainId]);\n\n    // get value and prices at ticks\n    const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = useMemo(() => {\n        return mintInfo.ticks;\n    }, [mintInfo]);\n\n    const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = useMemo(() => {\n        return mintInfo.pricesAtTicks;\n    }, [mintInfo]);\n\n    const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } = useRangeHopCallbacks(\n        currencyA ?? undefined,\n        currencyB ?? undefined,\n        mintInfo.dynamicFee,\n        tickLower,\n        tickUpper,\n        mintInfo.pool\n    );\n\n    const { onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(mintInfo.noLiquidity);\n\n    const tokenA = (currencyA ?? undefined)?.wrapped;\n    const tokenB = (currencyB ?? undefined)?.wrapped;\n\n    const isSorted = useMemo(() => {\n        return tokenA && tokenB && tokenA.sortsBefore(tokenB);\n    }, [tokenA, tokenB, mintInfo]);\n\n    const leftPrice = useMemo(() => {\n        return isSorted ? priceLower : priceUpper?.invert();\n    }, [isSorted, priceLower, priceUpper, mintInfo]);\n\n    const rightPrice = useMemo(() => {\n        return isSorted ? priceUpper : priceLower?.invert();\n    }, [isSorted, priceUpper, priceLower, mintInfo]);\n\n    const price = useMemo(() => {\n        if (!mintInfo.price) return;\n\n        return mintInfo.invertPrice ? mintInfo.price.invert().toSignificant(5) : mintInfo.price.toSignificant(5);\n    }, [mintInfo]);\n\n    const currentPriceInUSD = useUSDCValue(tryParseAmount(Number(price).toFixed(5), currencyB ?? undefined), true);\n\n    const isBeforePrice = useMemo(() => {\n        if (!price || !leftPrice || !rightPrice) return false;\n\n        return mintInfo.outOfRange && price > rightPrice.toSignificant(5);\n    }, [price, leftPrice, rightPrice, mintInfo]);\n\n    const isAfterPrice = useMemo(() => {\n        if (!price || !leftPrice || !rightPrice) return false;\n\n        return mintInfo.outOfRange && price < leftPrice.toSignificant(5);\n    }, [price, leftPrice, rightPrice, mintInfo]);\n\n    const handlePresetRangeSelection = useCallback(\n        (preset: IPresetArgs | null) => {\n            if (!price) return;\n\n            dispatch(updateSelectedPreset({ preset: preset ? preset.type : null }));\n\n            if (preset && preset.type === Presets.FULL) {\n                getSetFullRange();\n            } else {\n                onLeftRangeInput(preset ? String(+price * preset.min) : \"\");\n                onRightRangeInput(preset ? String(+price * preset.max) : \"\");\n            }\n        },\n        [price]\n    );\n\n    useEffect(() => {\n        return () => {\n            if (history.action === \"POP\") {\n                dispatch(updateCurrentStep({ currentStep: backStep }));\n            }\n        };\n    }, []);\n\n    return (\n        <div className=\"f c\">\n            <StepTitle title={t`Select a range`} isCompleted={isCompleted} step={additionalStep ? 3 : 2} />\n            <div className=\"f mxs_fd-cr ms_fd-cr\">\n                <div className=\"f c\">\n                    <div className=\"mb-1\">\n                        <RangeSelector\n                            priceLower={priceLower}\n                            priceUpper={priceUpper}\n                            getDecrementLower={getDecrementLower}\n                            getIncrementLower={getIncrementLower}\n                            getDecrementUpper={getDecrementUpper}\n                            getIncrementUpper={getIncrementUpper}\n                            onLeftRangeInput={onLeftRangeInput}\n                            onRightRangeInput={onRightRangeInput}\n                            currencyA={currencyA}\n                            currencyB={currencyB}\n                            mintInfo={mintInfo}\n                            initial={!!mintInfo.noLiquidity}\n                            disabled={!startPriceTypedValue && !mintInfo.price}\n                            isBeforePrice={isBeforePrice}\n                            isAfterPrice={isAfterPrice}\n                            priceFormat={priceFormat}\n                        />\n                    </div>\n                    <div className=\"range__chart\">\n                        <LiquidityChartRangeInput\n                            currencyA={currencyA ?? undefined}\n                            currencyB={currencyB ?? undefined}\n                            feeAmount={mintInfo.dynamicFee}\n                            ticksAtLimit={mintInfo.ticksAtLimit}\n                            price={priceFormat === PriceFormats.USD ? (currentPriceInUSD ? parseFloat(currentPriceInUSD.toSignificant(5)) : undefined) : price ? parseFloat(price) : undefined}\n                            priceLower={priceLower}\n                            priceUpper={priceUpper}\n                            onLeftRangeInput={onLeftRangeInput}\n                            onRightRangeInput={onRightRangeInput}\n                            interactive={false}\n                            priceFormat={priceFormat}\n                        />\n                        {mintInfo.outOfRange && (\n                            <div className=\"range__notification out-of-range\">\n                                <Trans>Out of range</Trans>\n                            </div>\n                        )}\n                        {mintInfo.invalidRange && (\n                            <div className=\"range__notification error w-100\">\n                                <Trans>Invalid range</Trans>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"ml-2 mxs_ml-0 ms_ml-0\">\n                    {currencyA && currencyB && <USDPrices currencyA={currencyA} currencyB={currencyB} currencyAUSDC={currencyAUSDC} currencyBUSDC={currencyBUSDC} priceFormat={priceFormat} />}\n                    <PresetRanges\n                        isInvalid={mintInfo.invalidRange}\n                        outOfRange={mintInfo.outOfRange}\n                        isStablecoinPair={isStablecoinPair}\n                        activePreset={activePreset}\n                        handlePresetRangeSelection={handlePresetRangeSelection}\n                        priceLower={leftPrice?.toSignificant(5)}\n                        priceUpper={rightPrice?.toSignificant(5)}\n                        price={price}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from \"constants/addresses\";\nimport { ZERO_PERCENT } from \"constants/misc\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport useTransactionDeadline from \"hooks/useTransactionDeadline\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\n\nimport { NonfungiblePositionManager as NonFunPosMan } from \"lib/src/nonfungiblePositionManager\";\n\nimport { Percent, Currency } from \"@uniswap/sdk-core\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { GAS_PRICE_MULTIPLIER } from \"hooks/useGasPrice\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { useAllTransactions, useTransactionAdder } from \"state/transactions/hooks\";\nimport { useMemo, useState } from \"react\";\n\nimport { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { IDerivedMintInfo, useAddLiquidityTxHash } from \"state/mint/v3/hooks\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { Field } from \"state/mint/actions\";\nimport { useIsNetworkFailedImmediate } from \"hooks/useIsNetworkFailed\";\nimport { setAddLiquidityTxHash } from \"state/mint/v3/actions\";\n\ninterface IAddLiquidityButton {\n    baseCurrency: Currency | undefined;\n    quoteCurrency: Currency | undefined;\n    mintInfo: IDerivedMintInfo;\n    handleAddLiquidity: () => void;\n    title: string;\n    setRejected?: (rejected: boolean) => void;\n}\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000);\n\nexport function AddLiquidityButton({ baseCurrency, quoteCurrency, mintInfo, handleAddLiquidity, title, setRejected }: IAddLiquidityButton) {\n    const { chainId, library, account } = useActiveWeb3React();\n\n    const positionManager = useV3NFTPositionManagerContract();\n\n    const deadline = useTransactionDeadline();\n\n    const dispatch = useAppDispatch();\n\n    const txHash = useAddLiquidityTxHash();\n\n    const isNetworkFailed = useIsNetworkFailedImmediate();\n\n    const allowedSlippage = useUserSlippageToleranceWithDefault(mintInfo.outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE);\n\n    const gasPrice = useAppSelector((state) => {\n        if (!state.application.gasPrice.fetched) return 0.1;\n        return state.application.gasPrice.override ? 0.1 : state.application.gasPrice.fetched;\n    });\n\n    const addTransaction = useTransactionAdder();\n\n    const [approvalA] = useApproveCallback(mintInfo.parsedAmounts[Field.CURRENCY_A], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n    const [approvalB] = useApproveCallback(mintInfo.parsedAmounts[Field.CURRENCY_B], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n\n    const isReady = useMemo(() => {\n        return Boolean(\n            (mintInfo.depositADisabled ? true : approvalA === ApprovalState.APPROVED) &&\n                (mintInfo.depositBDisabled ? true : approvalB === ApprovalState.APPROVED) &&\n                !mintInfo.errorMessage &&\n                !mintInfo.invalidRange &&\n                !txHash &&\n                !isNetworkFailed\n        );\n    }, [mintInfo, approvalA, approvalB]);\n\n    async function onAdd() {\n        if (!chainId || !library || !account) return;\n\n        if (!positionManager || !baseCurrency || !quoteCurrency) {\n            return;\n        }\n\n        if (mintInfo.position && account && deadline) {\n            const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined;\n\n            const { calldata, value } = NonFunPosMan.addCallParameters(mintInfo.position, {\n                slippageTolerance: allowedSlippage,\n                recipient: account,\n                deadline: deadline.toString(),\n                useNative,\n                createPool: mintInfo.noLiquidity,\n            });\n\n            const txn: { to: string; data: string; value: string } = {\n                to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n                data: calldata,\n                value,\n            };\n\n            setRejected && setRejected(false);\n\n            library\n                .getSigner()\n                .estimateGas(txn)\n                .then((estimate) => {\n                    const newTxn = {\n                        ...txn,\n                        gasLimit: calculateGasMargin(chainId, estimate),\n                    };\n\n                    return library\n                        .getSigner()\n                        .sendTransaction(newTxn)\n                        .then((response: TransactionResponse) => {\n                            addTransaction(response, {\n                                summary: mintInfo.noLiquidity\n                                    ? t`Create pool and add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`\n                                    : t`Add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`,\n                            });\n\n                            handleAddLiquidity();\n                            dispatch(setAddLiquidityTxHash({ txHash: response.hash }));\n                        });\n                })\n                .catch((error) => {\n                    console.error(\"Failed to send transaction\", error);\n                    // we only care if the error is something _other_ than the user rejected the tx\n                    setRejected && setRejected(true);\n                    if (error?.code !== 4001) {\n                        console.error(error);\n                    }\n                });\n        } else {\n            return;\n        }\n    }\n\n    return (\n        <button className=\"add-buttons__liquidity ml-a\" disabled={!isReady} onClick={onAdd}>\n            {title}\n        </button>\n    );\n}\n","import Loader from \"components/Loader\";\nimport { useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useCurrentStep } from \"state/mint/v3/hooks\";\n\nexport function RouterGuard({ Component, allowance, redirect, ...rest }: { Component: any; allowance: any; redirect: string; [x: string]: any }) {\n    const currentStep = useCurrentStep();\n\n    useEffect(() => {\n        window.scrollTo({ top: 0 });\n    }, []);\n\n    return allowance ? (\n        <Route\n            {...rest}\n            render={function () {\n                return <Component {...rest} />;\n            }}\n        />\n    ) : currentStep === 0 ? (\n        <Redirect to={redirect} />\n    ) : (\n        <div className=\"f f-ac f-jc\">\n            <Loader size={\"36px\"} stroke={\"var(--loader)\"} />\n        </div>\n    );\n}\n","import { Currency, Token, Price } from \"@uniswap/sdk-core\";\nimport { t, Trans } from \"@lingui/macro\";\n\nimport Toggle from \"components/Toggle\";\n\nimport useUSDCPrice from \"hooks/useUSDCPrice\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport \"./index.scss\";\nimport { Lock } from \"react-feather\";\nimport { PriceFormats } from \"../PriceFomatToggler\";\nimport { IDerivedMintInfo, useInitialTokenPrice, useInitialUSDPrices } from \"state/mint/v3/hooks\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { Field, setInitialTokenPrice, setInitialUSDPrices, updateSelectedPreset } from \"state/mint/v3/actions\";\nimport Input from \"components/NumericalInput\";\nimport { isMobileOnly } from \"react-device-detect\";\n\ninterface IPrice {\n    baseCurrency: Currency | undefined;\n    quoteCurrency: Currency | undefined;\n    basePrice: Price<Currency, Token> | undefined;\n    quotePrice: Price<Currency, Token> | undefined;\n    isLocked: boolean;\n    isSelected: boolean;\n}\n\ninterface ITokenPrice extends IPrice {\n    userQuoteCurrencyToken?: string | undefined;\n    changeQuotePriceHandler?: any;\n}\n\ninterface IUSDPrice extends IPrice {\n    userBaseCurrencyUSD: string | undefined;\n    userQuoteCurrencyUSD: string | undefined;\n    changeBaseCurrencyUSDHandler: any;\n    changeQuoteCurrencyUSDHandler: any;\n}\n\nfunction TokenPrice({ baseCurrency, quoteCurrency, basePrice, quotePrice, isLocked, userQuoteCurrencyToken, changeQuotePriceHandler, isSelected }: ITokenPrice) {\n    const baseSymbol = useMemo(() => (baseCurrency ? baseCurrency.symbol : \"-\"), [baseCurrency]);\n    const quoteSymbol = useMemo(() => (quoteCurrency ? quoteCurrency.symbol : \"-\"), [quoteCurrency]);\n\n    const tokenRatio = useMemo(() => {\n        if (!basePrice || !quotePrice) return t`Loading...`;\n\n        return String((+basePrice.toSignificant(5) / +quotePrice.toSignificant(5)).toFixed(5));\n    }, [basePrice, quotePrice]);\n\n    return (\n        <div className={`token-price ${isSelected ? \"main\" : \"side\"} ws-no-wrap mxs_fs-075`}>\n            <div className={\"quote-token w-100 f\"}>\n                <div className=\"w-100\">\n                    {isLocked ? (\n                        <div className=\"f f-ac\">\n                            <span className=\"pl-1\">\n                                <Lock size={14} />\n                            </span>\n                            <span className=\"quote-token__auto-fetched\">{tokenRatio}</span>\n                        </div>\n                    ) : isSelected ? (\n                        <Input\n                            className={`quote-token__input bg-t c-w ol-n`}\n                            placeholder={`${baseCurrency?.symbol} in ${quoteCurrency?.symbol}`}\n                            value={userQuoteCurrencyToken || \"\"}\n                            onUserInput={(e: string) => changeQuotePriceHandler(e)}\n                        />\n                    ) : (\n                        <span>-</span>\n                    )}\n                </div>\n                <div className=\"quote-token__symbol ml-a\">{quoteSymbol}</div>\n            </div>\n            <div className=\"quote-token__separator\"> = </div>\n            <div className=\"base-token\">\n                <div className=\"base-token__amount\">1</div>\n                <div className=\"base-token__symbol\">{baseSymbol}</div>\n            </div>\n        </div>\n    );\n}\n\nfunction USDPriceField({\n    symbol,\n    price,\n    isSelected,\n    userUSD,\n    changeHandler,\n}: {\n    symbol: string | undefined;\n    price: Price<Currency, Token> | undefined;\n    isSelected: boolean;\n    userUSD: string | undefined;\n    changeHandler: (price: string) => void;\n}) {\n    const _price = useMemo(() => (price ? price.toSignificant(5) : t`Loading...`), [price]);\n\n    return (\n        <div className={`usd-price-field w-100 f ac ws-no-wrap ${isSelected ? \"main\" : \"side\"} mxs_mb-1 mxs_ml-0`}>\n            <div className=\"usd-price\">\n                <span className={\"usd-price__amount\"}>1 {symbol}</span>\n                <span className={\"usd-price__separator\"}> = </span>\n                <span className={\"usd-price__dollar\"}>$</span>\n                {price ? (\n                    <span className={`usd-price__price`}>{_price}</span>\n                ) : isSelected ? (\n                    <Input className={`ol-n usd-price__input`} value={userUSD || \"\"} onUserInput={(e: string) => changeHandler(e)} placeholder={`${symbol} in $`} />\n                ) : (\n                    <span> - </span>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction USDPrice({\n    baseCurrency,\n    quoteCurrency,\n    basePrice,\n    quotePrice,\n    isLocked,\n    userQuoteCurrencyUSD,\n    userBaseCurrencyUSD,\n    changeBaseCurrencyUSDHandler,\n    changeQuoteCurrencyUSDHandler,\n    isSelected,\n}: IUSDPrice) {\n    const baseSymbol = useMemo(() => (baseCurrency ? baseCurrency.symbol : \"-\"), [baseCurrency]);\n    const quoteSymbol = useMemo(() => (quoteCurrency ? quoteCurrency.symbol : \"-\"), [quoteCurrency]);\n\n    return (\n        <div className={`f usd-price__wrapper ${isSelected ? \"main\" : \"side\"} mxs_fd-c`}>\n            <USDPriceField symbol={baseSymbol} price={basePrice} isSelected={isSelected} userUSD={userBaseCurrencyUSD} changeHandler={changeBaseCurrencyUSDHandler}></USDPriceField>\n            <USDPriceField symbol={quoteSymbol} price={quotePrice} isSelected={isSelected} userUSD={userQuoteCurrencyUSD} changeHandler={changeQuoteCurrencyUSDHandler}></USDPriceField>\n        </div>\n    );\n}\n\ninterface IStartingPrice {\n    currencyA: Currency | undefined;\n    currencyB: Currency | undefined;\n    startPriceHandler: (value: string) => void;\n    mintInfo: IDerivedMintInfo;\n    priceFormat: PriceFormats;\n}\n\nexport default function StartingPrice({ currencyA, currencyB, startPriceHandler, mintInfo, priceFormat }: IStartingPrice) {\n    const dispatch = useAppDispatch();\n    const initialUSDPrices = useInitialUSDPrices();\n    const initialTokenPrice = useInitialTokenPrice();\n\n    const basePriceUSD = useUSDCPrice(currencyA ?? undefined);\n    const quotePriceUSD = useUSDCPrice(currencyB ?? undefined);\n\n    const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped);\n\n    const [userBaseCurrencyUSD, setUserBaseCurrencyUSD] = useState<string | undefined>(initialUSDPrices.CURRENCY_A);\n    const [userQuoteCurrencyUSD, setUserQuoteCurrencyUSD] = useState<string | undefined>(initialUSDPrices.CURRENCY_B);\n\n    const [userQuoteCurrencyToken, setUserQuoteCurrencyToken] = useState<string | undefined>(\n        mintInfo && isSorted ? mintInfo.price?.toSignificant(5) : mintInfo.price?.invert().toSignificant(5) || undefined\n    );\n\n    const isLocked = useMemo(() => Boolean(basePriceUSD && quotePriceUSD), [basePriceUSD, quotePriceUSD]);\n\n    useEffect(() => {\n        if (!initialUSDPrices.CURRENCY_A && basePriceUSD) {\n            dispatch(setInitialUSDPrices({ field: Field.CURRENCY_A, typedValue: basePriceUSD.toSignificant(8) }));\n        }\n        if (!initialUSDPrices.CURRENCY_B && quotePriceUSD) {\n            dispatch(setInitialUSDPrices({ field: Field.CURRENCY_B, typedValue: quotePriceUSD.toSignificant(8) }));\n        }\n        if (!initialTokenPrice && basePriceUSD && quotePriceUSD) {\n            dispatch(setInitialTokenPrice({ typedValue: String((+basePriceUSD.toSignificant(8) / +quotePriceUSD.toSignificant(8)).toFixed(5)) }));\n        }\n    }, [basePriceUSD, quotePriceUSD]);\n\n    const isUSD = useMemo(() => priceFormat === PriceFormats.USD, [priceFormat]);\n\n    const handleUSDChange = useCallback(\n        (field: Field, _typedValue: string) => {\n            if (!_typedValue) {\n                dispatch(setInitialTokenPrice({ typedValue: \"\" }));\n                dispatch(setInitialUSDPrices({ field, typedValue: \"\" }));\n                startPriceHandler(\"\");\n                if (field === Field.CURRENCY_A) {\n                    setUserBaseCurrencyUSD(\"\");\n                } else {\n                    setUserQuoteCurrencyUSD(\"\");\n                }\n                setUserQuoteCurrencyToken(\"\");\n                return;\n            }\n\n            const typedValue = String(parseFloat(_typedValue));\n\n            dispatch(setInitialUSDPrices({ field, typedValue }));\n\n            if (field === Field.CURRENCY_A) {\n                setUserBaseCurrencyUSD(_typedValue);\n                const priceB = initialUSDPrices.CURRENCY_B || quotePriceUSD?.toSignificant(5);\n                if (priceB) {\n                    if (!+typedValue) {\n                        startPriceHandler(\"\");\n                        setUserQuoteCurrencyToken(\"\");\n                        dispatch(setInitialTokenPrice({ typedValue: \"\" }));\n                    } else {\n                        const newPriceA = parseFloat((+typedValue / (+priceB || 1)).toFixed(8));\n                        startPriceHandler(String(newPriceA));\n                        setUserQuoteCurrencyToken(String(newPriceA));\n                        dispatch(setInitialTokenPrice({ typedValue: String(newPriceA) }));\n                    }\n                }\n            }\n\n            if (field === Field.CURRENCY_B) {\n                setUserQuoteCurrencyUSD(_typedValue);\n                const priceA = initialUSDPrices.CURRENCY_A || basePriceUSD?.toSignificant(5);\n                if (priceA) {\n                    if (!+typedValue) {\n                        startPriceHandler(\"\");\n                        setUserQuoteCurrencyToken(\"\");\n                        dispatch(setInitialTokenPrice({ typedValue: \"\" }));\n                    } else {\n                        const newPriceB = parseFloat((+priceA / +typedValue).toFixed(5));\n                        startPriceHandler(String(newPriceB));\n                        setUserQuoteCurrencyToken(String(newPriceB));\n                        dispatch(setInitialTokenPrice({ typedValue: String(newPriceB) }));\n                    }\n                }\n            }\n        },\n        [basePriceUSD, quotePriceUSD, initialUSDPrices]\n    );\n\n    const handleTokenChange = useCallback(\n        (_typedValue: string) => {\n            if (!_typedValue) {\n                dispatch(setInitialTokenPrice({ typedValue: \"\" }));\n                dispatch(setInitialUSDPrices({ field: Field.CURRENCY_A, typedValue: \"\" }));\n                dispatch(setInitialUSDPrices({ field: Field.CURRENCY_B, typedValue: \"\" }));\n                startPriceHandler(\"\");\n                setUserBaseCurrencyUSD(\"\");\n                setUserQuoteCurrencyUSD(\"\");\n                setUserQuoteCurrencyToken(\"\");\n                return;\n            }\n\n            setUserQuoteCurrencyToken(_typedValue);\n\n            const typedValue = String(parseFloat(_typedValue));\n\n            dispatch(setInitialTokenPrice({ typedValue }));\n\n            startPriceHandler(typedValue);\n\n            const usdA = basePriceUSD?.toSignificant(5) || initialUSDPrices.CURRENCY_A;\n            const usdB = quotePriceUSD?.toSignificant(5) || initialUSDPrices.CURRENCY_B;\n\n            if (usdA && usdA !== \"0\") {\n                if (!basePriceUSD) {\n                    const newUSDA = (+usdA * +typedValue) / (+initialTokenPrice || 1);\n                    const fixedA = newUSDA ? parseFloat(newUSDA.toFixed(8)) : \"0\";\n                    dispatch(setInitialUSDPrices({ field: Field.CURRENCY_A, typedValue: String(fixedA) }));\n                    setUserBaseCurrencyUSD(String(fixedA));\n                    startPriceHandler(String(fixedA));\n                }\n            } else {\n                if (usdB) {\n                    dispatch(setInitialUSDPrices({ field: Field.CURRENCY_A, typedValue: String(parseFloat(String((+usdB * +typedValue) / (+initialTokenPrice || 1)))) }));\n                    setUserBaseCurrencyUSD(String(parseFloat(String((+usdB * +typedValue) / (+initialTokenPrice || 1)))));\n                }\n                startPriceHandler(\"\");\n            }\n\n            if (usdB && usdB !== \"0\") {\n                if (!quotePriceUSD) {\n                    const newUSDB = (+usdB * +typedValue) / (+initialTokenPrice || 1);\n                    const fixedB = newUSDB ? parseFloat(newUSDB.toFixed(8)) : \"0\";\n                    dispatch(setInitialUSDPrices({ field: Field.CURRENCY_B, typedValue: String(fixedB) }));\n                    setUserQuoteCurrencyUSD(String(fixedB));\n                    startPriceHandler(String(fixedB));\n                }\n            } else {\n                if (usdA) {\n                    dispatch(setInitialUSDPrices({ field: Field.CURRENCY_B, typedValue: String(parseFloat(String((+usdA * +typedValue) / (+initialTokenPrice || 1)))) }));\n                    setUserQuoteCurrencyUSD(String(parseFloat(String((+usdA * +typedValue) / (+initialTokenPrice || 1)))));\n                }\n                startPriceHandler(\"\");\n            }\n        },\n        [userBaseCurrencyUSD, userQuoteCurrencyUSD, initialTokenPrice, initialUSDPrices, handleUSDChange]\n    );\n\n    useEffect(() => {\n        if (initialTokenPrice) {\n            startPriceHandler(initialTokenPrice);\n            setUserQuoteCurrencyToken(initialTokenPrice);\n        }\n    }, [initialTokenPrice]);\n\n    useEffect(() => {\n        dispatch(updateSelectedPreset({ preset: null }));\n    }, [priceFormat]);\n\n    return (\n        <div className={\"f starting-price-wrapper c p-1\"} style={{ width: isMobileOnly ? \"100%\" : \"542px\", backgroundColor: \"var(--panel1)\" }}>\n            <div className={\"flex-s-between\"}>\n                {isLocked ? (\n                    <span className={\"auto-fetched\"}>\n                        <Trans>✨ Prices were auto-fetched</Trans>\n                    </span>\n                ) : !basePriceUSD && !quotePriceUSD ? (\n                    <span className={\"not-auto-fetched\"}>{t`Can't auto-fetch prices.`}</span>\n                ) : !basePriceUSD ? (\n                    <span className={\"not-auto-fetched\"}>{t`Can't auto-fetch ${currencyA?.symbol} price.`}</span>\n                ) : !quotePriceUSD ? (\n                    <span className={\"not-auto-fetched\"}>{t`Can't auto-fetch ${currencyB?.symbol} price.`}</span>\n                ) : null}\n            </div>\n            <div className={\"br-8 mt-1 f c\"}>\n                <div className={`f ${priceFormat === PriceFormats.TOKEN ? \"reverse\" : \"c\"}`}>\n                    {priceFormat === PriceFormats.TOKEN ? (\n                        <TokenPrice\n                            baseCurrency={currencyA}\n                            quoteCurrency={currencyB}\n                            basePrice={basePriceUSD}\n                            quotePrice={quotePriceUSD}\n                            isLocked={isLocked}\n                            userQuoteCurrencyToken={userQuoteCurrencyToken}\n                            changeQuotePriceHandler={(v: string) => handleTokenChange(v)}\n                            isSelected={priceFormat === PriceFormats.TOKEN}\n                        ></TokenPrice>\n                    ) : (\n                        <USDPrice\n                            baseCurrency={currencyA}\n                            quoteCurrency={currencyB}\n                            basePrice={basePriceUSD}\n                            quotePrice={quotePriceUSD}\n                            isLocked={isLocked}\n                            userBaseCurrencyUSD={userBaseCurrencyUSD}\n                            userQuoteCurrencyUSD={userQuoteCurrencyUSD}\n                            changeBaseCurrencyUSDHandler={(v: string) => handleUSDChange(Field.CURRENCY_A, v)}\n                            changeQuoteCurrencyUSDHandler={(v: string) => handleUSDChange(Field.CURRENCY_B, v)}\n                            isSelected={priceFormat === PriceFormats.USD}\n                        ></USDPrice>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { t } from \"@lingui/macro\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport useUSDCPrice from \"hooks/useUSDCPrice\";\nimport { PriceFormats } from \"pages/NewAddLiquidity/components/PriceFomatToggler\";\nimport StartingPrice from \"pages/NewAddLiquidity/components/StartingPrice\";\nimport { StepTitle } from \"pages/NewAddLiquidity/components/StepTitle\";\nimport { USDPrices } from \"pages/NewAddLiquidity/components/USDPrices\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { updateCurrentStep } from \"state/mint/v3/actions\";\nimport { IDerivedMintInfo, useV3MintActionHandlers } from \"state/mint/v3/hooks\";\n\nimport \"./index.scss\";\n\ninterface IInitialPrice {\n    currencyA: Currency | undefined;\n    currencyB: Currency | undefined;\n    mintInfo: IDerivedMintInfo;\n    isCompleted: boolean;\n    priceFormat: PriceFormats;\n    backStep: number;\n}\n\nexport function InitialPrice({ currencyA, currencyB, mintInfo, isCompleted, priceFormat, backStep }: IInitialPrice) {\n    const currencyAUSDC = useUSDCPrice(currencyA ?? undefined);\n    const currencyBUSDC = useUSDCPrice(currencyB ?? undefined);\n\n    const dispatch = useAppDispatch();\n\n    const { onStartPriceInput } = useV3MintActionHandlers(mintInfo.noLiquidity);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        return () => {\n            if (history.action === \"POP\") {\n                dispatch(updateCurrentStep({ currentStep: backStep }));\n            }\n        };\n    }, []);\n\n    return (\n        <div className=\"initial-price-wrapper f c\">\n            <StepTitle title={t`Set initial price`} isCompleted={isCompleted} step={2} />\n            <div className=\"f mxs_fd-c\">\n                <StartingPrice currencyA={currencyA} currencyB={currencyB} mintInfo={mintInfo} startPriceHandler={onStartPriceInput} priceFormat={priceFormat} />\n                <div className=\"ml-2 mxs_ml-0 mxs_mt-1\">\n                    {currencyA && currencyB && <USDPrices currencyA={currencyA} currencyB={currencyB} currencyAUSDC={currencyAUSDC} currencyBUSDC={currencyBUSDC} priceFormat={priceFormat} />}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { Trans } from \"@lingui/macro\";\nimport Loader from \"components/Loader\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { CheckCircle, XCircle } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { setAddLiquidityTxHash, setShowNewestPosition } from \"state/mint/v3/actions\";\nimport { useAddLiquidityTxHash } from \"state/mint/v3/hooks\";\nimport { useAllTransactions } from \"state/transactions/hooks\";\nimport \"./index.scss\";\n\ninterface IAftermath {\n    done?: boolean;\n    Button: any;\n    rejected: boolean;\n}\n\nexport function Aftermath({ done, Button, rejected }: IAftermath) {\n    const [isConfirmed, toggleIsConfirmed] = useState(false);\n    const [isError, toggleIsError] = useState(false);\n\n    const allTransactions = useAllTransactions();\n\n    const dispatch = useAppDispatch();\n    const txHash = useAddLiquidityTxHash();\n\n    const sortedRecentTransactions = useMemo(() => {\n        const txs = Object.values(allTransactions);\n        return txs.filter((tx) => new Date().getTime() - tx.addedTime < 86_400_000).sort((a, b) => b.addedTime - a.addedTime);\n    }, [allTransactions]);\n\n    const confirmed = useMemo(() => sortedRecentTransactions.filter((tx) => tx.receipt).map((tx) => tx.hash), [sortedRecentTransactions, allTransactions]);\n\n    const failed = useMemo(() => sortedRecentTransactions.filter((tx) => tx.receipt).map((tx) => ({ hash: tx.hash, status: tx.receipt?.status })), [sortedRecentTransactions, allTransactions]);\n\n    useEffect(() => {\n        if (confirmed.some((hash) => hash === txHash)) {\n            toggleIsConfirmed(true);\n            dispatch(setAddLiquidityTxHash({ txHash: \"\" }));\n            dispatch(setShowNewestPosition({ showNewestPosition: true }));\n        }\n    }, [confirmed, txHash]);\n\n    useEffect(() => {\n        if (failed.some((hash) => hash.hash === txHash && hash.status === 0)) {\n            toggleIsError(true);\n            dispatch(setAddLiquidityTxHash({ txHash: \"\" }));\n            dispatch(setShowNewestPosition({ showNewestPosition: true }));\n        }\n    }, [failed, txHash]);\n\n    useEffect(() => {\n        console.log(rejected, isError);\n        if (rejected) {\n            toggleIsError(true);\n        }\n    }, [rejected]);\n\n    return (\n        <div className=\"f c f-ac f-jc w-100\" style={{ height: \"calc(414px + 4rem)\" }}>\n            {isError ? (\n                <>\n                    <div>\n                        {\" \"}\n                        <XCircle size={\"36px\"} stroke={\"var(--red)\"} />\n                    </div>\n                    <div className=\"mt-1 fs-125\">Transaction Failed</div>\n                    <div\n                        onClick={() => {\n                            toggleIsError(false);\n                            toggleIsConfirmed(false);\n                        }}\n                    >\n                        <Button />\n                    </div>\n                </>\n            ) : isConfirmed ? (\n                <>\n                    <div>\n                        {\" \"}\n                        <CheckCircle size={\"36px\"} stroke={\"var(--green)\"} />\n                    </div>\n                    <div className=\"mt-1 fs-125\">\n                        <Trans>Liquidity added!</Trans>\n                    </div>\n                    <Link to={\"/pool\"} className=\"go-to-pools mt-2\">\n                        <Trans>Go to pools</Trans>\n                    </Link>\n                </>\n            ) : (\n                <>\n                    <div>\n                        <Loader size={\"36px\"} stroke={\"var(--loader)\"} />\n                    </div>\n                    <div className=\"mt-1 fs-125\">\n                        <Trans>Adding liquidity</Trans>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n","import { useCurrency } from \"hooks/Tokens\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { NavLink, RouteComponentProps, Switch, useRouteMatch } from \"react-router-dom\";\nimport { useV3DerivedMintInfo, useV3MintState, useV3MintActionHandlers, useInitialUSDPrices, useCurrentStep } from \"state/mint/v3/hooks\";\nimport { currencyId } from \"utils/currencyId\";\nimport { Stepper } from \"./components/Stepper\";\nimport { EnterAmounts } from \"./containers/EnterAmounts\";\nimport { SelectPair } from \"./containers/SelectPair\";\nimport { SelectRange } from \"./containers/SelectRange\";\n\nimport { Currency, Percent } from \"@uniswap/sdk-core\";\n\nimport \"./index.scss\";\nimport { WMATIC_EXTENDED } from \"constants/tokens\";\nimport { setInitialTokenPrice, setInitialUSDPrices, updateCurrentStep, updateSelectedPreset } from \"state/mint/v3/actions\";\nimport { Field } from \"state/mint/actions\";\nimport useUSDCPrice from \"hooks/useUSDCPrice\";\nimport { PriceFormats, PriceFormatToggler } from \"./components/PriceFomatToggler\";\nimport { AddLiquidityButton } from \"./containers/AddLiquidityButton\";\nimport { ArrowLeft, ChevronLeft, ChevronRight } from \"react-feather\";\nimport { PoolState } from \"hooks/usePools\";\nimport { RouterGuard } from \"./routing/router-guards\";\nimport { InitialPrice } from \"./containers/InitialPrice\";\nimport { useAppDispatch } from \"state/hooks\";\nimport SettingsTab from \"components/Settings\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport { ZERO_PERCENT } from \"constants/misc\";\nimport { Aftermath } from \"./containers/Aftermath\";\nimport { useWalletModalToggle } from \"state/application/hooks\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { isMobileOnly } from \"react-device-detect\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport { ChainId } from \"constants/addresses\";\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000);\n\nexport function NewAddLiquidityPage({\n    match: {\n        params: { currencyIdA, currencyIdB },\n    },\n    history,\n}: RouteComponentProps<{\n    currencyIdA?: string;\n    currencyIdB?: string;\n    step?: string;\n}>) {\n    const [isRejected, setRejected] = useState(false);\n\n    const { account, chainId } = useActiveWeb3React();\n\n    const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n    const dispatch = useAppDispatch();\n\n    const feeAmount = 100;\n\n    const currentStep = useCurrentStep();\n\n    const [end, setEnd] = useState(false);\n\n    const [priceFormat, setPriceFormat] = useState(PriceFormats.TOKEN);\n\n    useEffect(() => {\n        onFieldAInput(\"\");\n        onFieldBInput(\"\");\n        onLeftRangeInput(\"\");\n        onRightRangeInput(\"\");\n    }, [currencyIdA, currencyIdB]);\n\n    const baseCurrency = useCurrency(currencyIdA);\n    const currencyB = useCurrency(currencyIdB);\n    // prevent an error if they input ETH/WETH\n    //TODO\n    const quoteCurrency = baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB;\n\n    const derivedMintInfo = useV3DerivedMintInfo(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, baseCurrency ?? undefined, undefined);\n    const prevDerivedMintInfo = usePrevious({ ...derivedMintInfo });\n\n    const mintInfo = useMemo(() => {\n        if ((!derivedMintInfo.pool || !derivedMintInfo.price || derivedMintInfo.noLiquidity) && prevDerivedMintInfo) {\n            return {\n                ...prevDerivedMintInfo,\n                pricesAtTicks: derivedMintInfo.pricesAtTicks,\n                ticks: derivedMintInfo.ticks,\n                parsedAmounts: derivedMintInfo.parsedAmounts,\n            };\n        }\n        return {\n            ...derivedMintInfo,\n        };\n    }, [derivedMintInfo, baseCurrency, quoteCurrency]);\n\n    const initialUSDPrices = useInitialUSDPrices();\n    const usdPriceA = useUSDCPrice(baseCurrency ?? undefined);\n    const usdPriceB = useUSDCPrice(quoteCurrency ?? undefined);\n\n    const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } = useV3MintActionHandlers(mintInfo.noLiquidity);\n\n    const { startPriceTypedValue } = useV3MintState();\n\n    const handleCurrencySelect = useCallback(\n        (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n            const currencyIdNew = currencyId(currencyNew, chainId || ChainId.BNB);\n\n            let chainSymbol;\n\n            if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n                chainSymbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol;\n            }\n\n            resetState();\n\n            if (currencyIdNew.toLowerCase() === currencyIdOther?.toLowerCase()) {\n                // not ideal, but for now clobber the other if the currency ids are equal\n                return [currencyIdNew, undefined];\n            } else {\n                // prevent weth + eth\n                const isETHOrWETHNew = currencyIdNew === chainSymbol || (chainId !== undefined && currencyIdNew === WMATIC_EXTENDED[chainId]?.address);\n                const isETHOrWETHOther = currencyIdOther !== undefined && (currencyIdOther === chainSymbol || (chainId !== undefined && currencyIdOther === WMATIC_EXTENDED[chainId]?.address));\n\n                if (isETHOrWETHNew && isETHOrWETHOther) {\n                    return [currencyIdNew, undefined];\n                } else {\n                    return [currencyIdNew, currencyIdOther];\n                }\n            }\n        },\n        [chainId]\n    );\n\n    const handleCurrencyASelect = useCallback(\n        (currencyANew: Currency) => {\n            const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB);\n            if (idB === undefined) {\n                history.push(`/add/${idA}`);\n            } else {\n                history.push(`/add/${idA}/${idB}`);\n            }\n        },\n        [handleCurrencySelect, currencyIdB, history]\n    );\n\n    const handleCurrencyBSelect = useCallback(\n        (currencyBNew: Currency) => {\n            const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA);\n            if (idA === undefined) {\n                history.push(`/add/${idB}`);\n            } else {\n                history.push(`/add/${idA}/${idB}`);\n            }\n        },\n        [handleCurrencySelect, currencyIdA, history]\n    );\n\n    const handleCurrencySwap = useCallback(() => {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`);\n        resetState();\n    }, [history, handleCurrencySelect, currencyIdA, currencyIdB]);\n\n    const handlePopularPairSelection = useCallback(\n        (pair: [string, string]) => {\n            const WMATIC = AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.address;\n            history.push(\n                `/add/${pair[0] === WMATIC ? AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol : pair[0]}/${\n                    pair[1] === WMATIC ? AlgebraConfig.CHAIN_PARAMS[chainId || ChainId.BNB].wrappedNativeCurrency.symbol : pair[1]\n                }`\n            );\n            resetState();\n        },\n        [chainId]\n    );\n\n    const handleStepChange = useCallback(\n        (_step) => {\n            history.push(`/add/${currencyIdA}/${currencyIdB}/${_step}`);\n        },\n        [currencyIdA, currencyIdB, history]\n    );\n\n    const handlePriceFormat = useCallback((priceFormat: PriceFormats) => {\n        setPriceFormat(priceFormat);\n    }, []);\n\n    function resetState() {\n        dispatch(updateSelectedPreset({ preset: null }));\n        dispatch(setInitialTokenPrice({ typedValue: \"\" }));\n        dispatch(setInitialUSDPrices({ field: Field.CURRENCY_A, typedValue: \"\" }));\n        dispatch(setInitialUSDPrices({ field: Field.CURRENCY_B, typedValue: \"\" }));\n        onStartPriceInput(\"\");\n    }\n\n    const stepLinks = useMemo(() => {\n        const _stepLinks = [\n            {\n                link: \"select-pair\",\n                title: t`Select a pair`,\n            },\n        ];\n\n        if (mintInfo.noLiquidity && baseCurrency && quoteCurrency) {\n            _stepLinks.push({\n                link: \"initial-price\",\n                title: t`Set initial price`,\n            });\n        }\n\n        _stepLinks.push(\n            {\n                link: \"select-range\",\n                title: t`Select a range`,\n            },\n            {\n                link: \"enter-amounts\",\n                title: t`Enter amounts`,\n            }\n        );\n        return _stepLinks;\n    }, [baseCurrency, quoteCurrency, mintInfo]);\n\n    const stepPair = useMemo(() => {\n        return Boolean(baseCurrency && quoteCurrency && mintInfo.poolState !== PoolState.INVALID && mintInfo.poolState !== PoolState.LOADING);\n    }, [baseCurrency, quoteCurrency, mintInfo]);\n\n    const stepRange = useMemo(() => {\n        return Boolean(mintInfo.lowerPrice && mintInfo.upperPrice && !mintInfo.invalidRange && account);\n    }, [mintInfo]);\n\n    const stepAmounts = useMemo(() => {\n        if (mintInfo.outOfRange) {\n            return Boolean(mintInfo.parsedAmounts[Field.CURRENCY_A] || (mintInfo.parsedAmounts[Field.CURRENCY_B] && account));\n        }\n        return Boolean(mintInfo.parsedAmounts[Field.CURRENCY_A] && mintInfo.parsedAmounts[Field.CURRENCY_B] && account);\n    }, [mintInfo]);\n\n    const stepInitialPrice = useMemo(() => {\n        return mintInfo.noLiquidity ? Boolean(+startPriceTypedValue && account) : false;\n    }, [mintInfo, startPriceTypedValue]);\n\n    const steps = useMemo(() => {\n        if (mintInfo.noLiquidity) {\n            return [stepPair, stepInitialPrice, stepRange, stepAmounts];\n        }\n\n        return [stepPair, stepRange, stepAmounts];\n    }, [stepPair, stepRange, stepAmounts, stepInitialPrice, mintInfo]);\n\n    const completedSteps = useMemo(() => {\n        return Array(currentStep).map((_, i) => i + 1);\n    }, [currentStep]);\n\n    const allowedSlippage = useUserSlippageToleranceWithDefault(mintInfo.outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE);\n\n    const hidePriceFormatter = useMemo(() => {\n        if (stepInitialPrice && currentStep < 2) {\n            return false;\n        }\n\n        if (!stepInitialPrice && currentStep < 1) {\n            return false;\n        }\n\n        return Boolean((mintInfo.noLiquidity ? stepInitialPrice : stepPair) && !initialUSDPrices.CURRENCY_A && !initialUSDPrices.CURRENCY_B && !usdPriceA && !usdPriceB);\n    }, [mintInfo, currentStep, stepRange, stepInitialPrice, usdPriceA, usdPriceB, initialUSDPrices]);\n\n    useEffect(() => {\n        if (hidePriceFormatter) {\n            handlePriceFormat(PriceFormats.TOKEN);\n            setPriceFormat(PriceFormats.TOKEN);\n        }\n    }, [hidePriceFormatter]);\n\n    useEffect(() => {\n        return () => {\n            resetState();\n            dispatch(updateCurrentStep({ currentStep: 0 }));\n        };\n    }, []);\n\n    useEffect(() => {\n        switch (currentStep) {\n            // case 0: {\n            //     history.push(`/add/${currencyIdA}/${currencyIdB}/select-pair`);\n            //     break;\n            // }\n            case 1: {\n                if (!mintInfo.noLiquidity) {\n                    history.push(`/add/${currencyIdA}/${currencyIdB}/select-range`);\n                } else {\n                    history.push(`/add/${currencyIdA}/${currencyIdB}/initial-price`);\n                }\n                break;\n            }\n            case 2: {\n                if (!mintInfo.noLiquidity) {\n                    history.push(`/add/${currencyIdA}/${currencyIdB}/enter-amounts`);\n                } else {\n                    history.push(`/add/${currencyIdA}/${currencyIdB}/select-range`);\n                }\n                break;\n            }\n            case 3: {\n                if (mintInfo.noLiquidity) {\n                    history.push(`/add/${currencyIdA}/${currencyIdB}/enter-amounts`);\n                }\n                break;\n            }\n        }\n    }, [currencyIdA, currencyIdB, history, currentStep, mintInfo.noLiquidity]);\n\n    return (\n        <>\n            <NavLink className={\"c-p mb-1 f hover-op trans-op w-fc\"} to={\"/pool\"}>\n                <ArrowLeft size={\"16px\"} />\n                <p className={\"ml-05\"}>\n                    <Trans>Pools</Trans>\n                </p>\n            </NavLink>\n            <div className=\"add-liquidity-page\">\n                <div className=\"add-liquidity-page__header f mxs_fd-c mb-1\">\n                    <div className=\"add-liquidity-page__header-title\">\n                        <Trans>Add liquidity</Trans>\n                    </div>\n                    <div className=\"ml-a mxs_ml-0 mxs_mt-1 f f-ac \">\n                        {!hidePriceFormatter && <div className=\"mr-1\">{/* <PriceFormatToggler currentFormat={priceFormat} handlePriceFormat={handlePriceFormat} /> */}</div>}\n                        <div className=\"mxs_ml-a\">\n                            <SettingsTab placeholderSlippage={allowedSlippage} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"add-liquidity-page__stepper mb-2\">\n                    <Stepper\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={quoteCurrency ?? undefined}\n                        mintInfo={mintInfo}\n                        stepLinks={stepLinks}\n                        completedSteps={completedSteps}\n                        end={end}\n                        handleNavigation={(step) => {\n                            if (step.isEnabled) {\n                                handleStepChange(step.link);\n                                setTimeout(() => dispatch(updateCurrentStep({ currentStep: step.step })), 10);\n                            }\n                        }}\n                        priceFormat={priceFormat}\n                    />\n                </div>\n                <Switch>\n                    <RouterGuard\n                        path={`/add/${currencyIdA}/${currencyIdB}/aftermath`}\n                        redirect={`/add/${currencyIdA}/${currencyIdB}/select-pair`}\n                        allowance={stepPair && stepRange && stepAmounts}\n                        Component={Aftermath}\n                        rejected={isRejected}\n                        Button={() => (\n                            <div className={\"ml-a mr-a mt-1\"}>\n                                <AddLiquidityButton\n                                    baseCurrency={baseCurrency ?? undefined}\n                                    quoteCurrency={quoteCurrency ?? undefined}\n                                    mintInfo={mintInfo}\n                                    handleAddLiquidity={() => {\n                                        setEnd(true);\n                                        handleStepChange(\"aftermath\");\n                                    }}\n                                    title={t`Retry`}\n                                    setRejected={setRejected}\n                                />\n                            </div>\n                        )}\n                    />\n\n                    <RouterGuard\n                        path={`/add/${currencyIdA}/${currencyIdB}/enter-amounts`}\n                        redirect={`/add/${currencyIdA}/${currencyIdB}/select-pair`}\n                        allowance={stepPair && stepRange && currentStep === (stepInitialPrice ? 3 : 2)}\n                        Component={EnterAmounts}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={currencyB ?? undefined}\n                        mintInfo={mintInfo}\n                        isCompleted={stepAmounts}\n                        additionalStep={stepInitialPrice}\n                        priceFormat={priceFormat}\n                        backStep={stepInitialPrice ? 2 : 1}\n                    />\n\n                    <RouterGuard\n                        path={`/add/${currencyIdA}/${currencyIdB}/select-range`}\n                        redirect={`/add/${currencyIdA}/${currencyIdB}/select-pair`}\n                        allowance={stepPair && currentStep === (stepInitialPrice ? 2 : 1)}\n                        Component={SelectRange}\n                        currencyA={baseCurrency}\n                        currencyB={quoteCurrency}\n                        mintInfo={mintInfo}\n                        disabled={!stepPair}\n                        isCompleted={stepRange}\n                        additionalStep={stepInitialPrice}\n                        priceFormat={priceFormat}\n                        backStep={stepInitialPrice ? 1 : 0}\n                    />\n\n                    <RouterGuard\n                        path={`/add/${currencyIdA}/${currencyIdB}/initial-price`}\n                        redirect={`/add/${currencyIdA}/${currencyIdB}/select-pair`}\n                        allowance={mintInfo.noLiquidity}\n                        Component={InitialPrice}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={currencyB ?? undefined}\n                        mintInfo={mintInfo}\n                        isCompleted={stepInitialPrice}\n                        priceFormat={priceFormat}\n                        backStep={0}\n                    />\n\n                    <RouterGuard\n                        path={``}\n                        redirect={`/add/${currencyIdA}/${currencyIdB}/select-pair`}\n                        allowance={true}\n                        Component={SelectPair}\n                        baseCurrency={baseCurrency}\n                        quoteCurrency={quoteCurrency}\n                        mintInfo={mintInfo}\n                        isCompleted={stepPair}\n                        handleCurrencySwap={handleCurrencySwap}\n                        handleCurrencyASelect={handleCurrencyASelect}\n                        handleCurrencyBSelect={handleCurrencyBSelect}\n                        handlePopularPairSelection={handlePopularPairSelection}\n                        priceFormat={priceFormat}\n                    />\n                </Switch>\n                {!end && account ? (\n                    <div className=\"add-buttons f f-ac f-jc mt-2\">\n                        {currentStep !== 0 && (\n                            <div>\n                                <button\n                                    className=\"add-buttons__prev f\"\n                                    onClick={() => {\n                                        dispatch(updateCurrentStep({ currentStep: currentStep - 1 }));\n                                        handleStepChange(stepLinks[currentStep - 1].link);\n                                    }}\n                                >\n                                    <ChevronLeft size={18} style={{ marginRight: \"5px\" }} />\n                                    <span className=\"add-buttons__prev-text\">{stepLinks[currentStep - 1].title}</span>\n                                    <span className=\"add-buttons__prev-text--mobile\">\n                                        <Trans>Back</Trans>\n                                    </span>\n                                </button>\n                            </div>\n                        )}\n                        {currentStep === (stepInitialPrice ? 3 : 2) ? (\n                            <AddLiquidityButton\n                                baseCurrency={baseCurrency ?? undefined}\n                                quoteCurrency={quoteCurrency ?? undefined}\n                                mintInfo={mintInfo}\n                                handleAddLiquidity={() => {\n                                    setEnd(true);\n                                    handleStepChange(\"aftermath\");\n                                }}\n                                title={t`Add liquidity`}\n                            />\n                        ) : (\n                            <button\n                                className=\"add-buttons__next f f-jc f-ac ml-a\"\n                                disabled={!steps[currentStep]}\n                                onClick={() => {\n                                    dispatch(updateCurrentStep({ currentStep: currentStep + 1 }));\n                                    isMobileOnly && window.scrollTo(0, 0);\n                                    handleStepChange(stepLinks[currentStep + 1].link);\n                                }}\n                            >\n                                <span>{stepLinks[currentStep + 1].title}</span>\n                                <ChevronRight size={18} style={{ marginLeft: \"5px\" }} />\n                            </button>\n                        )}\n                    </div>\n                ) : !account ? (\n                    <div className=\"add-buttons f f-ac f-jc mt-2 mxs_mt-1\">\n                        <button className=\"add-buttons__next f f-jc f-ac ml-a\" onClick={toggleWalletModal}>\n                            <Trans>Connect Wallet</Trans>\n                        </button>\n                    </div>\n                ) : null}\n            </div>\n        </>\n    );\n}\n","import { useActiveWeb3React } from \"hooks/web3\";\nimport { NewAddLiquidityPage } from \"pages/NewAddLiquidity\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { WMATIC_EXTENDED } from \"../../constants/tokens\";\n\nimport AlgebraConfig from \"algebra.config\";\n\nexport function RedirectDuplicateTokenIdsNew(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string; step: string }>) {\n    const {\n        match: {\n            params: { currencyIdA, currencyIdB, step },\n        },\n    } = props;\n\n    const { chainId } = useActiveWeb3React();\n\n    // prevent weth + eth\n    let symbol;\n\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        symbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol;\n    }\n\n    const isETHOrWETHA = currencyIdA === symbol || (chainId !== undefined && currencyIdA === WMATIC_EXTENDED[chainId]?.address);\n    const isETHOrWETHB = currencyIdB === symbol || (chainId !== undefined && currencyIdB === WMATIC_EXTENDED[chainId]?.address);\n\n    if (currencyIdA && currencyIdB && (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))) {\n        return <Redirect to={`/add/${currencyIdA}`} />;\n    }\n    return <NewAddLiquidityPage {...props} />;\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const selectPercent = createAction<{ percent: number }>('burnV3/selectBurnPercent')\n","import { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { Position } from 'lib/src'\nimport { usePool } from 'hooks/usePools'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useToken } from 'hooks/Tokens'\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\nimport { useCallback, useMemo } from 'react'\nimport { AppState } from '../../index'\nimport { selectPercent } from './actions'\nimport { unwrappedToken } from 'utils/unwrappedToken'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { t } from '@lingui/macro'\nimport { PositionPool } from '../../../models/interfaces'\n\nexport function useBurnV3State(): AppState['burnV3'] {\n    return useAppSelector((state) => state.burnV3)\n}\n\nexport function useDerivedV3BurnInfo(\n    position?: PositionPool,\n    asWETH = false\n): {\n    position?: Position\n    liquidityPercentage?: Percent\n    liquidityValue0?: CurrencyAmount<Currency>\n    liquidityValue1?: CurrencyAmount<Currency>\n    feeValue0?: CurrencyAmount<Currency>\n    feeValue1?: CurrencyAmount<Currency>\n    outOfRange: boolean\n    error?: string\n} {\n    const { account } = useActiveWeb3React()\n    const { percent } = useBurnV3State()\n\n\n    const token0 = useToken(position?.token0)\n    const token1 = useToken(position?.token1)\n\n    const [, pool] = usePool(token0 ?? undefined, token1 ?? undefined)\n\n    const positionSDK = useMemo(\n        () =>\n            pool && position?.liquidity && typeof position?.tickLower === 'number' && typeof position?.tickUpper === 'number'\n                ? new Position({\n                    pool,\n                    liquidity: position.liquidity.toString(),\n                    tickLower: position.tickLower,\n                    tickUpper: position.tickUpper\n                })\n                : undefined,\n        [pool, position]\n    )\n\n    const liquidityPercentage = new Percent(percent, 100)\n\n    const discountedAmount0 = positionSDK\n        ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient\n        : undefined\n    const discountedAmount1 = positionSDK\n        ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient\n        : undefined\n\n    const liquidityValue0 =\n        token0 && discountedAmount0\n            ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0)\n            : undefined\n    const liquidityValue1 =\n        token1 && discountedAmount1\n            ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1)\n            : undefined\n\n    const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, position?.tokenId, asWETH)\n\n    const outOfRange =\n        pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false\n\n    let error: string | undefined\n    if (!account) {\n        error = t`Connect Wallet`\n    }\n    if (percent === 0) {\n        error = error ?? t`Enter a percent`\n    }\n    return {\n        position: positionSDK,\n        liquidityPercentage,\n        liquidityValue0,\n        liquidityValue1,\n        feeValue0,\n        feeValue1,\n        outOfRange,\n        error\n    }\n}\n\nexport function useBurnV3ActionHandlers(): {\n    onPercentSelect: (percent: number) => void\n} {\n    const dispatch = useAppDispatch()\n\n    const onPercentSelect = useCallback(\n        (percent: number) => {\n            dispatch(selectPercent({ percent }))\n        },\n        [dispatch]\n    )\n\n    return {\n        onPercentSelect\n    }\n}\n","import styled from 'styled-components/macro'\n\nexport const StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: var(--secondary);\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => 'var(--bg1)'};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0 0 1px rgba(0, 0, 0, 0.1), 0  4px 8px rgba(0, 0, 0, 0.08), 0  16px 24px rgba(0, 0, 0, 0.06),\n        0  24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: var(--secondary);\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => 'var(--bg1)'};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0  0  1px rgba(0, 0, 0, 0.1), 0  4px 8px rgba(0, 0, 0, 0.08), 0  16px 24px rgba(0, 0, 0, 0.06),\n        0  24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: var(--secondary);\n    border-radius: 100%;\n    color: ${({ theme }) => 'var(--bg1)'};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0  0  1px rgba(0, 0, 0, 0.1), 0  4px 8px rgba(0, 0, 0, 0.08), 0  16px 24px rgba(0, 0, 0, 0.06),\n        0  24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => 'var(--blue1)'}, ${({ theme }) => 'var(--blue2)'});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => 'var(--bg5)'}, ${({ theme }) => 'var(--bg3)'});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => 'var(--bg5)'};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => 'var(--bg5)'};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => 'var(--bg3)'};\n  }\n`\n","import { useCallback } from 'react'\nimport { StyledRangeInput } from './styled'\n\ninterface InputSliderProps {\n    value: number\n    onChange: (value: number) => void\n    step?: number\n    min?: number\n    max?: number\n    size?: number\n    disabled: boolean\n}\n\nexport default function Slider({ value, onChange, min = 0, step = 1, max = 100, size = 28, disabled, ...rest }: InputSliderProps) {\n    const changeCallback = useCallback(\n        (e) => {\n            onChange(parseInt(e.target.value))\n        },\n        [onChange]\n    )\n\n    return (\n        <StyledRangeInput\n            size={size}\n            {...rest}\n            type='range'\n            value={value}\n            style={{ padding: '15px 0' }}\n            onChange={changeCallback}\n            aria-labelledby='input slider'\n            step={step}\n            min={min}\n            max={max}\n            disabled={disabled}\n        />\n    )\n}\n","import JSBI from 'jsbi'\nimport { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n    currencyAmount,\n    significantDigits = 4\n}: {\n    currencyAmount: CurrencyAmount<Currency>\n    significantDigits?: number\n}) {\n    return (\n        <>\n            {currencyAmount.equalTo(JSBI.BigInt(0))\n                ? '0'\n                : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n                    ? currencyAmount.toSignificant(significantDigits)\n                    : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n        </>\n    )\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { WMATIC_EXTENDED } from \"../../constants/tokens\";\nimport { calculateGasMargin } from \"../../utils/calculateGasMargin\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport useDebouncedChangeHandler from \"hooks/useDebouncedChangeHandler\";\nimport { useBurnV3ActionHandlers, useBurnV3State, useDerivedV3BurnInfo } from \"state/burn/v3/hooks\";\nimport Slider from \"components/Slider\";\nimport { AutoRow, RowBetween, RowFixed } from \"components/Row\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"../../components/TransactionConfirmationModal\";\nimport { AutoColumn } from \"components/Column\";\nimport { ButtonConfirmed, ButtonPrimary } from \"components/Button\";\nimport { Text } from \"rebass\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport FormattedCurrencyAmount from \"components/FormattedCurrencyAmount\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport useTransactionDeadline from \"hooks/useTransactionDeadline\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { TYPE } from \"theme\";\nimport Loader from \"components/Loader\";\nimport DoubleCurrencyLogo from \"components/DoubleLogo\";\nimport { NonfungiblePositionManager } from \"lib/src\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport RangeBadge from \"components/Badge/RangeBadge\";\nimport Toggle from \"components/Toggle\";\nimport { t, Trans } from \"@lingui/macro\";\nimport usePrevious from \"../../hooks/usePrevious\";\n\nimport ReactGA from \"react-ga\";\nimport { useAppSelector } from \"../../state/hooks\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport { GAS_PRICE_MULTIPLIER } from \"../../hooks/useGasPrice\";\nimport Card from \"../../shared/components/Card/Card\";\nimport { isMobileOnly } from \"react-device-detect\";\n\nconst DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100);\n\n// redirect invalid tokenIds\nexport default function RemoveLiquidityV3({\n    location,\n    match: {\n        params: { tokenId },\n    },\n}: RouteComponentProps<{ tokenId: string }>) {\n    const parsedTokenId = useMemo(() => {\n        try {\n            return BigNumber.from(tokenId);\n        } catch {\n            return null;\n        }\n    }, [tokenId]);\n\n    if (parsedTokenId === null || parsedTokenId.eq(0)) {\n        return <Redirect to={{ ...location, pathname: \"/pool\" }} />;\n    }\n\n    return <Remove tokenId={parsedTokenId} />;\n}\n\nfunction Remove({ tokenId }: { tokenId: BigNumber }) {\n    const { position } = useV3PositionFromTokenId(tokenId);\n    const prevPosition = usePrevious({ ...position });\n    const _position = useMemo(() => {\n        if (!position && prevPosition) {\n            return { ...prevPosition };\n        }\n        return { ...position };\n    }, [position]);\n\n    const gasPrice = useAppSelector((state) => {\n        if (!state.application.gasPrice.fetched) return 0.1;\n        return state.application.gasPrice.override ? 0.1 : state.application.gasPrice.fetched;\n    });\n\n    // flag for receiving WETH\n    const [receiveWETH, setReceiveWETH] = useState(false);\n\n    // burn state\n    const { percent } = useBurnV3State();\n\n    const { account, chainId, library } = useActiveWeb3React();\n    const theme = useTheme();\n\n    const derivedInfo = useDerivedV3BurnInfo(position, receiveWETH);\n    const prevDerivedInfo = usePrevious({ ...derivedInfo });\n    const { positionSDK, liquidityPercentage, liquidityValue0, liquidityValue1, feeValue0, feeValue1, outOfRange, error } = useMemo(() => {\n        if ((!derivedInfo.feeValue0 || !derivedInfo.liquidityValue0 || !derivedInfo.position) && prevDerivedInfo) {\n            return {\n                positionSDK: prevDerivedInfo.position,\n                error: prevDerivedInfo.error,\n                ...prevDerivedInfo,\n            };\n        }\n\n        return {\n            positionSDK: derivedInfo.position,\n            error: derivedInfo.error,\n            ...derivedInfo,\n        };\n    }, [derivedInfo]);\n\n    const { onPercentSelect } = useBurnV3ActionHandlers();\n\n    const removed = position?.liquidity?.eq(0);\n\n    // boilerplate for the slider\n    const [percentForSlider, onPercentSelectForSlider] = useDebouncedChangeHandler(percent, onPercentSelect);\n\n    const deadline = useTransactionDeadline(); // custom from users settings\n    const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE); // custom from users\n\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [attemptingTxn, setAttemptingTxn] = useState(false);\n    const [txnHash, setTxnHash] = useState<string | undefined>();\n    const addTransaction = useTransactionAdder();\n    const positionManager = useV3NFTPositionManagerContract();\n\n    const burn = useCallback(async () => {\n        setAttemptingTxn(true);\n        if (!positionManager || !liquidityValue0 || !liquidityValue1 || !deadline || !account || !chainId || !feeValue0 || !feeValue1 || !positionSDK || !liquidityPercentage || !library) {\n            return;\n        }\n\n        const { calldata, value } = NonfungiblePositionManager.removeCallParameters(positionSDK, {\n            tokenId: tokenId.toString(),\n            liquidityPercentage,\n            slippageTolerance: allowedSlippage,\n            deadline: deadline.toString(),\n            collectOptions: {\n                expectedCurrencyOwed0: feeValue0,\n                expectedCurrencyOwed1: feeValue1,\n                recipient: account,\n            },\n        });\n\n        const txn = {\n            to: positionManager.address,\n            data: calldata,\n            value,\n        };\n\n        library\n            .getSigner()\n            .estimateGas(txn)\n            .then((estimate) => {\n                const newTxn = {\n                    ...txn,\n                    gasLimit: calculateGasMargin(chainId, estimate),\n                };\n\n                return library\n                    .getSigner()\n                    .sendTransaction(newTxn)\n                    .then((response: TransactionResponse) => {\n                        ReactGA.event({\n                            category: \"Liquidity\",\n                            action: \"RemoveV3\",\n                            label: [liquidityValue0.currency.symbol, liquidityValue1.currency.symbol].join(\"/\"),\n                        });\n                        setTxnHash(response.hash);\n                        setAttemptingTxn(false);\n                        addTransaction(response, {\n                            summary: t`Remove ${liquidityValue0.currency.symbol}/${liquidityValue1.currency.symbol} liquidity`,\n                        });\n                    });\n            })\n            .catch((error) => {\n                setAttemptingTxn(false);\n                console.error(error);\n            });\n    }, [tokenId, liquidityValue0, liquidityValue1, deadline, allowedSlippage, account, addTransaction, positionManager, chainId, feeValue0, feeValue1, library, liquidityPercentage, positionSDK]);\n\n    const handleDismissConfirmation = useCallback(() => {\n        setShowConfirm(false);\n        // if there was a tx hash, we want to clear the input\n        if (txnHash) {\n            onPercentSelectForSlider(0);\n        }\n        setAttemptingTxn(false);\n        setTxnHash(\"\");\n    }, [onPercentSelectForSlider, txnHash]);\n\n    const pendingText = t`Removing ${liquidityValue0?.toSignificant(6)} ${liquidityValue0?.currency?.symbol} and ${liquidityValue1?.toSignificant(6)} ${liquidityValue1?.currency?.symbol}`;\n\n    function modalHeader() {\n        return (\n            <AutoColumn gap={\"sm\"} style={{ padding: \"16px\" }}>\n                <RowBetween align=\"flex-end\">\n                    <Text fontSize={16} fontWeight={500}>\n                        <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\n                    </Text>\n                    <RowFixed>\n                        <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                            {liquidityValue0 && <FormattedCurrencyAmount currencyAmount={liquidityValue0} />}\n                        </Text>\n                        <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={liquidityValue0?.currency as WrappedCurrency} />\n                    </RowFixed>\n                </RowBetween>\n                <RowBetween align=\"flex-end\">\n                    <Text fontSize={16} fontWeight={500}>\n                        <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\n                    </Text>\n                    <RowFixed>\n                        <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                            {liquidityValue1 && <FormattedCurrencyAmount currencyAmount={liquidityValue1} />}\n                        </Text>\n                        <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={liquidityValue1?.currency as WrappedCurrency} />\n                    </RowFixed>\n                </RowBetween>\n                {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\n                    <>\n                        <TYPE.italic fontSize={12} color={'var(--primary-disabled)'} textAlign=\"left\" padding={\"8px 0 0 0\"}>\n                            <Trans>You will also collect fees earned from this position.</Trans>\n                        </TYPE.italic>\n                        <RowBetween>\n                            <Text fontSize={16} fontWeight={500}>\n                                <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\n                            </Text>\n                            <RowFixed>\n                                <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                    {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />}\n                                </Text>\n                                <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={feeValue0?.currency as WrappedCurrency} />\n                            </RowFixed>\n                        </RowBetween>\n                        <RowBetween>\n                            <Text fontSize={16} fontWeight={500}>\n                                <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\n                            </Text>\n                            <RowFixed>\n                                <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                    {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />}\n                                </Text>\n                                <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={feeValue1?.currency as WrappedCurrency} />\n                            </RowFixed>\n                        </RowBetween>\n                    </>\n                ) : null}\n                <ButtonPrimary mt=\"16px\" onClick={burn}>\n                    <Trans>Remove</Trans>\n                </ButtonPrimary>\n            </AutoColumn>\n        );\n    }\n\n    const showCollectAsWeth = Boolean(\n        !chainId &&\n            liquidityValue0?.currency &&\n            liquidityValue1?.currency &&\n            (liquidityValue0.currency.isNative ||\n                liquidityValue1.currency.isNative ||\n                liquidityValue0.currency.wrapped.equals(WMATIC_EXTENDED[liquidityValue0.currency.chainId]) ||\n                liquidityValue1.currency.wrapped.equals(WMATIC_EXTENDED[liquidityValue1.currency.chainId]))\n    );\n    return (\n        <div className={\"maw-765 mh-a\"}>\n            <Card classes={\"p-2 br-24 mxs_p-1\"}>\n                <AddRemoveTabs creating={false} adding={false} positionID={tokenId.toString()} defaultSlippage={DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE} />\n                {_position ? (\n                    <AutoColumn gap=\"lg\">\n                        <div className={\"flex-s-between mt-1 mxs_ml-1\"}>\n                            <RowFixed>\n                                <DoubleCurrencyLogo currency0={feeValue0?.currency} currency1={feeValue1?.currency} size={24} margin={true} />\n                                <TYPE.label ml=\"10px\" fontSize=\"20px\">{`${feeValue0?.currency?.symbol}/${feeValue1?.currency?.symbol}`}</TYPE.label>\n                            </RowFixed>\n                            <RangeBadge removed={removed} inRange={!outOfRange} />\n                        </div>\n                        <Card isDark={false} classes={\"p-1 br-12\"}>\n                            <div>\n                                <TYPE.main fontWeight={400}>\n                                    <Trans>Amount</Trans>\n                                </TYPE.main>\n                                <div className={\"flex-s-between mv-05 mxs_fd-c\"}>\n                                    <div className={\"fs-2 mxs_mv-05 mxs_w-100 mxs_ta-l\"}>\n                                        <Trans>{percentForSlider}%</Trans>\n                                    </div>\n                                    <AutoRow gap=\"4px\" justify={\"flex-end\"}>\n                                        <button className={\"btn secondary pv-05 ph-1 fs-085 hover-b\"} onClick={() => onPercentSelect(25)}>\n                                            <Trans>25%</Trans>\n                                        </button>\n                                        <button className={\"btn secondary pv-05 ph-1 fs-085 hover-b\"} onClick={() => onPercentSelect(50)}>\n                                            <Trans>50%</Trans>\n                                        </button>\n                                        <button className={\"btn secondary pv-05 ph-1 fs-085 hover-b\"} onClick={() => onPercentSelect(75)}>\n                                            <Trans>75%</Trans>\n                                        </button>\n                                        <button className={\"btn secondary pv-05 ph-1 fs-085 hover-b\"} onClick={() => onPercentSelect(100)}>\n                                            <Trans>Max</Trans>\n                                        </button>\n                                    </AutoRow>\n                                </div>\n                                <Slider value={percentForSlider} onChange={onPercentSelectForSlider} disabled={false} />\n                            </div>\n                        </Card>\n                        <Card isDark={false} classes={\"p-1 br-12\"}>\n                            <AutoColumn gap=\"md\">\n                                <RowBetween>\n                                    <Text fontSize={16} fontWeight={500}>\n                                        <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\n                                    </Text>\n                                    <RowFixed>\n                                        <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                            {liquidityValue0 && <FormattedCurrencyAmount currencyAmount={liquidityValue0} />}\n                                        </Text>\n                                        <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={liquidityValue0?.currency as WrappedCurrency} />\n                                    </RowFixed>\n                                </RowBetween>\n                                <RowBetween>\n                                    <Text fontSize={16} fontWeight={500}>\n                                        <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\n                                    </Text>\n                                    <RowFixed>\n                                        <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                            {liquidityValue1 && <FormattedCurrencyAmount currencyAmount={liquidityValue1} />}\n                                        </Text>\n                                        <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={liquidityValue1?.currency as WrappedCurrency} />\n                                    </RowFixed>\n                                </RowBetween>\n                                {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\n                                    <>\n                                        <RowBetween>\n                                            <Text fontSize={16} fontWeight={500}>\n                                                <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\n                                            </Text>\n                                            <RowFixed>\n                                                <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                                    {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />}\n                                                </Text>\n                                                <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={feeValue0?.currency as WrappedCurrency} />\n                                            </RowFixed>\n                                        </RowBetween>\n                                        <RowBetween>\n                                            <Text fontSize={16} fontWeight={500}>\n                                                <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\n                                            </Text>\n                                            <RowFixed>\n                                                <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n                                                    {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />}\n                                                </Text>\n                                                <CurrencyLogo size=\"24px\" style={{ marginLeft: \"8px\" }} currency={feeValue1?.currency as WrappedCurrency} />\n                                            </RowFixed>\n                                        </RowBetween>\n                                    </>\n                                ) : null}\n                            </AutoColumn>\n                        </Card>\n\n                        {showCollectAsWeth && (\n                            <RowBetween>\n                                <TYPE.main>\n                                    <Trans>Collect as WETH</Trans>\n                                </TYPE.main>\n                                <Toggle id=\"receive-as-weth\" isActive={receiveWETH} toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)} />\n                            </RowBetween>\n                        )}\n\n                        <div style={{ display: \"flex\" }}>\n                            <AutoColumn gap=\"12px\" style={{ flex: \"1\" }}>\n                                <ButtonConfirmed confirmed={false} disabled={removed || percent === 0 || !liquidityValue0} onClick={burn}>\n                                    {removed ? <Trans>Closed</Trans> : error ?? <Trans>Remove</Trans>}\n                                </ButtonConfirmed>\n                            </AutoColumn>\n                        </div>\n                    </AutoColumn>\n                ) : (\n                    <Loader />\n                )}\n            </Card>\n        </div>\n    );\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n    value: T,\n    onChange: (newValue: T) => void,\n    debouncedMs = 100\n): [T, (value: T) => void] {\n    const [inner, setInner] = useState<T>(() => value)\n    const timer = useRef<ReturnType<typeof setTimeout>>()\n\n    const onChangeInner = useCallback(\n        (newValue: T) => {\n            setInner(newValue)\n            if (timer.current) {\n                clearTimeout(timer.current)\n            }\n            timer.current = setTimeout(() => {\n                onChange(newValue)\n                timer.current = undefined\n            }, debouncedMs)\n        },\n        [debouncedMs, onChange]\n    )\n\n    useEffect(() => {\n        if (timer.current) {\n            clearTimeout(timer.current)\n            timer.current = undefined\n        }\n        setInner(value)\n    }, [value])\n\n    return [inner, onChangeInner]\n}\n","import { Percent } from '@uniswap/sdk-core'\nimport { warningSeverity } from '../../utils/prices'\nimport { ErrorText } from './styled'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n    return (\n        <ErrorText fontWeight={500} fontSize={12} severity={warningSeverity(priceImpact)}>\n            {priceImpact ? `${priceImpact.multiply(-1).toFixed(2)}%` : '-'}\n        </ErrorText>\n    )\n}\n","import { Currency, TradeType } from \"@uniswap/sdk-core\";\nimport { Trade as V2Trade } from \"@uniswap/v2-sdk\";\nimport { FeeAmount, Trade as V3Trade } from \"lib/src\";\nimport { Fragment, memo, useContext } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Flex } from \"rebass\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport { TYPE } from \"../../theme\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\n\nfunction LabeledArrow({}: { fee: FeeAmount }) {\n    const theme = useContext(ThemeContext);\n\n    // todo: render the fee in the label\n    return <ChevronRight size={14} color={\"var(--text1)\"} />;\n}\n\nexport default memo(function SwapRoute({ trade }: { trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> }) {\n    const tokenPath = trade instanceof V2Trade ? trade.route.path : trade.route.tokenPath;\n    const theme = useContext(ThemeContext);\n    return (\n        <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-start\" alignItems=\"center\">\n            {tokenPath.map((token, i, path) => {\n                const isLastItem: boolean = i === path.length - 1;\n                const currency = unwrappedToken(token);\n                return (\n                    <Fragment key={i}>\n                        <Flex alignItems=\"end\">\n                            <TYPE.black color={\"var(--text1)\"} ml=\"0.145rem\" mr=\"0.145rem\">\n                                {currency.symbol}\n                            </TYPE.black>\n                        </Flex>\n                        {isLastItem ? null : trade instanceof V2Trade ? <ChevronRight size={14} color={\"var(--text1)\"} /> : <LabeledArrow fee={trade.route.pools[i].fee} />}\n                    </Fragment>\n                );\n            })}\n        </Flex>\n    );\n});\n","import { Trans } from \"@lingui/macro\";\nimport { Currency, Percent, TradeType } from \"@uniswap/sdk-core\";\nimport { Trade as V2Trade } from \"@uniswap/v2-sdk\";\nimport { Trade as V3Trade } from \"lib/src\";\nimport { useContext, useMemo } from \"react\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport { TYPE } from \"../../theme\";\nimport { computeRealizedLPFeePercent } from \"../../utils/prices\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport FormattedPriceImpact from \"./FormattedPriceImpact\";\nimport SwapRoute from \"./SwapRoute\";\n\ninterface AdvancedSwapDetailsProps {\n    trade?: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>;\n    allowedSlippage: Percent;\n}\n\nexport function AdvancedSwapDetails({ trade, allowedSlippage }: AdvancedSwapDetailsProps) {\n    const theme = useContext(ThemeContext);\n\n    const { realizedLPFee, priceImpact } = useMemo(() => {\n        if (!trade) return { realizedLPFee: undefined, priceImpact: undefined };\n\n        const realizedLpFeePercent = computeRealizedLPFeePercent(trade);\n        const realizedLPFee = trade.inputAmount.multiply(realizedLpFeePercent);\n        const priceImpact = trade.priceImpact.subtract(realizedLpFeePercent);\n        return { priceImpact, realizedLPFee };\n    }, [trade]);\n\n    return !trade ? null : (\n        <AutoColumn gap=\"8px\">\n            <RowBetween>\n                <RowFixed>\n                    <TYPE.black fontSize={12} fontWeight={400} color={\"var(--text1)\"}>\n                        <Trans>Liquidity Provider Fee</Trans>\n                    </TYPE.black>\n                </RowFixed>\n                <TYPE.black textAlign=\"right\" fontSize={12} color={\"var(--text1)\"}>\n                    {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${realizedLPFee.currency.symbol}` : \"-\"}\n                </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n                <RowFixed>\n                    <TYPE.black fontSize={12} fontWeight={400} color={\"var(--text1)\"}>\n                        <Trans>Route</Trans>\n                    </TYPE.black>\n                </RowFixed>\n                <TYPE.black textAlign=\"right\" fontSize={12} color={\"var(--text1)\"}>\n                    <SwapRoute trade={trade} />\n                </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n                <RowFixed>\n                    <TYPE.black fontSize={12} fontWeight={400} color={\"var(--text1)\"}>\n                        <Trans>Price Impact</Trans>\n                    </TYPE.black>\n                </RowFixed>\n                <TYPE.black textAlign=\"right\" fontSize={12} color={\"var(--text1)\"}>\n                    <FormattedPriceImpact priceImpact={priceImpact} />\n                </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n                <RowFixed>\n                    <TYPE.black fontSize={12} fontWeight={400} color={\"var(--text1)\"}>\n                        {trade.tradeType === TradeType.EXACT_INPUT ? <Trans>Minimum received</Trans> : <Trans>Maximum sent</Trans>}\n                    </TYPE.black>\n                </RowFixed>\n                <TYPE.black textAlign=\"right\" fontSize={12} color={\"var(--text1)\"}>\n                    {trade.tradeType === TradeType.EXACT_INPUT\n                        ? `${trade.minimumAmountOut(allowedSlippage).toSignificant(6)} ${trade.outputAmount.currency.symbol}`\n                        : `${trade.maximumAmountIn(allowedSlippage).toSignificant(6)} ${trade.inputAmount.currency.symbol}`}\n                </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n                <RowFixed>\n                    <TYPE.black fontSize={12} fontWeight={400} color={\"var(--text1)\"}>\n                        <Trans>Slippage tolerance</Trans>\n                    </TYPE.black>\n                </RowFixed>\n                <TYPE.black textAlign=\"right\" fontSize={12} color={\"var(--text1)\"}>\n                    {allowedSlippage.toFixed(2)}%\n                </TYPE.black>\n            </RowBetween>\n        </AutoColumn>\n    );\n}\n","import styled from 'styled-components/macro'\n\nexport const InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => 'var(--bg1)'};\n  z-index: 1;\n  width: 100%;\n`\nexport const ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? 'var(--red1)' : 'var(--bg2)')};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => 'var(--bg1)'};\n`\nexport const InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\nexport const Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => 'var(--bg1)'};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? 'var(--red1)' : 'var(--text1)')};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => 'var(--text4)'};\n    opacity: 1;\n  }\n  padding: 0;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => 'var(--text4)'};\n    opacity: 1;\n  }\n`\n","import { t, Trans } from \"@lingui/macro\";\nimport { ReactNode, useCallback, useContext } from \"react\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport useENS from \"../../hooks/useENS\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { ExternalLink, TYPE } from \"../../theme\";\nimport { ExplorerDataType, getExplorerLink } from \"../../utils/getExplorerLink\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween } from \"../Row\";\nimport { ContainerRow, Input, InputContainer, InputPanel } from \"./styled\";\n\nexport default function AddressInputPanel({\n    id,\n    className = \"recipient-address-input\",\n    label,\n    placeholder,\n    value,\n    onChange,\n}: {\n    id?: string;\n    className?: string;\n    label?: ReactNode;\n    placeholder?: string;\n    value: string;\n    onChange: (value: string) => void;\n}) {\n    const { chainId } = useActiveWeb3React();\n    const theme = useContext(ThemeContext);\n\n    const { address, loading, name } = useENS(value);\n\n    const handleInput = useCallback(\n        (event: any) => {\n            const input = event.target.value;\n            const withoutSpaces = input.replace(/\\s+/g, \"\");\n            onChange(withoutSpaces);\n        },\n        [onChange]\n    );\n\n    const error = Boolean(value.length > 0 && !loading && !address);\n\n    return (\n        <InputPanel id={id}>\n            <ContainerRow error={error}>\n                <InputContainer>\n                    <AutoColumn gap=\"md\">\n                        <RowBetween>\n                            <TYPE.black color={\"var(--text2)\"} fontWeight={500} fontSize={14}>\n                                {label ?? <Trans>Recipient</Trans>}\n                            </TYPE.black>\n                            {address && chainId && (\n                                <ExternalLink href={getExplorerLink(chainId, name ?? address, ExplorerDataType.ADDRESS)} style={{ fontSize: \"14px\" }}>\n                                    <Trans>(View on Explorer)</Trans>\n                                </ExternalLink>\n                            )}\n                        </RowBetween>\n                        <Input\n                            className={className}\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            autoCapitalize=\"off\"\n                            spellCheck=\"false\"\n                            placeholder={placeholder ?? t`Wallet Address or ENS name`}\n                            error={error}\n                            pattern=\"^(0x[a-fA-F0-9]{40})$\"\n                            onChange={handleInput}\n                            value={value}\n                        />\n                    </AutoColumn>\n                </InputContainer>\n            </ContainerRow>\n        </InputPanel>\n    );\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { ReactNode } from 'react'\nimport { Text } from 'rebass'\nimport { SwapCallbackError } from './styled'\n\nexport default function SwapModalFooter({\n    onConfirm,\n    swapErrorMessage,\n    disabledConfirm\n}: {\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>\n    onConfirm: () => void\n    swapErrorMessage: ReactNode | undefined\n    disabledConfirm: boolean\n}) {\n\n    return (\n        <div className={'flex-s-between'}>\n            <button\n                onClick={onConfirm}\n                disabled={disabledConfirm}\n                id='confirm-swap-or-send'\n                className={'btn primary w-100 p-1 mt-1'}\n            >\n                <Text fontSize={20} fontWeight={500}>\n                    <Trans>Confirm Swap</Trans>\n                </Text>\n            </button>\n            {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n        </div>\n    )\n}\n","import { CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { ONE_HUNDRED_PERCENT } from '../constants/misc'\n\nexport function computeFiatValuePriceImpact(\n    fiatValueInput: CurrencyAmount<Token> | undefined | null,\n    fiatValueOutput: CurrencyAmount<Token> | undefined | null\n): Percent | undefined {\n    if (!fiatValueOutput || !fiatValueInput) return undefined\n    if (!fiatValueInput.currency.equals(fiatValueOutput.currency)) return undefined\n    if (JSBI.equal(fiatValueInput.quotient, JSBI.BigInt(0))) return undefined\n    const pct = ONE_HUNDRED_PERCENT.subtract(fiatValueOutput.divide(fiatValueInput))\n    return new Percent(pct.numerator, pct.denominator)\n}\n","import { useCallback } from 'react'\nimport { Currency, Price } from '@uniswap/sdk-core'\nimport { Text } from 'rebass'\nimport { StyledPriceContainer } from './styled'\n\ninterface TradePriceProps {\n    price: Price<Currency, Currency>\n    showInverted: boolean\n    setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n\n    let formattedPrice: string\n    try {\n        formattedPrice = showInverted ? price.toSignificant(4) : price.invert()?.toSignificant(4)\n    } catch (error) {\n        formattedPrice = '0'\n    }\n\n    const label = showInverted ? `${price.quoteCurrency?.symbol}` : `${price.baseCurrency?.symbol} `\n    const labelInverted = showInverted ? `${price.baseCurrency?.symbol} ` : `${price.quoteCurrency?.symbol}`\n    const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted])\n\n    const text = `${'1 ' + labelInverted + ' = ' + formattedPrice ?? '-'} ${label}`\n\n    return (\n        <StyledPriceContainer onClick={flipPrice} title={text}>\n            <div style={{ alignItems: 'center', display: 'flex', width: 'fit-content' }}>\n                <Text fontWeight={500} fontSize={14} color={'var(--primary)'}>\n                    {text}\n                </Text>\n            </div>\n        </StyledPriceContainer>\n    )\n}\n","import { Currency, Percent, TradeType } from \"@uniswap/sdk-core\";\nimport { Trade as V2Trade } from \"@uniswap/v2-sdk\";\nimport { Trade as V3Trade } from \"lib/src\";\nimport { useContext, useState } from \"react\";\nimport { AlertTriangle, ArrowDown } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport { TYPE } from \"../../theme\";\nimport { ButtonPrimary } from \"../Button\";\nimport { isAddress, shortenAddress } from \"../../utils\";\nimport { computeFiatValuePriceImpact } from \"../../utils/computeFiatValuePriceImpact\";\nimport { FiatValue } from \"../CurrencyInputPanel/FiatValue\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { SwapModalHeaderArrowWrapper, SwapShowAcceptChanges, TruncatedText } from \"./styled\";\nimport { Trans } from \"@lingui/macro\";\nimport { AdvancedSwapDetails } from \"./AdvancedSwapDetails\";\nimport { LightCard } from \"../Card\";\nimport TradePrice from \"../swap/TradePrice\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport Card from \"../../shared/components/Card/Card\";\n\ninterface SwapModalHeaderProps {\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>;\n    allowedSlippage: Percent;\n    recipient: string | null;\n    showAcceptChanges: boolean;\n    onAcceptChanges: () => void;\n}\n\nexport default function SwapModalHeader({ trade, allowedSlippage, recipient, showAcceptChanges, onAcceptChanges }: SwapModalHeaderProps) {\n    const theme = useContext(ThemeContext);\n\n    const [showInverted, setShowInverted] = useState<boolean>(false);\n\n    const fiatValueInput = useUSDCValue(trade.inputAmount);\n    const fiatValueOutput = useUSDCValue(trade.outputAmount);\n\n    return (\n        <div>\n            <Card isDark classes={\"p-1 br-12 mv-05\"}>\n                <div className={\"flex-s-between mb-05\"}>\n                    <span className={\"fs-085\"}>\n                        <Trans>From</Trans>\n                    </span>\n                    <FiatValue fiatValue={fiatValueInput} />\n                </div>\n                <div className={\"flex-s-between\"}>\n                    <div className={\"f f-ac\"}>\n                        <span className={\"mr-05\"}>\n                            <CurrencyLogo currency={trade.inputAmount.currency as WrappedCurrency} size={\"1.5rem\"} />\n                        </span>\n                        <Text fontSize={20} fontWeight={500}>\n                            {trade.inputAmount.currency.symbol}\n                        </Text>\n                    </div>\n                    <RowFixed gap={\"0px\"}>\n                        <TruncatedText fontSize={24} fontWeight={500} color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? \"var(--primary1)\" : \"\"}>\n                            {trade.inputAmount.toSignificant(6)}\n                        </TruncatedText>\n                    </RowFixed>\n                </div>\n            </Card>\n            <SwapModalHeaderArrowWrapper>\n                <ArrowDown size=\"1rem\" color={\"var(--text2)\"} />\n            </SwapModalHeaderArrowWrapper>\n            <Card isDark classes={\"p-1 br-12 mv-05\"}>\n                <div className={\"flex-s-between fs-085 mb-05\"}>\n                    <Trans>To</Trans>\n                    <FiatValue fiatValue={fiatValueOutput} priceImpact={computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput)} />\n                </div>\n                <div className={\"flex-s-between\"}>\n                    <div className={\"f f-ac\"}>\n                        <span className={\"mr-05\"}>\n                            <CurrencyLogo currency={trade.outputAmount.currency as WrappedCurrency} size={\"1.5rem\"} />\n                        </span>\n                        <Text fontSize={20} fontWeight={500}>\n                            {trade.outputAmount.currency.symbol}\n                        </Text>\n                    </div>\n                    <RowFixed gap={\"0px\"}>\n                        <TruncatedText fontSize={24} fontWeight={500}>\n                            {trade.outputAmount.toSignificant(6)}\n                        </TruncatedText>\n                    </RowFixed>\n                </div>\n            </Card>\n            <div className={\"flex-s-between c-p fs-085 ph-05\"}>\n                <Trans>Price</Trans>\n                <TradePrice price={trade.executionPrice} showInverted={showInverted} setShowInverted={setShowInverted} />\n            </div>\n\n            <Card isDark classes={\"p-1 br-12 mv-05\"}>\n                <AdvancedSwapDetails trade={trade} allowedSlippage={allowedSlippage} />\n            </Card>\n\n            {showAcceptChanges ? (\n                <SwapShowAcceptChanges justify=\"flex-start\" gap={\"0px\"}>\n                    <RowBetween>\n                        <RowFixed>\n                            <AlertTriangle size={20} style={{ marginRight: \"8px\", minWidth: 24 }} />\n                            <TYPE.main color={\"var(--primary)\"}>\n                                <Trans>Price Updated</Trans>\n                            </TYPE.main>\n                        </RowFixed>\n                        <ButtonPrimary\n                            style={{\n                                padding: \".5rem\",\n                                width: \"fit-content\",\n                                fontSize: \"0.825rem\",\n                                borderRadius: \"12px\",\n                            }}\n                            onClick={onAcceptChanges}\n                        >\n                            <Trans>Accept</Trans>\n                        </ButtonPrimary>\n                    </RowBetween>\n                </SwapShowAcceptChanges>\n            ) : null}\n\n            <div>\n                {trade.tradeType === TradeType.EXACT_INPUT ? (\n                    <div className={\"c-p fs-085 i l mt-1\"}>\n                        <Trans>\n                            Output is estimated. You will receive at least{\" \"}\n                            <b>\n                                {trade.minimumAmountOut(allowedSlippage).toSignificant(6)} {trade.outputAmount.currency.symbol}\n                            </b>{\" \"}\n                            or the transaction will revert.\n                        </Trans>\n                    </div>\n                ) : (\n                    <div className={\"c-p fs-085 i l mt-1\"}>\n                        <Trans>\n                            Input is estimated. You will sell at most{\" \"}\n                            <b>\n                                {trade.maximumAmountIn(allowedSlippage).toSignificant(6)} {trade.inputAmount.currency.symbol}\n                            </b>{\" \"}\n                            or the transaction will revert.\n                        </Trans>\n                    </div>\n                )}\n            </div>\n            {recipient !== null ? (\n                <div className={\"c-p\"}>\n                    <Trans>\n                        Output will be sent to <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n                    </Trans>\n                </div>\n            ) : null}\n        </div>\n    );\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param args either a pair of V2 trades or a pair of V3 trades\n */\nfunction tradeMeaningfullyDiffers(\n    ...args:\n        | [V2Trade<Currency, Currency, TradeType>, V2Trade<Currency, Currency, TradeType>]\n        | [V3Trade<Currency, Currency, TradeType>, V3Trade<Currency, Currency, TradeType>]\n): boolean {\n    const [tradeA, tradeB] = args\n    return (\n        tradeA.tradeType !== tradeB.tradeType ||\n        !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n        !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n        !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) ||\n        !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n    )\n}\n\ninterface ConfirmSwapModalProps {\n    isOpen: boolean\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n    originalTrade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    txHash: string | undefined\n    recipient: string | null\n    allowedSlippage: Percent\n    onAcceptChanges: () => void\n    onConfirm: () => void\n    swapErrorMessage: ReactNode | undefined\n    onDismiss: () => void\n}\n\nexport default function ConfirmSwapModal({\n    trade,\n    originalTrade,\n    onAcceptChanges,\n    allowedSlippage,\n    onConfirm,\n    onDismiss,\n    recipient,\n    swapErrorMessage,\n    isOpen,\n    attemptingTxn,\n    txHash\n}: ConfirmSwapModalProps) {\n    const showAcceptChanges = useMemo(\n        () =>\n            Boolean(\n                (trade instanceof V2Trade &&\n                    originalTrade instanceof V2Trade &&\n                    tradeMeaningfullyDiffers(trade, originalTrade)) ||\n                (trade instanceof V3Trade &&\n                    originalTrade instanceof V3Trade &&\n                    tradeMeaningfullyDiffers(trade, originalTrade))\n            ),\n        [originalTrade, trade]\n    )\n\n    const modalHeader = useCallback(() => {\n        return trade ? (\n            <SwapModalHeader\n                trade={trade}\n                allowedSlippage={allowedSlippage}\n                recipient={recipient}\n                showAcceptChanges={showAcceptChanges}\n                onAcceptChanges={onAcceptChanges}\n            />\n        ) : null\n    }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n    const modalBottom = useCallback(() => {\n        return trade ? (\n            <SwapModalFooter\n                onConfirm={onConfirm}\n                trade={trade}\n                disabledConfirm={showAcceptChanges}\n                swapErrorMessage={swapErrorMessage}\n            />\n        ) : null\n    }, [onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n    // text to show while loading\n    const pendingText = (\n        <Trans>\n            Swapping {trade?.inputAmount?.toSignificant(6)} {trade?.inputAmount?.currency?.symbol} for{' '}\n            {trade?.outputAmount?.toSignificant(6)} {trade?.outputAmount?.currency?.symbol}\n        </Trans>\n    )\n\n    const confirmationContent = useCallback(\n        () =>\n            swapErrorMessage ? (\n                <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n            ) : (\n                <ConfirmationModalContent\n                    title={<Trans>Confirm Swap</Trans>}\n                    onDismiss={onDismiss}\n                    topContent={modalHeader}\n                    bottomContent={modalBottom}\n                />\n            ),\n        [onDismiss, modalBottom, modalHeader, swapErrorMessage]\n    )\n\n    return (\n        <TransactionConfirmationModal\n            isOpen={isOpen}\n            onDismiss={onDismiss}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={confirmationContent}\n            pendingText={pendingText}\n            currencyToAdd={trade?.outputAmount.currency}\n        />\n    )\n}\n","import { Trans, t } from \"@lingui/macro\";\nimport SettingsTab from \"../Settings\";\nimport { Percent } from \"@uniswap/sdk-core\";\n\ninterface SwapHeaderProps {\n    allowedSlippage: Percent;\n    dynamicFee: number | null;\n}\n\nexport default function SwapHeader({ allowedSlippage, dynamicFee = null }: SwapHeaderProps) {\n    return (\n        <div className={\"flex-s-between w-100 mb-1\"}>\n            <div className={\"flex-s-between w-100\"}>\n                <span className={\"mr-05 b fs-125\"}>\n                    <Trans>Swap</Trans>\n                </span>\n                {dynamicFee && (\n                    <span className={\"bg-p pv-025 ph-05 br-8 c-w\"}>\n                        <Trans>{`Fee is ${dynamicFee / 10000}%`}</Trans>\n                    </span>\n                )}\n            </div>\n            <SettingsTab placeholderSlippage={allowedSlippage} />\n        </div>\n    );\n}\n","import { Token } from '@uniswap/sdk-core'\nimport Modal from '../Modal'\nimport { ImportToken } from 'components/SearchModal/ImportToken'\n\nexport default function TokenWarningModal({\n    isOpen,\n    tokens,\n    onConfirm,\n    onDismiss\n}: {\n    isOpen: boolean\n    tokens: Token[]\n    onConfirm: () => void\n    onDismiss: () => void\n}) {\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={100}>\n            <ImportToken tokens={tokens} handleCurrencySelect={onConfirm} />\n        </Modal>\n    )\n}\n","import JSBI from 'jsbi'\nimport { Currency, CurrencyAmount, Percent, Token, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { splitSignature } from 'ethers/lib/utils'\nimport { useMemo, useState } from 'react'\nimport { SWAP_ROUTER_ADDRESSES } from '../constants/addresses'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useActiveWeb3React } from './web3'\nimport { useEIP2612Contract } from './useContract'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nenum PermitType {\n    AMOUNT = 1,\n    ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\ninterface PermitInfo {\n    type: PermitType\n    name: string\n    // version is optional, and if omitted, will not be included in the domain\n    version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n    [chainId: number]: {\n        [checksummedTokenAddress: string]: PermitInfo\n    }\n} = {\n}\n\nexport enum UseERC20PermitState {\n    // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n    NOT_APPLICABLE,\n    LOADING,\n    NOT_SIGNED,\n    SIGNED,\n}\n\ninterface BaseSignatureData {\n    v: number\n    r: string\n    s: string\n    deadline: number\n    nonce: number\n    owner: string\n    spender: string\n    chainId: number\n    tokenAddress: string\n    permitType: PermitType\n}\n\ninterface StandardSignatureData extends BaseSignatureData {\n    amount: string\n}\n\ninterface AllowedSignatureData extends BaseSignatureData {\n    allowed: true\n}\n\nexport type SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n    { name: 'name', type: 'string' },\n    { name: 'version', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n]\n\nconst EIP2612_TYPE = [\n    { name: 'owner', type: 'address' },\n    { name: 'spender', type: 'address' },\n    { name: 'value', type: 'uint256' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'deadline', type: 'uint256' }\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n    { name: 'holder', type: 'address' },\n    { name: 'spender', type: 'address' },\n    { name: 'nonce', type: 'uint256' },\n    { name: 'expiry', type: 'uint256' },\n    { name: 'allowed', type: 'bool' }\n]\n\nfunction useERC20Permit(\n    currencyAmount: CurrencyAmount<Currency> | null | undefined,\n    spender: string | null | undefined,\n    overridePermitInfo: PermitInfo | undefined | null\n): {\n    signatureData: SignatureData | null\n    state: UseERC20PermitState\n    gatherPermitSignature: null | (() => Promise<void>)\n} {\n    const { account, chainId, library } = useActiveWeb3React()\n    const transactionDeadline = useTransactionDeadline()\n    const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n    const eip2612Contract = useEIP2612Contract(tokenAddress)\n    const nonceInputs = useMemo(() => [account ?? undefined], [account])\n    const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n    const permitInfo =\n        overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n    const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n    return useMemo(() => {\n        if (\n            !currencyAmount ||\n            !eip2612Contract ||\n            !account ||\n            !chainId ||\n            !transactionDeadline ||\n            !library ||\n            !tokenNonceState.valid ||\n            !tokenAddress ||\n            !spender ||\n            !permitInfo\n        ) {\n            return {\n                state: UseERC20PermitState.NOT_APPLICABLE,\n                signatureData: null,\n                gatherPermitSignature: null\n            }\n        }\n\n        const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n        if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n            return {\n                state: UseERC20PermitState.LOADING,\n                signatureData: null,\n                gatherPermitSignature: null\n            }\n        }\n\n        const isSignatureDataValid =\n            signatureData &&\n            signatureData.owner === account &&\n            signatureData.deadline >= transactionDeadline.toNumber() &&\n            signatureData.tokenAddress === tokenAddress &&\n            signatureData.nonce === nonceNumber &&\n            signatureData.spender === spender &&\n            ('allowed' in signatureData || JSBI.equal(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n        return {\n            state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n            signatureData: isSignatureDataValid ? signatureData : null,\n            gatherPermitSignature: async function gatherPermitSignature() {\n                const allowed = permitInfo.type === PermitType.ALLOWED\n                const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n                const value = currencyAmount.quotient.toString()\n\n                const message = allowed\n                    ? {\n                        holder: account,\n                        spender,\n                        allowed,\n                        nonce: nonceNumber,\n                        expiry: signatureDeadline\n                    }\n                    : {\n                        owner: account,\n                        spender,\n                        value,\n                        nonce: nonceNumber,\n                        deadline: signatureDeadline\n                    }\n                const domain = permitInfo.version\n                    ? {\n                        name: permitInfo.name,\n                        version: permitInfo.version,\n                        verifyingContract: tokenAddress,\n                        chainId\n                    }\n                    : {\n                        name: permitInfo.name,\n                        verifyingContract: tokenAddress,\n                        chainId\n                    }\n                const data = JSON.stringify({\n                    types: {\n                        EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n                        Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE\n                    },\n                    domain,\n                    primaryType: 'Permit',\n                    message\n                })\n\n                return library\n                    .send('eth_signTypedData_v4', [account, data])\n                    .then(splitSignature)\n                    .then((signature) => {\n                        console.log('eth v4', {\n                            v: signature.v,\n                            r: signature.r,\n                            s: signature.s,\n                            deadline: signatureDeadline,\n                            ...(allowed ? { allowed } : { amount: value }),\n                            nonce: nonceNumber,\n                            chainId,\n                            owner: account,\n                            spender,\n                            tokenAddress,\n                            permitType: permitInfo.type\n                        })\n                        setSignatureData({\n                            v: signature.v,\n                            r: signature.r,\n                            s: signature.s,\n                            deadline: signatureDeadline,\n                            ...(allowed ? { allowed } : { amount: value }),\n                            nonce: nonceNumber,\n                            chainId,\n                            owner: account,\n                            spender,\n                            tokenAddress,\n                            permitType: permitInfo.type\n                        })\n                    })\n            }\n        }\n    }, [\n        currencyAmount,\n        eip2612Contract,\n        account,\n        chainId,\n        transactionDeadline,\n        library,\n        tokenNonceState.loading,\n        tokenNonceState.valid,\n        tokenNonceState.result,\n        tokenAddress,\n        spender,\n        permitInfo,\n        signatureData\n    ])\n}\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n    version: '1',\n    name: 'QuickSwap',\n    type: PermitType.AMOUNT\n}\n\nexport function useV2LiquidityTokenPermit(\n    liquidityAmount: CurrencyAmount<Token> | null | undefined,\n    spender: string | null | undefined\n) {\n    return useERC20Permit(liquidityAmount, spender, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n\nexport function useERC20PermitFromTrade(\n    trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined,\n    allowedSlippage: Percent\n) {\n    const { chainId } = useActiveWeb3React()\n    const swapRouterAddress = chainId ? SWAP_ROUTER_ADDRESSES[chainId] : undefined\n    const amountToApprove = useMemo(\n        () => (trade ? trade.maximumAmountIn(allowedSlippage) : undefined),\n        [trade, allowedSlippage]\n    )\n\n    return useERC20Permit(\n        amountToApprove,\n        // v2 router does not support\n        trade instanceof V2Trade ? undefined : trade instanceof V3Trade ? swapRouterAddress : undefined,\n        null\n    )\n}\n","import useParsedQueryString from './useParsedQueryString'\n\nexport enum Version {\n    v2 = 'V2',\n    v3 = 'V3',\n}\n\nexport const DEFAULT_VERSION: Version = Version.v3\n\nexport default function useToggledVersion(): Version {\n    const { use } = useParsedQueryString()\n    if (typeof use !== 'string') {\n        return DEFAULT_VERSION\n    }\n    switch (use.toLowerCase()) {\n        case 'v2':\n            return Version.v2\n        case 'v3':\n            return Version.v3\n        default:\n            return Version.v3\n    }\n}\n","import { Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from 'lib/src'\nimport { Version } from '../hooks/useToggledVersion'\n\nexport function getTradeVersion(\n    trade?: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>\n): Version | undefined {\n    if (!trade) return undefined\n    if (trade instanceof V2Trade) return Version.v2\n    return Version.v3\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { t } from '@lingui/macro'\nimport { Trade as V3Trade } from 'lib/src'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { SWAP_ROUTER_ADDRESSES } from '../constants/addresses'\nimport { calculateGasMargin } from '../utils/calculateGasMargin'\nimport { getTradeVersion } from '../utils/getTradeVersion'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useActiveWeb3React } from './web3'\nimport { SignatureData } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './useENS'\nimport { Version } from './useToggledVersion'\nimport { SwapRouter } from '../lib/src'\n\n// import abi from '../abis/swap-router.json'\nimport { GAS_PRICE_MULTIPLIER } from './useGasPrice'\nimport { useAppSelector } from '../state/hooks'\n\nenum SwapCallbackState {\n    INVALID,\n    LOADING,\n    VALID,\n}\n\ninterface SwapCall {\n    address: string\n    calldata: string\n    value: string\n}\n\ninterface SwapCallEstimate {\n    call: SwapCall\n}\n\ninterface SuccessfulCall extends SwapCallEstimate {\n    call: SwapCall\n    gasEstimate: BigNumber\n}\n\ninterface FailedCall extends SwapCallEstimate {\n    call: SwapCall\n    error: Error\n}\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName the ENS name or address of the recipient of the swap output\n * @param signatureData the signature data of the permit of the input token amount, if available\n */\nfunction useSwapCallArguments(\n    trade: V3Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n    allowedSlippage: Percent, // in bips\n    recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n    signatureData: SignatureData | null | undefined\n): SwapCall[] {\n    const { account, chainId, library } = useActiveWeb3React()\n\n    const { address: recipientAddress } = useENS(recipientAddressOrName)\n    const recipient = recipientAddressOrName === null ? account : recipientAddress\n    const deadline = useTransactionDeadline()\n\n    return useMemo(() => {\n        if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n        const swapRouterAddress = chainId ? SWAP_ROUTER_ADDRESSES[chainId] : undefined\n\n        if (!swapRouterAddress) return []\n\n        // if (!routerContract) return []\n        const swapMethods: any[] = []\n\n        swapMethods.push(\n            SwapRouter.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                recipient,\n                slippageTolerance: allowedSlippage,\n                deadline: deadline.toString(),\n                ...(signatureData\n                    ? {\n                        inputTokenPermit:\n                            'allowed' in signatureData\n                                ? {\n                                    expiry: signatureData.deadline,\n                                    nonce: signatureData.nonce,\n                                    s: signatureData.s,\n                                    r: signatureData.r,\n                                    v: signatureData.v as any\n                                }\n                                : {\n                                    deadline: signatureData.deadline,\n                                    amount: signatureData.amount,\n                                    s: signatureData.s,\n                                    r: signatureData.r,\n                                    v: signatureData.v as any\n                                }\n                    }\n                    : {})\n            })\n        )\n\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\n            swapMethods.push(\n                SwapRouter.swapCallParameters(trade, {\n                    feeOnTransfer: true,\n                    recipient,\n                    slippageTolerance: allowedSlippage,\n                    deadline: deadline.toString(),\n                    ...(signatureData\n                        ? {\n                            inputTokenPermit:\n                                'allowed' in signatureData\n                                    ? {\n                                        expiry: signatureData.deadline,\n                                        nonce: signatureData.nonce,\n                                        s: signatureData.s,\n                                        r: signatureData.r,\n                                        v: signatureData.v as any\n                                    }\n                                    : {\n                                        deadline: signatureData.deadline,\n                                        amount: signatureData.amount,\n                                        s: signatureData.s,\n                                        r: signatureData.r,\n                                        v: signatureData.v as any\n                                    }\n                        }\n                        : {})\n                })\n            )\n        }\n\n\n        return swapMethods.map(({ calldata, value }) => {\n            return {\n                address: swapRouterAddress,\n                calldata,\n                value\n            }\n        })\n\n    }, [account, allowedSlippage, chainId, deadline, library, recipient, signatureData, trade])\n}\n\n/**\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\n * This object seems to be undocumented by ethers.\n * @param error an error from the ethers provider\n */\nfunction swapErrorToUserReadableMessage(error: any): string {\n    let reason: string | undefined\n    while (Boolean(error)) {\n        reason = error.reason ?? error.message ?? reason\n        error = error.error ?? error.data?.originalError\n    }\n\n    if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substr('execution reverted: '.length)\n\n    switch (reason) {\n        case 'UniswapV2Router: EXPIRED':\n            return t`The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.`\n        case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n        case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n            return t`This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.`\n        case 'TransferHelper: TRANSFER_FROM_FAILED':\n            return t`The input token cannot be transferred. There may be an issue with the input token.`\n        case 'UniswapV2: TRANSFER_FAILED':\n            return t`The output token cannot be transferred. There may be an issue with the output token.`\n        case 'UniswapV2: K':\n            return t`The LitX invariant x*y=k was not satisfied by the swap. This usually means one of the tokens you are swapping incorporates custom behavior on transfer.`\n        case 'Too little received':\n        case 'Too much requested':\n        case 'STF':\n            return t`This transaction will not succeed due to price movement. Try increasing your slippage tolerance. Note: rebase tokens are incompatible with LitX`\n        case 'TF':\n            return t`The output token cannot be transferred. There may be an issue with the output token. Note: rebase tokens are incompatible with LitX.`\n        default:\n            if (reason?.indexOf('undefined is not an object') !== -1) {\n                console.error(error, reason)\n                return t`An error occurred when trying to execute this swap. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading. Note: rebase tokens are incompatible with LitX.`\n            }\n            return t`Unknown error${reason ? `: \"${reason}\"` : ''\n                }. Try increasing your slippage tolerance. Note: rebase tokens are incompatible with LitX.`\n    }\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n    trade: V3Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n    allowedSlippage: Percent, // in bips\n    recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n    signatureData: SignatureData | undefined | null\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n    const { account, chainId, library } = useActiveWeb3React()\n\n    const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName, signatureData)\n\n    const addTransaction = useTransactionAdder()\n\n    const gasPrice = useAppSelector((state) => {\n        if (!state.application.gasPrice.fetched) return 0.1\n        return state.application.gasPrice.override ? 0.1 : state.application.gasPrice.fetched\n    })\n\n    const { address: recipientAddress } = useENS(recipientAddressOrName)\n    const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n    return useMemo(() => {\n        if (!trade || !library || !account || !chainId) {\n            return {\n                state: SwapCallbackState.INVALID,\n                callback: null,\n                error: 'Missing dependencies'\n            }\n        }\n        if (!recipient) {\n            if (recipientAddressOrName !== null) {\n                return {\n                    state: SwapCallbackState.INVALID,\n                    callback: null,\n                    error: 'Invalid recipient'\n                }\n            } else {\n                return { state: SwapCallbackState.LOADING, callback: null, error: null }\n            }\n        }\n\n        return {\n            state: SwapCallbackState.VALID,\n            callback: async function onSwap(): Promise<string> {\n                const estimatedCalls: SwapCallEstimate[] = await Promise.all(\n                    swapCalls.map((call) => {\n                        const { address, calldata, value } = call\n\n                        const tx =\n                            !value || isZero(value)\n                                ? { from: account, to: address, data: calldata }\n                                : {\n                                    from: account,\n                                    to: address,\n                                    data: calldata,\n                                    value\n                                }\n\n                        return library\n                            .estimateGas(tx)\n                            .then((gasEstimate) => {\n                                return {\n                                    call,\n                                    gasEstimate\n                                }\n                            })\n                            .catch((gasError) => {\n                                console.debug('Gas estimate failed, trying eth_call to extract error', call)\n\n                                return library\n                                    .call(tx)\n                                    .then((result) => {\n                                        console.debug('Unexpected successful call after failed estimate gas', call, gasError, result)\n                                        return {\n                                            call,\n                                            error: new Error('Unexpected issue with estimating the gas. Please try again.')\n                                        }\n                                    })\n                                    .catch((callError) => {\n                                        console.debug('Call threw error', call, callError)\n                                        return {\n                                            call,\n                                            error: new Error(swapErrorToUserReadableMessage(callError))\n                                        }\n                                    })\n                            })\n                    })\n                )\n\n                // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n                let bestCallOption: SuccessfulCall | SwapCallEstimate | undefined = estimatedCalls.find(\n                    (el, ix, list): el is SuccessfulCall =>\n                        'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n                )\n\n                // check if any calls errored with a recognizable error\n                if (!bestCallOption) {\n                    const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n                    if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n                    const firstNoErrorCall = estimatedCalls.find<SwapCallEstimate>(\n                        (call): call is SwapCallEstimate => !('error' in call)\n                    )\n                    if (!firstNoErrorCall) throw new Error('Unexpected error. Could not estimate gas for the swap.')\n                    bestCallOption = firstNoErrorCall\n                }\n\n                const {\n                    call: { address, calldata, value }\n                } = bestCallOption\n\n\n                return library\n                    .getSigner()\n                    .sendTransaction({\n                        from: account,\n                        to: address,\n                        data: calldata,\n                        // let the wallet try if we can't estimate the gas\n                        ...('gasEstimate' in bestCallOption\n                            ? { gasLimit: calculateGasMargin(chainId, bestCallOption.gasEstimate, true) }\n                            : {}),\n                        ...(value && !isZero(value) ? { value } : {})\n                    })\n                    .then((response) => {\n                        const inputSymbol = trade.inputAmount.currency.symbol\n                        const outputSymbol = trade.outputAmount.currency.symbol\n                        const inputAmount = trade.inputAmount.toSignificant(4)\n                        const outputAmount = trade.outputAmount.toSignificant(4)\n\n\n                        const base = t`Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n                        const withRecipient =\n                            recipient === account\n                                ? base\n                                : t`${base} to ${recipientAddressOrName && isAddress(recipientAddressOrName)\n                                    ? shortenAddress(recipientAddressOrName)\n                                    : recipientAddressOrName\n                                    }`\n\n                        const tradeVersion = getTradeVersion(trade)\n\n                        const withVersion = tradeVersion === Version.v3 ? withRecipient : `${withRecipient} on ${tradeVersion}`\n\n                        addTransaction(response, {\n                            summary: withVersion\n                        })\n\n                        return response.hash\n                    })\n                    .catch((error) => {\n                        // if the user rejected the tx, pass this along\n                        if (error?.code === 4001) {\n                            throw new Error('Transaction rejected.')\n                        } else {\n                            // otherwise, the error was unexpected and we need to convey that\n                            console.error(`Swap failed`, error, address, calldata, value)\n\n                            throw new Error(`Swap failed: ${swapErrorToUserReadableMessage(error)}`)\n                        }\n                    })\n            },\n            error: null\n        }\n    }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { WMATIC_EXTENDED } from '../constants/tokens'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useActiveWeb3React } from './web3'\nimport { useWETHContract } from './useContract'\nimport { t } from \"@lingui/macro\"\n\nimport AlgebraConfig from \"algebra.config\"\n\nexport enum WrapType {\n    NOT_APPLICABLE,\n    WRAP,\n    UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n    inputCurrency: Currency | undefined,\n    outputCurrency: Currency | undefined,\n    typedValue: string | undefined\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n    const { chainId, account } = useActiveWeb3React()\n    const wethContract = useWETHContract()\n    const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n    // we can always parse the amount typed as the input currency, since wrapping is 1:1\n    const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n    const addTransaction = useTransactionAdder()\n\n    let chainSymbol: string\n\n    if (chainId && chainId in AlgebraConfig.CHAIN_PARAMS) {\n        chainSymbol = AlgebraConfig.CHAIN_PARAMS[chainId].wrappedNativeCurrency.symbol\n    }\n\n    return useMemo(() => {\n        if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n        const weth = WMATIC_EXTENDED[chainId]\n        if (!weth) return NOT_APPLICABLE\n\n        const hasInputAmount = Boolean(inputAmount?.greaterThan('0'))\n        const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n        if (inputCurrency.isNative && weth.equals(outputCurrency)) {\n            return {\n                wrapType: WrapType.WRAP,\n                execute:\n                    sufficientBalance && inputAmount\n                        ? async () => {\n                            try {\n                                const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.quotient.toString(16)}` })\n                                addTransaction(txReceipt, { summary: t`Wrap ${inputAmount.toSignificant(6)} ${chainSymbol} to W${chainSymbol}` })\n                            } catch (error) {\n                                console.error('Could not deposit', error)\n                            }\n                        }\n                        : undefined,\n                inputError: sufficientBalance ? undefined : hasInputAmount ? t`Insufficient ${chainSymbol} balance` : t`Enter ${chainSymbol} amount`\n            }\n        } else if (weth.equals(inputCurrency) && outputCurrency.isNative) {\n            return {\n                wrapType: WrapType.UNWRAP,\n                execute:\n                    sufficientBalance && inputAmount\n                        ? async () => {\n                            try {\n                                const txReceipt = await wethContract.withdraw(`0x${inputAmount.quotient.toString(16)}`)\n                                addTransaction(txReceipt, { summary: t`Unwrap ${inputAmount.toSignificant(6)} W${chainSymbol} to ${chainSymbol}` })\n                            } catch (error) {\n                                console.error('Could not withdraw', error)\n                            }\n                        }\n                        : undefined,\n                inputError: sufficientBalance ? undefined : hasInputAmount ? t`Insufficient W${chainSymbol} balance` : t`Enter W${chainSymbol} amount`\n            }\n        } else {\n            return NOT_APPLICABLE\n        }\n    }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import { t, Trans } from \"@lingui/macro\";\nimport { Currency, CurrencyAmount, Token, TradeType } from \"@uniswap/sdk-core\";\nimport { Trade as V3Trade } from \"lib/src\";\nimport { AdvancedSwapDetails } from \"components/swap/AdvancedSwapDetails\";\nimport { MouseoverTooltip, MouseoverTooltipContent } from \"components/Tooltip\";\nimport JSBI from \"jsbi\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { ArrowDown, CheckCircle, HelpCircle, Info } from \"react-feather\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\nimport { ButtonConfirmed, ButtonError } from \"../../components/Button\";\nimport { GreyCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport CurrencyLogo from \"../../components/CurrencyLogo\";\nimport Loader from \"../../components/Loader\";\nimport Row, { AutoRow } from \"../../components/Row\";\nimport confirmPriceImpactWithoutFee from \"../../components/swap/confirmPriceImpactWithoutFee\";\nimport ConfirmSwapModal from \"../../components/swap/ConfirmSwapModal\";\nimport { ArrowWrapper, Dots, SwapCallbackError } from \"../../components/swap/styled\";\nimport SwapHeader from \"../../components/swap/SwapHeader\";\nimport TradePrice from \"../../components/swap/TradePrice\";\nimport { SwitchLocaleLink } from \"../../components/SwitchLocaleLink\";\nimport TokenWarningModal from \"../../components/TokenWarningModal\";\nimport { useAllTokens, useCurrency } from \"../../hooks/Tokens\";\nimport { ApprovalState, useApproveCallbackFromTrade } from \"../../hooks/useApproveCallback\";\nimport { V3TradeState } from \"../../hooks/useBestV3Trade\";\nimport useENSAddress from \"../../hooks/useENSAddress\";\nimport { useERC20PermitFromTrade, UseERC20PermitState } from \"../../hooks/useERC20Permit\";\nimport { useSwapCallback } from \"../../hooks/useSwapCallback\";\nimport useToggledVersion, { Version } from \"../../hooks/useToggledVersion\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport useWrapCallback, { WrapType } from \"../../hooks/useWrapCallback\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { useWalletModalToggle } from \"../../state/application/hooks\";\nimport { Field } from \"../../state/swap/actions\";\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from \"../../state/swap/hooks\";\nimport { useExpertModeManager, useUserSingleHopOnly } from \"../../state/user/hooks\";\nimport { LinkStyledButton, TYPE } from \"../../theme\";\nimport { computeFiatValuePriceImpact } from \"../../utils/computeFiatValuePriceImpact\";\nimport { getTradeVersion } from \"../../utils/getTradeVersion\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport { warningSeverity } from \"../../utils/prices\";\nimport { Helmet } from \"react-helmet\";\nimport ReactGA from \"react-ga\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport Card from \"../../shared/components/Card/Card\";\nimport \"./index.scss\";\n\nexport default function Swap({ history }: RouteComponentProps) {\n    const { account } = useActiveWeb3React();\n    const loadedUrlParams = useDefaultsFromURLSearch();\n\n    // token warning stuff\n    const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams?.inputCurrencyId), useCurrency(loadedUrlParams?.outputCurrencyId)];\n    const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false);\n    const urlLoadedTokens: Token[] = useMemo(() => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken ?? false) ?? [], [loadedInputCurrency, loadedOutputCurrency]);\n    const handleConfirmTokenWarning = useCallback(() => {\n        setDismissTokenWarning(true);\n    }, []);\n\n    // dismiss warning if all imported tokens are in active lists\n    const defaultTokens = useAllTokens();\n    const importTokensNotInDefault =\n        urlLoadedTokens &&\n        urlLoadedTokens.filter((token: Token) => {\n            return !Boolean(token.address in defaultTokens);\n        });\n\n    const theme = useContext(ThemeContext);\n\n    // toggle wallet when disconnected\n    const toggleWalletModal = useWalletModalToggle();\n\n    // for expert mode\n    const [isExpertMode] = useExpertModeManager();\n\n    // get version from the url\n    const toggledVersion = useToggledVersion();\n\n    // swap state\n    const { independentField, typedValue, recipient } = useSwapState();\n    const {\n        v3TradeState: { state: v3TradeState },\n        toggledTrade: trade,\n        allowedSlippage,\n        currencyBalances,\n        parsedAmount,\n        currencies,\n        inputError: swapInputError,\n    } = useDerivedSwapInfo();\n\n    const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n\n    const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n    const { address: recipientAddress } = useENSAddress(recipient);\n\n    const parsedAmounts = useMemo(\n        () =>\n            showWrap\n                ? {\n                      [Field.INPUT]: parsedAmount,\n                      [Field.OUTPUT]: parsedAmount,\n                  }\n                : {\n                      [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n                      [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n                  },\n        [independentField, parsedAmount, showWrap, trade]\n    );\n\n    const fiatValueInput = useUSDCValue(parsedAmounts[Field.INPUT]);\n    const fiatValueOutput = useUSDCValue(parsedAmounts[Field.OUTPUT]);\n    const priceImpact = computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput);\n\n    const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers();\n    const isValid = !swapInputError;\n    const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n\n    const handleTypeInput = useCallback(\n        (value: string) => {\n            onUserInput(Field.INPUT, value);\n        },\n        [onUserInput]\n    );\n    const handleTypeOutput = useCallback(\n        (value: string) => {\n            onUserInput(Field.OUTPUT, value);\n        },\n        [onUserInput]\n    );\n\n    // reset if they close warning without tokens in params\n    const handleDismissTokenWarning = useCallback(() => {\n        setDismissTokenWarning(true);\n        history.push(\"/swap/\");\n    }, [history]);\n\n    // modal and loading\n    const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n        showConfirm: boolean;\n        tradeToConfirm: V3Trade<Currency, Currency, TradeType> | undefined;\n        attemptingTxn: boolean;\n        swapErrorMessage: string | undefined;\n        txHash: string | undefined;\n    }>({\n        showConfirm: false,\n        tradeToConfirm: undefined,\n        attemptingTxn: false,\n        swapErrorMessage: undefined,\n        txHash: undefined,\n    });\n\n    const formattedAmounts = {\n        [independentField]: typedValue,\n        [dependentField]: showWrap ? parsedAmounts[independentField]?.toExact() ?? \"\" : parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n    };\n\n    const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)));\n\n    const routeNotFound = !trade?.route;\n    const isLoadingRoute = toggledVersion === Version.v3 && V3TradeState.LOADING === v3TradeState;\n\n    const dynamicFee = useMemo(() => {\n        const _trade = trade as any;\n        if (!_trade) return;\n        return _trade.swaps[0]?.route?.pools[0].fee;\n    }, [trade]);\n\n    // check whether the user has approved the router on the input token\n    const [approvalState, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n    const { state: signatureState, signatureData, gatherPermitSignature } = useERC20PermitFromTrade(trade, allowedSlippage);\n\n    const handleApprove = useCallback(async () => {\n        if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n            try {\n                await gatherPermitSignature();\n            } catch (error: any) {\n                // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n                if (error?.code !== 4001) {\n                    await approveCallback();\n                }\n            }\n        } else {\n            await approveCallback();\n            ReactGA.event({\n                category: \"Swap\",\n                action: \"Approve\",\n                label: [trade?.inputAmount.currency.symbol, toggledVersion].join(\"/\"),\n            });\n        }\n    }, [approveCallback, gatherPermitSignature, signatureState]);\n\n    // check if user has gone through approval process, used to show two step buttons, reset on token change\n    const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n    // mark when a user has submitted an approval, reset onTokenSelection for input field\n    useEffect(() => {\n        if (approvalState === ApprovalState.PENDING) {\n            setApprovalSubmitted(true);\n        }\n    }, [approvalState, approvalSubmitted]);\n\n    const maxInputAmount: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT]);\n    const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount));\n\n    // the callback to execute the swap\n    // @ts-ignore\n    const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient, signatureData);\n\n    const [singleHopOnly] = useUserSingleHopOnly();\n\n    const handleSwap = useCallback(() => {\n        if (!swapCallback) {\n            return;\n        }\n        if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n            return;\n        }\n        setSwapState({\n            attemptingTxn: true,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: undefined,\n        });\n        swapCallback()\n            .then((hash) => {\n                setSwapState({\n                    attemptingTxn: false,\n                    tradeToConfirm,\n                    showConfirm,\n                    swapErrorMessage: undefined,\n                    txHash: hash,\n                });\n                ReactGA.event({\n                    category: \"Swap\",\n                    action: recipient === null ? \"Swap w/o Send\" : (recipientAddress ?? recipient) === account ? \"Swap w/o Send + recipient\" : \"Swap w/ Send\",\n                    label: [trade?.inputAmount?.currency?.symbol, trade?.outputAmount?.currency?.symbol, getTradeVersion(trade), \"MH\", account].join(\"/\"),\n                });\n            })\n            .catch((error) => {\n                setSwapState({\n                    attemptingTxn: false,\n                    tradeToConfirm,\n                    showConfirm,\n                    swapErrorMessage: error.message,\n                    txHash: undefined,\n                });\n            });\n    }, [swapCallback, priceImpact, tradeToConfirm, showConfirm, recipient, recipientAddress, account, trade, singleHopOnly]);\n\n    // errors\n    const [showInverted, setShowInverted] = useState<boolean>(false);\n\n    // warnings on the greater of fiat value price impact and execution price impact\n    const priceImpactSeverity = useMemo(() => {\n        const executionPriceImpact = trade?.priceImpact;\n        return warningSeverity(executionPriceImpact && priceImpact ? (executionPriceImpact.greaterThan(priceImpact) ? executionPriceImpact : priceImpact) : executionPriceImpact ?? priceImpact);\n    }, [priceImpact, trade]);\n\n    // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n    // never show if price impact is above threshold in non expert mode\n    const showApproveFlow =\n        !swapInputError &&\n        (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING || (approvalSubmitted && approvalState === ApprovalState.APPROVED)) &&\n        !(priceImpactSeverity > 3 && !isExpertMode);\n\n    const handleConfirmDismiss = useCallback(() => {\n        setSwapState({\n            showConfirm: false,\n            tradeToConfirm,\n            attemptingTxn,\n            swapErrorMessage,\n            txHash,\n        });\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            onUserInput(Field.INPUT, \"\");\n        }\n    }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n    const handleAcceptChanges = useCallback(() => {\n        setSwapState({\n            //@ts-ignore\n            tradeToConfirm: trade,\n            swapErrorMessage,\n            txHash,\n            attemptingTxn,\n            showConfirm,\n        });\n    }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n    const handleInputSelect = useCallback(\n        (inputCurrency) => {\n            setApprovalSubmitted(false); // reset 2 step UI for approvals\n            onCurrencySelection(Field.INPUT, inputCurrency);\n        },\n        [onCurrencySelection]\n    );\n\n    const handleMaxInput = useCallback(() => {\n        maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact());\n        ReactGA.event({\n            category: \"Swap\",\n            action: \"Max\",\n        });\n    }, [maxInputAmount, onUserInput]);\n\n    const handleOutputSelect = useCallback(\n        (outputCurrency) => {\n            onCurrencySelection(Field.OUTPUT, outputCurrency);\n        },\n        [onCurrencySelection]\n    );\n\n    //TODO\n    const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode;\n\n    return (\n        <>\n            <Helmet>\n                {/* //TODO */}\n                <title>{t`LitX — Swap`}</title>\n            </Helmet>\n            <TokenWarningModal\n                isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n                tokens={importTokensNotInDefault}\n                onConfirm={handleConfirmTokenWarning}\n                onDismiss={handleDismissTokenWarning}\n            />\n            <div className={\"maw-610 mh-a pos-r swap\"}>\n                <Card classes={\"p-2 br-24 swap-card\"}>\n                    <SwapHeader allowedSlippage={allowedSlippage} dynamicFee={dynamicFee} />\n                    <div id=\"swap-page\">\n                        <ConfirmSwapModal\n                            isOpen={showConfirm}\n                            trade={trade}\n                            originalTrade={tradeToConfirm}\n                            onAcceptChanges={handleAcceptChanges}\n                            attemptingTxn={attemptingTxn}\n                            txHash={txHash}\n                            recipient={recipient}\n                            allowedSlippage={allowedSlippage}\n                            onConfirm={handleSwap}\n                            swapErrorMessage={swapErrorMessage}\n                            onDismiss={handleConfirmDismiss}\n                        />\n\n                        <AutoColumn gap={\"md\"}>\n                            <Card isDark={false} classes={\"p-1 br-12\"}>\n                                <CurrencyInputPanel\n                                    label={independentField === Field.OUTPUT && !showWrap ? <Trans>From (at most)</Trans> : <Trans>From</Trans>}\n                                    value={formattedAmounts[Field.INPUT]}\n                                    showMaxButton={showMaxButton}\n                                    currency={currencies[Field.INPUT] as WrappedCurrency}\n                                    onUserInput={handleTypeInput}\n                                    onMax={handleMaxInput}\n                                    fiatValue={fiatValueInput ?? undefined}\n                                    onCurrencySelect={handleInputSelect}\n                                    otherCurrency={currencies[Field.OUTPUT]}\n                                    showCommonBases={true}\n                                    id=\"swap-currency-input\"\n                                    locked={false}\n                                    hideCurrency={false}\n                                    hideInput={false}\n                                    showBalance={true}\n                                    disabled={false}\n                                    shallow={false}\n                                    swap\n                                />\n                                <ArrowWrapper\n                                    clickable\n                                    onClick={() => {\n                                        setApprovalSubmitted(false); // reset 2 step UI for approvals\n                                        onSwitchTokens();\n                                    }}\n                                >\n                                    <svg width=\"11\" height=\"21\" viewBox=\"0 0 11 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M10.0287 6.01207C10.2509 6.2384 10.6112 6.2384 10.8334 6.01207C11.0555 5.78575 11.0555 5.4188 10.8334 5.19247L5.90232 0.169745C5.68012 -0.0565819 5.31988 -0.0565819 5.09768 0.169745L0.166647 5.19247C-0.055548 5.4188 -0.055548 5.78575 0.166647 6.01207C0.388841 6.2384 0.749091 6.2384 0.971286 6.01207L5.5 1.39915L10.0287 6.01207Z\"\n                                            fill=\"#fff\"\n                                        />\n                                        <path\n                                            d=\"M10.0287 14.9879C10.2509 14.7616 10.6112 14.7616 10.8334 14.9879C11.0555 15.2143 11.0555 15.5812 10.8334 15.8075L5.90232 20.8303C5.68012 21.0566 5.31988 21.0566 5.09768 20.8303L0.166646 15.8075C-0.0555484 15.5812 -0.0555484 15.2143 0.166646 14.9879C0.388841 14.7616 0.749091 14.7616 0.971285 14.9879L5.5 19.6009L10.0287 14.9879Z\"\n                                            fill=\"#fff\"\n                                        />\n                                    </svg>\n                                </ArrowWrapper>\n                                <CurrencyInputPanel\n                                    value={formattedAmounts[Field.OUTPUT]}\n                                    onUserInput={handleTypeOutput}\n                                    label={independentField === Field.INPUT && !showWrap ? <Trans>To (at least)</Trans> : <Trans>To</Trans>}\n                                    showMaxButton={false}\n                                    hideBalance={false}\n                                    fiatValue={fiatValueOutput ?? undefined}\n                                    priceImpact={priceImpact}\n                                    currency={currencies[Field.OUTPUT] as WrappedCurrency}\n                                    onCurrencySelect={handleOutputSelect}\n                                    otherCurrency={currencies[Field.INPUT]}\n                                    showCommonBases={true}\n                                    id=\"swap-currency-output\"\n                                    locked={false}\n                                    hideCurrency={false}\n                                    hideInput={false}\n                                    showBalance={true}\n                                    disabled={false}\n                                    shallow={false}\n                                    swap\n                                />\n                            </Card>\n                            <div>\n                                {recipient !== null && !showWrap ? (\n                                    <>\n                                        <AutoRow justify=\"space-between\" style={{ padding: \"0 1rem\" }}>\n                                            <ArrowWrapper clickable={false}>\n                                                <ArrowDown size=\"16\" color={\"var(--text2)\"} />\n                                            </ArrowWrapper>\n                                            <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                                                <Trans>- Remove send</Trans>\n                                            </LinkStyledButton>\n                                        </AutoRow>\n                                        <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                                    </>\n                                ) : null}\n\n                                {showWrap ? null : (\n                                    <Row style={{ justifyContent: !trade ? \"center\" : \"space-between\" }}>\n                                        {trade ? (\n                                            <div className={\"flex-s-between\"}>\n                                                <TradePrice price={trade.executionPrice} showInverted={showInverted} setShowInverted={setShowInverted} />\n                                                <MouseoverTooltipContent\n                                                    //@ts-ignore\n                                                    onOpen={() => {\n                                                        ReactGA.event({\n                                                            category: \"Swap\",\n                                                            action: \"Transaction Details Tooltip Open\",\n                                                        });\n                                                    }}\n                                                    content={<AdvancedSwapDetails trade={trade} allowedSlippage={allowedSlippage} />}\n                                                >\n                                                    <Info size={\"1rem\"} stroke={\"var(--primary)\"} />\n                                                </MouseoverTooltipContent>\n                                            </div>\n                                        ) : null}\n                                    </Row>\n                                )}\n                            </div>\n                            <div>\n                                {!account ? (\n                                    <button className={\"btn primary w-100 pv-1 b\"} onClick={toggleWalletModal}>\n                                        <Trans>Connect Wallet</Trans>\n                                    </button>\n                                ) : showWrap ? (\n                                    <button className={\"btn primary w-100 pv-1 b\"} disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                                        {wrapInputError ?? (wrapType === WrapType.WRAP ? <Trans>Wrap</Trans> : wrapType === WrapType.UNWRAP ? <Trans>Unwrap</Trans> : null)}\n                                    </button>\n                                ) : routeNotFound && userHasSpecifiedInputOutput ? (\n                                    <GreyCard\n                                        style={{\n                                            textAlign: \"center\",\n                                            backgroundColor: \"var(--primary-disabled)\",\n                                        }}\n                                    >\n                                        <TYPE.main mb=\"4px\" color={\"white\"}>\n                                            {isLoadingRoute ? (\n                                                <Dots>\n                                                    <Trans>Loading</Trans>\n                                                </Dots>\n                                            ) : singleHopOnly ? (\n                                                <Trans>Insufficient liquidity for this trade. Try enabling multi-hop trades.</Trans>\n                                            ) : (\n                                                <Trans>Insufficient liquidity for this trade.</Trans>\n                                            )}\n                                        </TYPE.main>\n                                    </GreyCard>\n                                ) : showApproveFlow ? (\n                                    <AutoRow style={{ flexWrap: \"nowrap\", width: \"100%\" }}>\n                                        <AutoColumn style={{ width: \"100%\" }} gap=\"12px\">\n                                            <ButtonConfirmed\n                                                onClick={handleApprove}\n                                                disabled={approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted || signatureState === UseERC20PermitState.SIGNED}\n                                                style={{\n                                                    background: \"var(--primary)\",\n                                                    color: \"white\",\n                                                }}\n                                                width=\"100%\"\n                                                altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                                                confirmed={approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED}\n                                            >\n                                                <AutoRow\n                                                    justify=\"space-between\"\n                                                    style={{\n                                                        flexWrap: \"nowrap\",\n                                                        display: \"flex\",\n                                                        justifyContent: \"center\",\n                                                        background: \"var(--primary)\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    <span\n                                                        style={{\n                                                            display: \"flex\",\n                                                            alignItems: \"center\",\n                                                            background: \"var(--primary)\",\n                                                            color: \"white\",\n                                                        }}\n                                                    >\n                                                        <CurrencyLogo currency={currencies[Field.INPUT] as WrappedCurrency} size={\"24px\"} style={{ marginRight: \"8px\", flexShrink: 0 }} />\n                                                        {/* we need to shorten this string on mobile */}\n                                                        {approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? (\n                                                            <Trans>You can now trade {currencies[Field.INPUT]?.symbol}</Trans>\n                                                        ) : (\n                                                            <Trans>Allow LitX to use your {currencies[Field.INPUT]?.symbol}</Trans>\n                                                        )}\n                                                    </span>\n                                                    {approvalState === ApprovalState.PENDING ? (\n                                                        <Loader stroke={\"var(--loader)\"} style={{ marginLeft: \"5px\" }} />\n                                                    ) : (approvalSubmitted && approvalState === ApprovalState.APPROVED) || signatureState === UseERC20PermitState.SIGNED ? (\n                                                        <CheckCircle size=\"20\" style={{ marginLeft: \"5px\" }} color={\"var(--green1)\"} />\n                                                    ) : (\n                                                        <MouseoverTooltip\n                                                            text={\n                                                                <Trans>\n                                                                    You must give the LitX smart contracts permission to use your {currencies[Field.INPUT]?.symbol}. You only have to do this once per\n                                                                    token.\n                                                                </Trans>\n                                                            }\n                                                        >\n                                                            <HelpCircle size=\"20\" color={\"white\"} style={{ marginLeft: \"8px\" }} />\n                                                        </MouseoverTooltip>\n                                                    )}\n                                                </AutoRow>\n                                            </ButtonConfirmed>\n                                            <ButtonError\n                                                onClick={() => {\n                                                    if (isExpertMode) {\n                                                        handleSwap();\n                                                    } else {\n                                                        setSwapState({\n                                                            //@ts-ignore\n                                                            tradeToConfirm: trade,\n                                                            attemptingTxn: false,\n                                                            swapErrorMessage: undefined,\n                                                            showConfirm: true,\n                                                            txHash: undefined,\n                                                        });\n                                                    }\n                                                }}\n                                                style={{\n                                                    backgroundColor:\n                                                        !isValid ||\n                                                        (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                                                        priceImpactTooHigh ||\n                                                        priceImpactSeverity\n                                                            ? \"var(--primary-disabled)\"\n                                                            : \"var(--primary)\",\n                                                    color:\n                                                        !isValid ||\n                                                        (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                                                        priceImpactTooHigh ||\n                                                        priceImpactSeverity\n                                                            ? \"rgb(195, 197, 203)\"\n                                                            : \"white\",\n                                                    border:\n                                                        !isValid ||\n                                                        (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                                                        priceImpactTooHigh ||\n                                                        priceImpactSeverity\n                                                            ? \"1px solid #073c66\"\n                                                            : `1px solid ${({ theme }: any) => \"var(--primary)\"}`,\n                                                }}\n                                                width=\"100%\"\n                                                id=\"swap-button\"\n                                                disabled={!isValid || (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) || priceImpactTooHigh}\n                                                error={isValid && priceImpactSeverity > 2}\n                                            >\n                                                <Text fontSize={16} fontWeight={500}>\n                                                    {priceImpactTooHigh ? <Trans>High Price Impact</Trans> : priceImpactSeverity > 2 ? <Trans>Swap Anyway</Trans> : <Trans>Swap</Trans>}\n                                                </Text>\n                                            </ButtonError>\n                                        </AutoColumn>\n                                    </AutoRow>\n                                ) : (\n                                    <ButtonError\n                                        onClick={() => {\n                                            if (isExpertMode) {\n                                                handleSwap();\n                                            } else {\n                                                setSwapState({\n                                                    //@ts-ignore\n                                                    tradeToConfirm: trade,\n                                                    attemptingTxn: false,\n                                                    swapErrorMessage: undefined,\n                                                    showConfirm: true,\n                                                    txHash: undefined,\n                                                });\n                                            }\n                                        }}\n                                        id=\"swap-button\"\n                                        disabled={!isValid || priceImpactTooHigh || !!swapCallbackError}\n                                        error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n                                    >\n                                        <Text fontSize={20} fontWeight={500}>\n                                            {swapInputError ? (\n                                                swapInputError\n                                            ) : priceImpactTooHigh ? (\n                                                <Trans>Price Impact Too High</Trans>\n                                            ) : priceImpactSeverity > 2 ? (\n                                                <Trans>Swap Anyway</Trans>\n                                            ) : (\n                                                <Trans>Swap</Trans>\n                                            )}\n                                        </Text>\n                                    </ButtonError>\n                                )}\n                                {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n                            </div>\n                        </AutoColumn>\n                    </div>\n                </Card>\n            </div>\n            <SwitchLocaleLink />\n        </>\n    );\n}\n","import { Percent } from '@uniswap/sdk-core'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../constants/misc'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n    if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n        return (\n            window.prompt(\n                `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n                    0\n                )}%. Please type the word \"confirm\" to continue with this swap.`\n            ) === 'confirm'\n        )\n    } else if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n        return window.confirm(\n            `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n                0\n            )}%. Please confirm that you would like to continue with this swap.`\n        )\n    }\n    return true\n}\n","import { useEffect } from 'react'\n\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { useAppDispatch } from 'state/hooks'\nimport { ApplicationModal, setOpenModal } from '../../state/application/actions'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n    const {\n        location: { search },\n        match: {\n            params: { outputCurrency }\n        }\n    } = props\n\n    return (\n        <Redirect\n            to={{\n                ...props.location,\n                pathname: '/swap',\n                search:\n                    search && search.length > 1\n                        ? `${search}&outputCurrency=${outputCurrency}`\n                        : `?outputCurrency=${outputCurrency}`\n            }}\n        />\n    )\n}\n\nexport function OpenClaimAddressModalAndRedirectToSwap(props: RouteComponentProps) {\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        dispatch(setOpenModal(ApplicationModal.ADDRESS_CLAIM))\n    }, [dispatch])\n    return <RedirectPathToSwapOnly {...props} />\n}\n","import styled from 'styled-components/macro'\nimport { darken } from 'polished'\n\nexport const CautionModalInner = styled.div`\n  padding: 2rem;\n  line-height: 26px;\n  color: black;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    overflow: auto;\n  `}\n`\nexport const CautionList = styled.ul`\n  list-style: decimal;\n    color: black;\n`\nexport const CautionListItem = styled.li`\n  margin-bottom: 1rem;\n`\nexport const AgreeButton = styled.button`\n  background-color: var(--primary);\n  color: white;\n  padding: 12px 16px;\n  width: 100%;\n  margin-top: 1rem;\n  border-radius: 10px;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 600;\n  border: none;\n\n  &:hover {\n    background-color: ${darken(0.1, '#D536C8')};\n  }\n`\n","import { t, Trans } from \"@lingui/macro\";\nimport { useCallback, useState } from \"react\";\nimport Modal from \"../Modal\";\nimport { AgreeButton, CautionList, CautionListItem, CautionModalInner } from \"./styled\";\n\nconst agreementItems = [\n    t`Using LitX involves various risks, including, but not limited to, losses while digital assets are being supplied to LitX, and losses due to the fluctuation of prices of tokens in a trading pair or liquidity pool.`,\n    t`You use LitX at your own risk and without warranties of any kind. LitX is not liable for potential losses.`,\n    t`Before using LitX, you should review the relevant documentation to make sure you understand how LitX works.`,\n    t`You are responsible for completing your own due diligence to understand the risks of trading crypto.`,\n];\n\nexport default function CautionModal() {\n    const [cautionModal, toggleCautionModal] = useState(() => {\n        const accepted = localStorage.getItem(\"cautionAccepted\");\n        return !accepted;\n    });\n\n    const handleAgreement = useCallback(() => {\n        localStorage.setItem(\"cautionAccepted\", \"true\");\n        toggleCautionModal(false);\n    }, []);\n\n    return (\n        <Modal isOpen={cautionModal} onDismiss={() => {}}>\n            <CautionModalInner>\n                <p>\n                    <Trans>Please confirm that you agree with the following paragraphs:</Trans>\n                </p>\n                <CautionList>\n                    {agreementItems.map((el, i) => (\n                        <CautionListItem key={i}>{el}</CautionListItem>\n                    ))}\n                </CautionList>\n                <AgreeButton onClick={handleAgreement}>\n                    <Trans>I agree</Trans>\n                </AgreeButton>\n            </CautionModalInner>\n        </Modal>\n    );\n}\n","import { useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { getCLS, getFCP, getFID, getLCP, Metric } from 'web-vitals'\nimport { useActiveWeb3React } from '../../hooks/web3'\n\nfunction reportWebVitals({ name, delta, id }: Metric) {\n    ReactGA.timing({\n        category: 'Web Vitals',\n        variable: name,\n        value: Math.round(name === 'CLS' ? delta * 1000 : delta),\n        label: id\n    })\n}\n\n// tracks web vitals and pageviews\nexport default function GoogleAnalyticsReporter({\n    location: {\n        pathname,\n        search\n    }\n}: RouteComponentProps): null {\n    useEffect(() => {\n        getFCP(reportWebVitals)\n        getFID(reportWebVitals)\n        getLCP(reportWebVitals)\n        getCLS(reportWebVitals)\n    }, [])\n\n    const { chainId } = useActiveWeb3React()\n    useEffect(() => {\n        // cd1 - custom dimension 1 - chainId\n        ReactGA.set({ cd1: chainId ?? 0 })\n    }, [chainId])\n\n    useEffect(() => {\n        ReactGA.pageview(`${pathname}${search}`)\n    }, [pathname, search])\n    return null\n}\n","import { useEffect, useState } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useBlockNumber } from '../../state/application/hooks'\nimport { ExternalLink } from '../../theme'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { Spinner, StyledPolling, StyledPollingDot, StyledPollingNumber } from './styled'\n\nexport default function Polling() {\n    const { chainId } = useActiveWeb3React()\n\n    const blockNumber = useBlockNumber()\n\n    const [isMounting, setIsMounting] = useState(false)\n    const [isHover, setIsHover] = useState(false)\n\n    useEffect(\n        () => {\n            if (!blockNumber) {\n                return\n            }\n\n            setIsMounting(true)\n            const mountingTimer = setTimeout(() => setIsMounting(false), 1000)\n\n            // this will clear Timeout when component unmount like in willComponentUnmount\n            return () => {\n                clearTimeout(mountingTimer)\n            }\n        },\n        [blockNumber] //useEffect will run only one time\n        //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n    )\n\n    return (\n        <ExternalLink\n            href={chainId && blockNumber ? getExplorerLink(chainId, blockNumber.toString(), ExplorerDataType.BLOCK) : ''}\n        >\n            <StyledPolling onMouseEnter={() => setIsHover(true)}\n                           onMouseLeave={() => setIsHover(false)}>\n                <StyledPollingNumber breathe={isMounting} hovering={isHover}>\n                    {blockNumber}\n                </StyledPollingNumber>\n                <StyledPollingDot>{isMounting && <Spinner />}</StyledPollingDot>\n            </StyledPolling>\n        </ExternalLink>\n    )\n}\n","import \"./index.scss\";\n\nexport function PoweredByAlgebra() {\n    return (\n        <div>\n            <a href={\"https://algebra.finance\"} rel={\"noopener noreferrer\"} target={\"_blank\"}>\n                <span style={{ display: \"flex\", width: \"150px\" }}>\n                    <svg width=\"188\" height=\"18\" viewBox=\"0 0 188 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M2.064 17.744C1.872 17.744 1.71733 17.6853 1.6 17.568C1.49333 17.4613 1.44 17.312 1.44 17.12V9.568C1.45067 8.736 1.648 7.98933 2.032 7.328C2.42667 6.656 2.95467 6.128 3.616 5.744C4.288 5.36 5.04 5.168 5.872 5.168C6.72533 5.168 7.488 5.36533 8.16 5.76C8.832 6.144 9.36 6.672 9.744 7.344C10.1387 8.016 10.336 8.77867 10.336 9.632C10.336 10.4747 10.144 11.232 9.76 11.904C9.38667 12.576 8.87467 13.1093 8.224 13.504C7.57333 13.888 6.83733 14.08 6.016 14.08C5.30133 14.08 4.65067 13.9307 4.064 13.632C3.488 13.3227 3.024 12.9173 2.672 12.416V17.12C2.672 17.312 2.61333 17.4613 2.496 17.568C2.38933 17.6853 2.24533 17.744 2.064 17.744ZM5.872 12.96C6.49067 12.96 7.04533 12.816 7.536 12.528C8.02667 12.24 8.41067 11.8453 8.688 11.344C8.976 10.832 9.12 10.2613 9.12 9.632C9.12 8.992 8.976 8.42133 8.688 7.92C8.41067 7.41867 8.02667 7.024 7.536 6.736C7.04533 6.43733 6.49067 6.288 5.872 6.288C5.264 6.288 4.71467 6.43733 4.224 6.736C3.73333 7.024 3.34933 7.41867 3.072 7.92C2.79467 8.42133 2.656 8.992 2.656 9.632C2.656 10.2613 2.79467 10.832 3.072 11.344C3.34933 11.8453 3.73333 12.24 4.224 12.528C4.71467 12.816 5.264 12.96 5.872 12.96ZM16.7365 14.08C15.8832 14.08 15.1205 13.888 14.4485 13.504C13.7765 13.12 13.2485 12.592 12.8645 11.92C12.4805 11.248 12.2885 10.4853 12.2885 9.632C12.2885 8.768 12.4805 8 12.8645 7.328C13.2485 6.656 13.7765 6.128 14.4485 5.744C15.1205 5.36 15.8832 5.168 16.7365 5.168C17.5898 5.168 18.3472 5.36 19.0085 5.744C19.6805 6.128 20.2085 6.656 20.5925 7.328C20.9765 8 21.1738 8.768 21.1845 9.632C21.1845 10.4853 20.9872 11.248 20.5925 11.92C20.2085 12.592 19.6805 13.12 19.0085 13.504C18.3472 13.888 17.5898 14.08 16.7365 14.08ZM16.7365 12.96C17.3552 12.96 17.9098 12.816 18.4005 12.528C18.8912 12.24 19.2752 11.8453 19.5525 11.344C19.8298 10.8427 19.9685 10.272 19.9685 9.632C19.9685 8.992 19.8298 8.42133 19.5525 7.92C19.2752 7.408 18.8912 7.008 18.4005 6.72C17.9098 6.432 17.3552 6.288 16.7365 6.288C16.1178 6.288 15.5632 6.432 15.0725 6.72C14.5818 7.008 14.1925 7.408 13.9045 7.92C13.6272 8.42133 13.4885 8.992 13.4885 9.632C13.4885 10.272 13.6272 10.8427 13.9045 11.344C14.1925 11.8453 14.5818 12.24 15.0725 12.528C15.5632 12.816 16.1178 12.96 16.7365 12.96ZM25.0803 14C24.9416 14 24.8189 13.9627 24.7123 13.888C24.6056 13.8133 24.5309 13.7173 24.4883 13.6L21.9923 6.112C21.9283 5.84533 21.9336 5.63733 22.0083 5.488C22.0829 5.328 22.2323 5.248 22.4563 5.248C22.5949 5.248 22.7176 5.28533 22.8243 5.36C22.9309 5.43467 23.0109 5.552 23.0643 5.712L25.2883 12.512H24.9363L27.0003 5.728C27.0429 5.58933 27.1123 5.47733 27.2083 5.392C27.3149 5.296 27.4483 5.248 27.6083 5.248C27.7683 5.248 27.8963 5.29067 27.9923 5.376C28.0989 5.46133 28.1736 5.57867 28.2163 5.728L30.1843 12.352H29.9123L32.0883 5.712C32.1949 5.40267 32.3923 5.248 32.6803 5.248C32.9149 5.248 33.0749 5.33867 33.1603 5.52C33.2456 5.69067 33.2456 5.888 33.1603 6.112L30.6643 13.6C30.6216 13.7173 30.5469 13.8133 30.4403 13.888C30.3443 13.9627 30.2269 14 30.0883 14C29.9496 14 29.8216 13.9627 29.7043 13.888C29.5976 13.8133 29.5283 13.7173 29.4963 13.6L27.4803 6.912H27.6723L25.6562 13.6C25.6136 13.728 25.5389 13.8293 25.4323 13.904C25.3256 13.968 25.2083 14 25.0803 14ZM38.5955 14.08C37.7315 14.08 36.9635 13.8933 36.2915 13.52C35.6302 13.136 35.1075 12.608 34.7235 11.936C34.3502 11.264 34.1635 10.496 34.1635 9.632C34.1635 8.75733 34.3395 7.98933 34.6915 7.328C35.0542 6.656 35.5502 6.128 36.1795 5.744C36.8088 5.36 37.5342 5.168 38.3555 5.168C39.1662 5.168 39.8702 5.35467 40.4675 5.728C41.0755 6.09067 41.5448 6.59733 41.8755 7.248C42.2062 7.89867 42.3715 8.64 42.3715 9.472C42.3715 9.64267 42.3182 9.78133 42.2115 9.888C42.1048 9.984 41.9662 10.032 41.7955 10.032H34.9955V9.008H41.9235L41.2355 9.504C41.2462 8.88533 41.1342 8.33067 40.8995 7.84C40.6648 7.34933 40.3288 6.96533 39.8915 6.688C39.4648 6.41067 38.9528 6.272 38.3555 6.272C37.7475 6.272 37.2142 6.416 36.7555 6.704C36.2968 6.992 35.9395 7.392 35.6835 7.904C35.4382 8.40533 35.3155 8.98133 35.3155 9.632C35.3155 10.2827 35.4542 10.8587 35.7315 11.36C36.0195 11.8613 36.4088 12.256 36.8995 12.544C37.3902 12.832 37.9555 12.976 38.5955 12.976C38.9795 12.976 39.3635 12.912 39.7475 12.784C40.1422 12.6453 40.4568 12.4747 40.6915 12.272C40.8088 12.176 40.9422 12.128 41.0915 12.128C41.2408 12.1173 41.3688 12.1547 41.4755 12.24C41.6142 12.368 41.6835 12.5067 41.6835 12.656C41.6942 12.8053 41.6355 12.9333 41.5075 13.04C41.1555 13.3387 40.7075 13.5893 40.1635 13.792C39.6195 13.984 39.0968 14.08 38.5955 14.08ZM44.9676 8.608C44.9996 7.94667 45.1703 7.35467 45.4796 6.832C45.7996 6.30933 46.2103 5.89867 46.7116 5.6C47.2236 5.30133 47.789 5.152 48.4076 5.152C48.8983 5.152 49.277 5.22133 49.5436 5.36C49.8103 5.49867 49.9116 5.70133 49.8476 5.968C49.805 6.128 49.7303 6.23467 49.6236 6.288C49.5276 6.34133 49.405 6.36267 49.2556 6.352C49.117 6.34133 48.957 6.33067 48.7756 6.32C48.1783 6.26667 47.645 6.33067 47.1756 6.512C46.717 6.68267 46.349 6.94933 46.0716 7.312C45.805 7.67467 45.6716 8.10667 45.6716 8.608H44.9676ZM45.0636 14C44.8716 14 44.7223 13.9467 44.6156 13.84C44.509 13.7333 44.4556 13.584 44.4556 13.392V5.856C44.4556 5.664 44.509 5.51467 44.6156 5.408C44.7223 5.30133 44.8716 5.248 45.0636 5.248C45.2556 5.248 45.405 5.30133 45.5116 5.408C45.6183 5.51467 45.6716 5.664 45.6716 5.856V13.392C45.6716 13.584 45.6183 13.7333 45.5116 13.84C45.405 13.9467 45.2556 14 45.0636 14ZM55.1111 14.08C54.2471 14.08 53.4791 13.8933 52.8071 13.52C52.1458 13.136 51.6231 12.608 51.2391 11.936C50.8658 11.264 50.6791 10.496 50.6791 9.632C50.6791 8.75733 50.8551 7.98933 51.2071 7.328C51.5698 6.656 52.0658 6.128 52.6951 5.744C53.3245 5.36 54.0498 5.168 54.8711 5.168C55.6818 5.168 56.3858 5.35467 56.9831 5.728C57.5911 6.09067 58.0605 6.59733 58.3911 7.248C58.7218 7.89867 58.8871 8.64 58.8871 9.472C58.8871 9.64267 58.8338 9.78133 58.7271 9.888C58.6205 9.984 58.4818 10.032 58.3111 10.032H51.5111V9.008H58.4391L57.7511 9.504C57.7618 8.88533 57.6498 8.33067 57.4151 7.84C57.1805 7.34933 56.8445 6.96533 56.4071 6.688C55.9805 6.41067 55.4685 6.272 54.8711 6.272C54.2631 6.272 53.7298 6.416 53.2711 6.704C52.8125 6.992 52.4551 7.392 52.1991 7.904C51.9538 8.40533 51.8311 8.98133 51.8311 9.632C51.8311 10.2827 51.9698 10.8587 52.2471 11.36C52.5351 11.8613 52.9245 12.256 53.4151 12.544C53.9058 12.832 54.4711 12.976 55.1111 12.976C55.4951 12.976 55.8791 12.912 56.2631 12.784C56.6578 12.6453 56.9725 12.4747 57.2071 12.272C57.3245 12.176 57.4578 12.128 57.6071 12.128C57.7565 12.1173 57.8845 12.1547 57.9911 12.24C58.1298 12.368 58.1991 12.5067 58.1991 12.656C58.2098 12.8053 58.1511 12.9333 58.0231 13.04C57.6711 13.3387 57.2231 13.5893 56.6791 13.792C56.1351 13.984 55.6125 14.08 55.1111 14.08ZM64.6428 14.08C63.8001 14.08 63.0428 13.888 62.3708 13.504C61.6988 13.1093 61.1654 12.576 60.7708 11.904C60.3868 11.232 60.1948 10.4693 60.1948 9.616C60.1948 8.77333 60.3814 8.016 60.7548 7.344C61.1387 6.672 61.6561 6.144 62.3068 5.76C62.9574 5.36533 63.6934 5.168 64.5148 5.168C65.2294 5.168 65.8748 5.32267 66.4508 5.632C67.0268 5.93067 67.4908 6.33067 67.8428 6.832V2.128C67.8428 1.936 67.9014 1.78667 68.0188 1.68C68.1361 1.56267 68.2854 1.504 68.4668 1.504C68.6481 1.504 68.7974 1.56267 68.9148 1.68C69.0321 1.78667 69.0908 1.936 69.0908 2.128V9.68C69.0694 10.512 68.8614 11.264 68.4668 11.936C68.0828 12.5973 67.5548 13.12 66.8828 13.504C66.2214 13.888 65.4748 14.08 64.6428 14.08ZM64.6428 12.96C65.2614 12.96 65.8108 12.816 66.2908 12.528C66.7814 12.2293 67.1654 11.8293 67.4427 11.328C67.7308 10.8267 67.8748 10.256 67.8748 9.616C67.8748 8.98667 67.7308 8.42133 67.4427 7.92C67.1654 7.408 66.7814 7.008 66.2908 6.72C65.8108 6.432 65.2614 6.288 64.6428 6.288C64.0348 6.288 63.4854 6.432 62.9948 6.72C62.5041 7.008 62.1148 7.408 61.8268 7.92C61.5388 8.42133 61.3948 8.98667 61.3948 9.616C61.3948 10.256 61.5388 10.8267 61.8268 11.328C62.1148 11.8293 62.5041 12.2293 62.9948 12.528C63.4854 12.816 64.0348 12.96 64.6428 12.96ZM81.0908 14.08C80.2588 14.08 79.5068 13.888 78.8348 13.504C78.1734 13.12 77.6454 12.5973 77.2508 11.936C76.8668 11.264 76.6694 10.512 76.6588 9.68V2.128C76.6588 1.936 76.7121 1.78667 76.8188 1.68C76.9361 1.56267 77.0908 1.504 77.2828 1.504C77.4641 1.504 77.6081 1.56267 77.7148 1.68C77.8321 1.78667 77.8908 1.936 77.8908 2.128V6.832C78.2428 6.33067 78.7068 5.93067 79.2828 5.632C79.8694 5.32267 80.5201 5.168 81.2348 5.168C82.0561 5.168 82.7921 5.36533 83.4427 5.76C84.0934 6.144 84.6054 6.672 84.9788 7.344C85.3628 8.016 85.5548 8.77333 85.5548 9.616C85.5548 10.4693 85.3574 11.232 84.9628 11.904C84.5788 12.576 84.0508 13.1093 83.3788 13.504C82.7068 13.888 81.9441 14.08 81.0908 14.08ZM81.0908 12.96C81.7094 12.96 82.2641 12.816 82.7548 12.528C83.2454 12.2293 83.6294 11.8293 83.9068 11.328C84.1948 10.8267 84.3388 10.256 84.3388 9.616C84.3388 8.98667 84.1948 8.42133 83.9068 7.92C83.6294 7.408 83.2454 7.008 82.7548 6.72C82.2641 6.432 81.7094 6.288 81.0908 6.288C80.4828 6.288 79.9334 6.432 79.4427 6.72C78.9521 7.008 78.5681 7.408 78.2908 7.92C78.0134 8.42133 77.8748 8.98667 77.8748 9.616C77.8748 10.256 78.0134 10.8267 78.2908 11.328C78.5681 11.8293 78.9521 12.2293 79.4427 12.528C79.9334 12.816 80.4828 12.96 81.0908 12.96ZM88.9909 17.808C88.9055 17.808 88.8095 17.7867 88.7029 17.744C88.3402 17.584 88.2389 17.328 88.3989 16.976L93.5669 5.584C93.7269 5.24267 93.9829 5.14667 94.3349 5.296C94.6975 5.44533 94.7989 5.696 94.6389 6.048L89.4549 17.44C89.3482 17.6853 89.1935 17.808 88.9909 17.808ZM90.7669 13.728C90.6069 13.8027 90.4575 13.8187 90.3189 13.776C90.1802 13.7227 90.0682 13.616 89.9829 13.456L86.4149 6.064C86.3402 5.904 86.3295 5.75467 86.3829 5.616C86.4362 5.47733 86.5429 5.37067 86.7029 5.296C86.8629 5.22133 87.0122 5.21067 87.1509 5.264C87.2895 5.30667 87.3962 5.408 87.4709 5.568L90.9749 12.96C91.0602 13.12 91.0869 13.2693 91.0549 13.408C91.0229 13.5467 90.9269 13.6533 90.7669 13.728ZM123.85 14C123.604 14 123.428 13.8987 123.322 13.696C123.215 13.4933 123.204 13.296 123.29 13.104L127.994 1.936C128.111 1.648 128.314 1.504 128.602 1.504C128.879 1.504 129.076 1.648 129.194 1.936L133.914 13.12C134.01 13.3227 133.994 13.52 133.866 13.712C133.748 13.904 133.578 14 133.354 14C133.226 14 133.108 13.968 133.002 13.904C132.906 13.84 132.826 13.744 132.762 13.616L128.362 2.944H128.858L124.426 13.616C124.372 13.744 124.292 13.84 124.186 13.904C124.09 13.968 123.978 14 123.85 14ZM124.906 11.024L125.386 9.952H131.882L132.362 11.024H124.906ZM137.516 14C137.089 14 136.705 13.8827 136.364 13.648C136.033 13.4133 135.772 13.088 135.58 12.672C135.398 12.256 135.308 11.776 135.308 11.232V2.112C135.308 1.93067 135.361 1.78667 135.468 1.68C135.585 1.56267 135.734 1.504 135.916 1.504C136.097 1.504 136.241 1.56267 136.348 1.68C136.465 1.78667 136.524 1.93067 136.524 2.112V11.232C136.524 11.6907 136.614 12.064 136.796 12.352C136.988 12.64 137.228 12.784 137.516 12.784H137.916C138.076 12.784 138.204 12.8427 138.299 12.96C138.396 13.0667 138.444 13.2107 138.444 13.392C138.444 13.5733 138.374 13.7227 138.236 13.84C138.108 13.9467 137.937 14 137.724 14H137.516ZM143.515 14.08C142.672 14.08 141.925 13.8933 141.275 13.52C140.624 13.136 140.112 12.608 139.739 11.936C139.376 11.264 139.195 10.496 139.195 9.632C139.195 8.75733 139.387 7.984 139.771 7.312C140.155 6.64 140.683 6.11733 141.355 5.744C142.027 5.36 142.789 5.168 143.643 5.168C144.507 5.168 145.269 5.36 145.931 5.744C146.603 6.11733 147.125 6.64 147.499 7.312C147.883 7.984 148.08 8.75733 148.091 9.632L147.371 10.016C147.371 10.8053 147.205 11.5093 146.875 12.128C146.544 12.736 146.085 13.216 145.499 13.568C144.923 13.9093 144.261 14.08 143.515 14.08ZM143.675 17.456C142.832 17.456 142.091 17.296 141.451 16.976C140.811 16.6667 140.283 16.24 139.867 15.696C139.749 15.568 139.696 15.4293 139.707 15.28C139.728 15.1307 139.808 15.008 139.947 14.912C140.085 14.816 140.24 14.784 140.411 14.816C140.581 14.848 140.715 14.928 140.811 15.056C141.12 15.44 141.515 15.7493 141.995 15.984C142.485 16.2187 143.051 16.336 143.691 16.336C144.288 16.336 144.827 16.192 145.307 15.904C145.787 15.616 146.165 15.2107 146.443 14.688C146.731 14.1653 146.875 13.552 146.875 12.848V10.416L147.339 9.488L148.091 9.632V12.896C148.091 13.76 147.899 14.5333 147.515 15.216C147.131 15.9093 146.608 16.4533 145.947 16.848C145.285 17.2533 144.528 17.456 143.675 17.456ZM143.643 12.96C144.272 12.96 144.827 12.8213 145.307 12.544C145.797 12.256 146.181 11.8613 146.459 11.36C146.736 10.8587 146.875 10.2827 146.875 9.632C146.875 8.98133 146.736 8.40533 146.459 7.904C146.181 7.392 145.797 6.99733 145.307 6.72C144.827 6.432 144.272 6.288 143.643 6.288C143.013 6.288 142.453 6.432 141.963 6.72C141.472 6.99733 141.088 7.392 140.811 7.904C140.533 8.40533 140.395 8.98133 140.395 9.632C140.395 10.2827 140.533 10.8587 140.811 11.36C141.088 11.8613 141.472 12.256 141.963 12.544C142.453 12.8213 143.013 12.96 143.643 12.96ZM154.455 14.08C153.591 14.08 152.823 13.8933 152.151 13.52C151.49 13.136 150.967 12.608 150.583 11.936C150.21 11.264 150.023 10.496 150.023 9.632C150.023 8.75733 150.199 7.98933 150.551 7.328C150.914 6.656 151.41 6.128 152.039 5.744C152.668 5.36 153.394 5.168 154.215 5.168C155.026 5.168 155.73 5.35467 156.327 5.728C156.935 6.09067 157.404 6.59733 157.735 7.248C158.066 7.89867 158.231 8.64 158.231 9.472C158.231 9.64267 158.178 9.78133 158.071 9.888C157.964 9.984 157.826 10.032 157.655 10.032H150.855V9.008H157.783L157.095 9.504C157.106 8.88533 156.994 8.33067 156.759 7.84C156.524 7.34933 156.188 6.96533 155.751 6.688C155.324 6.41067 154.812 6.272 154.215 6.272C153.607 6.272 153.074 6.416 152.615 6.704C152.156 6.992 151.799 7.392 151.543 7.904C151.298 8.40533 151.175 8.98133 151.175 9.632C151.175 10.2827 151.314 10.8587 151.591 11.36C151.879 11.8613 152.268 12.256 152.759 12.544C153.25 12.832 153.815 12.976 154.455 12.976C154.839 12.976 155.223 12.912 155.607 12.784C156.002 12.6453 156.316 12.4747 156.551 12.272C156.668 12.176 156.802 12.128 156.951 12.128C157.1 12.1173 157.228 12.1547 157.335 12.24C157.474 12.368 157.543 12.5067 157.543 12.656C157.554 12.8053 157.495 12.9333 157.367 13.04C157.015 13.3387 156.567 13.5893 156.023 13.792C155.479 13.984 154.956 14.08 154.455 14.08ZM164.747 14.08C163.915 14.08 163.163 13.888 162.491 13.504C161.83 13.12 161.302 12.5973 160.907 11.936C160.523 11.264 160.326 10.512 160.315 9.68V2.128C160.315 1.936 160.368 1.78667 160.475 1.68C160.592 1.56267 160.747 1.504 160.939 1.504C161.12 1.504 161.264 1.56267 161.371 1.68C161.488 1.78667 161.547 1.936 161.547 2.128V6.832C161.899 6.33067 162.363 5.93067 162.939 5.632C163.526 5.32267 164.176 5.168 164.891 5.168C165.712 5.168 166.448 5.36533 167.099 5.76C167.75 6.144 168.262 6.672 168.635 7.344C169.019 8.016 169.211 8.77333 169.211 9.616C169.211 10.4693 169.014 11.232 168.619 11.904C168.235 12.576 167.707 13.1093 167.035 13.504C166.363 13.888 165.6 14.08 164.747 14.08ZM164.747 12.96C165.366 12.96 165.92 12.816 166.411 12.528C166.902 12.2293 167.286 11.8293 167.563 11.328C167.851 10.8267 167.995 10.256 167.995 9.616C167.995 8.98667 167.851 8.42133 167.563 7.92C167.286 7.408 166.902 7.008 166.411 6.72C165.92 6.432 165.366 6.288 164.747 6.288C164.139 6.288 163.59 6.432 163.099 6.72C162.608 7.008 162.224 7.408 161.947 7.92C161.67 8.42133 161.531 8.98667 161.531 9.616C161.531 10.256 161.67 10.8267 161.947 11.328C162.224 11.8293 162.608 12.2293 163.099 12.528C163.59 12.816 164.139 12.96 164.747 12.96ZM172.14 8.608C172.172 7.94667 172.342 7.35467 172.652 6.832C172.972 6.30933 173.382 5.89867 173.884 5.6C174.396 5.30133 174.961 5.152 175.58 5.152C176.07 5.152 176.449 5.22133 176.716 5.36C176.982 5.49867 177.084 5.70133 177.02 5.968C176.977 6.128 176.902 6.23467 176.796 6.288C176.7 6.34133 176.577 6.36267 176.428 6.352C176.289 6.34133 176.129 6.33067 175.948 6.32C175.35 6.26667 174.817 6.33067 174.348 6.512C173.889 6.68267 173.521 6.94933 173.244 7.312C172.977 7.67467 172.844 8.10667 172.844 8.608H172.14ZM172.236 14C172.044 14 171.894 13.9467 171.788 13.84C171.681 13.7333 171.628 13.584 171.628 13.392V5.856C171.628 5.664 171.681 5.51467 171.788 5.408C171.894 5.30133 172.044 5.248 172.236 5.248C172.428 5.248 172.577 5.30133 172.684 5.408C172.79 5.51467 172.844 5.664 172.844 5.856V13.392C172.844 13.584 172.79 13.7333 172.684 13.84C172.577 13.9467 172.428 14 172.236 14ZM182.171 14.08C181.35 14.08 180.614 13.888 179.963 13.504C179.312 13.1093 178.795 12.576 178.411 11.904C178.038 11.232 177.851 10.4747 177.851 9.632C177.851 8.77867 178.043 8.016 178.427 7.344C178.822 6.672 179.355 6.144 180.027 5.76C180.699 5.36533 181.456 5.168 182.299 5.168C183.142 5.168 183.894 5.36533 184.555 5.76C185.227 6.144 185.755 6.672 186.139 7.344C186.534 8.016 186.736 8.77867 186.747 9.632L186.251 10.016C186.251 10.784 186.07 11.4773 185.707 12.096C185.355 12.704 184.87 13.1893 184.251 13.552C183.643 13.904 182.95 14.08 182.171 14.08ZM182.299 12.96C182.918 12.96 183.467 12.816 183.947 12.528C184.438 12.24 184.822 11.8453 185.099 11.344C185.387 10.832 185.531 10.2613 185.531 9.632C185.531 8.992 185.387 8.42133 185.099 7.92C184.822 7.41867 184.438 7.024 183.947 6.736C183.467 6.43733 182.918 6.288 182.299 6.288C181.691 6.288 181.142 6.43733 180.651 6.736C180.16 7.024 179.771 7.41867 179.483 7.92C179.195 8.42133 179.051 8.992 179.051 9.632C179.051 10.2613 179.195 10.832 179.483 11.344C179.771 11.8453 180.16 12.24 180.651 12.528C181.142 12.816 181.691 12.96 182.299 12.96ZM186.123 14C185.942 14 185.792 13.9467 185.675 13.84C185.558 13.7227 185.499 13.5733 185.499 13.392V10.656L185.803 9.392L186.747 9.632V13.392C186.747 13.5733 186.688 13.7227 186.571 13.84C186.454 13.9467 186.304 14 186.123 14Z\"\n                            fill=\"var(--text1)\"\n                        />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M102 15.2719L109.101 1.15314V10.6911L102 15.2719Z\" fill=\"#EF359E\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M109.337 11.0205L102.237 15.6013H116.438L109.337 11.0205Z\" fill=\"#2797FF\" />\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M109.574 1.15314L116.674 15.2719L109.574 10.6911V1.15314Z\" fill=\"#0EFBDF\" />\n                    </svg>\n                </span>\n            </a>\n        </div>\n    );\n}\n","import { Trans } from \"@lingui/macro\";\nimport { GasPrice } from \"components/Header/GasPrice\";\nimport Polling from \"components/Header/Polling\";\nimport { PoweredByAlgebra } from \"components/Header/PoweredByAlgebra\";\nimport Loader from \"components/Loader\";\nimport { BugReportLink, NetworkFailedCard } from \"pages/styled\";\nimport { ExternalLink } from \"react-feather\";\nimport \"./index.scss\";\n\nexport default function Footer() {\n    return (\n        <footer className={\"footer-wrapper f f-jb mt-1\"}>\n            {/* <BugReportLink target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://algebra.finance/bug-report/\">\n                <span>\n                    <Trans>Report a bug</Trans>\n                </span>\n                <span className={\"ml-05\"}>\n                    <ExternalLink size={14} stroke={\"white\"} />\n                </span>\n            </BugReportLink> */}\n            <div className={\"f w-100 f-jb f-ac\"}>\n                {/* <span className={\"mr-1\"}>\n                    <GasPrice />\n                </span> */}\n                <span className={\"ml-a mr-a\"}>\n                    <PoweredByAlgebra />\n                </span>\n                <span>\n                    <Polling />\n                </span>\n            </div>\n        </footer>\n    );\n}\n","import styled, { keyframes } from 'styled-components/macro'\n\nconst move = keyframes`\n    0% {\n        left: 50%;\n        top: -40%\n    }\n    60%, 100% {\n        left: -40%;\n        top: 60%;\n    }\n`\n\nconst moveReversed = keyframes`\n    0% {\n        left: 50%;\n        top: 120%\n    }\n    60%, 100% {\n        left: 100%;\n        top: 60%;\n    }\n`\n\nexport const Particles = styled.div`\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n        display: none;\n    `}\n`\n\nexport const ParticlesInner = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`\n\nexport const Particle = styled.div<{ width: number; height: number; color: string; top: number; left: number; delay: number; reversed?: boolean; }>`\n    position: absolute;\n    background: ${({ color }) => color};\n    width: ${({ width }) => width}px;\n    height: ${({ height }) => height}px;\n    border-radius: 50px;\n    animation: 10s ${({ reversed }) => reversed ? moveReversed : move} linear infinite;\n    animation-delay: ${({ delay }) => delay}s;\n    transform: rotate(-45deg) translate(${({ left, top }) => (`${left}px,${top}px`)});\n    left: ${({ reversed }) => reversed ? '50%' : '-50%'};\n    top:  ${({ reversed }) => reversed ? '150%' : '-50%'};\n`\n","import { Particles, ParticlesInner, Particle } from \"./styled\";\n\nexport default function ParticlesBackground() {\n    return (\n        <Particles>\n            <ParticlesInner>\n                <Particle width={400} height={40} color={\"var(--particle1)\"} top={0} left={0} delay={0} />\n                <Particle width={250} height={25} color={\"var(--particle2)\"} top={30} left={250} delay={3} />\n                <Particle width={150} height={25} color={\"var(--particle3)\"} top={50} left={150} delay={6} />\n\n                <Particle width={400} height={40} color={\"var(--particle1)\"} top={20} left={30} delay={3} />\n                <Particle width={250} height={25} color={\"var(--particle2)\"} top={60} left={-20} delay={6} />\n                <Particle width={150} height={25} color={\"var(--particle3)\"} top={100} left={150} delay={12} />\n\n                <Particle width={400} height={40} color={\"var(--particle1)\"} top={0} left={0} delay={0} reversed={true} />\n                <Particle width={250} height={25} color={\"var(--particle2)\"} top={30} left={250} delay={3} reversed={true} />\n                <Particle width={150} height={25} color={\"var(--particle3)\"} top={50} left={150} delay={6} reversed={true} />\n\n                <Particle width={400} height={40} color={\"var(--particle1)\"} top={20} left={30} delay={3} reversed={true} />\n                <Particle width={250} height={25} color={\"var(--particle2)\"} top={60} left={-20} delay={6} reversed={true} />\n                <Particle width={150} height={25} color={\"var(--particle3)\"} top={100} left={150} delay={12} reversed={true} />\n            </ParticlesInner>\n        </Particles>\n    );\n}\n","import ApeModeQueryParamReader from \"hooks/useApeModeQueryParamReader\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Header from \"../components/Header\";\nimport Popups from \"../components/Popups\";\nimport Web3ReactManager from \"../components/Web3ReactManager\";\nimport DarkModeQueryParamReader from \"../theme/DarkModeQueryParamReader\";\nimport { RedirectDuplicateTokenIdsNew } from \"./AddLiquidity/redirects\";\nimport RemoveLiquidityV3 from \"./RemoveLiquidity/V3\";\nimport Swap from \"./Swap\";\nimport { RedirectPathToSwapOnly, RedirectToSwap } from \"./Swap/redirects\";\nimport { Pool } from \"lib/src\";\nimport React, { useEffect } from \"react\";\nimport CautionModal from \"../components/CautionModal\";\nimport { useInternet } from \"../hooks/useInternet\";\nimport { useIsNetworkFailed } from \"../hooks/useIsNetworkFailed\";\nimport Loader from \"../components/Loader\";\nimport GoogleAnalyticsReporter from \"../components/analytics/GoogleAnalyticsReporter\";\nimport { useActiveWeb3React } from \"../hooks/web3\";\nimport { GlobalStyle, Marginer, NetworkFailedCard } from \"./styled\";\nimport Footer from \"components/Footer\";\nimport { t, Trans } from \"@lingui/macro\";\n\nimport \"./index.scss\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport ParticlesBackground from \"components/ParticlesBackground\";\n\nconst AddLiquidity = React.lazy(() => import(\"./AddLiquidity\"));\nconst FarmingPage = React.lazy(() => import(\"./Farming/FarmingPage\"));\nconst PoolPage = React.lazy(() => import(\"./Pool\"));\nconst PositionPage = React.lazy(() => import(\"./Pool/PositionPage\"));\nconst InfoPage = React.lazy(() => import(\"./InfoPage\"));\n\nexport default function App() {\n    Object.defineProperty(Pool.prototype, \"tickSpacing\", {\n        get() {\n            return 60;\n        },\n    });\n    const internet = useInternet();\n    const { account } = useActiveWeb3React();\n    const networkFailed = useIsNetworkFailed();\n\n    useEffect(() => {\n        if (!account) return;\n\n        type __window = Window & { dataLayer: any };\n        const _window = window as unknown as __window;\n\n        _window.dataLayer = _window.dataLayer || [];\n        _window.dataLayer.push({\n            event: \"userId\",\n            user_id: account,\n        });\n    }, [account]);\n\n    return (\n        <ErrorBoundary>\n            <GlobalStyle />\n            <Route component={DarkModeQueryParamReader} />\n            <Route component={ApeModeQueryParamReader} />\n            <Route component={GoogleAnalyticsReporter} />\n            <Web3ReactManager>\n                <>\n                    <ParticlesBackground />\n                    <Header />\n                    <div className={\"app-body pos-r w-100 maw-1180 ph-1 pt-3 mh-a pb-4 mm_pt-5\"} style={{ zIndex: 3, marginBottom: \"5rem\" }}>\n                        <CautionModal />\n                        {/* {!internet && (\n                            <InternetError>\n                                <h2>Network ERROR</h2>\n                            </InternetError>\n                        )} */}\n                        {networkFailed && (\n                            <NetworkFailedCard>\n                                <div style={{ display: \"flex\" }}>\n                                    <Loader\n                                        style={{\n                                            display: \"inline-block\",\n                                            margin: \"auto 8px auto 0\",\n                                        }}\n                                        stroke={\"var(--loader)\"}\n                                    />\n                                    <span>{t`Connecting to network...`}</span>\n                                </div>\n                            </NetworkFailedCard>\n                        )}\n                        <div className={\"pb-2 mm_pb-2 mxs_pb-2\"} style={{ zIndex: 2 }}>\n                            <Popups />\n                            <React.Suspense\n                                fallback={\n                                    <p>\n                                        <Trans>Loading...</Trans>\n                                    </p>\n                                }\n                            >\n                                <Switch>\n                                    <Route strict path=\"/info\" component={InfoPage} />\n\n                                    <Route strict path=\"/farming\" component={FarmingPage} />\n\n                                    <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n                                    <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n                                    <Route exact strict path=\"/swap\" component={Swap} />\n\n                                    <Route exact strict path=\"/pool\" component={PoolPage} />\n                                    <Route exact strict path=\"/pool/:tokenId\" component={PositionPage} />\n\n                                    <Route exact strict path=\"/add/:currencyIdA?/:currencyIdB?/:step?\" component={RedirectDuplicateTokenIdsNew} />\n\n                                    <Route exact strict path=\"/increase/:currencyIdA?/:currencyIdB?/:tokenId?\" component={AddLiquidity} />\n                                    <Route exact strict path=\"/remove/:tokenId\" component={RemoveLiquidityV3} />\n\n                                    <Route component={RedirectPathToSwapOnly} />\n                                </Switch>\n                            </React.Suspense>\n                            <Marginer />\n                        </div>\n                    </div>\n                    <Footer />\n                </>\n            </Web3ReactManager>\n        </ErrorBoundary>\n    );\n}\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal, updateBlockNumber, updateChainId, updateGasPrice } from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n    // used by RTK-Query to build dynamic subgraph urls\n    readonly chainId: number | null\n    readonly blockNumber: { readonly [chainId: number]: number }\n    readonly gasPrice: { fetched: number | null, override: boolean }\n    readonly popupList: PopupList\n    readonly openModal: ApplicationModal | null\n}\n\nconst initialState: ApplicationState = {\n    chainId: null,\n    blockNumber: {},\n    gasPrice: { fetched: 0.1, override: true },\n    popupList: [],\n    openModal: null\n}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(updateChainId, (state, action) => {\n            const { chainId } = action.payload\n            state.chainId = chainId\n        })\n        .addCase(updateBlockNumber, (state, action) => {\n            const { chainId, blockNumber } = action.payload\n            if (typeof state.blockNumber[chainId] !== 'number') {\n                state.blockNumber[chainId] = blockNumber\n            } else {\n                state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n            }\n        })\n        .addCase(updateGasPrice, (state, action) => {\n            state.gasPrice = action.payload\n        })\n        .addCase(setOpenModal, (state, action) => {\n            state.openModal = action.payload\n        })\n        .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 25000 } }) => {\n            state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n                {\n                    key: key || nanoid(),\n                    show: true,\n                    content,\n                    removeAfterMs\n                }\n            ])\n        })\n        .addCase(removePopup, (state, { payload: { key } }) => {\n            state.popupList.forEach((p) => {\n                if (p.key === key) {\n                    p.show = false\n                }\n            })\n        })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { DEFAULT_DEADLINE_FROM_NOW } from '../../constants/misc'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../global/actions'\nimport {\n    addSerializedPair,\n    addSerializedToken,\n    removeSerializedPair,\n    removeSerializedToken,\n    SerializedPair,\n    SerializedToken,\n    toggleOntoWrongChainModal,\n    updateArbitrumAlphaAcknowledged,\n    updateHideClosedPositions,\n    updateHideFarmingPositions,\n    updateMatchesDarkMode,\n    updateUserDarkMode,\n    updateUserDeadline,\n    updateUserExpertMode,\n    updateUserLocale,\n    updateUserSingleHopOnly,\n    updateUserSlippageTolerance\n} from './actions'\nimport { SupportedLocale } from 'constants/locales'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n    arbitrumAlphaAcknowledged: boolean\n\n    // the timestamp of the last updateVersion action\n    lastUpdateVersionTimestamp?: number\n\n    userDarkMode: boolean | null // the user's choice for dark mode or light mode\n    matchesDarkMode: boolean // whether the dark mode media query matches\n\n    userLocale: SupportedLocale | null\n\n    userExpertMode: boolean\n\n    userSingleHopOnly: boolean // only allow swaps on direct pairs\n\n    // hides closed (inactive) positions across the app\n    userHideClosedPositions: boolean\n    userHideFarmingPositions: boolean\n\n    // user defined slippage tolerance in bips, used in all txns\n    userSlippageTolerance: number | 'auto'\n    userSlippageToleranceHasBeenMigratedToAuto: boolean // temporary flag for migration status\n\n    // deadline set by user in minutes, used in all txns\n    userDeadline: number\n\n    tokens: {\n        [chainId: number]: {\n            [address: string]: SerializedToken\n        }\n    }\n\n    pairs: {\n        [chainId: number]: {\n            // keyed by token0Address:token1Address\n            [key: string]: SerializedPair\n        }\n    }\n\n    timestamp: number\n    URLWarningVisible: boolean\n    ontoWrongChainWarning: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n    return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n    arbitrumAlphaAcknowledged: false,\n    userDarkMode: null,\n    matchesDarkMode: false,\n    userExpertMode: false,\n    userLocale: null,\n    userSingleHopOnly: false,\n    userHideClosedPositions: false,\n    userHideFarmingPositions: false,\n    userSlippageTolerance: 'auto',\n    userSlippageToleranceHasBeenMigratedToAuto: true,\n    userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n    tokens: {},\n    pairs: {},\n    timestamp: currentTimestamp(),\n    URLWarningVisible: true,\n    ontoWrongChainWarning: false\n}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(updateVersion, (state) => {\n            // slippage isnt being tracked in local storage, reset to default\n            // noinspection SuspiciousTypeOfGuard\n            if (\n                typeof state.userSlippageTolerance !== 'number' ||\n                !Number.isInteger(state.userSlippageTolerance) ||\n                state.userSlippageTolerance < 0 ||\n                state.userSlippageTolerance > 5000\n            ) {\n                state.userSlippageTolerance = 'auto'\n            } else {\n                if (\n                    !state.userSlippageToleranceHasBeenMigratedToAuto &&\n                    [10, 50, 100].indexOf(state.userSlippageTolerance) !== -1\n                ) {\n                    state.userSlippageTolerance = 'auto'\n                    state.userSlippageToleranceHasBeenMigratedToAuto = true\n                }\n            }\n\n            // deadline isnt being tracked in local storage, reset to default\n            // noinspection SuspiciousTypeOfGuard\n            if (\n                typeof state.userDeadline !== 'number' ||\n                !Number.isInteger(state.userDeadline) ||\n                state.userDeadline < 60 ||\n                state.userDeadline > 180 * 60\n            ) {\n                state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n            }\n\n            //TODO\n\n            // state.lastUpdateVersionTimestamp = currentTimestamp()\n        })\n        .addCase(updateUserDarkMode, (state, action) => {\n            state.userDarkMode = action.payload.userDarkMode\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateMatchesDarkMode, (state, action) => {\n            state.matchesDarkMode = action.payload.matchesDarkMode\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateArbitrumAlphaAcknowledged, (state, action) => {\n            state.arbitrumAlphaAcknowledged = action.payload.arbitrumAlphaAcknowledged\n        })\n        .addCase(updateUserExpertMode, (state, action) => {\n            state.userExpertMode = action.payload.userExpertMode\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateUserLocale, (state, action) => {\n            state.userLocale = action.payload.userLocale\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateUserSlippageTolerance, (state, action) => {\n            state.userSlippageTolerance = action.payload.userSlippageTolerance\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateUserDeadline, (state, action) => {\n            state.userDeadline = action.payload.userDeadline\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(updateUserSingleHopOnly, (state, action) => {\n            state.userSingleHopOnly = action.payload.userSingleHopOnly\n        })\n        .addCase(updateHideClosedPositions, (state, action) => {\n            state.userHideClosedPositions = action.payload.userHideClosedPositions\n        })\n        .addCase(updateHideFarmingPositions, (state, action) => {\n            state.userHideFarmingPositions = action.payload.userHideFarmingPositions\n        })\n        .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n            if (!state.tokens) {\n                state.tokens = {}\n            }\n            state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n            state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n            if (!state.tokens) {\n                state.tokens = {}\n            }\n            state.tokens[chainId] = state.tokens[chainId] || {}\n            delete state.tokens[chainId][address]\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n            if (\n                serializedPair.token0.chainId === serializedPair.token1.chainId &&\n                serializedPair.token0.address !== serializedPair.token1.address\n            ) {\n                const chainId = serializedPair.token0.chainId\n                state.pairs[chainId] = state.pairs[chainId] || {}\n                state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n            }\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(removeSerializedPair, (state, {\n            payload: {\n                chainId,\n                tokenAAddress,\n                tokenBAddress\n            }\n        }) => {\n            if (state.pairs[chainId]) {\n                // just delete both keys if either exists\n                delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n                delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n            }\n            state.timestamp = currentTimestamp()\n        })\n        .addCase(toggleOntoWrongChainModal, (state, { payload: { toggled } }) => {\n            state.ontoWrongChainWarning = toggled\n        })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n    LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n    LIQUIDITY = 'LIQUIDITY',\n    CURRENCY_A = 'CURRENCY_A',\n    CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { addTransaction, checkedTransaction, clearAllTransactions, clearOneTransaction, finalizeTransaction, SerializableTransactionReceipt } from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n    hash: string\n    approval?: { tokenAddress: string; spender: string }\n    summary?: string\n    claim?: { recipient: string }\n    receipt?: SerializableTransactionReceipt\n    lastCheckedBlockNumber?: number\n    addedTime: number\n    confirmedTime?: number\n    from: string\n}\n\nexport interface TransactionState {\n    [chainId: number]: {\n        [txHash: string]: TransactionDetails\n    }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(addTransaction, (transactions, {\n            payload: {\n                chainId,\n                from,\n                hash,\n                approval,\n                summary,\n                claim\n            }\n        }) => {\n            if (transactions[chainId]?.[hash]) {\n                throw Error('Attempted to add existing transaction.')\n            }\n            const txs = transactions[chainId] ?? {}\n            txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n            transactions[chainId] = txs\n        })\n        .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n            if (!transactions[chainId]) return\n            transactions[chainId] = {}\n        })\n        .addCase(clearOneTransaction, (transactions, { payload: { chainId, hash } }) => {\n            if (!transactions[chainId]) return\n\n            const txs = transactions[chainId] ?? {}\n            delete txs[hash]\n            transactions[chainId] = txs\n        })\n        .addCase(checkedTransaction, (transactions, {\n            payload: {\n                chainId,\n                hash,\n                blockNumber\n            }\n        }) => {\n            const tx = transactions[chainId]?.[hash]\n            if (!tx) {\n                return\n            }\n            if (!tx.lastCheckedBlockNumber) {\n                tx.lastCheckedBlockNumber = blockNumber\n            } else {\n                tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n            }\n        })\n        .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n            const tx = transactions[chainId]?.[hash]\n            if (!tx) {\n                return\n            }\n            tx.receipt = receipt\n            tx.confirmedTime = now()\n        })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n    readonly independentField: Field\n    readonly typedValue: string\n    readonly [Field.INPUT]: {\n        readonly currencyId: string | undefined\n    }\n    readonly [Field.OUTPUT]: {\n        readonly currencyId: string | undefined\n    }\n    // the typed recipient address or ENS name, or null if swap should go to sender\n    readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n    independentField: Field.INPUT,\n    typedValue: '',\n    [Field.INPUT]: {\n        currencyId: ''\n    },\n    [Field.OUTPUT]: {\n        currencyId: ''\n    },\n    recipient: null\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n    builder\n        .addCase(\n            replaceSwapState,\n            (state, {\n                payload: {\n                    typedValue,\n                    recipient,\n                    field,\n                    inputCurrencyId,\n                    outputCurrencyId\n                }\n            }) => {\n                return {\n                    [Field.INPUT]: {\n                        currencyId: inputCurrencyId\n                    },\n                    [Field.OUTPUT]: {\n                        currencyId: outputCurrencyId\n                    },\n                    independentField: field,\n                    typedValue: typedValue,\n                    recipient\n                }\n            }\n        )\n        .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n            const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n            if (currencyId === state[otherField].currencyId) {\n                // the case where we have to swap the order\n                return {\n                    ...state,\n                    independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n                    [field]: { currencyId: currencyId },\n                    [otherField]: { currencyId: state[field].currencyId }\n                }\n            } else {\n                // the normal case\n                return {\n                    ...state,\n                    [field]: { currencyId: currencyId }\n                }\n            }\n        })\n        .addCase(switchCurrencies, (state) => {\n            return {\n                ...state,\n                independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n                [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n                [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId }\n            }\n        })\n        .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n            return {\n                ...state,\n                independentField: field,\n                typedValue\n            }\n        })\n        .addCase(setRecipient, (state, { payload: { recipient } }) => {\n            state.recipient = recipient\n        })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n    readonly independentField: Field\n    readonly typedValue: string\n    readonly otherTypedValue: string // for the case when there's no liquidity\n    readonly startPriceTypedValue: string // for the case when there's no liquidity\n    readonly leftRangeTypedValue: string\n    readonly rightRangeTypedValue: string\n}\n\nexport const initialState: MintState = {\n    independentField: Field.CURRENCY_A,\n    typedValue: '',\n    otherTypedValue: '',\n    startPriceTypedValue: '',\n    leftRangeTypedValue: '',\n    rightRangeTypedValue: ''\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n    builder\n        .addCase(resetMintState, () => initialState)\n        .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n            if (noLiquidity) {\n                // they're typing into the field they've last typed in\n                if (field === state.independentField) {\n                    return {\n                        ...state,\n                        independentField: field,\n                        typedValue\n                    }\n                }\n                // they're typing into a new field, store the other value\n                else {\n                    return {\n                        ...state,\n                        independentField: field,\n                        typedValue,\n                        otherTypedValue: state.typedValue\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    independentField: field,\n                    typedValue,\n                    otherTypedValue: ''\n                }\n            }\n        })\n)\n","import { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from '../../constants/lists'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, disableList, enableList, fetchTokenList, removeList } from './actions'\n\nexport interface ListsState {\n    readonly byUrl: {\n        readonly [url: string]: {\n            readonly current: TokenList | null\n            readonly pendingUpdate: TokenList | null\n            readonly loadingRequestId: string | null\n            readonly error: string | null\n        }\n    }\n    // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n    readonly lastInitializedDefaultListOfLists?: string[]\n\n    // currently active lists\n    readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n    error: null,\n    current: null,\n    loadingRequestId: null,\n    pendingUpdate: null\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n    lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n    byUrl: {\n        ...DEFAULT_LIST_OF_LISTS.concat(UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n            memo[listUrl] = NEW_LIST_STATE\n            return memo\n        }, {})\n    },\n    activeListUrls: DEFAULT_ACTIVE_LIST_URLS\n}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n            state.byUrl[url] = {\n                //@ts-ignore\n                current: null,\n                //@ts-ignore\n                pendingUpdate: null,\n                ...state.byUrl[url],\n                loadingRequestId: requestId,\n                error: null\n            }\n        })\n        .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n            const current = state.byUrl[url]?.current\n            const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n            // no-op if update does nothing\n            if (current) {\n                const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n                if (upgradeType === VersionUpgrade.NONE) return\n                if (loadingRequestId === null || loadingRequestId === requestId) {\n                    state.byUrl[url] = {\n                        ...state.byUrl[url],\n                        loadingRequestId: null,\n                        error: null,\n                        current: current,\n                        pendingUpdate: tokenList\n                    }\n                }\n            } else {\n                // activate if on default active\n                if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n                    state.activeListUrls?.push(url)\n                }\n\n                state.byUrl[url] = {\n                    ...state.byUrl[url],\n                    loadingRequestId: null,\n                    error: null,\n                    current: tokenList,\n                    pendingUpdate: null\n                }\n            }\n        })\n        .addCase(fetchTokenList.rejected, (state, {\n            payload: {\n                url,\n                requestId,\n                errorMessage\n            }\n        }) => {\n            if (state.byUrl[url]?.loadingRequestId !== requestId) {\n                // no-op since it's not the latest request\n                return\n            }\n\n            state.byUrl[url] = {\n                ...state.byUrl[url],\n                loadingRequestId: null,\n                error: errorMessage,\n                current: null,\n                pendingUpdate: null\n            }\n        })\n        .addCase(addList, (state, { payload: url }) => {\n            if (!state.byUrl[url]) {\n                state.byUrl[url] = NEW_LIST_STATE\n            }\n        })\n        .addCase(removeList, (state, { payload: url }) => {\n            if (state.byUrl[url]) {\n                delete state.byUrl[url]\n            }\n            // remove list from active urls if needed\n            if (state.activeListUrls && state.activeListUrls.includes(url)) {\n                state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n            }\n        })\n        .addCase(enableList, (state, { payload: url }) => {\n            if (!state.byUrl[url]) {\n                state.byUrl[url] = NEW_LIST_STATE\n            }\n\n            if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n                state.activeListUrls.push(url)\n            }\n\n            if (!state.activeListUrls) {\n                state.activeListUrls = [url]\n            }\n        })\n        .addCase(disableList, (state, { payload: url }) => {\n            if (state.activeListUrls && state.activeListUrls.includes(url)) {\n                state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n            }\n        })\n        .addCase(acceptListUpdate, (state, { payload: url }) => {\n            if (!state.byUrl[url]?.pendingUpdate) {\n                throw new Error('accept list update called without pending update')\n            }\n            state.byUrl[url] = {\n                ...state.byUrl[url],\n                pendingUpdate: null,\n                current: state.byUrl[url].pendingUpdate\n            }\n        })\n        .addCase(updateVersion, (state) => {\n            // state loaded from localStorage, but new lists have never been initialized\n            if (!state.lastInitializedDefaultListOfLists) {\n                state.byUrl = initialState.byUrl\n                state.activeListUrls = initialState.activeListUrls\n            } else if (state.lastInitializedDefaultListOfLists) {\n                const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n                    (s, l) => s.add(l),\n                    new Set()\n                )\n                const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n                DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n                    if (!lastInitializedSet.has(listUrl)) {\n                        state.byUrl[listUrl] = NEW_LIST_STATE\n                    }\n                })\n\n                state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n                    if (!newListOfListsSet.has(listUrl)) {\n                        delete state.byUrl[listUrl]\n                    }\n                })\n            }\n\n            state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n            // if no active lists, activate defaults\n            if (!state.activeListUrls) {\n                state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n                // for each list on default list, initialize if needed\n                DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n                    if (!state.byUrl[listUrl]) {\n                        state.byUrl[listUrl] = NEW_LIST_STATE\n                    }\n                    return true\n                })\n            }\n        })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\ninterface BurnState {\n    readonly independentField: Field\n    readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n    independentField: Field.LIQUIDITY_PERCENT,\n    typedValue: '0'\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n    builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n        return {\n            ...state,\n            independentField: field,\n            typedValue\n        }\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { selectPercent } from './actions'\n\ninterface BurnV3State {\n    readonly percent: number\n}\n\nconst initialState: BurnV3State = {\n    percent: 0\n}\n\nexport default createReducer<BurnV3State>(initialState, (builder) =>\n    builder.addCase(selectPercent, (state, { payload: { percent } }) => {\n        return {\n            ...state,\n            percent\n        }\n    })\n)\n","export interface EventFilter {\n    address?: string\n    topics?: Array<string | Array<string> | null>\n}\n\nexport interface Log {\n    topics: Array<string>\n    data: string\n}\n\n/**\n * Converts a filter to the corresponding string key\n * @param filter the filter to convert\n */\nexport function filterToKey(filter: EventFilter): string {\n    return `${filter.address ?? ''}:${\n        filter.topics?.map((topic) => (topic ? (Array.isArray(topic) ? topic.join(';') : topic) : '\\0'))?.join('-') ?? ''\n    }`\n}\n\n/**\n * Convert a filter key to the corresponding filter\n * @param key key to convert\n */\nexport function keyToFilter(key: string): EventFilter {\n    const pcs = key.split(':')\n    const address = pcs[0]\n    const topics = pcs[1].split('-').map((topic) => {\n        const parts = topic.split(';')\n        if (parts.length === 1) return parts[0]\n        return parts\n    })\n\n    return {\n        address: address.length === 0 ? undefined : address,\n        topics\n    }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { EventFilter, filterToKey, Log } from './utils'\n\nexport interface LogsState {\n    [chainId: number]: {\n        [filterKey: string]: {\n            listeners: number\n            fetchingBlockNumber?: number\n            results?:\n                | {\n                blockNumber: number\n                logs: Log[]\n                error?: undefined\n            }\n                | {\n                blockNumber: number\n                logs?: undefined\n                error: true\n            }\n        }\n    }\n}\n\nconst slice = createSlice({\n    name: 'logs',\n    initialState: {} as LogsState,\n    reducers: {\n        addListener(state, {\n            payload: {\n                chainId,\n                filter\n            }\n        }: PayloadAction<{ chainId: number; filter: EventFilter }>) {\n            if (!state[chainId]) state[chainId] = {}\n            const key = filterToKey(filter)\n            if (!state[chainId][key])\n                state[chainId][key] = {\n                    listeners: 1\n                }\n            else state[chainId][key].listeners++\n        },\n        fetchingLogs(\n            state,\n            {\n                payload: { chainId, filters, blockNumber }\n            }: PayloadAction<{ chainId: number; filters: EventFilter[]; blockNumber: number }>\n        ) {\n            if (!state[chainId]) return\n            for (const filter of filters) {\n                const key = filterToKey(filter)\n                if (!state[chainId][key]) continue\n                state[chainId][key].fetchingBlockNumber = blockNumber\n            }\n        },\n        fetchedLogs(\n            state,\n            {\n                payload: { chainId, filter, results }\n            }: PayloadAction<{ chainId: number; filter: EventFilter; results: { blockNumber: number; logs: Log[] } }>\n        ) {\n            if (!state[chainId]) return\n            const key = filterToKey(filter)\n            const fetchState = state[chainId][key]\n            if (!fetchState || (fetchState.results && fetchState.results.blockNumber > results.blockNumber)) return\n            fetchState.results = results\n        },\n        fetchedLogsError(\n            state,\n            {\n                payload: { chainId, filter, blockNumber }\n            }: PayloadAction<{ chainId: number; blockNumber: number; filter: EventFilter }>\n        ) {\n            if (!state[chainId]) return\n            const key = filterToKey(filter)\n            const fetchState = state[chainId][key]\n            if (!fetchState || (fetchState.results && fetchState.results.blockNumber > blockNumber)) return\n            fetchState.results = {\n                blockNumber,\n                error: true\n            }\n        },\n        removeListener(state, {\n            payload: {\n                chainId,\n                filter\n            }\n        }: PayloadAction<{ chainId: number; filter: EventFilter }>) {\n            if (!state[chainId]) return\n            const key = filterToKey(filter)\n            if (!state[chainId][key]) return\n            state[chainId][key].listeners--\n        }\n    }\n})\n\nexport default slice.reducer\nexport const {\n    addListener,\n    removeListener,\n    fetchedLogs,\n    fetchedLogsError,\n    fetchingLogs\n} = slice.actions\n","import { createReducer } from '@reduxjs/toolkit'\nimport { addMulticallListeners, errorFetchingMulticallResults, fetchingMulticallResults, removeMulticallListeners, updateMulticallResults } from './actions'\nimport { toCallKey } from './utils'\n\nexport interface MulticallState {\n    callListeners?: {\n        // on a per-chain basis\n        [chainId: number]: {\n            // stores for each call key the listeners' preferences\n            [callKey: string]: {\n                // stores how many listeners there are per each blocks per fetch preference\n                [blocksPerFetch: number]: number\n            }\n        }\n    }\n\n    callResults: {\n        [chainId: number]: {\n            [callKey: string]: {\n                data?: string | null\n                blockNumber?: number\n                fetchingBlockNumber?: number\n            }\n        }\n    }\n}\n\nconst initialState: MulticallState = {\n    callResults: {}\n}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(\n            addMulticallListeners,\n            (\n                state,\n                {\n                    payload: {\n                        calls,\n                        chainId,\n                        options: { blocksPerFetch }\n                    }\n                }\n            ) => {\n                const listeners: MulticallState['callListeners'] = state.callListeners\n                    ? state.callListeners\n                    : (state.callListeners = {})\n                listeners[chainId] = listeners[chainId] ?? {}\n                calls.forEach((call) => {\n                    const callKey = toCallKey(call)\n                    listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n                    listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n                })\n            }\n        )\n        .addCase(\n            removeMulticallListeners,\n            (\n                state,\n                {\n                    payload: {\n                        chainId,\n                        calls,\n                        options: { blocksPerFetch }\n                    }\n                }\n            ) => {\n                const listeners: MulticallState['callListeners'] = state.callListeners\n                    ? state.callListeners\n                    : (state.callListeners = {})\n\n                if (!listeners[chainId]) return\n                calls.forEach((call) => {\n                    const callKey = toCallKey(call)\n                    if (!listeners[chainId][callKey]) return\n                    if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n                    if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n                        delete listeners[chainId][callKey][blocksPerFetch]\n                    } else {\n                        listeners[chainId][callKey][blocksPerFetch]--\n                    }\n                })\n            }\n        )\n        .addCase(fetchingMulticallResults, (state, {\n            payload: {\n                chainId,\n                fetchingBlockNumber,\n                calls\n            }\n        }) => {\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\n            calls.forEach((call) => {\n                const callKey = toCallKey(call)\n                const current = state.callResults[chainId][callKey]\n                if (!current) {\n                    state.callResults[chainId][callKey] = {\n                        fetchingBlockNumber\n                    }\n                } else {\n                    if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n                    state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n                }\n            })\n        })\n        .addCase(errorFetchingMulticallResults, (state, {\n            payload: {\n                fetchingBlockNumber,\n                chainId,\n                calls\n            }\n        }) => {\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\n            calls.forEach((call) => {\n                const callKey = toCallKey(call)\n                const current = state.callResults[chainId][callKey]\n                if (!current || typeof current.fetchingBlockNumber !== 'number') return // only should be dispatched if we are already fetching\n                if (current.fetchingBlockNumber <= fetchingBlockNumber) {\n                    delete current.fetchingBlockNumber\n                    current.data = null\n                    current.blockNumber = fetchingBlockNumber\n                }\n            })\n        })\n        .addCase(updateMulticallResults, (state, {\n            payload: {\n                chainId,\n                results,\n                blockNumber\n            }\n        }) => {\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\n            Object.keys(results).forEach((callKey) => {\n                const current = state.callResults[chainId][callKey]\n                if ((current?.blockNumber ?? 0) > blockNumber) return\n                state.callResults[chainId][callKey] = {\n                    data: results[callKey],\n                    blockNumber\n                }\n            })\n        })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const isFarming = createAction<{ startTime: string, endTime: string, eternalFarmings: boolean }>('farming/getFarms')\nexport const hasTransferredPositions = createAction<boolean>('farming/hasTransferredPositions')","import { createReducer } from '@reduxjs/toolkit'\nimport { hasTransferredPositions, isFarming } from './actions'\n\ninterface Farming {\n    endTime: string\n    startTime: string\n    eternalFarmings: boolean\n    hasTransferred: boolean\n}\n\nconst initialState: Farming = {\n    endTime: '',\n    startTime: '',\n    eternalFarmings: false,\n    hasTransferred: false\n}\n\nexport default createReducer(initialState, (builder) =>\n    builder\n        .addCase(isFarming, (state, {\n            payload: {\n                endTime = '',\n                startTime = '',\n                eternalFarmings = false\n            }\n        }) => {\n            return {\n                ...state,\n                startTime,\n                endTime,\n                eternalFarmings\n            }\n        })\n        .addCase(hasTransferredPositions, (state, { payload: hasTransferred }) => {\n            return {\n                ...state,\n                hasTransferred\n            }\n        })\n)\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport qs from 'qs'\n\nimport AlgebraConfig from \"algebra.config\"\n\nexport interface GetQuoteResult {\n    blockNumber: string\n    gasPriceWei: string\n    gasUseEstimate: string\n    gasUseEstimateQuote: string\n    gasUseEstimateQuoteDecimals: string\n    gasUseEstimateUSD: string\n    methodParameters: { calldata: string; value: string }\n    quote: string\n    quoteDecimals: string\n    quoteGasAdjusted: string\n    quoteGasAdjustedDecimals: string\n    quoteId: string\n    routeEdges: {\n        fee: string\n        id: string\n        inId: string\n        outId: string\n        percent: number\n        type: string\n    }[]\n    routeNodes: { chainId: number; id: string; symbol: string; type: string }[]\n    routeString: string\n}\n\nexport const routingApi = createApi({\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://api.uniswap.org/v1/'\n    }),\n    endpoints: (build) => ({\n        getQuote: build.query<GetQuoteResult,\n            {\n                tokenInAddress: string\n                tokenInChainId: number\n                tokenOutAddress: string\n                tokenOutChainId: number\n                amount: string\n                type: 'exactIn' | 'exactOut'\n                recipient?: string\n                slippageTolerance?: string\n                deadline?: string\n            }>({\n                query: (args) => `quote?${qs.stringify(args)}`\n            })\n    })\n})\n\nexport const { useGetQuoteQuery } = routingApi\n","import { configureStore } from '@reduxjs/toolkit'\nimport { load, save } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport mintV3 from './mint/v3/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport burnV3 from './burn/v3/reducer'\nimport logs from './logs/slice'\nimport multicall from './multicall/reducer'\nimport farming from './farming/reducer'\nimport { api as dataApi } from './data/slice'\nimport { routingApi } from './routing/slice'\n\nconst PERSISTED_KEYS: string[] = ['user', 'lists']\n\nconst store = configureStore({\n    reducer: {\n        application,\n        user,\n        transactions,\n        swap,\n        farming,\n        mint,\n        mintV3,\n        burn,\n        burnV3,\n        multicall,\n        lists,\n        logs,\n        [dataApi.reducerPath]: dataApi.reducer,\n        [routingApi.reducerPath]: routingApi.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ thunk: true })\n            .concat(dataApi.middleware)\n            .concat(routingApi.middleware)\n            .concat(save({ states: ['transactions'], debounce: 1000 }))\n            .concat(save({ states: PERSISTED_KEYS, debounce: 0 })),\n    preloadedState: load({\n        states: PERSISTED_KEYS,\n        disableWarnings: process.env.NODE_ENV === 'test'\n    })\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n    return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n    const [focused, setFocused] = useState<boolean>(isWindowVisible())\n    const listener = useCallback(() => {\n        setFocused(isWindowVisible())\n    }, [setFocused])\n\n    useEffect(() => {\n        if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n        document.addEventListener('visibilitychange', listener)\n        return () => {\n            document.removeEventListener('visibilitychange', listener)\n        }\n    }, [listener])\n\n    return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { api, CHAIN_TAG } from 'state/data/enhanced'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { supportedChainId } from 'utils/supportedChainId'\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { updateBlockNumber, updateChainId } from './actions'\n\nfunction useQueryCacheInvalidator() {\n    const chainId = useAppSelector((state) => state.application.chainId)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        dispatch(api.util.invalidateTags([CHAIN_TAG]))\n    }, [chainId, dispatch])\n}\n\nexport default function Updater(): null {\n    const { library, chainId } = useActiveWeb3React()\n    const dispatch = useAppDispatch()\n\n    const windowVisible = useIsWindowVisible()\n\n    const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n        chainId,\n        blockNumber: null\n    })\n\n    useQueryCacheInvalidator()\n\n    const blockNumberCallback = useCallback(\n        (blockNumber: number) => {\n            setState((state) => {\n                if (chainId === state.chainId) {\n                    if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n                    return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n                }\n                return state\n            })\n        },\n        [chainId, setState]\n    )\n\n    // attach/detach listeners\n    useEffect(() => {\n        if (!library || !chainId || !windowVisible) return undefined\n\n        setState({ chainId, blockNumber: null })\n\n        library\n            .getBlockNumber()\n            .then(blockNumberCallback)\n            .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n        library.on('block', blockNumberCallback)\n        return () => {\n            library.removeListener('block', blockNumberCallback)\n        }\n    }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n    const debouncedState = useDebounce(state, 100)\n\n    useEffect(() => {\n        if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n        dispatch(updateBlockNumber({\n            chainId: debouncedState.chainId,\n            blockNumber: debouncedState.blockNumber\n        }))\n    }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n    useEffect(() => {\n        dispatch(\n            updateChainId({ chainId: debouncedState.chainId ? supportedChainId(debouncedState.chainId) ?? null : null })\n        )\n    }, [dispatch, debouncedState.chainId])\n\n    return null\n}\n","export default function Updater(): null {\n    //TODO\n    // const { chainId, library } = useActiveWeb3React()\n    // const dispatch = useAppDispatch()\n    // const isWindowVisible = useIsWindowVisible()\n\n    // // get all loaded lists, and the active urls\n    // const lists = useAllLists()\n    // const activeListUrls = useActiveListUrls()\n\n    // const fetchList = useFetchListCallback()\n    // const fetchAllListsCallback = useCallback(() => {\n    //   if (!isWindowVisible) return\n    //   Object.keys(lists).forEach((url) =>\n    //     fetchList(url).catch((error) => console.debug('interval list fetching error', error))\n    //   )\n    // }, [fetchList, isWindowVisible, lists])\n\n    // useEffect(() => {\n    //   if (chainId && [SupportedChainId.OPTIMISM, SupportedChainId.OPTIMISTIC_KOVAN].includes(chainId)) {\n    //     dispatch(enableList(OPTIMISM_LIST))\n    //   }\n    // }, [chainId, dispatch])\n    // // fetch all lists every 10 minutes, but only after we initialize library\n    // useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n    // // whenever a list is not loaded and not loading, try again to load it\n    // useEffect(() => {\n    //   Object.keys(lists).forEach((listUrl) => {\n    //     const list = lists[listUrl]\n    //     if (!list.current && !list.loadingRequestId && !list.error) {\n    //       fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n    //     }\n    //   })\n    // }, [dispatch, fetchList, library, lists])\n\n    // // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n    // useEffect(() => {\n    //   UNSUPPORTED_LIST_URLS.forEach((listUrl) => {\n    //     const list = lists[listUrl]\n    //     if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n    //       fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n    //     }\n    //   })\n    // }, [dispatch, fetchList, library, lists])\n\n    // // automatically update lists if versions are minor/patch\n    // useEffect(() => {\n    //   Object.keys(lists).forEach((listUrl) => {\n    //     const list = lists[listUrl]\n    //     if (list.current && list.pendingUpdate) {\n    //       const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n    //       switch (bump) {\n    //         case VersionUpgrade.NONE:\n    //           throw new Error('unexpected no version bump')\n    //         case VersionUpgrade.PATCH:\n    //         case VersionUpgrade.MINOR:\n    //           const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n    //           // automatically update minor/patch as long as bump matches the min update\n    //           if (bump >= min) {\n    //             dispatch(acceptListUpdate(listUrl))\n    //           } else {\n    //             console.error(\n    //               `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n    //             )\n    //           }\n    //           break\n\n    //         // update any active or inactive lists\n    //         case VersionUpgrade.MAJOR:\n    //           dispatch(acceptListUpdate(listUrl))\n    //       }\n    //     }\n    //   })\n    // }, [dispatch, lists, activeListUrls])\n\n    return null\n}\n","const CONSERVATIVE_BLOCK_GAS_LIMIT = 10_000_000 // conservative, hard-coded estimate of the current block gas limit\nexport const DEFAULT_GAS_REQUIRED = 200_000 // the default value for calls that don't specify gasRequired\n\n// chunks array into chunks\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], gasLimit = CONSERVATIVE_BLOCK_GAS_LIMIT * 10): T[][] {\n    const chunks: T[][] = []\n    let currentChunk: T[] = []\n    let currentChunkCumulativeGas = 0\n\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n\n        // calculate the gas required by the current item\n        const gasRequired = (item as { gasRequired?: number })?.gasRequired ?? DEFAULT_GAS_REQUIRED\n\n        // if the current chunk is empty, or the current item wouldn't push it over the gas limit,\n        // append the current item and increment the cumulative gas\n        if (currentChunk.length === 0 || currentChunkCumulativeGas + gasRequired < gasLimit) {\n            currentChunk.push(item)\n            currentChunkCumulativeGas += gasRequired\n        } else {\n            // otherwise, push the current chunk and create a new chunk\n            chunks.push(currentChunk)\n            currentChunk = [item]\n            currentChunkCumulativeGas = gasRequired\n        }\n    }\n    if (currentChunk.length > 0) chunks.push(currentChunk)\n\n    return chunks\n}\n","function wait(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n    return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nclass CancelledError extends Error {\n    public isCancelledError: true = true\n\n    constructor() {\n        super('Cancelled')\n    }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {\n    public isRetryableError: true = true\n}\n\nexport interface RetryOptions {\n    n: number\n    minWait: number\n    maxWait: number\n}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n    fn: () => Promise<T>,\n    { n, minWait, maxWait }: RetryOptions\n): { promise: Promise<T>; cancel: () => void } {\n    let completed = false\n    let rejectCancelled: (error: Error) => void\n    const promise = new Promise<T>(async (resolve, reject) => {\n        rejectCancelled = reject\n        while (true) {\n            let result: T\n            try {\n                result = await fn()\n                if (!completed) {\n                    resolve(result)\n                    completed = true\n                }\n                break\n            } catch (error: any) {\n                if (completed) {\n                    break\n                }\n                if (n <= 0 || !error.isRetryableError) {\n                    reject(error)\n                    completed = true\n                    break\n                }\n                n--\n            }\n            await waitRandom(minWait, maxWait)\n        }\n    })\n    return {\n        promise,\n        cancel: () => {\n            if (completed) return\n            completed = true\n            rejectCancelled(new CancelledError())\n        }\n    }\n}\n","import { useEffect, useMemo, useRef } from \"react\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { useMulticall2Contract } from \"../../hooks/useContract\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport chunkArray from \"../../utils/chunkArray\";\nimport { retry, RetryableError } from \"../../utils/retry\";\nimport { useBlockNumber } from \"../application/hooks\";\nimport { AppState } from \"../index\";\nimport { errorFetchingMulticallResults, fetchingMulticallResults, updateMulticallResults } from \"./actions\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { Call, parseCallKey } from \"./utils\";\n\nconst DEFAULT_GAS_REQUIRED = 1_000_000;\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicall multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param blockNumber block number passed as the block tag in the eth_call\n */\nasync function fetchChunk(multicall: any, chunk: Call[], blockNumber: number): Promise<{ success: boolean; returnData: string }[]> {\n    // console.debug('Fetching chunk', chunk, blockNumber)\n    try {\n        const { returnData } = await multicall.callStatic.multicall(\n            chunk.map((obj) => ({\n                target: obj.address,\n                callData: obj.callData,\n                gasLimit: obj.gasRequired ?? DEFAULT_GAS_REQUIRED,\n            })),\n            { blockTag: blockNumber }\n        );\n\n        if (process.env.NODE_ENV === \"development\") {\n            returnData.forEach(({ gasUsed, returnData, success }, i: number) => {\n                if (!success && returnData.length === 2 && gasUsed.gte(Math.floor((chunk[i].gasRequired ?? DEFAULT_GAS_REQUIRED) * 0.95))) {\n                    console.warn(`A call failed due to requiring ${gasUsed.toString()} vs. allowed ${chunk[i].gasRequired ?? DEFAULT_GAS_REQUIRED}`, chunk[i]);\n                }\n            });\n        }\n\n        return returnData;\n    } catch (error: any) {\n        if (error.code === -32000 || error.message?.indexOf(\"header not found\") !== -1) {\n            throw new RetryableError(`header not found for block number ${blockNumber}`);\n        }\n        // console.error('Failed to fetch chunk', error)\n        throw error;\n    }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(allListeners: AppState[\"multicall\"][\"callListeners\"], chainId?: number): { [callKey: string]: number } {\n    if (!allListeners || !chainId) return {};\n    const listeners = allListeners[chainId];\n    if (!listeners) return {};\n\n    return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n        const keyListeners = listeners[callKey];\n\n        memo[callKey] = Object.keys(keyListeners)\n            .filter((key) => {\n                const blocksPerFetch = parseInt(key);\n                if (blocksPerFetch <= 0) return false;\n                return keyListeners[blocksPerFetch] > 0;\n            })\n            .reduce((previousMin, current) => {\n                return Math.min(previousMin, parseInt(current));\n            }, Infinity);\n        return memo;\n    }, {});\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n    callResults: AppState[\"multicall\"][\"callResults\"],\n    listeningKeys: { [callKey: string]: number },\n    chainId: number | undefined,\n    latestBlockNumber: number | undefined\n): string[] {\n    if (!chainId || !latestBlockNumber) return [];\n    const results = callResults[chainId];\n    // no results at all, load everything\n    if (!results) return Object.keys(listeningKeys);\n\n    return Object.keys(listeningKeys).filter((callKey) => {\n        const blocksPerFetch = listeningKeys[callKey];\n\n        const data = callResults[chainId][callKey];\n        // no data, must fetch\n        if (!data) return true;\n\n        const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1);\n\n        // already fetching it for a recent enough block, don't refetch it\n        if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false;\n\n        // if data is older than minDataBlockNumber, fetch it\n        return !data.blockNumber || data.blockNumber < minDataBlockNumber;\n    });\n}\n\nexport default function Updater(): null {\n    const dispatch = useAppDispatch();\n    const state = useAppSelector((state) => state.multicall);\n    // wait for listeners to settle before triggering updates\n    const debouncedListeners = useDebounce(state.callListeners, 100);\n    const latestBlockNumber = useBlockNumber();\n    const { chainId } = useActiveWeb3React();\n    const multicall2Contract = useMulticall2Contract();\n    const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>();\n\n    const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n        return activeListeningKeys(debouncedListeners, chainId);\n    }, [debouncedListeners, chainId]);\n\n    const unserializedOutdatedCallKeys = useMemo(() => {\n        return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber);\n    }, [chainId, state.callResults, listeningKeys, latestBlockNumber]);\n\n    const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [unserializedOutdatedCallKeys]);\n\n    useEffect(() => {\n        if (!latestBlockNumber || !chainId || !multicall2Contract) return;\n\n        const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys);\n        if (outdatedCallKeys.length === 0) return;\n        const calls = outdatedCallKeys.map((key) => parseCallKey(key));\n\n        const chunkedCalls = chunkArray(calls);\n\n        if (cancellations.current && cancellations.current.blockNumber !== latestBlockNumber) {\n            cancellations.current.cancellations.forEach((c) => c());\n        }\n\n        dispatch(\n            fetchingMulticallResults({\n                calls,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n            })\n        );\n\n        cancellations.current = {\n            blockNumber: latestBlockNumber,\n            cancellations: chunkedCalls.map((chunk, index) => {\n                const { cancel, promise } = retry(() => fetchChunk(multicall2Contract, chunk, latestBlockNumber), {\n                    n: Infinity,\n                    minWait: 1000,\n                    maxWait: 2500,\n                });\n                promise\n                    .then((returnData) => {\n                        // accumulates the length of all previous indices\n                        const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0);\n                        const lastCallKeyIndex = firstCallKeyIndex + returnData.length;\n\n                        const slice = outdatedCallKeys.slice(firstCallKeyIndex, lastCallKeyIndex);\n\n                        // split the returned slice into errors and success\n                        const { erroredCalls, results } = slice.reduce<{\n                            erroredCalls: Call[];\n                            results: { [callKey: string]: string | null };\n                        }>(\n                            (memo, callKey, i) => {\n                                if (returnData[i].success) {\n                                    memo.results[callKey] = returnData[i].returnData ?? null;\n                                } else {\n                                    memo.erroredCalls.push(parseCallKey(callKey));\n                                }\n                                return memo;\n                            },\n                            { erroredCalls: [], results: {} }\n                        );\n\n                        // dispatch any new results\n                        if (Object.keys(results).length > 0)\n                            dispatch(\n                                updateMulticallResults({\n                                    chainId,\n                                    results,\n                                    blockNumber: latestBlockNumber,\n                                })\n                            );\n\n                        // dispatch any errored calls\n                        if (erroredCalls.length > 0) {\n                            console.debug(\"Calls errored in fetch\", erroredCalls);\n                            dispatch(\n                                errorFetchingMulticallResults({\n                                    calls: erroredCalls,\n                                    chainId,\n                                    fetchingBlockNumber: latestBlockNumber,\n                                })\n                            );\n                        }\n                    })\n                    .catch((error: any) => {\n                        if (error.isCancelledError) {\n                            console.debug(\"Cancelled fetch for blockNumber\", latestBlockNumber, chunk, chainId);\n                            return;\n                        }\n                        // console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n                        dispatch(\n                            errorFetchingMulticallResults({\n                                calls: chunk,\n                                chainId,\n                                fetchingBlockNumber: latestBlockNumber,\n                            })\n                        );\n                    });\n                return cancel;\n            }),\n        };\n    }, [chainId, multicall2Contract, dispatch, serializedOutdatedCallKeys, latestBlockNumber]);\n\n    return null;\n}\n","import { useEffect, useMemo } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useBlockNumber } from '../application/hooks'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { fetchedLogs, fetchedLogsError, fetchingLogs } from './slice'\nimport { EventFilter, keyToFilter } from './utils'\n\nexport default function Updater(): null {\n    const dispatch = useAppDispatch()\n    const state = useAppSelector((state) => state.logs)\n    const { chainId, library } = useActiveWeb3React()\n\n    const blockNumber = useBlockNumber()\n\n    const filtersNeedFetch: EventFilter[] = useMemo(() => {\n        if (!chainId || typeof blockNumber !== 'number') return []\n\n        const active = state[chainId]\n        if (!active) return []\n\n        return Object.keys(active)\n            .filter((key) => {\n                const { fetchingBlockNumber, results, listeners } = active[key]\n                if (listeners === 0) return false\n                if (typeof fetchingBlockNumber === 'number' && fetchingBlockNumber >= blockNumber) return false\n                if (results && typeof results.blockNumber === 'number' && results.blockNumber >= blockNumber) return false\n                return true\n            })\n            .map((key) => keyToFilter(key))\n    }, [blockNumber, chainId, state])\n\n    useEffect(() => {\n        if (!library || !chainId || typeof blockNumber !== 'number' || filtersNeedFetch.length === 0) return\n\n        dispatch(fetchingLogs({ chainId, filters: filtersNeedFetch, blockNumber }))\n        filtersNeedFetch.forEach((filter) => {\n            library\n                .getLogs({\n                    ...filter,\n                    fromBlock: 0,\n                    toBlock: blockNumber\n                })\n                .then((logs) => {\n                    dispatch(\n                        fetchedLogs({\n                            chainId,\n                            filter,\n                            results: { logs, blockNumber }\n                        })\n                    )\n                })\n                .catch((error) => {\n                    console.error('Failed to get logs', filter, error)\n                    dispatch(\n                        fetchedLogsError({\n                            chainId,\n                            filter,\n                            blockNumber\n                        })\n                    )\n                })\n        })\n    }, [blockNumber, chainId, dispatch, filtersNeedFetch, library])\n\n    return null\n}\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { retry, RetryableError, RetryOptions } from '../../utils/retry'\nimport { updateBlockNumber } from '../application/actions'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\ninterface TxInterface {\n    addedTime: number\n    receipt?: Record<string, any>\n    lastCheckedBlockNumber?: number\n}\n\nexport function shouldCheck(lastBlockNumber: number, tx: TxInterface): boolean {\n    if (tx.receipt) return false\n    if (!tx.lastCheckedBlockNumber) return true\n    const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n    if (blocksSinceCheck < 1) return false\n    const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n    if (minutesPending > 60) {\n        // every 10 blocks if pending for longer than an hour\n        return blocksSinceCheck > 9\n    } else if (minutesPending > 5) {\n        // every 3 blocks if pending more than 5 minutes\n        return blocksSinceCheck > 2\n    } else {\n        // otherwise every block\n        return true\n    }\n}\n\nconst DEFAULT_RETRY_OPTIONS: RetryOptions = { n: 1, minWait: 0, maxWait: 0 }\n\nexport default function Updater(): null {\n    const { chainId, library } = useActiveWeb3React()\n\n    const lastBlockNumber = useBlockNumber()\n\n    const dispatch = useAppDispatch()\n    const state = useAppSelector((state) => state.transactions)\n\n    const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n    // show popup on confirm\n    const addPopup = useAddPopup()\n\n    const getReceipt = useCallback(\n        (hash: string) => {\n            if (!library || !chainId) throw new Error('No library or chainId')\n            return retry(\n                () =>\n                    library.getTransactionReceipt(hash).then((receipt) => {\n                        if (receipt === null) {\n                            console.debug('Retrying for hash', hash)\n                            throw new RetryableError()\n                        }\n                        return receipt\n                    }),\n                DEFAULT_RETRY_OPTIONS\n            )\n        },\n        [chainId, library]\n    )\n\n    useEffect(() => {\n        if (!chainId || !library || !lastBlockNumber) return\n\n        const cancels = Object.keys(transactions)\n            .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n            .map((hash) => {\n                const { promise, cancel } = getReceipt(hash)\n                promise\n                    .then((receipt) => {\n                        if (receipt) {\n                            dispatch(\n                                finalizeTransaction({\n                                    chainId,\n                                    hash,\n                                    receipt: {\n                                        blockHash: receipt.blockHash,\n                                        blockNumber: receipt.blockNumber,\n                                        contractAddress: receipt.contractAddress,\n                                        from: receipt.from,\n                                        status: receipt.status,\n                                        to: receipt.to,\n                                        transactionHash: receipt.transactionHash,\n                                        transactionIndex: receipt.transactionIndex\n                                    }\n                                })\n                            )\n\n                            addPopup(\n                                {\n                                    txn: {\n                                        hash,\n                                        success: receipt.status === 1,\n                                        summary: transactions[hash]?.summary\n                                    }\n                                },\n                                hash\n                            )\n\n                            // the receipt was fetched before the block, fast forward to that block to trigger balance updates\n                            if (receipt.blockNumber > lastBlockNumber) {\n                                dispatch(updateBlockNumber({\n                                    chainId,\n                                    blockNumber: receipt.blockNumber\n                                }))\n                            }\n                        } else {\n                            dispatch(checkedTransaction({\n                                chainId,\n                                hash,\n                                blockNumber: lastBlockNumber\n                            }))\n                        }\n                    })\n                    .catch((error) => {\n                        if (!error.isCancelledError) {\n                            // console.error(`Failed to check transaction hash: ${hash}`, error)\n                        }\n                    })\n                return cancel\n            })\n\n        return () => {\n            cancels.forEach((cancel) => cancel())\n        }\n    }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup, getReceipt])\n\n    return null\n}\n","import { useEffect } from 'react'\nimport { useAppDispatch } from 'state/hooks'\nimport { updateMatchesDarkMode } from './actions'\n\nexport default function Updater(): null {\n    const dispatch = useAppDispatch()\n\n    // keep dark mode in sync with the system\n    useEffect(() => {\n        const darkHandler = (match: MediaQueryListEvent) => {\n            dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n        }\n\n        const match = window?.matchMedia('(prefers-color-scheme: dark)')\n        dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n\n        if (match?.addListener) {\n            match?.addListener(darkHandler)\n        } else if (match?.addEventListener) {\n            match?.addEventListener('change', darkHandler)\n        }\n\n        return () => {\n            if (match?.removeListener) {\n                match?.removeListener(darkHandler)\n            } else if (match?.removeEventListener) {\n                match?.removeEventListener('change', darkHandler)\n            }\n        }\n    }, [dispatch])\n\n    return null\n}\n","import { useEffect } from 'react'\nimport { useGasPrice } from '../../hooks/useGasPrice'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { updateGasPrice } from './actions'\n\nimport AlgebraConfig from \"algebra.config\"\nimport { ChainId } from \"constants/addresses\"\n\nexport default function GasUpdater(): null {\n\n    const dispatch = useAppDispatch()\n\n    const { chainId } = useActiveWeb3React()\n\n    const block = useAppSelector((state) => {\n        return state.application.blockNumber[chainId ?? ChainId.BNB]\n    })\n\n    const { fetchGasPrice, gasPrice, gasPriceLoading } = useGasPrice()\n\n    useEffect(() => {\n        fetchGasPrice()\n    }, [dispatch, block])\n\n    useEffect(() => {\n        if (!gasPrice.fetched) return\n        dispatch(updateGasPrice(gasPrice))\n    }, [gasPrice, gasPriceLoading])\n\n    return null\n}\n","import { useState } from 'react'\n\nexport const GAS_PRICE_MULTIPLIER = 1_000_000_000\n\nexport function useGasPrice() {\n    const [gasPrice, setGasPrice] = useState<{ fetched: null | number, override: boolean }>({ fetched: null, override: false })\n    const [gasPriceLoading, setGasPriceLoading] = useState<boolean>(false)\n\n    async function fetchGasPrice() {\n\n        setGasPriceLoading(true)\n\n        try {\n            // const gasPriceReq = await fetch('https://gasstation-mainnet.matic.network/')\n            // const { standard } = await gasPriceReq.json()\n            setGasPrice({ fetched: 50, override: false })\n        } catch (err: any) {\n            console.error('Gas price fetching failed', err.code, err.message)\n        }\n        setGasPriceLoading(false)\n    }\n\n    return { fetchGasPrice, gasPrice, gasPriceLoading }\n}\n","import \"inter-ui\";\nimport \"@reach/dialog/styles.css\";\nimport \"./components/analytics\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport Blocklist from \"./components/Blocklist\";\nimport { NetworkContextName } from \"./constants/misc\";\nimport { LanguageProvider } from \"./i18n\";\nimport App from \"./pages/App\";\nimport store from \"./state\";\nimport ApplicationUpdater from \"./state/application/updater\";\nimport ListsUpdater from \"./state/lists/updater\";\nimport MulticallUpdater from \"./state/multicall/updater\";\nimport LogsUpdater from \"./state/logs/updater\";\nimport TransactionUpdater from \"./state/transactions/updater\";\nimport UserUpdater from \"./state/user/updater\";\nimport ThemeProvider, { ThemedGlobalStyle } from \"./theme\";\nimport getLibrary from \"./utils/getLibrary\";\nimport \"@fontsource/montserrat\";\nimport GasUpdater from \"./state/application/gasUpdater\";\nimport \"./assets/styles/index.scss\";\n\nimport AlgebraConfig from \"algebra.config\";\nimport { ChainId } from \"constants/addresses\";\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\ntype __window = Window & { ethereum: any };\n\nconst _window = window as unknown as __window;\n\nif (_window.ethereum) {\n    _window.ethereum.autoRefreshOnNetworkChange = false;\n}\n\nconst client = new ApolloClient({\n    uri: AlgebraConfig.SUBGRAPH[ChainId.BNB].infoURL,\n    cache: new InMemoryCache(),\n});\n\nfunction Updaters() {\n    return (\n        <>\n            <ListsUpdater />\n            <UserUpdater />\n            <ApplicationUpdater />\n            <TransactionUpdater />\n            <MulticallUpdater />\n            <LogsUpdater />\n            <GasUpdater />\n        </>\n    );\n}\n\nReactDOM.render(\n    <StrictMode>\n        <ApolloProvider client={client}>\n            <Provider store={store}>\n                <HashRouter>\n                    <LanguageProvider>\n                        <Web3ReactProvider getLibrary={getLibrary}>\n                            <Web3ProviderNetwork getLibrary={getLibrary}>\n                                <Blocklist>\n                                    <Updaters />\n                                    <ThemeProvider>\n                                        <ThemedGlobalStyle />\n                                        <App />\n                                    </ThemeProvider>\n                                </Blocklist>\n                            </Web3ProviderNetwork>\n                        </Web3ReactProvider>\n                    </LanguageProvider>\n                </HashRouter>\n            </Provider>\n        </ApolloProvider>\n    </StrictMode>,\n    document.getElementById(\"root\")\n);\n","import { gql } from '@apollo/client'\nimport { logDOM } from '@testing-library/react'\n\n//Farming\n\nexport const ONE_FARMING_EVENT = () => gql`\nquery limitFarm ($time: BigInt) {\n  limitFarmings (orderBy: createdAtTimestamp, orderDirection: desc, first: 1, where: {startTime_gt: $time, isDetached: false}) {\n    startTime,\n    endTime\n  }\n}\n`\n\nexport const ONE_ETERNAL_FARMING = () => gql`\n  query eternalFarm{\n    eternalFarmings (where: { isDetached: false }, first: 1) {\n      startTime\n      endTime\n    }\n  }\n`\n\nexport const FETCH_REWARDS = () => gql`\nquery fetchRewards ($account: Bytes) {\n    rewards(orderBy: amount, orderDirection: desc, where: {owner: $account}) {\n        id\n        rewardAddress\n        amount\n        owner\n    }\n}`\n\nexport const FETCH_TOKEN = () => gql`\nquery fetchToken ($tokenId: ID) {\n    tokens(where: { id: $tokenId}) {\n        id\n        symbol\n        name\n        decimals\n    }\n}`\n\nexport const FETCH_LIMIT = () => gql`\nquery fetchLimit($limitFarmingId: ID) {\n    limitFarmings(where: { id: $limitFarmingId}) {\n        id\n        rewardToken\n        bonusRewardToken\n        pool\n        startTime\n        endTime\n        reward\n        bonusReward\n        multiplierToken\n        createdAtTimestamp\n        tier1Multiplier\n        tier2Multiplier\n        tier3Multiplier\n        tokenAmountForTier1\n        tokenAmountForTier2\n        tokenAmountForTier3\n        enterStartTime\n        isDetached\n    }\n}`\n\nexport const FETCH_ETERNAL_FARM = () => gql`\n  query fetchEternalFarm ($farmId: ID) {\n    eternalFarmings (where: { id: $farmId}) {\n      id\n      rewardToken\n      bonusRewardToken\n      pool\n      startTime\n      endTime\n      reward\n      bonusReward\n      rewardRate\n      bonusRewardRate\n      isDetached\n      tier1Multiplier\n      tier2Multiplier\n      tier3Multiplier\n      tokenAmountForTier1\n      tokenAmountForTier2\n      tokenAmountForTier3\n      multiplierToken\n    }\n  }\n`\n\nexport const FETCH_ETERNAL_FARM_FROM_POOL = (pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n      query eternalFarmingsFromPools {\n        eternalFarmings(where: {pool_in: ${poolString}, isDetached: false}) {\n          id\n          rewardToken\n          bonusRewardToken\n          pool\n          startTime\n          endTime\n          reward\n          bonusReward\n          rewardRate\n          bonusRewardRate\n          isDetached\n        }\n      }\n      `\n  return gql(queryString)\n}\n\nexport const FETCH_LIMIT_FARM_FROM_POOL = (pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const now = Math.round(Date.now() / 1000)\n  const queryString =\n    `\n    query limitFarmingsFromPools {\n      limitFarmings(where: {pool_in: ${poolString}, isDetached: false, endTime_gt: ${now}}) {\n        id\n        createdAtTimestamp\n        rewardToken\n        bonusReward\n        bonusRewardToken\n        pool\n        startTime\n        endTime\n        reward\n        multiplierToken\n      }\n    }\n    `\n  return gql(queryString)\n}\n\nexport const FETCH_POOL = () => gql`\nquery fetchPool ($poolId: ID) {\n    pools(where: { id: $poolId}) {\n        id\n        fee\n        token0 {\n            id\n            decimals\n            symbol\n        }\n        token1 {\n            id\n            decimals\n            symbol\n        }\n        sqrtPrice\n        liquidity\n        tick\n        feesUSD\n        untrackedFeesUSD\n    }\n}`\n\nexport const CHART_FEE_POOL_DATA = () => gql`\n  query feeHourData ($pool: String, $startTimestamp: BigInt, $endTimestamp: BigInt) {\n    feeHourDatas (first: 1000, where: {pool: $pool, timestamp_gte: $startTimestamp, timestamp_lte: $endTimestamp}) {\n      id\n      pool\n      fee\n      changesCount\n      timestamp\n      minFee\n      maxFee\n      startFee\n      endFee\n    }\n  }\n`\n\nexport const CHART_FEE_LAST_ENTRY = () => gql`\n  query lastFeeHourData ($pool: String) {\n    feeHourDatas (first: 1, orderBy: timestamp, orderDirection: desc, where: { pool: $pool}) {\n      id\n      pool\n      fee\n      changesCount\n      timestamp\n      minFee\n      maxFee\n      startFee\n      endFee\n    }\n  }\n`\nexport const CHART_FEE_LAST_NOT_EMPTY = () => gql`\n  query lastNotEmptyHourData ($pool: String, $timestamp: BigInt) {\n    feeHourDatas (first: 1, orderBy: timestamp, orderDirection: desc, where: { pool: $pool, timestamp_lt: $timestamp}) {\n      id\n      pool\n      fee\n      changesCount\n      timestamp\n      minFee\n      maxFee\n      startFee\n      endFee\n    }\n  }\n`\n\nexport const CHART_POOL_LAST_NOT_EMPTY = () => gql`\n  query lastNotEmptyPoolHourData ($pool: String, $timestamp: Int) {\n    poolHourDatas (first: 1, orderBy: periodStartUnix, orderDirection: desc, where: { pool: $pool, periodStartUnix_lt: $timestamp}) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n      token1Price\n      token0Price\n    }\n  }\n`\n\nexport const CHART_POOL_LAST_ENTRY = () => gql`\nquery lastPoolHourData ($pool: String) {\n  poolHourDatas( first: 1, where: { pool: $pool}orderBy: periodStartUnix, orderDirection: desc) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n    }\n  }\n`\n\nexport const CHART_POOL_DATA = () => gql`\n  query poolHourData ($pool: String, $startTimestamp: Int, $endTimestamp: Int) {\n    poolHourDatas (\n      first: 1000\n      where: { pool: $pool, periodStartUnix_gte: $startTimestamp, periodStartUnix_lte: $endTimestamp }\n      orderBy: periodStartUnix\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      periodStartUnix\n      volumeUSD\n      tvlUSD\n      feesUSD\n      untrackedVolumeUSD\n      token0Price\n      token1Price\n    }\n  }\n`\n\nexport const TOTAL_STATS = (block?: number) => {\n  const qString = `\n  query totalStats {\n    factories ${block ? `(block: { number: ${block} })` : ''} {\n      totalVolumeUSD\n      untrackedVolumeUSD\n      totalValueLockedUSD\n      totalValueLockedUSDUntracked\n      txCount\n      totalFeesUSD\n    }\n  }\n`\n  return gql(qString)\n}\n\nexport const LAST_EVENT = () => gql`\nquery lastEvent {\n    limitFarmings (first: 1, orderDirection: desc, orderBy: createdAtTimestamp, where: { isDetached: false }) {\n        createdAtTimestamp\n        id\n        startTime\n        endTime\n      }\n }\n`\n\nexport const FUTURE_EVENTS = () => gql`\nquery futureEvents ($timestamp: BigInt) {\n    limitFarmings(orderBy: startTime, orderDirection: asc, where: { startTime_gt: $timestamp, isDetached: false}) {\n        id\n        createdAtTimestamp\n        rewardToken\n        bonusReward\n        bonusRewardToken\n        pool\n        startTime\n        endTime\n        reward\n        tier1Multiplier\n        tier2Multiplier\n        tier3Multiplier\n        tokenAmountForTier1\n        tokenAmountForTier2\n        tokenAmountForTier3\n        multiplierToken\n        enterStartTime\n        isDetached\n    }\n}`\n\nexport const CURRENT_EVENTS = () => gql`\nquery currentEvents ($startTime: BigInt, $endTime: BigInt) {\n    limitFarmings(orderBy: endTime, orderDirection: desc, where: { startTime_lte: $startTime, endTime_gt: $endTime, isDetached: false}) {\n        id\n        rewardToken\n        bonusReward\n        bonusRewardToken\n        pool\n        startTime\n        endTime\n        reward\n        tier1Multiplier\n        tier2Multiplier\n        tier3Multiplier\n        tokenAmountForTier1\n        tokenAmountForTier2\n        tokenAmountForTier3\n        enterStartTime\n        multiplierToken\n        isDetached\n    }\n}`\n\nexport const FETCH_FINITE_FARM_FROM_POOL = (pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n      query finiteFarmingsFromPools {\n        limitFarmings(where: {pool_in: ${poolString}, isDetached: false, endTime_gt: ${Math.round(Date.now() / 1000)}}) {\n          id\n          createdAtTimestamp\n          rewardToken\n          bonusReward\n          bonusRewardToken\n          pool\n          startTime\n          endTime\n          reward\n          multiplierToken\n          tokenAmountForTier1\n          tokenAmountForTier2\n          tokenAmountForTier3\n          tier1Multiplier\n          tier2Multiplier\n          tier3Multiplier\n          enterStartTime\n          isDetached\n        }\n      }\n      `\n  return gql(queryString)\n}\n\nexport const TRANSFERED_POSITIONS = (tierFarming: boolean) => gql`\n    query transferedPositions ($account: Bytes) {\n        deposits (orderBy: id, orderDirection: desc, where: {owner: $account, onFarmingCenter: true}) {\n            id\n            owner\n            pool\n            L2tokenId\n            limitFarming\n            eternalFarming\n            onFarmingCenter\n            ${tierFarming ? `\n              enteredInEternalFarming\n              tokensLockedEternal\n              tokensLockedLimit\n              tierLimit\n              tierEternal` : ''\n  }\n    }\n}\n`\n\nexport const HAS_TRANSFERED_POSITIONS = () => gql`\n    query hasTransferedPositions ($account: Bytes) {\n        deposits (first: 1, where: {owner: $account, onFarmingCenter: true}) {\n            id\n    }\n}\n`\n\nexport const POSITIONS_ON_ETERNAL_FARMING = () => gql`\n  query positionsOnEternalFarming ($account: Bytes) {\n    deposits (orderBy: id, orderDirection: desc, where: { owner: $account, onFarmingCenter: true, eternalFarming_not: null }) {\n      id\n      owner\n      pool\n      L2tokenId\n      eternalFarming\n      onFarmingCenter\n      enteredInEternalFarming\n    }\n  }\n`\n\nexport const TRANSFERED_POSITIONS_FOR_POOL = () => gql`\nquery transferedPositionsForPool ($account: Bytes, $pool: Bytes) {\n    deposits (orderBy: id, orderDirection: desc, where: {owner: $account, pool: $pool, liquidity_not: \"0\"}) {\n        id\n        owner\n        pool\n        L2tokenId\n        limitFarming\n        eternalFarming\n        onFarmingCenter\n        enteredInEternalFarming\n        tokensLockedLimit\n        tokensLockedEternal\n        tierLimit\n        tierEternal\n    }\n}`\n\n//Info\n\nexport const POSITIONS_ON_FARMING = () => gql`\n  query positionsOnFarming ($account: Bytes, $pool: Bytes) {\n        deposits (orderBy: id, orderDirection: desc, where: {owner: $account, pool: $pool, onFarmingCenter: true}) {\n            id\n    }\n}\n`\n\nexport const FULL_POSITIONS = (positions: string[], account: string | undefined, pool: string) => {\n  const query = `\n        query fullPositionsPriceRange {\n            q1 : positions (where: {owner: \"${account}\", pool: \"${pool}\"})\n            {\n              owner\n              liquidity\n              id\n              closed\n              transaction {\n                timestamp\n              }\n              tickLower {\n                price0\n                price1\n              }\n              tickUpper {\n                price0\n                price1\n              }\n              token0 {\n                decimals\n              }\n              token1 {\n                decimals\n              }\n              timestamps\n            }\n            q2: positions (where: {id_in: [${positions}] }) {\n              owner\n              liquidity\n              id\n              closed\n              transaction {\n                timestamp\n              }\n              tickLower {\n                price0\n                price1\n              }\n              tickUpper {\n                price0\n                price1\n              }\n               token0 {\n                decimals\n              }\n              token1 {\n                decimals\n              }\n              timestamps\n            }\n        }\n    `\n  return gql(query)\n}\n\n\nexport const INFINITE_EVENTS = gql`\n    query infiniteFarms {\n        eternalFarmings (where: {isDetached: false}) {\n            id\n            rewardToken\n            bonusRewardToken\n            pool\n            startTime\n            endTime\n            reward\n            bonusReward\n            rewardRate\n            bonusRewardRate\n            tokenAmountForTier1\n            tokenAmountForTier2\n            tokenAmountForTier3\n            tier1Multiplier\n            tier2Multiplier\n            tier3Multiplier\n            multiplierToken\n        }\n    }\n`\n\nexport const TOP_POOLS = gql`\nquery topPools {\n  pools(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n    id\n  }\n}\n`\n\nexport const POOLS_FROM_ADDRESSES = (blockNumber: undefined | number, pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n      query pools {\n        pools(where: {id_in: ${poolString}},` +\n    (blockNumber ? `block: {number: ${blockNumber}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n          id\n          fee\n          liquidity\n          sqrtPrice\n          tick\n          token0 {\n              id\n              symbol\n              name\n              decimals\n              derivedMatic\n          }\n          token1 {\n              id\n              symbol\n              name\n              decimals\n              derivedMatic\n          }\n          token0Price\n          token1Price\n          volumeUSD\n          txCount\n          totalValueLockedToken0\n          totalValueLockedToken1\n          totalValueLockedUSD\n          totalValueLockedUSDUntracked\n          untrackedVolumeUSD\n          feesUSD\n        }\n      }\n      `\n  return gql(queryString)\n}\n\n\nexport const TOP_TOKENS = gql`\n  query topTokens {\n    tokens(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }\n`\n\nexport const TOKENS_FROM_ADDRESSES = (blockNumber: number | undefined, tokens: string[]) => {\n  let tokenString = `[`\n  tokens.map((address) => {\n    return (tokenString += `\"${address}\",`)\n  })\n  tokenString += ']'\n  const queryString =\n    `\n      query tokens {\n        tokens(where: {id_in: ${tokenString}},` +\n    (blockNumber ? `block: {number: ${blockNumber}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n          id\n          symbol\n          name\n          derivedMatic\n          volumeUSD\n          volume\n          txCount\n          totalValueLocked\n          untrackedVolumeUSD\n          feesUSD\n          totalValueLockedUSD\n          totalValueLockedUSDUntracked\n        }\n      }\n      `\n\n  return gql(queryString)\n}\n\n//Blocklytics\n\nexport const GET_BLOCKS = (timestamps: string[]) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${timestamp + 600\n      } }) {\n          number\n        }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\n\n//Ticks\n\nexport const FETCH_TICKS = () => gql`\nquery surroundingTicks(\n  $poolAddress: String!\n  $tickIdxLowerBound: BigInt!\n  $tickIdxUpperBound: BigInt!\n  $skip: Int!\n) {\n  ticks(\n    subgraphError: allow\n    first: 1000\n    skip: $skip\n    where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n  ) {\n    tickIdx\n    liquidityGross\n    liquidityNet\n    price0\n    price1\n  }\n}\n`\n\n//Add Liquidity\n\nexport const FETCH_POPULAR_POOLS = () => gql`\nquery popularPools {\n pools (orderBy: totalValueLockedUSD, orderDirection: desc, first: 6) {\n    token0{\n      id\n    }\n    token1 {\n      id\n    }\n  }\n}\n`","import { MaxUint256 } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport { ONE, Q96, ZERO } from '../internalConstants'\nimport { FullMath } from './fullMath'\n\nconst MaxUint160 = JSBI.subtract(JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(160)), ONE)\n\nfunction multiplyIn256(x: JSBI, y: JSBI): JSBI {\n    const product = JSBI.multiply(x, y)\n    return JSBI.bitwiseAnd(product, MaxUint256)\n}\n\nfunction addIn256(x: JSBI, y: JSBI): JSBI {\n    const sum = JSBI.add(x, y)\n    return JSBI.bitwiseAnd(sum, MaxUint256)\n}\n\nexport abstract class SqrtPriceMath {\n    /**\n     * Cannot be constructed.\n     */\n\n    public static getAmount0Delta(sqrtRatioAX96: JSBI, sqrtRatioBX96: JSBI, liquidity: JSBI, roundUp: boolean): JSBI {\n        if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n            ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n        }\n\n        const numerator1 = JSBI.leftShift(liquidity, JSBI.BigInt(96))\n        const numerator2 = JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96)\n\n        return roundUp\n            ? FullMath.mulDivRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), ONE, sqrtRatioAX96)\n            : JSBI.divide(JSBI.divide(JSBI.multiply(numerator1, numerator2), sqrtRatioBX96), sqrtRatioAX96)\n    }\n\n    public static getAmount1Delta(sqrtRatioAX96: JSBI, sqrtRatioBX96: JSBI, liquidity: JSBI, roundUp: boolean): JSBI {\n        if (JSBI.greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n            ;[sqrtRatioAX96, sqrtRatioBX96] = [sqrtRatioBX96, sqrtRatioAX96]\n        }\n\n        return roundUp\n            ? FullMath.mulDivRoundingUp(liquidity, JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96), Q96)\n            : JSBI.divide(JSBI.multiply(liquidity, JSBI.subtract(sqrtRatioBX96, sqrtRatioAX96)), Q96)\n    }\n\n    public static getNextSqrtPriceFromInput(sqrtPX96: JSBI, liquidity: JSBI, amountIn: JSBI, zeroForOne: boolean): JSBI {\n        invariant(JSBI.greaterThan(sqrtPX96, ZERO))\n        invariant(JSBI.greaterThan(liquidity, ZERO))\n\n        return zeroForOne\n            ? this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true)\n            : this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true)\n    }\n\n    public static getNextSqrtPriceFromOutput(\n        sqrtPX96: JSBI,\n        liquidity: JSBI,\n        amountOut: JSBI,\n        zeroForOne: boolean\n    ): JSBI {\n        invariant(JSBI.greaterThan(sqrtPX96, ZERO))\n        invariant(JSBI.greaterThan(liquidity, ZERO))\n\n        return zeroForOne\n            ? this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false)\n            : this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false)\n    }\n\n    private static getNextSqrtPriceFromAmount0RoundingUp(\n        sqrtPX96: JSBI,\n        liquidity: JSBI,\n        amount: JSBI,\n        add: boolean\n    ): JSBI {\n        if (JSBI.equal(amount, ZERO)) return sqrtPX96\n        const numerator1 = JSBI.leftShift(liquidity, JSBI.BigInt(96))\n\n        if (add) {\n            const product = multiplyIn256(amount, sqrtPX96)\n            if (JSBI.equal(JSBI.divide(product, amount), sqrtPX96)) {\n                const denominator = addIn256(numerator1, product)\n                if (JSBI.greaterThanOrEqual(denominator, numerator1)) {\n                    return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator)\n                }\n            }\n\n            return FullMath.mulDivRoundingUp(numerator1, ONE, JSBI.add(JSBI.divide(numerator1, sqrtPX96), amount))\n        } else {\n            const product = multiplyIn256(amount, sqrtPX96)\n\n            invariant(JSBI.equal(JSBI.divide(product, amount), sqrtPX96))\n            invariant(JSBI.greaterThan(numerator1, product))\n            const denominator = JSBI.subtract(numerator1, product)\n            return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator)\n        }\n    }\n\n    private static getNextSqrtPriceFromAmount1RoundingDown(\n        sqrtPX96: JSBI,\n        liquidity: JSBI,\n        amount: JSBI,\n        add: boolean\n    ): JSBI {\n        if (add) {\n            const quotient = JSBI.lessThanOrEqual(amount, MaxUint160)\n                ? JSBI.divide(JSBI.leftShift(amount, JSBI.BigInt(96)), liquidity)\n                : JSBI.divide(JSBI.multiply(amount, Q96), liquidity)\n\n            return JSBI.add(sqrtPX96, quotient)\n        } else {\n            const quotient = FullMath.mulDivRoundingUp(amount, Q96, liquidity)\n\n            invariant(JSBI.greaterThan(sqrtPX96, quotient))\n            return JSBI.subtract(sqrtPX96, quotient)\n        }\n    }\n}\n","import { ThemeContext } from 'styled-components/macro'\nimport { useContext } from 'react'\n\nexport default function useTheme() {\n    return useContext(ThemeContext)\n}\n"],"sourceRoot":""}