{"version":3,"sources":["utils/formatTickPrice.ts","utils/formatCurrencyAmount.ts","components/RateToggle/index.tsx","hooks/useDerivedPositionInfo.ts","components/PositionPreview/index.tsx","pages/AddLiquidity/Review.tsx","pages/Pool/styleds.tsx","pages/AddLiquidity/styled.tsx","pages/AddLiquidity/index.tsx"],"names":["formatTickPrice","price","atLimit","direction","placeholder","Bound","LOWER","undefined","formatPrice","formatCurrencyAmount","amount","sigFigs","JSBI","equal","quotient","BigInt","divide","decimalScale","lessThan","Fraction","toSignificant","parseFloat","toFixed","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","isActive","toggle","checked","symbol","unchecked","useDerivedPositionInfo","positionDetails","currency0","useCurrency","token0","currency1","token1","usePool","pool","_position","Position","liquidity","toString","tickLower","tickUpper","position","PositionPreview","title","inRange","baseCurrencyDefault","ticksAtLimit","useContext","ThemeContext","unwrappedToken","useState","baseCurrency","setBaseCurrency","sorted","quoteCurrency","priceOf","priceLower","token0PriceLower","token0PriceUpper","invert","priceUpper","handleRateChange","useCallback","removed","gap","style","marginTop","className","size","margin","label","ml","fontSize","color","RangeBadge","Card","isDark","classes","Row","CurrencyLogo","currency","mr","amount0","amount1","fee","main","justify","mediumHeader","textAlign","small","UPPER","Review","outOfRange","loadingAnimation","keyframes","Dots","styled","div","Text","theme","button","mediaWidth","upToSmall","span","ResponsiveButtonPrimary","AutoColumn","upToMedium","RowBetween","RowFixed","ButtonPrimary","RowFixedStyled","upToExtraSmall","props","end","TYPE","canvas","img","Badge","RightContainer","BodyWrapper","wide","disabled","CurrencyInputPanel","centered","Input","MediumOnly","zIndex","HideMedium","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","AddLiquidity","match","params","currencyIdA","currencyIdB","tokenId","history","useActiveWeb3React","account","chainId","library","toggleWalletModal","useWalletModalToggle","expertMode","useIsExpertMode","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","useV3PositionFromTokenId","BigNumber","from","existingPositionDetails","positionLoading","loading","networkFailed","useIsNetworkFailed","hasExistingPosition","existingPosition","equals","useV3MintState","independentField","typedValue","useV3DerivedMintInfo","ticks","dependentField","pricesAtTicks","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","dynamicFee","useV3MintActionHandlers","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useUSDCValue","CURRENCY_B","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","equalTo","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalA","approveACallback","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","onAdd","useNative","isNative","NonFunPosMan","addCallParameters","slippageTolerance","recipient","createPool","calldata","value","txn","to","data","getSigner","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","summary","hash","ReactGA","event","category","action","join","catch","error","console","code","mustCreateSeparately","handleDismissConfirmation","push","showApprovalA","ApprovalState","APPROVED","showApprovalB","Buttons","NOT_APPROVED","PENDING","Button","onClick","background","width","fontWeight","TransactionConfirmationModal","isOpen","onDismiss","content","topContent","bottomContent","pendingText","creating","adding","positionID","defaultSlippage","showBackLink","onUserInput","onMax","toExact","showMaxButton","id","fiatValue","showCommonBases","locked","hideInput","shallow","showBalance","page","swap","SwitchLocaleLink"],"mappings":"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","file":"static/js/11.0c35c37d.chunk.js","sourcesContent":["import { Bound } from '../state/mint/v3/actions'\nimport { Price, Token } from '@uniswap/sdk-core'\nimport { formatPrice } from './formatCurrencyAmount'\n\nexport function formatTickPrice(\n    price: Price<Token, Token> | undefined,\n    atLimit: { [bound in Bound]?: boolean | undefined },\n    direction: Bound,\n    placeholder?: string\n) {\n\n    if (atLimit[direction]) {\n        return direction === Bound.LOWER ? '0' : '∞'\n    }\n\n    if (!price && placeholder !== undefined) {\n        return placeholder\n    }\n\n    return formatPrice(price, 5)\n}\n","import { Currency, CurrencyAmount, Fraction, Price } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nexport function formatCurrencyAmount(amount: CurrencyAmount<Currency> | undefined, sigFigs: number) {\n    if (!amount) {\n        return '-'\n    }\n\n    if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n        return '0'\n    }\n\n    if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n        return '<0.00001'\n    }\n\n    return amount.toSignificant(sigFigs)\n}\n\nexport function formatPrice(price: Price<Currency, Currency> | undefined, sigFigs: number) {\n    if (!price) {\n        return '-'\n    }\n\n    if (parseFloat(price.toFixed(sigFigs)) < 0.0001) {\n        return '<0.0001'\n    }\n\n    return price.toSignificant(sigFigs)\n}\n","import { Currency } from \"@uniswap/sdk-core\";\nimport Toggle from \"../Toggle\";\n\ninterface RateToggleProps {\n    currencyA: Currency;\n    currencyB: Currency;\n    handleRateToggle: () => void;\n}\n\nexport default function RateToggle({ currencyA, currencyB, handleRateToggle }: RateToggleProps) {\n    const tokenA = currencyA?.wrapped;\n    const tokenB = currencyB?.wrapped;\n\n    const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n\n    return tokenA && tokenB ? <Toggle isActive={isSorted} toggle={handleRateToggle} checked={isSorted ? tokenA.symbol : tokenB.symbol} unchecked={isSorted ? tokenB.symbol : tokenA.symbol} /> : null;\n}\n","import { Pool, Position } from 'lib/src'\nimport { usePool } from 'hooks/usePools'\nimport { useCurrency } from './Tokens'\nimport { PositionPool } from '../models/interfaces'\n\nexport function useDerivedPositionInfo(positionDetails: PositionPool | undefined): {\n    position: Position | undefined\n    pool: Pool | undefined\n} {\n    const currency0 = useCurrency(positionDetails?.token0)\n    const currency1 = useCurrency(positionDetails?.token1)\n\n    // construct pool data\n    const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined)\n\n    let _position: Position | undefined = undefined\n    if (pool && positionDetails) {\n        _position = new Position({\n            pool,\n            liquidity: positionDetails.liquidity.toString(),\n            tickLower: positionDetails.tickLower,\n            tickUpper: positionDetails.tickUpper\n        })\n    }\n\n    return {\n        position: _position,\n        pool: pool ?? undefined\n    }\n}\n","import { ReactNode, useCallback, useContext, useState } from \"react\";\nimport { Position } from \"lib/src\";\nimport { AutoColumn } from \"components/Column\";\nimport { TYPE } from \"theme\";\nimport { RowBetween, RowFixed } from \"components/Row\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nimport { Trans } from \"@lingui/macro\";\nimport { Currency } from \"@uniswap/sdk-core\";\nimport RateToggle from \"components/RateToggle\";\nimport DoubleCurrencyLogo from \"components/DoubleLogo\";\nimport RangeBadge from \"components/Badge/RangeBadge\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport JSBI from \"jsbi\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { formatTickPrice } from \"utils/formatTickPrice\";\nimport { RowFixedStyled } from \"./styled\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport Card from \"../../shared/components/Card/Card\";\n\ninterface PositionPreviewProps {\n    position: Position;\n    title?: ReactNode;\n    inRange: boolean;\n    baseCurrencyDefault?: Currency | undefined;\n    ticksAtLimit: { [bound: string]: boolean | undefined };\n}\n\nexport const PositionPreview = ({ position, title, inRange, baseCurrencyDefault, ticksAtLimit }: PositionPreviewProps) => {\n    const theme = useContext(ThemeContext);\n\n    const currency0 = unwrappedToken(position.pool.token0);\n    const currency1 = unwrappedToken(position.pool.token1);\n\n    // track which currency should be base\n    const [baseCurrency, setBaseCurrency] = useState(baseCurrencyDefault ? (baseCurrencyDefault === currency0 ? currency0 : baseCurrencyDefault === currency1 ? currency1 : currency0) : currency0);\n\n    const sorted = baseCurrency === currency0;\n    const quoteCurrency = sorted ? currency1 : currency0;\n\n    const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1);\n\n    const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert();\n    const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert();\n\n    const handleRateChange = useCallback(() => {\n        setBaseCurrency(quoteCurrency);\n    }, [quoteCurrency]);\n\n    const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0));\n\n    return (\n        <AutoColumn gap=\"md\" style={{ marginTop: \"0.5rem\" }}>\n            <div className={\"flex-s-between mb-05 mxs_fd-c\"}>\n                <div className={\"f f-ac mb-05 mxs_w-100 mxs_ml-2\"}>\n                    <DoubleCurrencyLogo currency0={currency0 ?? undefined} currency1={currency1 ?? undefined} size={24} margin={true} />\n                    <TYPE.label ml=\"10px\" fontSize=\"24px\" color={\"var(--text1)\"}>\n                        {currency0?.symbol} / {currency1?.symbol}\n                    </TYPE.label>\n                </div>\n                <div className={\"f mxs_w-100\"}>\n                    <RangeBadge removed={removed} inRange={inRange} />\n                </div>\n            </div>\n\n            <Card isDark={title === \"Selected Range\"} classes={\"p-1 br-12\"}>\n                <AutoColumn gap=\"md\">\n                    <RowBetween>\n                        <RowFixed>\n                            <CurrencyLogo currency={currency0 as WrappedCurrency} />\n                            <TYPE.label ml=\"8px\">{currency0?.symbol}</TYPE.label>\n                        </RowFixed>\n                        <RowFixed>\n                            <TYPE.label mr=\"8px\">{position.amount0.toSignificant(4)}</TYPE.label>\n                        </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                        <RowFixed>\n                            <CurrencyLogo currency={currency1 as WrappedCurrency} />\n                            <TYPE.label ml=\"8px\">{currency1?.symbol}</TYPE.label>\n                        </RowFixed>\n                        <RowFixed>\n                            <TYPE.label mr=\"8px\">{position.amount1.toSignificant(4)}</TYPE.label>\n                        </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                        <TYPE.label>\n                            <Trans>Fee</Trans>\n                        </TYPE.label>\n                        <TYPE.label>\n                            <Trans>{position?.pool?.fee / 10000}%</Trans>\n                        </TYPE.label>\n                    </RowBetween>\n                </AutoColumn>\n            </Card>\n\n            <AutoColumn gap=\"md\">\n                <RowBetween>\n                    {title ? <TYPE.main color={\"var(--text1)\"}>{title}</TYPE.main> : <div />}\n                    <RateToggle currencyA={sorted ? currency0 : currency1} currencyB={sorted ? currency1 : currency0} handleRateToggle={handleRateChange} />\n                </RowBetween>\n\n                <div className={\"flex-s-between cg-2 rg-1 mxs_fd-c\"}>\n                    <Card isDark={title === \"Selected Range\"} classes={\"p-1 br-12 w-100\"}>\n                        <AutoColumn gap=\"4px\" justify=\"center\">\n                            <TYPE.main fontSize=\"12px\">\n                                <Trans>Min Price</Trans>\n                            </TYPE.main>\n                            <TYPE.mediumHeader color={\"var(--text1)\"} textAlign=\"center\">{`${formatTickPrice(priceLower, ticksAtLimit, Bound.LOWER)}`}</TYPE.mediumHeader>\n                            <TYPE.main textAlign=\"center\" fontSize=\"12px\">\n                                <Trans>\n                                    {quoteCurrency.symbol} per {baseCurrency.symbol}\n                                </Trans>\n                            </TYPE.main>\n                            <TYPE.small textAlign=\"center\" color={\"var(--text3)\"} style={{ marginTop: \"4px\" }}>\n                                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\n                            </TYPE.small>\n                        </AutoColumn>\n                    </Card>\n\n                    <Card isDark={title === \"Selected Range\"} classes={\"p-1 br-12 w-100\"}>\n                        <AutoColumn gap=\"4px\" justify=\"center\">\n                            <TYPE.main fontSize=\"12px\">\n                                <Trans>Max Price</Trans>\n                            </TYPE.main>\n                            <TYPE.mediumHeader color={\"var(--text1)\"} textAlign=\"center\">{`${formatTickPrice(priceUpper, ticksAtLimit, Bound.UPPER)}`}</TYPE.mediumHeader>\n                            <TYPE.main textAlign=\"center\" fontSize=\"12px\">\n                                <Trans>\n                                    {quoteCurrency.symbol} per {baseCurrency.symbol}\n                                </Trans>\n                            </TYPE.main>\n                            <TYPE.small textAlign=\"center\" color={\"var(--text3)\"} style={{ marginTop: \"4px\" }}>\n                                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\n                            </TYPE.small>\n                        </AutoColumn>\n                    </Card>\n                </div>\n                <Card isDark={title === \"Selected Range\"} classes={\"p-1 br-12\"}>\n                    <AutoColumn gap=\"4px\" justify=\"center\">\n                        <TYPE.main fontSize=\"12px\">\n                            <Trans>Current price</Trans>\n                        </TYPE.main>\n                        <TYPE.mediumHeader color={\"var(--text1)\"}>{`${price.toSignificant(5)} `}</TYPE.mediumHeader>\n                        <TYPE.main textAlign=\"center\" fontSize=\"12px\">\n                            <Trans>\n                                {quoteCurrency.symbol} per {baseCurrency.symbol}\n                            </Trans>\n                        </TYPE.main>\n                    </AutoColumn>\n                </Card>\n            </AutoColumn>\n        </AutoColumn>\n    );\n};\n","import { Bound } from \"../../state/mint/v3/actions\";\nimport { AutoColumn } from \"components/Column\";\nimport { Position } from \"lib/src\";\nimport { PositionPreview } from \"components/PositionPreview\";\nimport { t } from \"@lingui/macro\";\n\ninterface ReviewProps {\n    position?: Position;\n    outOfRange: boolean;\n    ticksAtLimit: { [bound in Bound]?: boolean | undefined };\n}\n\nexport function Review({ position, outOfRange, ticksAtLimit }: ReviewProps) {\n    return (\n        <div className={\"pt-05\"}>\n            <AutoColumn gap=\"lg\">{position ? <PositionPreview position={position} inRange={!outOfRange} ticksAtLimit={ticksAtLimit} title={t`Selected Range`} /> : null}</AutoColumn>\n        </div>\n    );\n}\n","import { Text } from \"rebass\";\nimport styled, { keyframes } from \"styled-components/macro\";\nimport { AutoColumn } from \"../../components/Column\";\nimport { RowBetween, RowFixed } from \"../../components/Row\";\nimport { ButtonPrimary } from \"../../components/Button\";\nimport Badge from \"../../components/Badge\";\nimport { TYPE } from \"../../theme\";\n\nconst loadingAnimation = keyframes`\n    0% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0 50%;\n    }\n`;\nexport const Wrapper = styled.div`\n    position: relative;\n    padding: 20px;\n`;\nexport const ClickableText = styled(Text)`\n    :hover {\n        cursor: pointer;\n    }\n\n    color: ${({ theme }) => \"var(--primary1)\"};\n`;\nexport const MaxButton = styled.button<{ width?: string }>`\n    padding: 0.5rem 1rem;\n    background-color: ${({ theme }) => \"var(--primary4)\"};\n    border: 1px solid ${({ theme }) => \"var(--primary4)\"};\n    border-radius: 0.5rem;\n    font-size: 1rem;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n    font-weight: 500;\n    cursor: pointer;\n    margin: 0.25rem;\n    overflow: hidden;\n    color: ${({ theme }) => \"var(--primary1)\"};\n\n    :hover {\n        border: 1px solid ${({ theme }) => \"var(--primary1)\"};\n    }\n\n    :focus {\n        border: 1px solid ${({ theme }) => \"var(--primary1)\"};\n        outline: none;\n    }\n`;\nexport const Dots = styled.span`\n    &::after {\n        display: inline-block;\n        animation: ellipsis 1.25s infinite;\n        content: \".\";\n        width: 1em;\n        text-align: left;\n    }\n\n    @keyframes ellipsis {\n        0% {\n            content: \".\";\n        }\n        33% {\n            content: \"..\";\n        }\n        66% {\n            content: \"...\";\n        }\n    }\n`;\nexport const LoadingRows = styled.div`\n    display: grid;\n    min-width: 75%;\n    max-width: 960px;\n    grid-column-gap: 0.5em;\n    grid-row-gap: 0.8em;\n    grid-template-columns: repeat(3, 1fr);\n\n    & > div {\n        animation: ${loadingAnimation} 1.5s infinite;\n        animation-fill-mode: both;\n\n        background-size: 400%;\n        border-radius: 12px;\n        height: 2.4em;\n        will-change: background-position;\n    }\n\n    & > div:nth-child(4n + 1) {\n        grid-column: 1 / 3;\n    }\n\n    & > div:nth-child(4n) {\n        grid-column: 3 / 4;\n        margin-bottom: 2em;\n    }\n`;\n\n//index\nexport const PageWrapper = styled(AutoColumn)`\n    max-width: 870px;\n    margin: 5rem auto;\n    width: 100%;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    max-width: 800px;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    max-width: 500px;\n  `};\n`;\nexport const TitleRow = styled(RowBetween)`\n    color: ${({ theme }) => \"var(--text2)\"};\n    margin-top: 1rem;\n    padding: 1rem 2rem;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    padding: 1rem;\n  `};\n`;\nexport const ButtonRow = styled(RowFixed)`\n    & > *:not(:last-child) {\n        margin-left: 8px;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    flex-direction: column-reverse;\n\n    & > *:not(:last-child) {\n      margin-left: 0;\n      margin-top: 1rem;\n    }\n  `};\n`;\nexport const NoLiquidity = styled.div`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: auto;\n    max-width: 300px;\n    min-height: 25vh;\n`;\nexport const ResponsiveButtonPrimary = styled(ButtonPrimary)`\n    border-radius: 12px;\n    padding: 6px 8px;\n    width: fit-content;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex: 1 1 auto;\n    width: 100%;\n    margin: 0;\n  `};\n`;\nexport const MigrateButtonPrimary = styled(ResponsiveButtonPrimary)`\n    margin-right: 1rem;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin: 0;\n  `}\n`;\nexport const MainContentWrapper = styled.main`\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    color: white;\n    padding: 0 40px 30px;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n        padding: 1rem;\n    `}\n`;\nexport const FilterPanelWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: start;\n    gap: 2rem;\n    text-align: start;\n    padding-left: 2rem;\n    margin-bottom: 0.5rem;\n\n    label {\n        margin-bottom: 0.5rem;\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-content: center;\n    padding-left: unset;\n  `}\n`;\n\n//PositionPage\nexport const PositionPageWrapper = styled.div`\n    min-width: 800px;\n    max-width: 960px;\n    border-radius: 20px;\n    padding: 30px 40px;\n    margin-top: 5rem;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 680px;\n    max-width: 680px;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 100%;\n    max-width: 100%;\n    margin-top: 1rem;\n    padding: 30px 10px;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    min-width: 340px;\n    max-width: 340px;\n  `};\n`;\nexport const BadgeText = styled.div`\n    font-weight: 500;\n    font-size: 14px;\n`;\nexport const Label = styled(({ ...props }) => <TYPE.label {...props} />)<{ end?: boolean }>`\n    display: flex;\n    font-size: 16px;\n    justify-content: ${({ end }) => (end ? \"flex-end\" : \"flex-start\")};\n    align-items: center;\n`;\nexport const ExtentsText = styled.span`\n    color: ${({ theme }) => \"var(--text2)\"};\n    font-size: 14px;\n    text-align: center;\n    margin-right: 4px;\n    font-weight: 500;\n`;\nexport const HoverText = styled(TYPE.main)`\n    text-decoration: none;\n    color: white;\n\n    :hover {\n        color: ${({ theme }) => \"var(--text1)\"};\n        text-decoration: none;\n    }\n`;\nexport const DoubleArrow = styled.span`\n    color: ${({ theme }) => \"var(--text3)\"};\n    margin: 0 1rem;\n`;\nexport const ResponsiveRow = styled(RowBetween)`\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 16px;\n    width: 100%:\n  `};\n`;\nexport const PositionPageButtonPrimary = styled(ButtonPrimary)`\n    border-radius: 12px;\n    padding: 6px 8px;\n    width: fit-content;\n    margin-right: 8px;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex: 1 1 auto;\n  `};\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    margin-right: 0;\n     width: 49%;\n  `};\n`;\nexport const NFTGrid = styled.div`\n    display: grid;\n    grid-template: \"overlap\";\n    min-height: 400px;\n`;\nexport const NFTCanvas = styled.canvas`\n    grid-area: overlap;\n`;\nexport const NFTImage = styled.img`\n    grid-area: overlap;\n    height: 400px;\n    z-index: 1;\n`;\nexport const RowFixedStyled = styled(RowFixed)`\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n   width: 100%;\n    flex-direction: column;\n\n    & > * {\n      margin-bottom: 1rem;\n    }\n  `}\n`;\nexport const RowFixedStyledButtons = styled(RowFixedStyled)`\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    flex-direction: unset;\n    gap: .5rem;\n  `}\n`;\nexport const FeeBadge = styled(Badge)`\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n      margin-right: 0!important;\n      margin-top: 1rem;\n    `}\n`;\nexport const PriceRow = styled(RowBetween)`\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      flex-direction: column;\n    `}\n`;\nexport const LoadingMock = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n    width: 500px;\n    border-radius: 20px;\n    margin-top: 5rem;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n        width: 100%;\n        margin-top: 1rem;\n  `}\n`;\n\n//FilterPanelItem\nexport const FilterPanelItemWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    label {\n        ${({ theme }) => theme.mediaWidth.upToSmall`\n           text-align: center;\n        `}\n    }\n`;\n","import styled from \"styled-components/macro\";\nimport { AutoColumn } from \"components/Column\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport Input from \"components/NumericalInput\";\nimport { BodyWrapper } from \"pages/styled\";\n\nexport const PageWrapper = styled(BodyWrapper)<{ wide: boolean }>`\n    max-width: ${({ wide }) => (wide ? \"880px\" : \"480px\")};\n    width: 100%;\n\n    padding: ${({ wide }) => (wide ? \"30px 40px\" : \"0\")};\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    max-width: 480px;\n  `};\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    max-width: 100%!important;\n\n  `};\n`;\nexport const Wrapper = styled.div`\n    position: relative;\n    padding: 26px 16px;\n    min-width: 480px;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 400px;\n  `};\n\n    ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n  min-width: 340px;\n`};\n`;\nexport const ScrollablePage = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: 20px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    max-width: 480px;\n    margin: 0 auto;\n  `};\n`;\nexport const DynamicSection = styled(AutoColumn)<{ disabled?: boolean }>`\n    opacity: ${({ disabled }) => (disabled ? \"0.2\" : \"1\")};\n    pointer-events: ${({ disabled }) => (disabled ? \"none\" : \"initial\")};\n`;\nexport const CurrencyDropdown = styled(CurrencyInputPanel)<{ style?: any; pool?: string }>`\n    width: ${({ centered }) => (centered ? \"100%\" : \"50%\")};\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    width: 100%;\n  `}\n`;\nexport const StyledInput = styled(Input)`\n    background-color: ${({ theme }) => \"var(--bg0)\"};\n    text-align: left;\n    font-size: 18px;\n    width: 100%;\n`;\n\n/* two-column layout where DepositAmount is moved at the very end on mobile. */\nexport const ResponsiveTwoColumns = styled.div<{ wide: boolean }>`\n    display: grid;\n    grid-column-gap: 50px;\n    grid-row-gap: 15px;\n    grid-template-columns: ${({ wide }) => (wide ? \"1fr 1fr\" : \"1fr\")};\n    grid-template-rows: max-content;\n    grid-auto-flow: row;\n\n    padding-top: 20px;\n\n    border-top: 1px solid var(--border1);\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n\n    margin-top: 0;\n  `};\n`;\nexport const RightContainer = styled(AutoColumn)`\n    grid-row: 1 / 3;\n    grid-column: 2;\n    height: fit-content;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n  grid-row: 2 / 3;\n  grid-column: 1;\n  `};\n`;\nexport const StackedContainer = styled.div`\n    display: grid;\n`;\nexport const StackedItem = styled.div<{ zIndex?: number }>`\n    grid-column: 1;\n    grid-row: 1;\n    height: 100%;\n    z-index: ${({ zIndex }) => zIndex};\n`;\nexport const MediumOnly = styled.div`\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`;\nexport const HideMedium = styled.div`\n    display: none;\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: block;\n  `};\n`;\n\n//Review\nexport const ReviewWrapper = styled.div`\n    padding-top: 12px;\n`;\n","import { useCallback, useContext, useState } from \"react\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\nimport { Currency, CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { ZERO_PERCENT } from \"../../constants/misc\";\nimport { NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from \"../../constants/addresses\";\nimport { useV3NFTPositionManagerContract } from \"../../hooks/useContract\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components/macro\";\nimport { ButtonError, ButtonPrimary } from \"../../components/Button\";\nimport { AutoColumn } from \"../../components/Column\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"../../components/TransactionConfirmationModal\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport { RowBetween } from \"../../components/Row\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport { calculateGasMargin } from \"../../utils/calculateGasMargin\";\nimport { Review } from \"./Review\";\nimport { useActiveWeb3React } from \"../../hooks/web3\";\nimport { useCurrency } from \"../../hooks/Tokens\";\nimport { ApprovalState, useApproveCallback } from \"../../hooks/useApproveCallback\";\nimport useTransactionDeadline from \"../../hooks/useTransactionDeadline\";\nimport { useWalletModalToggle } from \"../../state/application/hooks\";\nimport { Bound, Field } from \"../../state/mint/v3/actions\";\nimport { useTransactionAdder } from \"../../state/transactions/hooks\";\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from \"../../state/user/hooks\";\nimport { TYPE } from \"../../theme\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport { Dots } from \"../Pool/styleds\";\nimport { HideMedium, MediumOnly, RightContainer } from \"./styled\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { useV3DerivedMintInfo, useV3MintActionHandlers, useV3MintState } from \"state/mint/v3/hooks\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { useDerivedPositionInfo } from \"hooks/useDerivedPositionInfo\";\nimport { PositionPreview } from \"components/PositionPreview\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport { NonfungiblePositionManager as NonFunPosMan } from \"../../lib/src/nonfungiblePositionManager\";\nimport \"./index.scss\";\n\nimport { useIsNetworkFailed } from \"../../hooks/useIsNetworkFailed\";\n\nimport ReactGA from \"react-ga\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport Card from \"../../shared/components/Card/Card\";\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000);\n\nexport default function AddLiquidity({\n    match: {\n        params: { currencyIdA, currencyIdB, tokenId },\n    },\n    history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string; feeAmount?: string; tokenId?: string }>) {\n    const { account, chainId, library } = useActiveWeb3React();\n    const theme = useContext(ThemeContext);\n    const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n    const expertMode = useIsExpertMode();\n    const addTransaction = useTransactionAdder();\n    const positionManager = useV3NFTPositionManagerContract();\n\n    // check for existing position if tokenId in url\n    const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(tokenId ? BigNumber.from(tokenId) : undefined);\n\n    const networkFailed = useIsNetworkFailed();\n\n    const hasExistingPosition = !!existingPositionDetails && !positionLoading;\n    const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails);\n    const feeAmount = 100;\n\n    const baseCurrency = useCurrency(currencyIdA);\n    const currencyB = useCurrency(currencyIdB);\n    // prevent an error if they input ETH/WETH\n    //TODO\n    const quoteCurrency = baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB;\n\n    // mint state\n    const { independentField, typedValue } = useV3MintState();\n\n    const {\n        ticks,\n        dependentField,\n        pricesAtTicks,\n        parsedAmounts,\n        currencyBalances,\n        position,\n        noLiquidity,\n        currencies,\n        errorMessage,\n        invalidPool,\n        invalidRange,\n        outOfRange,\n        depositADisabled,\n        depositBDisabled,\n        ticksAtLimit,\n        dynamicFee,\n    } = useV3DerivedMintInfo(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, baseCurrency ?? undefined, existingPosition);\n\n    const { onFieldAInput, onFieldBInput } = useV3MintActionHandlers(noLiquidity);\n\n    const isValid = !errorMessage && !invalidRange;\n\n    // modal and loading\n    const [showConfirm, setShowConfirm] = useState<boolean>(false);\n    const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false); // clicked confirm\n\n    // txn values\n    const deadline = useTransactionDeadline(); // custom from users settings\n\n    const [txHash, setTxHash] = useState<string>(\"\");\n\n    // get formatted amounts\n    const formattedAmounts = {\n        [independentField]: typedValue,\n        [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? \"\",\n    };\n\n    const usdcValues = {\n        [Field.CURRENCY_A]: useUSDCValue(parsedAmounts[Field.CURRENCY_A]),\n        [Field.CURRENCY_B]: useUSDCValue(parsedAmounts[Field.CURRENCY_B]),\n    };\n\n    // get the max amounts user can add\n    const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n        return {\n            ...accumulator,\n            [field]: maxAmountSpend(currencyBalances[field]),\n        };\n    }, {});\n\n    const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n        return {\n            ...accumulator,\n            [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? \"0\"),\n        };\n    }, {});\n\n    // check whether the user has approved the router on the tokens\n    const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n    const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n\n    const allowedSlippage = useUserSlippageToleranceWithDefault(outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE);\n\n    async function onAdd() {\n        if (!chainId || !library || !account) return;\n\n        if (!positionManager || !baseCurrency || !quoteCurrency) {\n            return;\n        }\n\n        if (position && account && deadline) {\n            const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined;\n\n            const { calldata, value } =\n                hasExistingPosition && tokenId\n                    ? NonFunPosMan.addCallParameters(position, {\n                          tokenId,\n                          slippageTolerance: allowedSlippage,\n                          deadline: deadline.toString(),\n                          useNative,\n                      })\n                    : NonFunPosMan.addCallParameters(position, {\n                          slippageTolerance: allowedSlippage,\n                          recipient: account,\n                          deadline: deadline.toString(),\n                          useNative,\n                          createPool: noLiquidity,\n                      });\n\n            const txn: { to: string; data: string; value: string } = { to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId], data: calldata, value };\n\n            setAttemptingTxn(true);\n\n            library\n                .getSigner()\n                .estimateGas(txn)\n                .then((estimate) => {\n                    const newTxn = {\n                        ...txn,\n                        gasLimit: calculateGasMargin(chainId, estimate),\n                    };\n\n                    return library\n                        .getSigner()\n                        .sendTransaction(newTxn)\n                        .then((response: TransactionResponse) => {\n                            setAttemptingTxn(false);\n                            addTransaction(response, {\n                                summary: noLiquidity\n                                    ? t`Create pool and add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`\n                                    : t`Add ${baseCurrency?.symbol}/${quoteCurrency?.symbol} liquidity`,\n                            });\n                            setTxHash(response.hash);\n                            ReactGA.event({\n                                category: \"Liquidity\",\n                                action: \"Add\",\n                                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join(\"/\"),\n                            });\n                        });\n                })\n                .catch((error) => {\n                    console.error(\"Failed to send transaction\", error);\n                    setAttemptingTxn(false);\n                    // we only care if the error is something _other_ than the user rejected the tx\n                    if (error?.code !== 4001) {\n                        console.error(error);\n                    }\n                });\n        } else {\n            return;\n        }\n    }\n\n    // flag for whether pool creation must be a separate tx\n    const mustCreateSeparately = noLiquidity;\n\n    const handleDismissConfirmation = useCallback(() => {\n        setShowConfirm(false);\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            onFieldAInput(\"\");\n            // dont jump to pool page if creating\n            if (!mustCreateSeparately) {\n                history.push(\"/pool\");\n            }\n        }\n        setTxHash(\"\");\n    }, [history, mustCreateSeparately, onFieldAInput, txHash]);\n\n    // get value and prices at ticks\n    const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks;\n    const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks;\n\n    // we need an existence check on parsed amounts for single-asset deposits\n    const showApprovalA = approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A];\n    const showApprovalB = approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B];\n\n    const pendingText = \"Loading...\";\n\n    const Buttons = () =>\n        !account ? (\n            <button className={\"btn primary pv-1 br-12 b\"} onClick={toggleWalletModal}>\n                <Trans>Connect wallet</Trans>\n            </button>\n        ) : (\n            <AutoColumn gap={\"md\"}>\n                {(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && (\n                    <RowBetween>\n                        {showApprovalA && (\n                            <ButtonPrimary\n                                onClick={approveACallback}\n                                style={{ color: \"white\", background: \"var(--primary)\" }}\n                                disabled={approvalA === ApprovalState.PENDING}\n                                width={showApprovalB ? \"48%\" : \"100%\"}\n                            >\n                                {approvalA === ApprovalState.PENDING ? (\n                                    <Dots>\n                                        <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                                    </Dots>\n                                ) : (\n                                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                                )}\n                            </ButtonPrimary>\n                        )}\n                        {showApprovalB && (\n                            <ButtonPrimary\n                                onClick={approveBCallback}\n                                style={{ color: \"white\", background: \"var(--primary)\" }}\n                                disabled={approvalB === ApprovalState.PENDING}\n                                width={showApprovalA ? \"48%\" : \"100%\"}\n                            >\n                                {approvalB === ApprovalState.PENDING ? (\n                                    <Dots>\n                                        <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                                    </Dots>\n                                ) : (\n                                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                                )}\n                            </ButtonPrimary>\n                        )}\n                    </RowBetween>\n                )}\n                {mustCreateSeparately && (\n                    <ButtonError disabled={!isValid || attemptingTxn || !position}>\n                        {attemptingTxn ? (\n                            <Dots>\n                                <Trans>Confirm Create</Trans>\n                            </Dots>\n                        ) : (\n                            <Text fontWeight={500}>{errorMessage ? errorMessage : <Trans>Create</Trans>}</Text>\n                        )}\n                    </ButtonError>\n                )}\n                <button\n                    className={\"btn primary pv-1 br-12 b\"}\n                    onClick={() => (expertMode ? onAdd() : setShowConfirm(true))}\n                    disabled={mustCreateSeparately || !isValid || (approvalA !== ApprovalState.APPROVED && !depositADisabled) || (approvalB !== ApprovalState.APPROVED && !depositBDisabled)}\n                    // error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                    <Text fontWeight={500}>{mustCreateSeparately ? <Trans>Add</Trans> : errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n                </button>\n            </AutoColumn>\n        );\n\n    return (\n        <div className={\"maw-765 mh-a\"}>\n            <TransactionConfirmationModal\n                isOpen={showConfirm}\n                onDismiss={handleDismissConfirmation}\n                attemptingTxn={attemptingTxn}\n                hash={txHash}\n                content={() => (\n                    <ConfirmationModalContent\n                        title={t`Increase Liquidity`}\n                        onDismiss={handleDismissConfirmation}\n                        topContent={() => <Review position={position} outOfRange={outOfRange} ticksAtLimit={ticksAtLimit} />}\n                        bottomContent={() => (\n                            <ButtonPrimary style={{ marginTop: \"1rem\", color: \"white\" }} onClick={onAdd}>\n                                <Text fontWeight={500} fontSize={20}>\n                                    <Trans>Add</Trans>\n                                </Text>\n                            </ButtonPrimary>\n                        )}\n                    />\n                )}\n                pendingText={pendingText}\n            />\n            <Card classes={\"p-2 br-24\"}>\n                <AddRemoveTabs creating={false} adding={true} positionID={tokenId} defaultSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE} showBackLink={!hasExistingPosition} />\n                <div className={\"add-liquidity pt-1 mt-1\"} data-wide={!hasExistingPosition && !networkFailed}>\n                    <AutoColumn gap=\"lg\">\n                        {hasExistingPosition && existingPosition && (\n                            <PositionPreview position={existingPosition} title={<Trans>Selected Range</Trans>} inRange={!outOfRange} ticksAtLimit={ticksAtLimit} />\n                        )}\n                    </AutoColumn>\n                    <Card isDark={false} classes={\"add-liquidity__bottom p-1 br-12\"} data-disabled={tickLower === undefined || tickUpper === undefined || invalidPool || invalidRange}>\n                        <TYPE.label>{hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit Amounts</Trans>}</TYPE.label>\n\n                        <CurrencyInputPanel\n                            value={formattedAmounts[Field.CURRENCY_A]}\n                            onUserInput={onFieldAInput}\n                            onMax={() => {\n                                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\");\n                            }}\n                            showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                            currency={currencies[Field.CURRENCY_A] as WrappedCurrency}\n                            id=\"add-liquidity-input-tokena\"\n                            fiatValue={usdcValues[Field.CURRENCY_A]}\n                            showCommonBases\n                            locked={depositADisabled}\n                            hideInput={depositADisabled}\n                            shallow={true}\n                            showBalance={!depositADisabled}\n                            page={\"addLiq\"}\n                            disabled={false}\n                            swap={false}\n                        />\n\n                        <CurrencyInputPanel\n                            value={formattedAmounts[Field.CURRENCY_B]}\n                            onUserInput={onFieldBInput}\n                            onMax={() => {\n                                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\");\n                            }}\n                            showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                            fiatValue={usdcValues[Field.CURRENCY_B]}\n                            currency={currencies[Field.CURRENCY_B] as WrappedCurrency}\n                            id=\"add-liquidity-input-tokenb\"\n                            showCommonBases\n                            locked={depositBDisabled}\n                            hideInput={depositBDisabled}\n                            showBalance={!depositBDisabled}\n                            shallow={true}\n                            page={\"addLiq\"}\n                            disabled={false}\n                            swap={false}\n                        />\n                    </Card>\n                    {!hasExistingPosition ? (\n                        <>\n                            <HideMedium>\n                                <Buttons />\n                            </HideMedium>\n                            <RightContainer gap=\"lg\">\n                                <MediumOnly>\n                                    <Buttons />\n                                </MediumOnly>\n                            </RightContainer>\n                        </>\n                    ) : (\n                        <Buttons />\n                    )}\n                </div>\n            </Card>\n            <SwitchLocaleLink />\n        </div>\n    );\n}\n"],"sourceRoot":""}