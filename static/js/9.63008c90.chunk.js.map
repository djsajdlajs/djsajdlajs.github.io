{"version":3,"sources":["utils/formatTickPrice.ts","utils/formatCurrencyAmount.ts","shared/components/AutoColumn/index.tsx","hooks/useIsTickAtLimit.ts","components/RateToggle/index.tsx","hooks/useDerivedPositionInfo.ts","components/PositionListItem/index.tsx","../node_modules/react-feather/dist/icons/arrow-right.js","pages/Pool/LinkedCurrency.tsx","pages/Pool/CurrentPriceCard.tsx","pages/Pool/PositionPage.tsx","hooks/useInverter.ts","utils/getRatio.ts"],"names":["formatTickPrice","price","atLimit","direction","placeholder","Bound","LOWER","undefined","formatPrice","formatCurrencyAmount","amount","sigFigs","JSBI","equal","quotient","BigInt","divide","decimalScale","lessThan","Fraction","toSignificant","parseFloat","toFixed","AutoColumn","children","gap","justify","className","useIsTickAtLimit","tickLower","tickUpper","useMemo","nearestUsableTick","TickMath","MIN_TICK","UPPER","MAX_TICK","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","isActive","toggle","checked","symbol","unchecked","useDerivedPositionInfo","positionDetails","currency0","useCurrency","token0","currency1","token1","usePool","pool","_position","Position","liquidity","toString","position","getPriceOrderingFromPositionForUI","amount0","currency","amount1","STABLE_TOKENS_BNB","STABLE_TOKENS_PULSE","some","stable","equals","Object","values","WMATIC_EXTENDED","base","token0PriceUpper","priceLower","invert","priceUpper","token0PriceLower","quote","PositionListItem","newestPosition","highlightNewest","dispatch","useAppDispatch","prevPositionDetails","usePrevious","_token0Address","_token1Address","_liquidity","_tickLower","_tickUpper","_onFarming","onFarming","useToken","unwrappedToken","prevPool","_pool","tickAtLimit","currencyQuote","currencyBase","outOfRange","tickCurrent","positionSummaryLink","tokenId","farmingLink","isNewest","removed","eq","useEffect","setShowNewestPosition","showNewestPosition","document","querySelector","scrollIntoView","behavior","to","id","isDark","classes","size","margin","color","style","marginLeft","inRange","stroke","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","width","height","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","displayName","LinkedCurrency","chainId","address","href","getExplorerLink","ExplorerDataType","TOKEN","Row","CurrencyLogo","marginRight","main","CurrentPriceCard","inverted","Card","token1Price","token0Price","PositionPage","tokenIdFromUrl","match","params","useActiveWeb3React","account","library","query","search","useLocation","URLSearchParams","useQuery","isOnFarming","get","parsedTokenId","BigNumber","from","useV3PositionFromTokenId","loading","existingPosition","useAppSelector","state","application","gasPrice","fetched","override","useState","receiveWETH","setReceiveWETH","poolState","prevPoolState","_poolState","pricesFromPosition","manuallyInverted","setManuallyInverted","useInverter","ratio","lower","current","upper","greaterThan","a","Number","b","c","Math","floor","sqrt","Error","getRatio","useV3PositionFees","feeValue0","feeValue1","collecting","setCollecting","collectMigrationHash","setCollectMigrationHash","isCollectPending","useIsTransactionPending","price0","useUSDCPrice","price1","fiatValueOfFees","feeValue0Wrapped","feeValue1Wrapped","add","prevFiatValueOfFees","_fiatValueOfFees","fiatValueOfLiquidity","prevFiatValueOfLiquidity","_fiatValueOfLiquidity","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","collect","useCallback","collectAddress","FARMING_CENTER","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","NonfungiblePositionManager","collectCallParameters","expectedCurrencyOwed0","expectedCurrencyOwed1","recipient","txn","data","calldata","value","getSigner","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","hash","ReactGA","event","category","action","label","join","summary","catch","error","console","ownsNFT","useSingleCallResult","result","operator","feeValueUpper","feeValueLower","below","above","showCollectAsWeth","Boolean","isNative","PoolState","LOADING","Loader","text","Badge","Percent","fee","RangeBadge","currencyId","groupSeparator","disabled","onClick","Toggle","SwitchLocaleLink"],"mappings":"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","file":"static/js/9.63008c90.chunk.js","sourcesContent":["import { Bound } from '../state/mint/v3/actions'\nimport { Price, Token } from '@uniswap/sdk-core'\nimport { formatPrice } from './formatCurrencyAmount'\n\nexport function formatTickPrice(\n    price: Price<Token, Token> | undefined,\n    atLimit: { [bound in Bound]?: boolean | undefined },\n    direction: Bound,\n    placeholder?: string\n) {\n\n    if (atLimit[direction]) {\n        return direction === Bound.LOWER ? '0' : '∞'\n    }\n\n    if (!price && placeholder !== undefined) {\n        return placeholder\n    }\n\n    return formatPrice(price, 5)\n}\n","import { Currency, CurrencyAmount, Fraction, Price } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nexport function formatCurrencyAmount(amount: CurrencyAmount<Currency> | undefined, sigFigs: number) {\n    if (!amount) {\n        return '-'\n    }\n\n    if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n        return '0'\n    }\n\n    if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n        return '<0.00001'\n    }\n\n    return amount.toSignificant(sigFigs)\n}\n\nexport function formatPrice(price: Price<Currency, Currency> | undefined, sigFigs: number) {\n    if (!price) {\n        return '-'\n    }\n\n    if (parseFloat(price.toFixed(sigFigs)) < 0.0001) {\n        return '<0.0001'\n    }\n\n    return price.toSignificant(sigFigs)\n}\n","import React from \"react\";\nimport \"./index.scss\";\n\ninterface AutoColumnProps {\n    children?: any;\n    gap?: \"0\" | \"1\" | \"2\" | \"3\";\n    justify?: \"stretch\" | \"center\" | \"start\" | \"end\" | \"flex-start\" | \"flex-end\" | \"space-between\";\n}\n\nconst AutoColumn = ({ children, gap, justify }: AutoColumnProps) => {\n    return <div className={`auto-column-wrapper ${gap && `rg-${gap}`}`}>{children}</div>;\n};\n\nexport default AutoColumn;\n","import { nearestUsableTick, TickMath } from 'lib/src'\nimport { useMemo } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nexport default function useIsTickAtLimit(\n    tickLower: number | undefined,\n    tickUpper: number | undefined\n) {\n    return useMemo(\n        () => ({\n            [Bound.LOWER]:\n                tickLower\n                    // ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n                    ? tickLower === nearestUsableTick(TickMath.MIN_TICK, 60)\n                    : undefined,\n            [Bound.UPPER]:\n                tickUpper\n                    // ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n                    ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, 60)\n                    : undefined\n        }),\n        [tickLower, tickUpper]\n    )\n}\n","import { Currency } from \"@uniswap/sdk-core\";\nimport Toggle from \"../Toggle\";\n\ninterface RateToggleProps {\n    currencyA: Currency;\n    currencyB: Currency;\n    handleRateToggle: () => void;\n}\n\nexport default function RateToggle({ currencyA, currencyB, handleRateToggle }: RateToggleProps) {\n    const tokenA = currencyA?.wrapped;\n    const tokenB = currencyB?.wrapped;\n\n    const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n\n    return tokenA && tokenB ? <Toggle isActive={isSorted} toggle={handleRateToggle} checked={isSorted ? tokenA.symbol : tokenB.symbol} unchecked={isSorted ? tokenB.symbol : tokenA.symbol} /> : null;\n}\n","import { Pool, Position } from 'lib/src'\nimport { usePool } from 'hooks/usePools'\nimport { useCurrency } from './Tokens'\nimport { PositionPool } from '../models/interfaces'\n\nexport function useDerivedPositionInfo(positionDetails: PositionPool | undefined): {\n    position: Position | undefined\n    pool: Pool | undefined\n} {\n    const currency0 = useCurrency(positionDetails?.token0)\n    const currency1 = useCurrency(positionDetails?.token1)\n\n    // construct pool data\n    const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined)\n\n    let _position: Position | undefined = undefined\n    if (pool && positionDetails) {\n        _position = new Position({\n            pool,\n            liquidity: positionDetails.liquidity.toString(),\n            tickLower: positionDetails.tickLower,\n            tickUpper: positionDetails.tickUpper\n        })\n    }\n\n    return {\n        position: _position,\n        pool: pool ?? undefined\n    }\n}\n","import { useEffect, useMemo } from \"react\";\nimport { Position } from \"lib/src\";\nimport DoubleCurrencyLogo from \"components/DoubleLogo\";\nimport { usePool } from \"hooks/usePools\";\nimport { useToken } from \"hooks/Tokens\";\nimport { Price, Token } from \"@uniswap/sdk-core\";\nimport { formatTickPrice } from \"utils/formatTickPrice\";\nimport Loader from \"components/Loader\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nimport { STABLE_TOKENS_BNB, STABLE_TOKENS_PULSE, WMATIC_EXTENDED } from \"../../constants/tokens\";\nimport { Trans } from \"@lingui/macro\";\nimport useIsTickAtLimit from \"hooks/useIsTickAtLimit\";\nimport { Bound, setShowNewestPosition } from \"state/mint/v3/actions\";\nimport { ArrowRight } from \"react-feather\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { PositionPool } from \"../../models/interfaces\";\nimport { NavLink } from \"react-router-dom\";\nimport Card from \"../../shared/components/Card/Card\";\nimport RangeBadge from \"../Badge/RangeBadge\";\nimport \"./index.scss\";\nimport { useAppDispatch } from \"state/hooks\";\n\ninterface PositionListItemProps {\n    positionDetails: PositionPool;\n    newestPosition?: number | undefined;\n    highlightNewest?: boolean;\n}\n\nexport function getPriceOrderingFromPositionForUI(position?: Position): {\n    priceLower?: Price<Token, Token>;\n    priceUpper?: Price<Token, Token>;\n    quote?: Token;\n    base?: Token;\n} {\n    if (!position) {\n        return {};\n    }\n\n    const token0 = position.amount0.currency;\n    const token1 = position.amount1.currency;\n\n    // if token0 is a dollar-stable asset, set it as the quote token\n    const stables = [...STABLE_TOKENS_BNB, ...STABLE_TOKENS_PULSE];\n    if (stables.some((stable) => stable.equals(token0))) {\n        return {\n            priceLower: position.token0PriceUpper.invert(),\n            priceUpper: position.token0PriceLower.invert(),\n            quote: token0,\n            base: token1,\n        };\n    }\n\n    // if token1 is an ETH-/BTC-stable asset, set it as the base token\n    //TODO\n    // const bases = [...Object.values(WMATIC_EXTENDED), WBTC]\n    const bases = [...Object.values(WMATIC_EXTENDED)];\n    if (bases.some((base) => base.equals(token1))) {\n        return {\n            priceLower: position.token0PriceUpper.invert(),\n            priceUpper: position.token0PriceLower.invert(),\n            quote: token0,\n            base: token1,\n        };\n    }\n\n    // if both prices are below 1, invert\n    if (position.token0PriceUpper.lessThan(1)) {\n        return {\n            priceLower: position.token0PriceUpper.invert(),\n            priceUpper: position.token0PriceLower.invert(),\n            quote: token0,\n            base: token1,\n        };\n    }\n\n    // otherwise, just return the default\n    return {\n        priceLower: position.token0PriceLower,\n        priceUpper: position.token0PriceUpper,\n        quote: token1,\n        base: token0,\n    };\n}\n\nexport default function PositionListItem({ positionDetails, newestPosition, highlightNewest }: PositionListItemProps) {\n    const dispatch = useAppDispatch();\n\n    const prevPositionDetails = usePrevious({ ...positionDetails });\n    const {\n        token0: _token0Address,\n        token1: _token1Address,\n        liquidity: _liquidity,\n        tickLower: _tickLower,\n        tickUpper: _tickUpper,\n        onFarming: _onFarming,\n    } = useMemo(() => {\n        if (!positionDetails && prevPositionDetails && prevPositionDetails.liquidity) {\n            return { ...prevPositionDetails };\n        }\n        return { ...positionDetails };\n    }, [positionDetails]);\n\n    const token0 = useToken(_token0Address);\n    const token1 = useToken(_token1Address);\n\n    const currency0 = token0 ? unwrappedToken(token0) : undefined;\n    const currency1 = token1 ? unwrappedToken(token1) : undefined;\n\n    // construct Position from details returned\n    const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined);\n    const prevPool = usePrevious(pool);\n    const _pool = useMemo(() => {\n        if (!pool && prevPool) {\n            return prevPool;\n        }\n        return pool;\n    }, [pool]);\n\n    const position = useMemo(() => {\n        if (_pool) {\n            return new Position({\n                pool: _pool,\n                liquidity: _liquidity.toString(),\n                tickLower: _tickLower,\n                tickUpper: _tickUpper,\n            });\n        }\n        return undefined;\n    }, [_liquidity, _pool, _tickLower, _tickUpper]);\n\n    const tickAtLimit = useIsTickAtLimit(_tickLower, _tickUpper);\n\n    // prices\n    const { priceLower, priceUpper, quote, base } = getPriceOrderingFromPositionForUI(position);\n    const currencyQuote = quote && unwrappedToken(quote);\n    const currencyBase = base && unwrappedToken(base);\n\n    // check if price is within range\n    const outOfRange: boolean = _pool ? _pool.tickCurrent < _tickLower || _pool.tickCurrent >= _tickUpper : false;\n\n    const positionSummaryLink = `/pool/${positionDetails.tokenId}${_onFarming ? \"?onFarming=true\" : \"\"}`;\n\n    const farmingLink = `/farming/farms#${positionDetails.tokenId}`;\n\n    const isNewest = newestPosition ? newestPosition === +positionDetails.tokenId : undefined;\n\n    const removed = _liquidity?.eq(0);\n\n    useEffect(() => {\n        if (newestPosition && highlightNewest) {\n            dispatch(setShowNewestPosition({ showNewestPosition: false }));\n            document.querySelector(\"#newest\")?.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, []);\n\n    return (\n        <NavLink className={\"w-100\"} to={positionSummaryLink} id={isNewest && highlightNewest ? \"newest\" : \"\"}>\n            <Card isDark={false} classes={\"br-24 p-1 mv-05\"}>\n                <div className={\"position-list-item__header f f-ac\"}>\n                    <div className={\"f f-ac\"}>\n                        <DoubleCurrencyLogo currency0={currencyBase} currency1={currencyQuote} size={24} margin />\n                        <div className={\"b fs-125 mh-05\"}>\n                            &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n                        </div>\n                        &nbsp;\n                    </div>\n                    <div className={\"position-list-item__header__badges flex-s-between w-100\"}>\n                        {_onFarming ? (\n                            <NavLink className={\"flex-s-between btn primary fs-085 p-025 br-8\"} to={farmingLink}>\n                                <span>\n                                    <Trans>Farming</Trans>\n                                </span>\n                                <ArrowRight size={14} color={\"white\"} style={{ marginLeft: \"5px\" }} />\n                            </NavLink>\n                        ) : (\n                            <div />\n                        )}\n                        <RangeBadge removed={removed} inRange={!outOfRange} />\n                    </div>\n                </div>\n\n                {priceLower && priceUpper ? (\n                    <div className={\"position-list-item__bottom f fs-085 mt-025 mt-05 mxs_fd-c mxs_f-ac\"}>\n                        <div className={\"f mxs_mb-05\"}>\n                            <div className={\"position-list-item__prefix mr-025\"}>\n                                <Trans>Min:</Trans>\n                            </div>\n                            <span className={\"position-list-item__amount\"}>\n                                <Trans>{`${formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)} ${currencyQuote?.symbol} per ${currencyBase?.symbol}`}</Trans>\n                            </span>\n                        </div>\n                        <div className={\"position-list-item__arrow mh-05\"}>⟷</div>\n                        <div className={\"f\"}>\n                            <span className={\"position-list-item__prefix mh-025\"}>\n                                <Trans>Max:</Trans>\n                            </span>\n                            <span className={\"position-list-item__amount\"}>\n                                <Trans>{`${formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)} ${currencyQuote?.symbol} per ${currencyBase?.symbol}`}</Trans>\n                            </span>\n                        </div>\n                    </div>\n                ) : (\n                    <div className={\"f c f-ac f-jc w-100\"}>\n                        <Loader size={\"1rem\"} stroke={\"var(--loader)\"} />\n                    </div>\n                )}\n            </Card>\n        </NavLink>\n    );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n});\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.displayName = 'ArrowRight';\nexport default ArrowRight;","import { Currency, Token } from '@uniswap/sdk-core'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { WrappedCurrency } from '../../models/types'\n\ninterface LinkedCurrencyProps {\n    chainId?: number;\n    currency?: Currency\n}\n\nexport function LinkedCurrency({ chainId, currency }: LinkedCurrencyProps) {\n    const address = (currency as Token)?.address\n\n    if (typeof chainId === 'number' && address) {\n        return (\n            <ExternalLink href={getExplorerLink(chainId, address, ExplorerDataType.TOKEN)}>\n                <RowFixed>\n                    <CurrencyLogo currency={currency as WrappedCurrency} size={'24px'}\n                                  style={{ marginRight: '0.5rem' }} />\n                    <TYPE.main>{currency?.symbol} ↗</TYPE.main>\n                </RowFixed>\n            </ExternalLink>\n        )\n    }\n    return (\n        <RowFixed>\n            <CurrencyLogo currency={currency as WrappedCurrency} size={'24px'} style={{ marginRight: '0.5rem' }} />\n            <TYPE.main>{currency?.symbol}</TYPE.main>\n        </RowFixed>\n    )\n}\n","import { Currency } from \"@uniswap/sdk-core\";\nimport { Trans } from \"@lingui/macro\";\nimport { Pool } from \"@uniswap/v3-sdk\";\nimport Card from \"../../shared/components/Card/Card\";\nimport AutoColumn from \"../../shared/components/AutoColumn\";\n\ninterface CurrentPriceCardProps {\n    inverted?: boolean;\n    pool: Pool | null;\n    currencyQuote?: Currency;\n    currencyBase?: Currency;\n}\n\nexport function CurrentPriceCard({ inverted, pool, currencyQuote, currencyBase }: CurrentPriceCardProps) {\n    if (!pool || !currencyQuote || !currencyBase) return null;\n\n    return (\n        <Card isDark classes={\"p-1 br-12\"}>\n            <AutoColumn gap=\"1\">\n                <span className={\"c-lg fs-095 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                    <Trans>Current price</Trans>\n                </span>\n                <span className={\"fs-125 ta-c\"}>{(inverted ? pool.token1Price : pool.token0Price).toSignificant(6)} </span>\n                <span className={\"c-lg fs-085 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                    <Trans>\n                        {currencyQuote?.symbol} <Trans>per</Trans> {currencyBase?.symbol}\n                    </Trans>\n                </span>\n            </AutoColumn>\n        </Card>\n    );\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { NonfungiblePositionManager, Position } from \"lib/src\";\nimport { PoolState, usePool } from \"hooks/usePools\";\nimport { useToken } from \"hooks/Tokens\";\nimport { useDerivedPositionInfo } from \"hooks/useDerivedPositionInfo\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { NavLink, RouteComponentProps, useLocation } from \"react-router-dom\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nimport { calculateGasMargin } from \"../../utils/calculateGasMargin\";\nimport AutoColumn from \"shared/components/AutoColumn\";\nimport DoubleCurrencyLogo from \"components/DoubleLogo\";\nimport Badge from \"components/Badge\";\nimport CurrencyLogo from \"components/CurrencyLogo\";\nimport { t, Trans } from \"@lingui/macro\";\nimport { currencyId } from \"utils/currencyId\";\nimport { formatCurrencyAmount } from \"utils/formatCurrencyAmount\";\nimport { useV3PositionFees } from \"hooks/useV3PositionFees\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Currency, CurrencyAmount, Fraction, Percent, Token } from \"@uniswap/sdk-core\";\nimport { useActiveWeb3React } from \"hooks/web3\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useIsTransactionPending, useTransactionAdder } from \"state/transactions/hooks\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\nimport { Dots } from \"components/swap/styled\";\nimport { getPriceOrderingFromPositionForUI } from \"../../components/PositionListItem\";\nimport RateToggle from \"../../components/RateToggle\";\nimport { useSingleCallResult } from \"state/multicall/hooks\";\nimport RangeBadge from \"../../components/Badge/RangeBadge\";\nimport { SwitchLocaleLink } from \"../../components/SwitchLocaleLink\";\nimport useUSDCPrice from \"hooks/useUSDCPrice\";\nimport Loader from \"components/Loader\";\nimport Toggle from \"components/Toggle\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport useIsTickAtLimit from \"hooks/useIsTickAtLimit\";\nimport { formatTickPrice } from \"utils/formatTickPrice\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport ReactGA from \"react-ga\";\nimport { MouseoverTooltip } from \"../../components/Tooltip\";\nimport { useAppSelector } from \"../../state/hooks\";\nimport { FARMING_CENTER, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from \"../../constants/addresses\";\nimport { useInverter } from \"../../hooks/useInverter\";\nimport { getRatio } from \"../../utils/getRatio\";\nimport { LinkedCurrency } from \"./LinkedCurrency\";\nimport { CurrentPriceCard } from \"./CurrentPriceCard\";\nimport { WrappedCurrency } from \"../../models/types\";\nimport Card from \"../../shared/components/Card/Card\";\n\nfunction useQuery() {\n    const { search } = useLocation();\n\n    return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport default function PositionPage({\n    match: {\n        params: { tokenId: tokenIdFromUrl },\n    },\n}: RouteComponentProps<{ tokenId?: string }>) {\n    const { chainId, account, library } = useActiveWeb3React();\n\n    const query = useQuery();\n\n    const isOnFarming = useMemo(() => query.get(\"onFarming\"), [tokenIdFromUrl, query]);\n\n    const parsedTokenId = tokenIdFromUrl ? BigNumber.from(tokenIdFromUrl) : undefined;\n    const { loading, position: positionDetails } = useV3PositionFromTokenId(parsedTokenId);\n    const { position: existingPosition } = useDerivedPositionInfo(positionDetails);\n\n    const gasPrice = useAppSelector((state) => {\n        if (!state.application.gasPrice.fetched) return 0.1;\n        return state.application.gasPrice.override ? 0.1 : state.application.gasPrice.fetched;\n    });\n\n    const { tokenId } = positionDetails || {};\n\n    const prevPositionDetails = usePrevious({ ...positionDetails });\n    const {\n        token0: _token0Address,\n        token1: _token1Address,\n        liquidity: _liquidity,\n        tickLower: _tickLower,\n        tickUpper: _tickUpper,\n    } = useMemo(() => {\n        if (!positionDetails && prevPositionDetails && prevPositionDetails.liquidity) {\n            return { ...prevPositionDetails };\n        }\n        return { ...positionDetails };\n    }, [positionDetails]);\n\n    const removed = _liquidity?.eq(0);\n\n    const token0 = useToken(_token0Address);\n    const token1 = useToken(_token1Address);\n\n    const currency0 = token0 ? unwrappedToken(token0) : undefined;\n    const currency1 = token1 ? unwrappedToken(token1) : undefined;\n\n    // flag for receiving WETH\n    const [receiveWETH, setReceiveWETH] = useState(false);\n\n    // construct Position from details returned\n    const [poolState, pool] = usePool(token0 ?? undefined, token1 ?? undefined);\n    const [prevPoolState, prevPool] = usePrevious([poolState, pool]) || [];\n    const [_poolState, _pool] = useMemo(() => {\n        if (!pool && prevPool && prevPoolState) {\n            return [prevPoolState, prevPool];\n        }\n        return [poolState, pool];\n    }, [pool, poolState]);\n\n    const position = useMemo(() => {\n        if (_pool && _liquidity && typeof _tickLower === \"number\" && typeof _tickUpper === \"number\") {\n            return new Position({\n                pool: _pool,\n                liquidity: _liquidity.toString(),\n                tickLower: _tickLower,\n                tickUpper: _tickUpper,\n            });\n        }\n        return undefined;\n    }, [_liquidity, _pool, _tickLower, _tickUpper]);\n\n    const tickAtLimit = useIsTickAtLimit(_tickLower, _tickUpper);\n\n    const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n    const [manuallyInverted, setManuallyInverted] = useState(false);\n\n    // handle manual inversion\n    const { priceLower, priceUpper, base } = useInverter({\n        priceLower: pricesFromPosition.priceLower,\n        priceUpper: pricesFromPosition.priceUpper,\n        quote: pricesFromPosition.quote,\n        base: pricesFromPosition.base,\n        invert: manuallyInverted,\n    });\n\n    const inverted = token1 ? base?.equals(token1) : undefined;\n    const currencyQuote = inverted ? currency0 : currency1;\n    const currencyBase = inverted ? currency1 : currency0;\n\n    const ratio = useMemo(() => {\n        return priceLower && _pool && priceUpper ? getRatio(inverted ? priceUpper.invert() : priceLower, _pool.token0Price, inverted ? priceLower.invert() : priceUpper) : undefined;\n    }, [inverted, _pool, priceLower, priceUpper]);\n\n    // fees\n    const [feeValue0, feeValue1] = useV3PositionFees(_pool ?? undefined, positionDetails?.tokenId, receiveWETH);\n\n    const [collecting, setCollecting] = useState<boolean>(false);\n    const [collectMigrationHash, setCollectMigrationHash] = useState<string | null>(null);\n    const isCollectPending = useIsTransactionPending(collectMigrationHash ?? undefined);\n    const [showConfirm, setShowConfirm] = useState(false);\n\n    // usdc prices always in terms of tokens\n    const price0 = useUSDCPrice(token0 ?? undefined);\n    const price1 = useUSDCPrice(token1 ?? undefined);\n\n    const fiatValueOfFees: CurrencyAmount<Currency> | null = useMemo(() => {\n        if (!price0 || !price1 || !feeValue0 || !feeValue1) return null;\n\n        // we wrap because it doesn't matter, the quote returns a USDC amount\n        const feeValue0Wrapped = feeValue0?.wrapped;\n        const feeValue1Wrapped = feeValue1?.wrapped;\n\n        if (!feeValue0Wrapped || !feeValue1Wrapped) return null;\n\n        const amount0 = price0.quote(feeValue0Wrapped);\n        const amount1 = price1.quote(feeValue1Wrapped);\n        return amount0.add(amount1);\n    }, [price0, price1, feeValue0, feeValue1]);\n\n    const prevFiatValueOfFees = usePrevious(fiatValueOfFees);\n    const _fiatValueOfFees = useMemo(() => {\n        if (!fiatValueOfFees && prevFiatValueOfFees) {\n            return prevFiatValueOfFees;\n        }\n        return fiatValueOfFees;\n    }, [fiatValueOfFees]);\n\n    const fiatValueOfLiquidity: CurrencyAmount<Token> | null = useMemo(() => {\n        if (!price0 || !price1 || !position) return null;\n        const amount0 = price0.quote(position.amount0);\n        const amount1 = price1.quote(position.amount1);\n        return amount0.add(amount1);\n    }, [price0, price1, position]);\n\n    const prevFiatValueOfLiquidity = usePrevious(fiatValueOfLiquidity);\n    const _fiatValueOfLiquidity = useMemo(() => {\n        if (!fiatValueOfLiquidity && prevFiatValueOfLiquidity) {\n            return prevFiatValueOfLiquidity;\n        }\n        return fiatValueOfLiquidity;\n    }, [fiatValueOfLiquidity]);\n\n    const addTransaction = useTransactionAdder();\n    const positionManager = useV3NFTPositionManagerContract();\n    const collect = useCallback(() => {\n        if (!chainId || !feeValue0 || !feeValue1 || !positionManager || !account || !tokenId || !library) return;\n\n        setCollecting(true);\n\n        const collectAddress = isOnFarming ? FARMING_CENTER[chainId] : NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId];\n\n        const { calldata, value } = NonfungiblePositionManager.collectCallParameters({\n            tokenId: tokenId.toString(),\n            expectedCurrencyOwed0: feeValue0,\n            expectedCurrencyOwed1: feeValue1,\n            recipient: account,\n        });\n\n        const txn = {\n            to: collectAddress,\n            data: calldata,\n            value: value,\n        };\n\n        library\n            .getSigner()\n            .estimateGas(txn)\n            .then((estimate) => {\n                const newTxn = {\n                    ...txn,\n                    gasLimit: calculateGasMargin(chainId, estimate),\n                };\n\n                return library\n                    .getSigner()\n                    .sendTransaction(newTxn)\n                    .then((response: TransactionResponse) => {\n                        setCollectMigrationHash(response.hash);\n                        setCollecting(false);\n\n                        ReactGA.event({\n                            category: \"Liquidity\",\n                            action: \"CollectV3\",\n                            label: [feeValue0.currency.symbol, feeValue1.currency.symbol].join(\"/\"),\n                        });\n\n                        addTransaction(response, {\n                            summary: t`Collect ${feeValue0.currency.symbol}/${feeValue1.currency.symbol} fees`,\n                        });\n                    });\n            })\n            .catch((error) => {\n                setCollecting(false);\n                console.error(error);\n            });\n    }, [chainId, feeValue0, feeValue1, positionManager, account, tokenId, addTransaction, library]);\n\n    const owner = useSingleCallResult(!!tokenId ? positionManager : null, \"ownerOf\", [tokenId]).result?.[0];\n    const ownsNFT = owner === account || positionDetails?.operator === account;\n\n    const feeValueUpper = inverted ? feeValue0 : feeValue1;\n    const feeValueLower = inverted ? feeValue1 : feeValue0;\n\n    // check if price is within range\n    const below = _pool && typeof _tickLower === \"number\" ? _pool.tickCurrent < _tickLower : undefined;\n    const above = _pool && typeof _tickUpper === \"number\" ? _pool.tickCurrent >= _tickUpper : undefined;\n    const inRange: boolean = typeof below === \"boolean\" && typeof above === \"boolean\" ? !below && !above : false;\n\n    function modalHeader() {\n        return (\n            <>\n                <Card isDark classes={\"p-1 br-12\"}>\n                    <div className={\"flex-s-between mb-1\"}>\n                        <div className={\"f f-ac\"}>\n                            <CurrencyLogo currency={feeValueUpper?.currency as WrappedCurrency} size={\"24px\"} />\n                            <span className={\"ml-05 c-w\"}>{feeValueUpper ? formatCurrencyAmount(feeValueUpper, 4) : \"-\"}</span>\n                        </div>\n                        <span className={\"c-w\"}>{feeValueUpper?.currency?.symbol}</span>\n                    </div>\n                    <div className={\"flex-s-between\"}>\n                        <div className={\"f f-ac\"}>\n                            <CurrencyLogo currency={feeValueLower?.currency as WrappedCurrency} size={\"24px\"} />\n                            <span className={\"c-w ml-05\"}>{feeValueLower ? formatCurrencyAmount(feeValueLower, 4) : \"-\"}</span>\n                        </div>\n                        <span className={\"c-w\"}>{feeValueLower?.currency?.symbol}</span>\n                    </div>\n                </Card>\n                <div className={\"c-p mv-05 fs-075\"}>\n                    <Trans>Collecting fees will withdraw currently available fees for you.</Trans>\n                </div>\n                <button className={\"btn primary pv-05 br-8 b w-100\"} onClick={collect}>\n                    <Trans>Collect</Trans>\n                </button>\n            </>\n        );\n    }\n\n    const showCollectAsWeth = Boolean(\n        (ownsNFT || isOnFarming) && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0)) && currency0 && currency1 && (currency0.isNative || currency1.isNative) && !collectMigrationHash\n    );\n\n    return (\n        <div className={\"maw-765 mh-a\"}>\n            {loading || _poolState === PoolState.LOADING ? (\n                <Card classes={\"br-24 f c f-ac f-jc h-800\"}>\n                    <Loader stroke={\"var(--loader)\"} size={\"2rem\"} />\n                </Card>\n            ) : (\n                <>\n                    <NavLink className={\"c-p mb-1 f w-fc hover-op trans-op\"} to=\"/pool\">\n                        <Trans>← Back to Pools Overview</Trans>\n                    </NavLink>\n                    <Card classes={\"br-24 p-2 mxs_p-1\"}>\n                        <AutoColumn gap=\"1\">\n                            <div className={\"flex-s-between ms_fd-c\"}>\n                                <div className={\"f f-ac ms_w-100 ms_mb-1 mxs_fd-c\"}>\n                                    <div className={\"f f-ac ml-1 mxs_ml-2 mxs_w-100 mxs_mb-05\"}>\n                                        <DoubleCurrencyLogo currency0={currencyBase} currency1={currencyQuote} size={24} margin={false} />\n                                        <span className={\"mr-05 fs-125 b\"}>\n                                            &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n                                        </span>\n                                    </div>\n                                    <div className={\"f f-ac mxs_w-100\"}>\n                                        <MouseoverTooltip text={<Trans>Current pool fee.</Trans>}>\n                                            <Badge className={\"mr-05 fs-085\"}>\n                                                <Trans>{new Percent(existingPosition?.pool?.fee || 100, 1_000_000).toSignificant()}%</Trans>\n                                            </Badge>\n                                        </MouseoverTooltip>\n                                        <RangeBadge removed={removed} inRange={inRange} />\n                                    </div>\n                                </div>\n                                {ownsNFT && (\n                                    <div className={\"f ms_w-100\"}>\n                                        {currency0 && currency1 && tokenId ? (\n                                            <NavLink\n                                                to={`/increase/${currencyId(currency0, chainId || 137)}/${currencyId(currency1, chainId || 137)}/${tokenId}`}\n                                                className={\"btn primary pv-025 ph-05 br-8 mr-05\"}\n                                            >\n                                                <Trans>Increase Liquidity</Trans>\n                                            </NavLink>\n                                        ) : null}\n                                        {tokenId && !removed ? (\n                                            <NavLink to={`/remove/${tokenId}`} className={\"btn primary pv-025 ph-05 br-8\"}>\n                                                <Trans>Remove Liquidity</Trans>\n                                            </NavLink>\n                                        ) : null}\n                                    </div>\n                                )}\n                            </div>\n                            <Card isDark={false} classes={\"p-1 br-12\"}>\n                                <div className={\"f c mb-05\"}>\n                                    <span className={\"b mb-05\"}>\n                                        <Trans>Liquidity</Trans>\n                                    </span>\n                                    {_fiatValueOfLiquidity?.greaterThan(new Fraction(1, 100)) ? (\n                                        <span className={\"fs-2\"}>\n                                            <Trans>${_fiatValueOfLiquidity.toFixed(2, { groupSeparator: \",\" })}</Trans>\n                                        </span>\n                                    ) : (\n                                        <span className={\"fs-2\"}>\n                                            <Trans>$-</Trans>\n                                        </span>\n                                    )}\n                                </div>\n                                <Card isDark classes={\"p-1 br-12\"}>\n                                    <div className={\"flex-s-between mb-1\"}>\n                                        <LinkedCurrency chainId={chainId} currency={currencyQuote} />\n                                        <div className={\"f f-ac\"}>\n                                            <span>{inverted ? formatCurrencyAmount(position?.amount0, 4) : formatCurrencyAmount(position?.amount1, 4)}</span>\n                                            {typeof ratio === \"number\" && !removed ? (\n                                                <Badge className={\"ml-05 fs-075\"}>\n                                                    <Trans>{inverted ? ratio : 100 - ratio}%</Trans>\n                                                </Badge>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                    <div className={\"flex-s-between\"}>\n                                        <LinkedCurrency chainId={chainId} currency={currencyBase} />\n                                        <div className={\"f f-ac\"}>\n                                            <span>{inverted ? formatCurrencyAmount(position?.amount1, 4) : formatCurrencyAmount(position?.amount0, 4)}</span>\n                                            {typeof ratio === \"number\" && !removed ? (\n                                                <Badge className={\"ml-05 fs-075\"}>\n                                                    <Trans>{inverted ? 100 - ratio : ratio}%</Trans>\n                                                </Badge>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </Card>\n                            </Card>\n                            <Card isDark={false} classes={\"p-1 br-12\"}>\n                                <div className={\"f c mb-05\"}>\n                                    <span className={\"b mb-05\"}>\n                                        <Trans>Unclaimed fees</Trans>\n                                    </span>\n                                    <div className={\"flex-s-between\"}>\n                                        {_fiatValueOfFees?.greaterThan(new Fraction(1, 100)) ? (\n                                            <span className={\"fs-2 c-g\"}>\n                                                <Trans>${+_fiatValueOfFees.toFixed(2, { groupSeparator: \",\" }) < 0.01 ? \"<0.01\" : _fiatValueOfFees?.toFixed(2, { groupSeparator: \",\" })}</Trans>\n                                            </span>\n                                        ) : (\n                                            <span className={\"fs-2\"}>\n                                                <Trans>$-</Trans>\n                                            </span>\n                                        )}\n                                        {ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || !!collectMigrationHash) ? (\n                                            <button className={\"btn primary pv-025 ph-05 br-8\"} disabled={collecting || !!collectMigrationHash} onClick={collect}>\n                                                {!!collectMigrationHash && !isCollectPending ? (\n                                                    <span>\n                                                        <Trans>Collected</Trans>\n                                                    </span>\n                                                ) : isCollectPending || collecting ? (\n                                                    <Dots>\n                                                        <Trans>Collecting</Trans>\n                                                    </Dots>\n                                                ) : (\n                                                    <span>\n                                                        <Trans>Collect fees</Trans>\n                                                    </span>\n                                                )}\n                                            </button>\n                                        ) : null}\n                                    </div>\n                                </div>\n                                <Card isDark classes={\"p-1 br-12\"}>\n                                    <div className={\"flex-s-between mb-1\"}>\n                                        <div className={\"f f-ac\"}>\n                                            <CurrencyLogo currency={feeValueUpper?.currency as WrappedCurrency} size={\"24px\"} />\n                                            <span className={\"ml-05\"}>{feeValueUpper?.currency?.symbol}</span>\n                                        </div>\n                                        <span>{feeValueUpper ? formatCurrencyAmount(feeValueUpper, 4) : \"-\"}</span>\n                                    </div>\n                                    <div className={\"flex-s-between\"}>\n                                        <div className={\"f f-ac\"}>\n                                            <CurrencyLogo currency={feeValueLower?.currency as WrappedCurrency} size={\"24px\"} />\n                                            <span className={\"ml-05\"}>{feeValueLower?.currency?.symbol}</span>\n                                        </div>\n                                        <span>{feeValueLower ? formatCurrencyAmount(feeValueLower, 4) : \"-\"}</span>\n                                    </div>\n                                </Card>\n                                {showCollectAsWeth && (\n                                    <div className={\"flex-s-between mt-075\"}>\n                                        <Trans>Collect as WETH</Trans>\n                                        <Toggle id=\"receive-as-weth\" isActive={receiveWETH} toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)} />\n                                    </div>\n                                )}\n                            </Card>\n                            <Card isDark={false} classes={\"p-1 br-12\"}>\n                                <div className={\"flex-s-between mb-1 fs-085\"}>\n                                    <div className={\"f f-ac mxs_fd-c\"}>\n                                        <div className={\"mr-05 fs-1 mxs_w-100 mxs_mr-0\"}>\n                                            <Trans>Price range</Trans>\n                                        </div>\n                                        <div className={\"mxs_w-100 mxs_mt-05\"}>\n                                            <RangeBadge removed={removed} inRange={inRange} />\n                                            <span style={{ width: \"8px\" }} />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {currencyBase && currencyQuote && (\n                                            <RateToggle currencyA={currencyBase} currencyB={currencyQuote} handleRateToggle={() => setManuallyInverted(!manuallyInverted)} />\n                                        )}\n                                    </div>\n                                </div>\n\n                                <div className={\"f f-ac mb-1 ms_fd-c\"}>\n                                    <Card isDark classes={\"w-100 p-1 br-12\"}>\n                                        <AutoColumn gap=\"1\" justify=\"center\">\n                                            <span className={\"fs-095 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                                                <Trans>Min price</Trans>\n                                            </span>\n                                            <span className={\"fs-125 ta-c\"}>{formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)}</span>\n                                            <span className={\"fs-095 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                                                <Trans>\n                                                    {currencyQuote?.symbol} per {currencyBase?.symbol}\n                                                </Trans>\n                                            </span>\n                                            {inRange && (\n                                                <span className={\"fs-075 ta-c\"}>\n                                                    <Trans>Your position will be 100% {currencyBase?.symbol} at this price.</Trans>\n                                                </span>\n                                            )}\n                                        </AutoColumn>\n                                    </Card>\n                                    <span className={\"mh-1 c-lg hide-s\"}>⟷</span>\n                                    <span className={\"show-s c-lg mv-05 fs-125\"}>↕</span>\n                                    <Card isDark classes={\"w-100 p-1 br-12\"}>\n                                        <AutoColumn gap=\"1\" justify=\"center\">\n                                            <span className={\"fs-095 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                                                <Trans>Max price</Trans>\n                                            </span>\n                                            <span className={\"fs-125 ta-c\"}>{formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}</span>\n                                            <span className={\"fs-095 ta-c\"} style={{ color: \"var(--text1)\" }}>\n                                                <Trans>\n                                                    {currencyQuote?.symbol} per {currencyBase?.symbol}\n                                                </Trans>\n                                            </span>\n                                            {inRange && (\n                                                <span className={\"fs-075 ta-c\"}>\n                                                    <Trans>Your position will be 100% {currencyQuote?.symbol} at this price.</Trans>\n                                                </span>\n                                            )}\n                                        </AutoColumn>\n                                    </Card>\n                                </div>\n                                <CurrentPriceCard\n                                    inverted={inverted}\n                                    //@ts-ignore\n                                    pool={_pool}\n                                    currencyQuote={currencyQuote}\n                                    currencyBase={currencyBase}\n                                />\n                            </Card>\n                        </AutoColumn>\n                    </Card>\n                    <SwitchLocaleLink />\n                </>\n            )}\n        </div>\n    );\n}\n","import { Price, Token } from '@uniswap/sdk-core'\n\ninterface UseInverterAttr {\n    priceLower?: Price<Token, Token>\n    priceUpper?: Price<Token, Token>\n    quote?: Token\n    base?: Token\n    invert?: boolean\n}\n\ninterface UseInverterReturn {\n    priceLower?: Price<Token, Token>\n    priceUpper?: Price<Token, Token>\n    quote?: Token\n    base?: Token\n}\n\nexport const useInverter = ({\n    priceLower,\n    priceUpper,\n    quote,\n    base,\n    invert\n}: UseInverterAttr): UseInverterReturn => {\n    return {\n        priceUpper: invert ? priceLower?.invert() : priceUpper,\n        priceLower: invert ? priceUpper?.invert() : priceLower,\n        quote: invert ? base : quote,\n        base: invert ? quote : base\n    }\n}\n","import { Currency, Price } from '@uniswap/sdk-core'\n\nexport function getRatio(lower: Price<Currency, Currency>, current: Price<Currency, Currency>, upper: Price<Currency, Currency>) {\n    try {\n        if (!current.greaterThan(lower)) {\n            return 100\n        } else if (!current.lessThan(upper)) {\n            return 0\n        }\n\n        const a = Number.parseFloat(lower.toSignificant(15))\n        const b = Number.parseFloat(upper.toSignificant(15))\n        const c = Number.parseFloat(current.toSignificant(15))\n\n        const ratio = Math.floor((1 / ((Math.sqrt(a * b) - Math.sqrt(b * c)) / (c - Math.sqrt(b * c)) + 1)) * 100)\n\n        if (ratio < 0 || ratio > 100) {\n            throw Error('Out of range')\n        }\n\n        return ratio\n    } catch {\n        return undefined\n    }\n}\n"],"sourceRoot":""}